(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~vega"],{

/***/ "+JJI":
/*!**********************************************!*\
  !*** ./node_modules/vega-parser/src/util.js ***!
  \**********************************************/
/*! exports provided: Entry, entry, operator, ref, tupleidRef, fieldRef, keyFieldRef, compareRef, keyRef, Ascending, Descending, sortKey, aggrField, Scope, View, isSignal, hasSignal, value, deref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Entry", function() { return Entry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entry", function() { return entry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "operator", function() { return operator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ref", function() { return ref; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tupleidRef", function() { return tupleidRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldRef", function() { return fieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyFieldRef", function() { return keyFieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareRef", function() { return compareRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyRef", function() { return keyRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ascending", function() { return Ascending; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Descending", function() { return Descending; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortKey", function() { return sortKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aggrField", function() { return aggrField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scope", function() { return Scope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View", function() { return View; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSignal", function() { return isSignal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasSignal", function() { return hasSignal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "value", function() { return value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deref", function() { return deref; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function Entry(type, value, params, parent) {
  this.id = -1;
  this.type = type;
  this.value = value;
  this.params = params;
  if (parent) this.parent = parent;
}

function entry(type, value, params, parent) {
  return new Entry(type, value, params, parent);
}

function operator(value, params) {
  return entry('operator', value, params);
}

// -----

function ref(op) {
  var ref = {$ref: op.id};
  // if operator not yet registered, cache ref to resolve later
  if (op.id < 0) (op.refs = op.refs || []).push(ref);
  return ref;
}

var tupleidRef = {
  $tupleid: 1,
  toString: function() { return ':_tupleid_:'; }
};

function fieldRef(field, name) {
  return name ? {$field: field, $name: name} : {$field: field};
}

var keyFieldRef = fieldRef('key');

function compareRef(fields, orders) {
  return {$compare: fields, $order: orders};
}

function keyRef(fields, flat) {
  var ref = {$key: fields};
  if (flat) ref.$flat = true;
  return ref;
}

// -----

var Ascending  = 'ascending';

var Descending = 'descending';

function sortKey(sort) {
  return !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(sort) ? ''
    : (sort.order === Descending ? '-' : '+')
      + aggrField(sort.op, sort.field);
}

function aggrField(op, field) {
  return (op && op.signal ? '$' + op.signal : op || '')
    + (op && field ? '_' : '')
    + (field && field.signal ? '$' + field.signal : field || '');
}

// -----

var Scope = 'scope';

var View = 'view';

function isSignal(_) {
  return _ && _.signal;
}

function hasSignal(_) {
  if (isSignal(_)) return true;
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(_)) for (var key in _) {
    if (hasSignal(_[key])) return true;
  }
  return false;
}

function value(specValue, defaultValue) {
  return specValue != null ? specValue : defaultValue;
}

function deref(v) {
  return v && v.signal || v;
}


/***/ }),

/***/ "+JMV":
/*!**************************************************!*\
  !*** ./node_modules/vega-scale/src/bandSpace.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(count, paddingInner, paddingOuter) {
  var space = count - paddingInner + paddingOuter * 2;
  return count ? (space > 0 ? space : 1) : 0;
});


/***/ }),

/***/ "+L+q":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/image.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/visit */ "TMLr");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_svg_translate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/svg/translate */ "E/AX");




function getImage(item, renderer) {
  var image = item.image;
  if (!image || image.url !== item.url) {
    image = {loaded: false, width: 0, height: 0};
    renderer.loadImage(item.url).then(function(image) {
      item.image = image;
      item.image.url = item.url;
    });
  }
  return image;
}

function imageXOffset(align, w) {
  return align === 'center' ? w / 2 : align === 'right' ? w : 0;
}

function imageYOffset(baseline, h) {
  return baseline === 'middle' ? h / 2 : baseline === 'bottom' ? h : 0;
}

function attr(emit, item, renderer) {
  var image = getImage(item, renderer),
      x = item.x || 0,
      y = item.y || 0,
      w = (item.width != null ? item.width : image.width) || 0,
      h = (item.height != null ? item.height : image.height) || 0,
      a = item.aspect === false ? 'none' : 'xMidYMid';

  x -= imageXOffset(item.align, w);
  y -= imageYOffset(item.baseline, h);

  emit('href', image.src || '', 'http://www.w3.org/1999/xlink', 'xlink:href');
  emit('transform', Object(_util_svg_translate__WEBPACK_IMPORTED_MODULE_2__["default"])(x, y));
  emit('width', w);
  emit('height', h);
  emit('preserveAspectRatio', a);
}

function bound(bounds, item) {
  var image = item.image,
      x = item.x || 0,
      y = item.y || 0,
      w = (item.width != null ? item.width : (image && image.width)) || 0,
      h = (item.height != null ? item.height : (image && image.height)) || 0;

  x -= imageXOffset(item.align, w);
  y -= imageYOffset(item.baseline, h);

  return bounds.set(x, y, x + w, y + h);
}

function draw(context, scene, bounds) {
  var renderer = this;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_0__["visit"])(scene, function(item) {
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check

    var image = getImage(item, renderer),
        x = item.x || 0,
        y = item.y || 0,
        w = (item.width != null ? item.width : image.width) || 0,
        h = (item.height != null ? item.height : image.height) || 0,
        opacity, ar0, ar1, t;

    x -= imageXOffset(item.align, w);
    y -= imageYOffset(item.baseline, h);

    if (item.aspect !== false) {
      ar0 = image.width / image.height;
      ar1 = item.width / item.height;
      if (ar0 === ar0 && ar1 === ar1 && ar0 !== ar1) {
        if (ar1 < ar0) {
          t = w / ar0;
          y += (h - t) / 2;
          h = t;
        } else {
          t = h * ar0;
          x += (w - t) / 2;
          w = t;
        }
      }
    }

    if (image.loaded) {
      context.globalAlpha = (opacity = item.opacity) != null ? opacity : 1;
      context.drawImage(image, x, y, w, h);
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:     'image',
  tag:      'image',
  nested:   false,
  attr:     attr,
  bound:    bound,
  draw:     draw,
  pick:     Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_1__["pick"])(),
  get:      getImage,
  xOffset:  imageXOffset,
  yOffset:  imageYOffset
});


/***/ }),

/***/ "+ZXb":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Density.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Density; });
/* harmony import */ var _util_Distributions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/Distributions */ "rN79");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "vBe5");





/**
 * Grid sample points for a probability density. Given a distribution and
 * a sampling extent, will generate points suitable for plotting either
 * PDF (probability density function) or CDF (cumulative distribution
 * function) curves.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.distribution - The probability distribution. This
 *   is an object parameter dependent on the distribution type.
 * @param {string} [params.method='pdf'] - The distribution method to sample.
 *   One of 'pdf' or 'cdf'.
 * @param {Array<number>} [params.extent] - The [min, max] extent over which
 *   to sample the distribution. This argument is required in most cases, but
 *   can be omitted if the distribution (e.g., 'kde') supports a 'data' method
 *   that returns numerical sample points from which the extent can be deduced.
 * @param {number} [params.steps=100] - The number of sampling steps.
 */
function Density(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var distributions = [
  {
    "key": {"function": "normal"},
    "params": [
      { "name": "mean", "type": "number", "default": 0 },
      { "name": "stdev", "type": "number", "default": 1 }
    ]
  },
  {
    "key": {"function": "uniform"},
    "params": [
      { "name": "min", "type": "number", "default": 0 },
      { "name": "max", "type": "number", "default": 1 }
    ]
  },
  {
    "key": {"function": "kde"},
    "params": [
      { "name": "field", "type": "field", "required": true },
      { "name": "from", "type": "data" },
      { "name": "bandwidth", "type": "number", "default": 0 }
    ]
  }
];

var mixture = {
  "key": {"function": "mixture"},
  "params": [
    { "name": "distributions", "type": "param", "array": true,
      "params": distributions },
    { "name": "weights", "type": "number", "array": true }
  ]
};

Density.Definition = {
  "type": "Density",
  "metadata": {"generates": true},
  "params": [
    { "name": "extent", "type": "number", "array": true, "length": 2 },
    { "name": "steps", "type": "number", "default": 100 },
    { "name": "method", "type": "string", "default": "pdf",
      "values": ["pdf", "cdf"] },
    { "name": "distribution", "type": "param",
      "params": distributions.concat(mixture) },
    { "name": "as", "type": "string", "array": true,
      "default": ["value", "density"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Density, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);

  if (!this.value || pulse.changed() || _.modified()) {
    var dist = Object(_util_Distributions__WEBPACK_IMPORTED_MODULE_0__["default"])(_.distribution, source(pulse)),
        method = _.method || 'pdf';

    if (method !== 'pdf' && method !== 'cdf') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid density method: ' + method);
    }
    if (!_.extent && !dist.data) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Missing density extent parameter.');
    }
    method = dist[method];

    var as = _.as || ['value', 'density'],
        domain = _.extent || Object(d3_array__WEBPACK_IMPORTED_MODULE_3__["extent"])(dist.data()),
        step = (domain[1] - domain[0]) / (_.steps || 100),
        values = Object(d3_array__WEBPACK_IMPORTED_MODULE_3__["range"])(domain[0], domain[1] + step/2, step)
          .map(function(v) {
            var tuple = {};
            tuple[as[0]] = v;
            tuple[as[1]] = method(v);
            return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(tuple);
          });

    if (this.value) out.rem = this.value;
    this.value = out.add = out.source = values;
  }

  return out;
};

function source(pulse) {
  return function() { return pulse.materialize(pulse.SOURCE).source; };
}


/***/ }),

/***/ "+cNY":
/*!****************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/AggregateKeys.js ***!
  \****************************************************************/
/*! exports provided: multikey, groupkey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multikey", function() { return multikey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupkey", function() { return groupkey; });
function multikey(f) {
  return function(x) {
    var n = f.length,
        i = 1,
        k = String(f[0](x));

    for (; i<n; ++i) {
      k += '|' + f[i](x);
    }

    return k;
  };
}

function groupkey(fields) {
  return !fields || !fields.length ? function() { return ''; }
    : fields.length === 1 ? fields[0]
    : multikey(fields);
}


/***/ }),

/***/ "+rUc":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Transform.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Transform; });
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Operator */ "7/cf");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Abstract class for operators that process data tuples.
 * Subclasses must provide a {@link transform} method for operator processing.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {Operator} [source] - The operator from which to receive pulses.
 */
function Transform(init, params) {
  _Operator__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, init, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Transform, _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */
prototype.run = function(pulse) {
  if (pulse.stamp <= this.stamp) return pulse.StopPropagation;

  var rv;
  if (this.skip()) {
    this.skip(false);
  } else {
    rv = this.evaluate(pulse);
  }
  rv = rv || pulse;

  if (rv !== pulse.StopPropagation) this.pulse = rv;
  this.stamp = pulse.stamp;

  return rv;
};

/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Marshalls parameter values and then invokes {@link transform}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
     value (including undefined) will let the input pulse pass through.
 */
prototype.evaluate = function(pulse) {
  var params = this.marshall(pulse.stamp),
      out = this.transform(params, pulse);
  params.clear();
  return out;
};

/**
 * Process incoming pulses.
 * Subclasses should override this method to implement transforms.
 * @param {Parameters} _ - The operator parameter values.
 * @param {Pulse} pulse - The current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
 *   value (including undefined) will let the input pulse pass through.
 */
prototype.transform = function() {};


/***/ }),

/***/ "+tA1":
/*!*********************************************************!*\
  !*** ./node_modules/vega-transforms/src/MultiValues.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiValues; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Merge a collection of value arrays.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<*>>} params.values - The input value arrrays.
 */
function MultiValues(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiValues, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified())
    ? this.value
    : _.values.reduce(function(data, _) { return data.concat(_); }, []);
}


/***/ }),

/***/ "+xE1":
/*!*****************************************************!*\
  !*** ./node_modules/topojson-client/src/feature.js ***!
  \*****************************************************/
/*! exports provided: default, feature, object */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reverse */ "YKfW");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "f9Sr");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, o) {
  return o.type === "GeometryCollection"
      ? {type: "FeatureCollection", features: o.geometries.map(function(o) { return feature(topology, o); })}
      : feature(topology, o);
});

function feature(topology, o) {
  var id = o.id,
      bbox = o.bbox,
      properties = o.properties == null ? {} : o.properties,
      geometry = object(topology, o);
  return id == null && bbox == null ? {type: "Feature", properties: properties, geometry: geometry}
      : bbox == null ? {type: "Feature", id: id, properties: properties, geometry: geometry}
      : {type: "Feature", id: id, bbox: bbox, properties: properties, geometry: geometry};
}

function object(topology, o) {
  var transformPoint = Object(_transform__WEBPACK_IMPORTED_MODULE_1__["default"])(topology.transform),
      arcs = topology.arcs;

  function arc(i, points) {
    if (points.length) points.pop();
    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {
      points.push(transformPoint(a[k], k));
    }
    if (i < 0) Object(_reverse__WEBPACK_IMPORTED_MODULE_0__["default"])(points, n);
  }

  function point(p) {
    return transformPoint(p);
  }

  function line(arcs) {
    var points = [];
    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.
    return points;
  }

  function ring(arcs) {
    var points = line(arcs);
    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.
    return points;
  }

  function polygon(arcs) {
    return arcs.map(ring);
  }

  function geometry(o) {
    var type = o.type, coordinates;
    switch (type) {
      case "GeometryCollection": return {type: type, geometries: o.geometries.map(geometry)};
      case "Point": coordinates = point(o.coordinates); break;
      case "MultiPoint": coordinates = o.coordinates.map(point); break;
      case "LineString": coordinates = line(o.arcs); break;
      case "MultiLineString": coordinates = o.arcs.map(line); break;
      case "Polygon": coordinates = polygon(o.arcs); break;
      case "MultiPolygon": coordinates = o.arcs.map(polygon); break;
      default: return null;
    }
    return {type: type, coordinates: coordinates};
  }

  return geometry(o);
}


/***/ }),

/***/ "+yzT":
/*!*************************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js ***!
  \*************************************************************************************/
/*! exports provided: forEachTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachTransform", function() { return forEachTransform; });
/* harmony import */ var _inputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inputs */ "WWKD");
/* harmony import */ var _nearest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nearest */ "ikrb");
/* harmony import */ var _project__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./project */ "bazI");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scales */ "7xeG");
/* harmony import */ var _toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toggle */ "aehT");
/* harmony import */ var _translate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./translate */ "kUhs");
/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./zoom */ "1ohO");







var compilers = { project: _project__WEBPACK_IMPORTED_MODULE_2__["default"], toggle: _toggle__WEBPACK_IMPORTED_MODULE_4__["default"], scales: _scales__WEBPACK_IMPORTED_MODULE_3__["default"],
    translate: _translate__WEBPACK_IMPORTED_MODULE_5__["default"], zoom: _zoom__WEBPACK_IMPORTED_MODULE_6__["default"], inputs: _inputs__WEBPACK_IMPORTED_MODULE_0__["default"], nearest: _nearest__WEBPACK_IMPORTED_MODULE_1__["default"] };
function forEachTransform(selCmpt, cb) {
    for (var t in compilers) {
        if (compilers[t].has(selCmpt)) {
            cb(compilers[t]);
        }
    }
}
//# sourceMappingURL=transforms.js.map

/***/ }),

/***/ "/+9G":
/*!********************************************************!*\
  !*** ./node_modules/vega-transforms/src/TupleIndex.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TupleIndex; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * An index that maps from unique, string-coerced, field values to tuples.
 * Assumes that the field serves as a unique key with no duplicate values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field accessor to index.
 */
function TupleIndex(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])(), params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(TupleIndex, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      field = _.field,
      index = this.value,
      mod = true;

  function set(t) { index.set(field(t), t); }

  if (_.modified('field') || pulse.modified(field.fields)) {
    index.clear();
    pulse.visit(pulse.SOURCE, set);
  } else if (pulse.changed()) {
    pulse.visit(pulse.REM, function(t) { index.delete(field(t)); });
    pulse.visit(pulse.ADD, set);
  } else {
    mod = false;
  }

  this.modified(mod);
  if (index.empty > df.cleanThreshold) df.runAfter(index.clean);
  return pulse.fork();
};


/***/ }),

/***/ "/1EK":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/rule.js ***!
  \***************************************************************/
/*! exports provided: rule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rule", function() { return rule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./valueref */ "vfFY");



var rule = {
    vgMark: 'rule',
    encodeEntry: function (model) {
        var _config = model.config, markDef = model.markDef, width = model.width, height = model.height;
        var orient = markDef.orient;
        if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {
            // Show nothing if we have none of x, y, lat, and long.
            return {};
        }
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('x', model, orient === 'horizontal' ? 'zeroOrMin' : _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('y', model, orient === 'vertical' ? 'zeroOrMin' : _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](height)), (orient !== 'vertical' ? _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition2"](model, 'zeroOrMax', 'x2') : {}), (orient !== 'horizontal' ? _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition2"](model, 'zeroOrMax', 'y2') : {}), _mixins__WEBPACK_IMPORTED_MODULE_1__["nonPosition"]('size', model, {
            vgChannel: 'strokeWidth',
            defaultValue: markDef.size
        }));
    }
};
//# sourceMappingURL=rule.js.map

/***/ }),

/***/ "/BrR":
/*!***************************************************!*\
  !*** ./node_modules/vega-parser/src/DataScope.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataScope; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




function DataScope(scope, input, output, values, aggr) {
  this.scope = scope;   // parent scope object
  this.input = input;   // first operator in pipeline (tuple input)
  this.output = output; // last operator in pipeline (tuple output)
  this.values = values; // operator for accessing tuples (but not tuple flow)

  // last aggregate in transform pipeline
  this.aggregate = aggr;

  // lookup table of field indices
  this.index = {};
}

DataScope.fromEntries = function(scope, entries) {
  var n = entries.length,
      i = 1,
      input  = entries[0],
      values = entries[n-1],
      output = entries[n-2],
      aggr = null;

  // add operator entries to this scope, wire up pulse chain
  scope.add(entries[0]);
  for (; i<n; ++i) {
    entries[i].params.pulse = Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(entries[i-1]);
    scope.add(entries[i]);
    if (entries[i].type === 'aggregate') aggr = entries[i];
  }

  return new DataScope(scope, input, output, values, aggr);
};

var prototype = DataScope.prototype;

prototype.countsRef = function(scope, field, sort) {
  var ds = this,
      cache = ds.counts || (ds.counts = {}),
      k = fieldKey(field), v, a, p;

  if (k != null) {
    scope = ds.scope;
    v = cache[k];
  }

  if (!v) {
    p = {
      groupby: scope.fieldRef(field, 'key'),
      pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(ds.output)
    };
    if (sort && sort.field) addSortField(scope, p, sort);
    a = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Aggregate"])(p));
    v = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(a)}));
    v = {agg: a, ref: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(v)};
    if (k != null) cache[k] = v;
  } else if (sort && sort.field) {
    addSortField(scope, v.agg.params, sort);
  }

  return v.ref;
};

function fieldKey(field) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(field) ? field : null;
}

function addSortField(scope, p, sort) {
  var as = Object(_util__WEBPACK_IMPORTED_MODULE_0__["aggrField"])(sort.op, sort.field), s;

  if (p.ops) {
    for (var i=0, n=p.as.length; i<n; ++i) {
      if (p.as[i] === as) return;
    }
  } else {
    p.ops = ['count'];
    p.fields = [null];
    p.as = ['count'];
  }
  if (sort.op) {
    p.ops.push((s=sort.op.signal) ? scope.signalRef(s) : sort.op);
    p.fields.push(scope.fieldRef(sort.field));
    p.as.push(as);
  }
}

function cache(scope, ds, name, optype, field, counts, index) {
  var cache = ds[name] || (ds[name] = {}),
      sort = Object(_util__WEBPACK_IMPORTED_MODULE_0__["sortKey"])(counts),
      k = fieldKey(field), v, op;

  if (k != null) {
    scope = ds.scope;
    k = k + (sort ? '|' + sort : '');
    v = cache[k];
  }

  if (!v) {
    var params = counts
      ? {field: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"], pulse: ds.countsRef(scope, field, counts)}
      : {field: scope.fieldRef(field), pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(ds.output)};
    if (sort) params.sort = scope.sortRef(counts);
    op = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_0__["entry"])(optype, undefined, params));
    if (index) ds.index[field] = op;
    v = Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(op);
    if (k != null) cache[k] = v;
  }
  return v;
}

prototype.tuplesRef = function() {
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(this.values);
};

prototype.extentRef = function(scope, field) {
  return cache(scope, this, 'extent', 'extent', field, false);
};

prototype.domainRef = function(scope, field) {
  return cache(scope, this, 'domain', 'values', field, false);
};

prototype.valuesRef = function(scope, field, sort) {
  return cache(scope, this, 'vals', 'values', field, sort || true);
};

prototype.lookupRef = function(scope, field) {
  return cache(scope, this, 'lookup', 'tupleindex', field, false);
};

prototype.indataRef = function(scope, field) {
  return cache(scope, this, 'indata', 'tupleindex', field, true, true);
};


/***/ }),

/***/ "/KLr":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/assemble.js ***!
  \*************************************************************************/
/*! exports provided: assembleProjections, assembleProjectionsForModelAndChildren, assembleProjectionForModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjections", function() { return assembleProjections; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjectionsForModelAndChildren", function() { return assembleProjectionsForModelAndChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjectionForModel", function() { return assembleProjectionForModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model */ "MqRG");




function assembleProjections(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isRepeatModel"])(model)) {
        return assembleProjectionsForModelAndChildren(model);
    }
    else {
        return assembleProjectionForModel(model);
    }
}
function assembleProjectionsForModelAndChildren(model) {
    return model.children.reduce(function (projections, child) {
        return projections.concat(child.assembleProjections());
    }, assembleProjectionForModel(model));
}
function assembleProjectionForModel(model) {
    var component = model.component.projection;
    if (!component || component.merged) {
        return [];
    }
    var projection = component.combine();
    var name = projection.name, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](projection, ["name"]); // we need to extract name so that it is always present in the output and pass TS type validation
    var size = {
        signal: "[" + component.size.map(function (ref) { return ref.signal; }).join(', ') + "]"
    };
    var fit = component.data.reduce(function (sources, data) {
        var source = Object(_vega_schema__WEBPACK_IMPORTED_MODULE_2__["isVgSignalRef"])(data) ? data.signal : "data('" + model.lookupDataSource(data) + "')";
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(sources, source)) {
            // build a unique list of sources
            sources.push(source);
        }
        return sources;
    }, []);
    if (fit.length <= 0) {
        throw new Error("Projection's fit didn't find any data sources");
    }
    return [tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: name,
            size: size, fit: {
                signal: fit.length > 1 ? "[" + fit.join(', ') + "]" : fit[0]
            } }, rest)];
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "/MTu":
/*!***************************************************!*\
  !*** ./node_modules/vega-embed/build/src/post.js ***!
  \***************************************************/
/*! exports provided: post */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "post", function() { return post; });
/**
 * Open editor url in a new window, and pass a message.
 */
function post(window, url, data) {
    var editor = window.open(url);
    var wait = 10000;
    var step = 250;
    var count = ~~(wait / step);
    function listen(evt) {
        if (evt.source === editor) {
            count = 0;
            window.removeEventListener('message', listen, false);
        }
    }
    window.addEventListener('message', listen, false);
    // send message
    // periodically resend until ack received or timeout
    function send() {
        if (count <= 0) {
            return;
        }
        editor.postMessage(data, '*');
        setTimeout(send, step);
        count -= 1;
    }
    setTimeout(send, step);
}
//# sourceMappingURL=post.js.map

/***/ }),

/***/ "/fEO":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/text.js ***!
  \*******************************************************/
/*! exports provided: textMetrics, fontSize, textValue, truncate, fontFamily, font, offset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return textMetrics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return fontSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textValue", function() { return textValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return truncate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return fontFamily; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "font", function() { return font; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "offset", function() { return offset; });
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "4Usi");


var context,
    currFontHeight;

var textMetrics = {
  height: fontSize,
  measureWidth: measureWidth,
  estimateWidth: estimateWidth,
  width: estimateWidth,
  canvas: useCanvas
};

useCanvas(true);

// make dumb, simple estimate if no canvas is available
function estimateWidth(item) {
  currFontHeight = fontSize(item);
  return estimate(textValue(item));
}

function estimate(text) {
  return ~~(0.8 * text.length * currFontHeight);
}

// measure text width if canvas is available
function measureWidth(item) {
  context.font = font(item);
  return measure(textValue(item));
}

function measure(text) {
  return context.measureText(text).width;
}

function fontSize(item) {
  return item.fontSize != null ? item.fontSize : 11;
}

function useCanvas(use) {
  context = use && (context = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["canvas"])(1,1)) ? context.getContext('2d') : null;
  textMetrics.width = context ? measureWidth : estimateWidth;
}

function textValue(item) {
  var s = item.text;
  if (s == null) {
    return '';
  } else {
    return item.limit > 0 ? truncate(item) : s + '';
  }
}

function truncate(item) {
  var limit = +item.limit,
      text = item.text + '',
      width;

  if (context) {
    context.font = font(item);
    width = measure;
  } else {
    currFontHeight = fontSize(item);
    width = estimate;
  }

  if (width(text) < limit) return text;

  var ellipsis = item.ellipsis || '\u2026',
      rtl = item.dir === 'rtl',
      lo = 0,
      hi = text.length, mid;

  limit -= width(ellipsis);

  if (rtl) {
    while (lo < hi) {
      mid = (lo + hi >>> 1);
      if (width(text.slice(mid)) > limit) lo = mid + 1;
      else hi = mid;
    }
    return ellipsis + text.slice(lo);
  } else {
    while (lo < hi) {
      mid = 1 + (lo + hi >>> 1);
      if (width(text.slice(0, mid)) < limit) lo = mid;
      else hi = mid - 1;
    }
    return text.slice(0, lo) + ellipsis;
  }
}

function fontFamily(item, quote) {
  var font = item.font;
  return (quote && font
    ? String(font).replace(/"/g, '\'')
    : font) || 'sans-serif';
}

function font(item, quote) {
  return '' +
    (item.fontStyle ? item.fontStyle + ' ' : '') +
    (item.fontVariant ? item.fontVariant + ' ' : '') +
    (item.fontWeight ? item.fontWeight + ' ' : '') +
    fontSize(item) + 'px ' +
    fontFamily(item, quote);
}

function offset(item) {
  // perform our own font baseline calculation
  // why? not all browsers support SVG 1.1 'alignment-baseline' :(
  var baseline = item.baseline,
      h = fontSize(item);
  return Math.round(
    baseline === 'top'    ?  0.79*h :
    baseline === 'middle' ?  0.30*h :
    baseline === 'bottom' ? -0.21*h : 0
  );
}


/***/ }),

/***/ "/glu":
/*!*********************************************************!*\
  !*** ./node_modules/topojson-client/src/untransform.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "OZV6");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2,
        n = input.length,
        output = new Array(n),
        x1 = Math.round((input[0] - dx) / kx),
        y1 = Math.round((input[1] - dy) / ky);
    output[0] = x1 - x0, x0 = x1;
    output[1] = y1 - y0, y0 = y1;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "/ld2":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/arc.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markItemPath */ "AiIN");



/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_1__["default"])('arc', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["arc"]));


/***/ }),

/***/ "0DWM":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/PreFacet.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PreFacet; });
/* harmony import */ var _Facet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Facet */ "a0eD");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Partitions pre-faceted data into tuple subflows.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): Array<object>} params.field - The field
 *   accessor for an array of subflow tuple objects.
 */
function PreFacet(params) {
  _Facet__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(PreFacet, _Facet__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.transform = function(_, pulse) {
  var self = this,
      flow = _.subflow,
      field = _.field;

  if (_.modified('field') || field && pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(field))) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('PreFacet does not support field modification.');
  }

  this._targets.active = 0; // reset list of active subflows

  pulse.visit(pulse.MOD, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.mod(_); }) : sf.mod(t);
  });

  pulse.visit(pulse.ADD, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.add(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(_)); }) : sf.add(t);
  });

  pulse.visit(pulse.REM, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.rem(_); }) : sf.rem(t);
  });

  return pulse;
};


/***/ }),

/***/ "0Iqw":
/*!*****************************************!*\
  !*** ./node_modules/vega-view/index.js ***!
  \*****************************************/
/*! exports provided: View */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/View */ "SGqD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "View", function() { return _src_View__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "0JWn":
/*!*******************************************!*\
  !*** ./node_modules/vega-encode/index.js ***!
  \*******************************************/
/*! exports provided: axisticks, datajoin, encode, legendentries, linkpath, pie, scale, sortitems, stack, validTicks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_AxisTicks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/AxisTicks */ "mzfd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisticks", function() { return _src_AxisTicks__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_DataJoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/DataJoin */ "3/fx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "datajoin", function() { return _src_DataJoin__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Encode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Encode */ "DMe5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encode", function() { return _src_Encode__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_LegendEntries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/LegendEntries */ "KwB+");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "legendentries", function() { return _src_LegendEntries__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_LinkPath__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/LinkPath */ "AQU9");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkpath", function() { return _src_LinkPath__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Pie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Pie */ "70tb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return _src_Pie__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Scale */ "k8NR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _src_Scale__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_SortItems__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/SortItems */ "N26P");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortitems", function() { return _src_SortItems__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Stack__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Stack */ "U3SC");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _src_Stack__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_ticks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/ticks */ "Wj74");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validTicks", function() { return _src_ticks__WEBPACK_IMPORTED_MODULE_9__["validTicks"]; });













/***/ }),

/***/ "0iGg":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/axis.js ***!
  \**************************************************/
/*! exports provided: AXIS_PARTS, AXIS_PROPERTY_TYPE, isAxisProperty, VG_AXIS_PROPERTIES, AXIS_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PARTS", function() { return AXIS_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PROPERTY_TYPE", function() { return AXIS_PROPERTY_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAxisProperty", function() { return isAxisProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_AXIS_PROPERTIES", function() { return VG_AXIS_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PROPERTIES", function() { return AXIS_PROPERTIES; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");


var AXIS_PARTS = ['domain', 'grid', 'labels', 'ticks', 'title'];
/**
 * A dictionary listing whether a certain axis property is applicable for only main axes or only grid axes.
 * (Properties not listed are applicable for both)
 */
var AXIS_PROPERTY_TYPE = {
    grid: 'grid',
    gridScale: 'grid',
    domain: 'main',
    labels: 'main',
    labelFlush: 'main',
    labelOverlap: 'main',
    minExtent: 'main',
    maxExtent: 'main',
    offset: 'main',
    ticks: 'main',
    title: 'main',
    values: 'both',
    scale: 'both',
    zindex: 'both' // this is actually set afterward, so it doesn't matter
};
var COMMON_AXIS_PROPERTIES_INDEX = {
    orient: 1,
    domain: 1,
    format: 1,
    grid: 1,
    labelBound: 1,
    labelFlush: 1,
    labelPadding: 1,
    labels: 1,
    labelOverlap: 1,
    maxExtent: 1,
    minExtent: 1,
    offset: 1,
    position: 1,
    tickCount: 1,
    ticks: 1,
    tickSize: 1,
    title: 1,
    titlePadding: 1,
    values: 1,
    zindex: 1,
};
var AXIS_PROPERTIES_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, COMMON_AXIS_PROPERTIES_INDEX, { encoding: 1, labelAngle: 1, titleMaxLength: 1 });
var VG_AXIS_PROPERTIES_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX, { gridScale: 1, encode: 1 });
function isAxisProperty(prop) {
    return !!AXIS_PROPERTIES_INDEX[prop];
}
var VG_AXIS_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(VG_AXIS_PROPERTIES_INDEX);
// Export for dependent projects
var AXIS_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(AXIS_PROPERTIES_INDEX);
//# sourceMappingURL=axis.js.map

/***/ }),

/***/ "0t2G":
/*!************************************************!*\
  !*** ./node_modules/vega-encode/src/labels.js ***!
  \************************************************/
/*! exports provided: labelValues, labelFormat, labelFraction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelValues", function() { return labelValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelFormat", function() { return labelFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelFraction", function() { return labelFraction; });
/* harmony import */ var _legend_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legend-types */ "KPpO");
/* harmony import */ var _scale_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scale-types */ "BM/x");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ticks */ "Wj74");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





var symbols = {};
symbols[_scale_types__WEBPACK_IMPORTED_MODULE_1__["Quantile"]] = quantileSymbols;
symbols[_scale_types__WEBPACK_IMPORTED_MODULE_1__["Quantize"]] = quantizeSymbols;
symbols[_scale_types__WEBPACK_IMPORTED_MODULE_1__["Threshold"]] = thresholdSymbols;
symbols[_scale_types__WEBPACK_IMPORTED_MODULE_1__["BinLinear"]] = symbols[_scale_types__WEBPACK_IMPORTED_MODULE_1__["BinOrdinal"]] = binSymbols;

function labelValues(scale, count) {
  var values = symbols[scale.type];
  return values ? values(scale) : Object(_ticks__WEBPACK_IMPORTED_MODULE_2__["tickValues"])(scale, count);
}

function quantizeSymbols(scale) {
  var domain = scale.domain(),
      x0 = domain[0],
      x1 = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(domain),
      n = scale.range().length,
      values = new Array(n),
      i = 0;

  values[0] = -Infinity;
  while (++i < n) values[i] = (i * x1 - (i - n) * x0) / n;
  values.max = +Infinity;

  return values;
}

function quantileSymbols(scale) {
  var values = [-Infinity].concat(scale.quantiles());
  values.max = +Infinity;

  return values;
}

function thresholdSymbols(scale) {
  var values = [-Infinity].concat(scale.domain());
  values.max = +Infinity;

  return values;
}

function binSymbols(scale) {
  var values = scale.domain();
  values.max = values.pop();

  return values;
}

function labelFormat(scale, format, type) {
  return type === _legend_types__WEBPACK_IMPORTED_MODULE_0__["Symbols"] && symbols[scale.type] ? formatRange(format)
    : type === _legend_types__WEBPACK_IMPORTED_MODULE_0__["Discrete"] ? formatDiscrete(format)
    : formatPoint(format);
}

function formatRange(format) {
  return function(value, index, array) {
    var limit = array[index + 1] || array.max || +Infinity,
        lo = formatValue(value, format),
        hi = formatValue(limit, format);
    return lo && hi ? lo + '\u2013' + hi : hi ? '< ' + hi : '\u2265 ' + lo;
  };
}

function formatDiscrete(format) {
  return function(value, index) {
    return index ? format(value) : null;
  }
}

function formatPoint(format) {
  return function(value) {
    return format(value);
  };
}

function formatValue(value, format) {
  return isFinite(value) ? format(value) : null;
}

function labelFraction(scale) {
  var domain = scale.domain(),
      count = domain.length - 1,
      lo = +domain[0],
      hi = +Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(domain),
      span = hi - lo;

  if (scale.type === _scale_types__WEBPACK_IMPORTED_MODULE_1__["Threshold"]) {
    var adjust = count ? span / count : 0.1;
    lo -= adjust;
    hi += adjust;
    span = hi - lo;
  }

  return function(value) {
    return (value - lo) / span;
  };
}


/***/ }),

/***/ "1/lU":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/entry.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "JQJb");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "s+XR");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scale */ "sXDa");
/* harmony import */ var _gradient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gradient */ "W9vD");
/* harmony import */ var _property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./property */ "SlBs");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./expression */ "WgpX");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "J29t");








/* harmony default export */ __webpack_exports__["default"] = (function(channel, enc, scope, params, fields) {
  if (enc.gradient != null) {
    return Object(_gradient__WEBPACK_IMPORTED_MODULE_3__["default"])(enc, scope, params, fields);
  }

  var value = enc.signal ? Object(_expression__WEBPACK_IMPORTED_MODULE_5__["default"])(enc.signal, scope, params, fields)
    : enc.color ? Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(enc.color, scope, params, fields)
    : enc.field != null ? Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])(enc.field, scope, params, fields)
    : enc.value !== undefined ? Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["stringValue"])(enc.value)
    : undefined;

  if (enc.scale != null) {
    value = Object(_scale__WEBPACK_IMPORTED_MODULE_2__["default"])(enc, value, scope, params, fields);
  }

  if (value === undefined) {
    value = null;
  }

  if (enc.exponent != null) {
    value = 'Math.pow(' + value + ','
      + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.exponent, scope, params, fields) + ')';
  }

  if (enc.mult != null) {
    value += '*' + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.mult, scope, params, fields);
  }

  if (enc.offset != null) {
    value += '+' + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.offset, scope, params, fields);
  }

  if (enc.round) {
    value = 'Math.round(' + value + ')';
  }

  return value;
});


/***/ }),

/***/ "10j7":
/*!****************************************************!*\
  !*** ./node_modules/vega-embed/build/src/style.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// generated with build-style.sh
/* harmony default export */ __webpack_exports__["default"] = (".vega-embed {\n  position: relative;\n  display: inline-block;\n  padding-right: 38px;\n}\n\n.vega-embed .vega-actions-wrapper {\n  display: inline-flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 6px;\n  z-index: 1000;\n\n  opacity: 0.2;\n  background: white;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);\n  color: #1b1e23;\n  border: 1px solid #aaa;\n  border-radius: 999px;\n  transition: opacity 0.4s ease-in;\n}\n\n.vega-embed:hover .vega-actions-wrapper {\n  transition: opacity 0.2s ease;\n  opacity: 1;\n}\n\n.vega-embed .vega-actions {\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: none;\n  flex-direction: column;\n\n  padding-bottom: 8px;\n  padding-top: 8px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid #d9d9d9;\n  background: white;\n}\n\n.vega-embed .vega-actions-wrapper:hover {\n  background: transparent;\n  color: transparent;\n  border: none;\n  box-shadow: none;\n}\n\n.vega-embed .vega-actions-wrapper:hover .vega-actions {\n  display: flex;\n}\n\n.vega-embed .vega-actions a {\n  padding: 8px 16px;\n  font-family: sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  white-space: nowrap;\n  color: #434a56;\n  text-decoration: none;\n}\n\n.vega-embed .vega-actions a:hover {\n  background-color: #f7f7f9;\n  color: #1b1e23;\n}");
//# sourceMappingURL=style.js.map

/***/ }),

/***/ "18Xv":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/arc.js ***!
  \******************************************************/
/*! exports provided: segmentCache, bezierCache, segments, bezier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "segmentCache", function() { return segmentCache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezierCache", function() { return bezierCache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "segments", function() { return segments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezier", function() { return bezier; });
var segmentCache = {};
var bezierCache = {};

var join = [].join;

// Copied from Inkscape svgtopdf, thanks!
function segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {
  var key = join.call(arguments);
  if (segmentCache[key]) {
    return segmentCache[key];
  }

  var th = rotateX * (Math.PI/180);
  var sin_th = Math.sin(th);
  var cos_th = Math.cos(th);
  rx = Math.abs(rx);
  ry = Math.abs(ry);
  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;
  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;
  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);
  if (pl > 1) {
    pl = Math.sqrt(pl);
    rx *= pl;
    ry *= pl;
  }

  var a00 = cos_th / rx;
  var a01 = sin_th / rx;
  var a10 = (-sin_th) / ry;
  var a11 = (cos_th) / ry;
  var x0 = a00 * ox + a01 * oy;
  var y0 = a10 * ox + a11 * oy;
  var x1 = a00 * x + a01 * y;
  var y1 = a10 * x + a11 * y;

  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);
  var sfactor_sq = 1 / d - 0.25;
  if (sfactor_sq < 0) sfactor_sq = 0;
  var sfactor = Math.sqrt(sfactor_sq);
  if (sweep == large) sfactor = -sfactor;
  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);
  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);

  var th0 = Math.atan2(y0-yc, x0-xc);
  var th1 = Math.atan2(y1-yc, x1-xc);

  var th_arc = th1-th0;
  if (th_arc < 0 && sweep === 1){
    th_arc += 2 * Math.PI;
  } else if (th_arc > 0 && sweep === 0) {
    th_arc -= 2 * Math.PI;
  }

  var segs = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));
  var result = [];
  for (var i=0; i<segs; ++i) {
    var th2 = th0 + i * th_arc / segs;
    var th3 = th0 + (i+1) * th_arc / segs;
    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];
  }

  return (segmentCache[key] = result);
}

function bezier(params) {
  var key = join.call(params);
  if (bezierCache[key]) {
    return bezierCache[key];
  }

  var cx = params[0],
      cy = params[1],
      th0 = params[2],
      th1 = params[3],
      rx = params[4],
      ry = params[5],
      sin_th = params[6],
      cos_th = params[7];

  var a00 = cos_th * rx;
  var a01 = -sin_th * ry;
  var a10 = sin_th * rx;
  var a11 = cos_th * ry;

  var cos_th0 = Math.cos(th0);
  var sin_th0 = Math.sin(th0);
  var cos_th1 = Math.cos(th1);
  var sin_th1 = Math.sin(th1);

  var th_half = 0.5 * (th1 - th0);
  var sin_th_h2 = Math.sin(th_half * 0.5);
  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);
  var x1 = cx + cos_th0 - t * sin_th0;
  var y1 = cy + sin_th0 + t * cos_th0;
  var x3 = cx + cos_th1;
  var y3 = cy + sin_th1;
  var x2 = x3 + t * sin_th1;
  var y2 = y3 - t * cos_th1;

  return (bezierCache[key] = [
    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,
    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,
    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3
  ]);
}


/***/ }),

/***/ "1CMI":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/identifier.js ***!
  \*********************************************************************/
/*! exports provided: IdentifierNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdentifierNode", function() { return IdentifierNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../selection */ "kygm");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataflow */ "LH2n");



var IdentifierNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IdentifierNode, _super);
    function IdentifierNode(parent) {
        return _super.call(this, parent) || this;
    }
    IdentifierNode.prototype.clone = function () {
        return new IdentifierNode(null);
    };
    IdentifierNode.prototype.producedFields = function () {
        var _a;
        return _a = {}, _a[_selection__WEBPACK_IMPORTED_MODULE_1__["SELECTION_ID"]] = true, _a;
    };
    IdentifierNode.prototype.assemble = function () {
        return { type: 'identifier', as: _selection__WEBPACK_IMPORTED_MODULE_1__["SELECTION_ID"] };
    };
    return IdentifierNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_2__["DataFlowNode"]));

//# sourceMappingURL=identifier.js.map

/***/ }),

/***/ "1ITa":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Lookup.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Lookup; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Extend tuples by joining them with values from a lookup table.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Map} params.index - The lookup table map.
 * @param {Array<function(object): *} params.fields - The fields to lookup.
 * @param {Array<string>} params.as - Output field names for each lookup value.
 * @param {*} [params.default] - A default value to use if lookup fails.
 */
function Lookup(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, {}, params);
}

Lookup.Definition = {
  "type": "Lookup",
  "metadata": {"modifies": true},
  "params": [
    { "name": "index", "type": "index", "params": [
        {"name": "from", "type": "data", "required": true },
        {"name": "key", "type": "field", "required": true }
      ] },
    { "name": "values", "type": "field", "array": true },
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true },
    { "name": "default", "default": null }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Lookup, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse,
      as = _.as,
      keys = _.fields,
      index = _.index,
      values = _.values,
      defaultValue = _.default==null ? null : _.default,
      reset = _.modified(),
      flag = reset ? pulse.SOURCE : pulse.ADD,
      n = keys.length,
      set, m, mods;

  if (values) {
    m = values.length;

    if (n > 1 && !as) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Multi-field lookup requires explicit "as" parameter.');
    }
    if (as && as.length !== n * m) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('The "as" parameter has too few output field names.');
    }
    as = as || values.map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]);

    set = function(t) {
      for (var i=0, k=0, j, v; i<n; ++i) {
        v = index.get(keys[i](t));
        if (v == null) for (j=0; j<m; ++j, ++k) t[as[k]] = defaultValue;
        else for (j=0; j<m; ++j, ++k) t[as[k]] = values[j](v);
      }
    };
  } else {
    if (!as) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Missing output field names.');
    }

    set = function(t) {
      for (var i=0, v; i<n; ++i) {
        v = index.get(keys[i](t));
        t[as[i]] = v==null ? defaultValue : v;
      }
    };
  }

  if (reset) {
    out = pulse.reflow(true);
  } else {
    mods = keys.some(function(k) { return pulse.modified(k.fields); });
    flag |= (mods ? pulse.MOD : 0);
  }
  pulse.visit(flag, set);

  return out.modifies(as);
};


/***/ }),

/***/ "1PG8":
/*!************************************************!*\
  !*** ./node_modules/vega-geo/src/Graticule.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Graticule; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ "n8A4");




/**
 * GeoJSON feature generator for creating graticules.
 * @constructor
 */
function Graticule(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
  this.generator = Object(d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoGraticule"])();
}

Graticule.Definition = {
  "type": "Graticule",
  "metadata": {"changes": true},
  "params": [
    { "name": "extent", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "extentMajor", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "extentMinor", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "step", "type": "number", "array": true, "length": 2 },
    { "name": "stepMajor", "type": "number", "array": true, "length": 2, "default": [90, 360] },
    { "name": "stepMinor", "type": "number", "array": true, "length": 2, "default": [10, 10] },
    { "name": "precision", "type": "number", "default": 2.5 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Graticule, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var src = this.value,
      gen = this.generator, t;

  if (!src.length || _.modified()) {
    for (var prop in _) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(gen[prop])) {
        gen[prop](_[prop]);
      }
    }
  }

  t = gen();
  if (src.length) {
    pulse.mod.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["replace"])(src[0], t));
  } else {
    pulse.add.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
  }
  src[0] = t;

  return pulse;
};


/***/ }),

/***/ "1RqS":
/*!*******************************************************!*\
  !*** ./node_modules/vega-expression/src/functions.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(codegen) {

  function fncall(name, args, cast, type) {
    var obj = codegen(args[0]);
    if (cast) {
      obj = cast + '(' + obj + ')';
      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';
    }
    return obj + '.' + name + (type < 0 ? '' : type === 0 ?
      '()' :
      '(' + args.slice(1).map(codegen).join(',') + ')');
  }

  function fn(name, cast, type) {
    return function(args) {
      return fncall(name, args, cast, type);
    };
  }

  var DATE = 'new Date',
      STRING = 'String',
      REGEXP = 'RegExp';

  return {
    // MATH functions
    isNaN:    'isNaN',
    isFinite: 'isFinite',
    abs:      'Math.abs',
    acos:     'Math.acos',
    asin:     'Math.asin',
    atan:     'Math.atan',
    atan2:    'Math.atan2',
    ceil:     'Math.ceil',
    cos:      'Math.cos',
    exp:      'Math.exp',
    floor:    'Math.floor',
    log:      'Math.log',
    max:      'Math.max',
    min:      'Math.min',
    pow:      'Math.pow',
    random:   'Math.random',
    round:    'Math.round',
    sin:      'Math.sin',
    sqrt:     'Math.sqrt',
    tan:      'Math.tan',

    clamp: function(args) {
      if (args.length < 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Missing arguments to clamp function.');
      if (args.length > 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Too many arguments to clamp function.');
      var a = args.map(codegen);
      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';
    },

    // DATE functions
    now:             'Date.now',
    utc:             'Date.UTC',
    datetime:        DATE,
    date:            fn('getDate', DATE, 0),
    day:             fn('getDay', DATE, 0),
    year:            fn('getFullYear', DATE, 0),
    month:           fn('getMonth', DATE, 0),
    hours:           fn('getHours', DATE, 0),
    minutes:         fn('getMinutes', DATE, 0),
    seconds:         fn('getSeconds', DATE, 0),
    milliseconds:    fn('getMilliseconds', DATE, 0),
    time:            fn('getTime', DATE, 0),
    timezoneoffset:  fn('getTimezoneOffset', DATE, 0),
    utcdate:         fn('getUTCDate', DATE, 0),
    utcday:          fn('getUTCDay', DATE, 0),
    utcyear:         fn('getUTCFullYear', DATE, 0),
    utcmonth:        fn('getUTCMonth', DATE, 0),
    utchours:        fn('getUTCHours', DATE, 0),
    utcminutes:      fn('getUTCMinutes', DATE, 0),
    utcseconds:      fn('getUTCSeconds', DATE, 0),
    utcmilliseconds: fn('getUTCMilliseconds', DATE, 0),

    // shared sequence functions
    length:      fn('length', null, -1),
    indexof:     fn('indexOf', null),
    lastindexof: fn('lastIndexOf', null),
    slice:       fn('slice', null),

    // STRING functions
    parseFloat:  'parseFloat',
    parseInt:    'parseInt',
    upper:       fn('toUpperCase', STRING, 0),
    lower:       fn('toLowerCase', STRING, 0),
    substring:   fn('substring', STRING),
    replace:     fn('replace', STRING),

    // REGEXP functions
    regexp:  REGEXP,
    test:    fn('test', REGEXP),

    // Control Flow functions
    if: function(args) {
        if (args.length < 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Missing arguments to if function.');
        if (args.length > 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Too many arguments to if function.');
        var a = args.map(codegen);
        return '('+a[0]+'?'+a[1]+':'+a[2]+')';
      }
  };
});


/***/ }),

/***/ "1XMV":
/*!****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/register.js ***!
  \****************************************************/
/*! exports provided: transforms, definition, transform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return transforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return definition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return transform; });
var transforms = {};

function definition(type) {
  var t = transform(type);
  return t && t.Definition || null;
}

function transform(type) {
  type = type && type.toLowerCase();
  return transforms.hasOwnProperty(type) ? transforms[type] : null;
}


/***/ }),

/***/ "1h1d":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/ChangeSet.js ***!
  \*****************************************************/
/*! exports provided: isChangeSet, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChangeSet", function() { return isChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return changeset; });
/* harmony import */ var _Tuple__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tuple */ "5VU1");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



function isChangeSet(v) {
  return v && v.constructor === changeset;
}

function changeset() {
  var add = [],  // insert tuples
      rem = [],  // remove tuples
      mod = [],  // modify tuples
      remp = [], // remove by predicate
      modp = [], // modify by predicate
      reflow = false;

  return {
    constructor: changeset,
    insert: function(t) {
      var d = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(t), i = 0, n = d.length;
      for (; i<n; ++i) add.push(d[i]);
      return this;
    },
    remove: function(t) {
      var a = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t) ? remp : rem,
          d = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(t), i = 0, n = d.length;
      for (; i<n; ++i) a.push(d[i]);
      return this;
    },
    modify: function(t, field, value) {
      var m = {field: field, value: Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(value)};
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t)) {
        m.filter = t;
        modp.push(m);
      } else {
        m.tuple = t;
        mod.push(m);
      }
      return this;
    },
    encode: function(t, set) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t)) modp.push({filter: t, field: set});
      else mod.push({tuple: t, field: set});
      return this;
    },
    reflow: function() {
      reflow = true;
      return this;
    },
    pulse: function(pulse, tuples) {
      var cur = {}, out = {}, i, n, m, f, t, id;

      // build lookup table of current tuples
      for (i=0, n=tuples.length; i<n; ++i) {
        cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(tuples[i])] = 1;
      }

      // process individual tuples to remove
      for (i=0, n=rem.length; i<n; ++i) {
        t = rem[i];
        cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = -1;
      }

      // process predicate-based removals
      for (i=0, n=remp.length; i<n; ++i) {
        f = remp[i];
        tuples.forEach(function(t) {
          if (f(t)) cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = -1;
        });
      }

      // process all add tuples
      for (i=0, n=add.length; i<n; ++i) {
        t = add[i];
        id = Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
        if (cur[id]) {
          // tuple already resides in dataset
          // if flagged for both add and remove, cancel
          cur[id] = 1;
        } else {
          // tuple does not reside in dataset, add
          pulse.add.push(Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["ingest"])(add[i]));
        }
      }

      // populate pulse rem list
      for (i=0, n=tuples.length; i<n; ++i) {
        t = tuples[i];
        if (cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] < 0) pulse.rem.push(t);
      }

      // modify helper method
      function modify(t, f, v) {
        if (v) {
          t[f] = v(t);
        } else {
          pulse.encode = f;
        }
        if (!reflow) out[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = t;
      }

      // process individual tuples to modify
      for (i=0, n=mod.length; i<n; ++i) {
        m = mod[i];
        t = m.tuple;
        f = m.field;
        id = cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)];
        if (id > 0) {
          modify(t, f, m.value);
          pulse.modifies(f);
        }
      }

      // process predicate-based modifications
      for (i=0, n=modp.length; i<n; ++i) {
        m = modp[i];
        f = m.filter;
        tuples.forEach(function(t) {
          if (f(t) && cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] > 0) {
            modify(t, m.field, m.value);
          }
        });
        pulse.modifies(m.field);
      }

      // upon reflow request, populate mod with all non-removed tuples
      // otherwise, populate mod with modified tuples only
      if (reflow) {
        pulse.mod = rem.length || remp.length
          ? tuples.filter(function(t) { return cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] > 0; })
          : tuples.slice();
      } else {
        for (id in out) pulse.mod.push(out[id]);
      }

      return pulse;
    }
  };
}


/***/ }),

/***/ "1kyy":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Project.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Project; });
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/util */ "MQBj");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Performs a relational projection, copying selected fields from source
 * tuples to a new set of derived tuples.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *} params.fields - The fields to project,
 *   as an array of field accessors. If unspecified, all fields will be
 *   copied with names unchanged.
 * @param {Array<string>} [params.as] - Output field names for each projected
 *   field. Any unspecified fields will use the field name provided by
 *   the field accessor.
 */
function Project(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Project.Definition = {
  "type": "Project",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "fields", "type": "field", "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Project, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var fields = _.fields,
      as = Object(_util_util__WEBPACK_IMPORTED_MODULE_0__["fieldNames"])(_.fields, _.as || []),
      derive = fields
        ? function(s, t) { return project(s, t, fields, as); }
        : vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["rederive"],
      out, lut;

  if (this.value) {
    lut = this.value;
  } else {
    pulse = pulse.addAll();
    lut = this.value = {};
  }

  out = pulse.fork(pulse.NO_SOURCE);

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t);
    out.rem.push(lut[id]);
    lut[id] = null;
  });

  pulse.visit(pulse.ADD, function(t) {
    var dt = derive(t, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({}));
    lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t)] = dt;
    out.add.push(dt);
  });

  pulse.visit(pulse.MOD, function(t) {
    out.mod.push(derive(t, lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t)]));
  });

  return out;
};

function project(s, t, fields, as) {
  for (var i=0, n=fields.length; i<n; ++i) {
    t[as[i]] = fields[i](s);
  }
  return t;
}


/***/ }),

/***/ "1mLV":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/transform.js ***!
  \*******************************************************/
/*! exports provided: isFilter, isLookup, isWindow, isCalculate, isBin, isTimeUnit, isAggregate, isStack, normalizeTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFilter", function() { return isFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLookup", function() { return isLookup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWindow", function() { return isWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCalculate", function() { return isCalculate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBin", function() { return isBin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeUnit", function() { return isTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregate", function() { return isAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStack", function() { return isStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeTransform", function() { return normalizeTransform; });
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logical */ "s/HG");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./predicate */ "WSy+");


function isFilter(t) {
    return t['filter'] !== undefined;
}
function isLookup(t) {
    return t['lookup'] !== undefined;
}
function isWindow(t) {
    return t['window'] !== undefined;
}
function isCalculate(t) {
    return t['calculate'] !== undefined;
}
function isBin(t) {
    return !!t['bin'];
}
function isTimeUnit(t) {
    return t['timeUnit'] !== undefined;
}
function isAggregate(t) {
    return t['aggregate'] !== undefined;
}
function isStack(t) {
    return t['stack'] !== undefined;
}
function normalizeTransform(transform) {
    return transform.map(function (t) {
        if (isFilter(t)) {
            return {
                filter: Object(_logical__WEBPACK_IMPORTED_MODULE_0__["normalizeLogicalOperand"])(t.filter, _predicate__WEBPACK_IMPORTED_MODULE_1__["normalizePredicate"])
            };
        }
        return t;
    });
}
//# sourceMappingURL=transform.js.map

/***/ }),

/***/ "1mRa":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Proxy.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Proxy; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Proxy the value of another operator as a pure signal value.
 * Ensures no tuples are propagated.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {*} params.value - The value to proxy, becomes the value of this operator.
 */
function Proxy(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Proxy, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  this.value = _.value;
  return _.modified('value')
    ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS)
    : pulse.StopPropagation;
};


/***/ }),

/***/ "1ohO":
/*!*******************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "8Sdu");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../channel */ "5g++");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interval */ "aHhC");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../selection */ "3eK9");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scales */ "7xeG");






var ANCHOR = '_zoom_anchor';
var DELTA = '_zoom_delta';
var zoom = {
    has: function (selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.zoom;
    },
    signals: function (model, selCmpt, signals) {
        var name = selCmpt.name;
        var hasScales = _scales__WEBPACK_IMPORTED_MODULE_5__["default"].has(selCmpt);
        var delta = name + DELTA;
        var _a = Object(_selection__WEBPACK_IMPORTED_MODULE_4__["positionalProjections"])(selCmpt), x = _a.x, y = _a.y;
        var sx = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["X"]));
        var sy = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["Y"]));
        var events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])(selCmpt.zoom, 'scope');
        if (!hasScales) {
            events = events.map(function (e) { return (e.markname = name + _interval__WEBPACK_IMPORTED_MODULE_3__["BRUSH"], e); });
        }
        signals.push({
            name: name + ANCHOR,
            on: [{
                    events: events,
                    update: !hasScales ? "{x: x(unit), y: y(unit)}" :
                        '{' + [
                            (sx ? "x: invert(" + sx + ", x(unit))" : ''),
                            (sy ? "y: invert(" + sy + ", y(unit))" : '')
                        ].filter(function (expr) { return !!expr; }).join(', ') + '}'
                }]
        }, {
            name: delta,
            on: [{
                    events: events,
                    force: true,
                    update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'
                }]
        });
        if (x !== null) {
            onDelta(model, selCmpt, 'x', 'width', signals);
        }
        if (y !== null) {
            onDelta(model, selCmpt, 'y', 'height', signals);
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (zoom);
function onDelta(model, selCmpt, channel, size, signals) {
    var name = selCmpt.name;
    var hasScales = _scales__WEBPACK_IMPORTED_MODULE_5__["default"].has(selCmpt);
    var signal = signals.filter(function (s) {
        return s.name === Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, hasScales ? 'data' : 'visual');
    })[0];
    var sizeSg = model.getSizeSignalRef(size).signal;
    var scaleCmpt = model.getScaleComponent(channel);
    var scaleType = scaleCmpt.get('type');
    var base = hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_5__["domain"])(model, channel) : signal.name;
    var delta = name + DELTA;
    var anchor = "" + name + ANCHOR + "." + channel;
    var zoomFn = !hasScales ? 'zoomLinear' :
        scaleType === 'log' ? 'zoomLog' :
            scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';
    var update = zoomFn + "(" + base + ", " + anchor + ", " + delta +
        (hasScales && scaleType === 'pow' ? ", " + (scaleCmpt.get('exponent') || 1) : '') + ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : "clampRange(" + update + ", 0, " + sizeSg + ")"
    });
}
//# sourceMappingURL=zoom.js.map

/***/ }),

/***/ "2+m4":
/*!******************************************************!*\
  !*** ./node_modules/vega-wordcloud/src/Wordcloud.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Wordcloud; });
/* harmony import */ var _CloudLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CloudLayout */ "gnF8");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-statistics */ "VZYI");






var Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];

var Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];

function Wordcloud(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, Object(_CloudLayout__WEBPACK_IMPORTED_MODULE_0__["default"])(), params);
}

Wordcloud.Definition = {
  "type": "Wordcloud",
  "metadata": {"modifies": true},
  "params": [
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "font", "type": "string", "expr": true, "default": "sans-serif" },
    { "name": "fontStyle", "type": "string", "expr": true, "default": "normal" },
    { "name": "fontWeight", "type": "string", "expr": true, "default": "normal" },
    { "name": "fontSize", "type": "number", "expr": true, "default": 14 },
    { "name": "fontSizeRange", "type": "number", "array": "nullable", "default": [10, 50] },
    { "name": "rotate", "type": "number", "expr": true, "default": 0 },
    { "name": "text", "type": "field" },
    { "name": "spiral", "type": "string", "values": ["archimedean", "rectangular"] },
    { "name": "padding", "type": "number", "expr": true },
    { "name": "as", "type": "string", "array": true, "length": 7, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Wordcloud, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  function modp(param) {
    var p = _[param];
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(p) && pulse.modified(p.fields);
  }

  var mod = _.modified();
  if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;

  var data = pulse.materialize(pulse.SOURCE).source,
      layout = this.value,
      as = _.as || Output,
      fontSize = _.fontSize || 14,
      range;

  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(fontSize)
    ? (range = _.fontSizeRange)
    : (fontSize = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(fontSize));

  // create font size scaling function as needed
  if (range) {
    var fsize = fontSize,
        sizeScale = Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["scale"])('sqrt')()
          .domain(extent(fsize, data))
          .range(range);
    fontSize = function(x) { return sizeScale(fsize(x)); };
  }

  data.forEach(function(t) {
    t[as[0]] = NaN;
    t[as[1]] = NaN;
    t[as[3]] = 0;
  });

  // configure layout
  var words = layout
    .words(data)
    .text(_.text)
    .size(_.size || [500, 500])
    .padding(_.padding || 1)
    .spiral(_.spiral || 'archimedean')
    .rotate(_.rotate || 0)
    .font(_.font || 'sans-serif')
    .fontStyle(_.fontStyle || 'normal')
    .fontWeight(_.fontWeight || 'normal')
    .fontSize(fontSize)
    .random(vega_statistics__WEBPACK_IMPORTED_MODULE_4__["random"])
    .layout();

  var size = layout.size(),
      dx = size[0] >> 1,
      dy = size[1] >> 1,
      i = 0,
      n = words.length,
      w, t;

  for (; i<n; ++i) {
    w = words[i];
    t = w.datum;
    t[as[0]] = w.x + dx;
    t[as[1]] = w.y + dy;
    t[as[2]] = w.font;
    t[as[3]] = w.size;
    t[as[4]] = w.style;
    t[as[5]] = w.weight;
    t[as[6]] = w.rotate;
  }

  return pulse.reflow(mod).modifies(as);
};

function extent(field, data) {
  var min = +Infinity,
      max = -Infinity,
      i = 0,
      n = data.length,
      v;

  for (; i<n; ++i) {
    v = field(data[i]);
    if (v < min) min = v;
    if (v > max) max = v;
  }

  return [min, max];
}


/***/ }),

/***/ "2035":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/boxplot.js ***!
  \*******************************************************************/
/*! exports provided: BOXPLOT, isBoxPlotDef, BOXPLOT_STYLES, VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX, filterUnsupportedChannels, normalizeBoxPlot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BOXPLOT", function() { return BOXPLOT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoxPlotDef", function() { return isBoxPlotDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BOXPLOT_STYLES", function() { return BOXPLOT_STYLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX", function() { return VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterUnsupportedChannels", function() { return filterUnsupportedChannels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeBoxPlot", function() { return normalizeBoxPlot; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../log */ "6ow0");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "jRJ8");







var BOXPLOT = 'box-plot';
function isBoxPlotDef(mark) {
    return !!mark['type'];
}
var BOXPLOT_STYLES = ['boxWhisker', 'box', 'boxMid'];
var VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX = {
    box: ['size', 'color', 'extent'],
    boxWhisker: ['color'],
    boxMid: ['color']
};
var supportedChannels = ['x', 'y', 'color', 'detail', 'opacity', 'size'];
function filterUnsupportedChannels(spec) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, spec, { encoding: Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["reduce"])(spec.encoding, function (newEncoding, fieldDef, channel) {
            if (supportedChannels.indexOf(channel) > -1) {
                newEncoding[channel] = fieldDef;
            }
            else {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].incompatibleChannel(channel, BOXPLOT));
            }
            return newEncoding;
        }, {}) });
}
function normalizeBoxPlot(spec, config) {
    var _a, _b, _c, _d;
    spec = filterUnsupportedChannels(spec);
    // TODO: use selection
    var mark = spec.mark, encoding = spec.encoding, selection = spec.selection, _p = spec.projection, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "encoding", "selection", "projection"]);
    var kIQRScalar = undefined;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(config.box.extent)) {
        kIQRScalar = config.box.extent;
    }
    if (isBoxPlotDef(mark)) {
        if (mark.extent) {
            if (mark.extent === 'min-max') {
                kIQRScalar = undefined;
            }
        }
    }
    var orient = boxOrient(spec);
    var _e = boxParams(spec, orient, kIQRScalar), transform = _e.transform, continuousAxisChannelDef = _e.continuousAxisChannelDef, continuousAxis = _e.continuousAxis, encodingWithoutContinuousAxis = _e.encodingWithoutContinuousAxis;
    var color = encodingWithoutContinuousAxis.color, size = encodingWithoutContinuousAxis.size, encodingWithoutSizeColorAndContinuousAxis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encodingWithoutContinuousAxis, ["color", "size"]);
    // Size encoding or the default config.box.size is applied to box and boxMid
    var sizeMixins = size ? { size: size } : Object(_common__WEBPACK_IMPORTED_MODULE_5__["getMarkSpecificConfigMixins"])(config.box, 'size');
    var continuousAxisScaleAndAxis = {};
    if (continuousAxisChannelDef.scale) {
        continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;
    }
    if (continuousAxisChannelDef.axis) {
        continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;
    }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, outerSpec, { transform: transform, layer: [
            {
                mark: {
                    type: 'rule',
                    style: 'boxWhisker'
                },
                encoding: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]((_a = {}, _a[continuousAxis] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ field: 'lower_whisker_' + continuousAxisChannelDef.field, type: continuousAxisChannelDef.type }, continuousAxisScaleAndAxis), _a[continuousAxis + '2'] = {
                    field: 'lower_box_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _a), encodingWithoutSizeColorAndContinuousAxis, Object(_common__WEBPACK_IMPORTED_MODULE_5__["getMarkSpecificConfigMixins"])(config.boxWhisker, 'color'))
            }, {
                mark: {
                    type: 'rule',
                    style: 'boxWhisker'
                },
                encoding: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]((_b = {}, _b[continuousAxis] = {
                    field: 'upper_box_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _b[continuousAxis + '2'] = {
                    field: 'upper_whisker_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _b), encodingWithoutSizeColorAndContinuousAxis, Object(_common__WEBPACK_IMPORTED_MODULE_5__["getMarkSpecificConfigMixins"])(config.boxWhisker, 'color'))
            },
            tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (selection ? { selection: selection } : {}), { mark: {
                    type: 'bar',
                    style: 'box'
                }, encoding: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]((_c = {}, _c[continuousAxis] = {
                    field: 'lower_box_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _c[continuousAxis + '2'] = {
                    field: 'upper_box_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _c), encodingWithoutContinuousAxis, (encodingWithoutContinuousAxis.color ? {} : Object(_common__WEBPACK_IMPORTED_MODULE_5__["getMarkSpecificConfigMixins"])(config.box, 'color')), sizeMixins) }),
            {
                mark: {
                    type: 'tick',
                    style: 'boxMid'
                },
                encoding: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]((_d = {}, _d[continuousAxis] = {
                    field: 'mid_box_' + continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                }, _d), encodingWithoutSizeColorAndContinuousAxis, Object(_common__WEBPACK_IMPORTED_MODULE_5__["getMarkSpecificConfigMixins"])(config.boxMid, 'color'), sizeMixins)
            }
        ] });
}
function boxOrient(spec) {
    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "encoding", "projection"]);
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding.x) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isContinuous"])(encoding.x)) {
        // x is continuous
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding.y) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isContinuous"])(encoding.y)) {
            // both x and y are continuous
            if (encoding.x.aggregate === undefined && encoding.y.aggregate === BOXPLOT) {
                return 'vertical';
            }
            else if (encoding.y.aggregate === undefined && encoding.x.aggregate === BOXPLOT) {
                return 'horizontal';
            }
            else if (encoding.x.aggregate === BOXPLOT && encoding.y.aggregate === BOXPLOT) {
                throw new Error('Both x and y cannot have aggregate');
            }
            else {
                if (isBoxPlotDef(mark) && mark.orient) {
                    return mark.orient;
                }
                // default orientation = vertical
                return 'vertical';
            }
        }
        // x is continuous but y is not
        return 'horizontal';
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding.y) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isContinuous"])(encoding.y)) {
        // y is continuous but x is not
        return 'vertical';
    }
    else {
        // Neither x nor y is continuous.
        throw new Error('Need a valid continuous axis for boxplots');
    }
}
function boxContinousAxis(spec, orient) {
    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "encoding", "projection"]);
    var continuousAxisChannelDef;
    var continuousAxis;
    if (orient === 'vertical') {
        continuousAxis = 'y';
        continuousAxisChannelDef = encoding.y; // Safe to cast because if y is not continuous fielddef, the orient would not be vertical.
    }
    else {
        continuousAxis = 'x';
        continuousAxisChannelDef = encoding.x; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.
    }
    if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {
        var aggregate = continuousAxisChannelDef.aggregate, continuousAxisWithoutAggregate = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](continuousAxisChannelDef, ["aggregate"]);
        if (aggregate !== BOXPLOT) {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"]("Continuous axis should not have customized aggregation function " + aggregate);
        }
        continuousAxisChannelDef = continuousAxisWithoutAggregate;
    }
    return {
        continuousAxisChannelDef: continuousAxisChannelDef,
        continuousAxis: continuousAxis
    };
}
function boxParams(spec, orient, kIQRScalar) {
    var _a = boxContinousAxis(spec, orient), continuousAxisChannelDef = _a.continuousAxisChannelDef, continuousAxis = _a.continuousAxis;
    var encoding = spec.encoding;
    var isMinMax = kIQRScalar === undefined;
    var aggregate = [
        {
            op: 'q1',
            field: continuousAxisChannelDef.field,
            as: 'lower_box_' + continuousAxisChannelDef.field
        },
        {
            op: 'q3',
            field: continuousAxisChannelDef.field,
            as: 'upper_box_' + continuousAxisChannelDef.field
        },
        {
            op: 'median',
            field: continuousAxisChannelDef.field,
            as: 'mid_box_' + continuousAxisChannelDef.field
        }
    ];
    var postAggregateCalculates = [];
    aggregate.push({
        op: 'min',
        field: continuousAxisChannelDef.field,
        as: (isMinMax ? 'lower_whisker_' : 'min_') + continuousAxisChannelDef.field
    });
    aggregate.push({
        op: 'max',
        field: continuousAxisChannelDef.field,
        as: (isMinMax ? 'upper_whisker_' : 'max_') + continuousAxisChannelDef.field
    });
    if (!isMinMax) {
        postAggregateCalculates = [
            {
                calculate: "datum.upper_box_" + continuousAxisChannelDef.field + " - datum.lower_box_" + continuousAxisChannelDef.field,
                as: 'iqr_' + continuousAxisChannelDef.field
            },
            {
                calculate: "min(datum.upper_box_" + continuousAxisChannelDef.field + " + datum.iqr_" + continuousAxisChannelDef.field + " * " + kIQRScalar + ", datum.max_" + continuousAxisChannelDef.field + ")",
                as: 'upper_whisker_' + continuousAxisChannelDef.field
            },
            {
                calculate: "max(datum.lower_box_" + continuousAxisChannelDef.field + " - datum.iqr_" + continuousAxisChannelDef.field + " * " + kIQRScalar + ", datum.min_" + continuousAxisChannelDef.field + ")",
                as: 'lower_whisker_' + continuousAxisChannelDef.field
            }
        ];
    }
    var groupby = [];
    var bins = [];
    var timeUnits = [];
    var encodingWithoutContinuousAxis = {};
    Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["forEach"])(encoding, function (channelDef, channel) {
        if (channel === continuousAxis) {
            // Skip continuous axis as we already handle it separately
            return;
        }
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef)) {
            if (channelDef.aggregate && channelDef.aggregate !== BOXPLOT) {
                aggregate.push({
                    op: channelDef.aggregate,
                    field: channelDef.field,
                    as: Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(channelDef)
                });
            }
            else if (channelDef.aggregate === undefined) {
                var transformedField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(channelDef);
                // Add bin or timeUnit transform if applicable
                var bin = channelDef.bin;
                if (bin) {
                    var field = channelDef.field;
                    bins.push({ bin: bin, field: field, as: transformedField });
                }
                else if (channelDef.timeUnit) {
                    var timeUnit = channelDef.timeUnit, field = channelDef.field;
                    timeUnits.push({ timeUnit: timeUnit, field: field, as: transformedField });
                }
                groupby.push(transformedField);
            }
            // now the field should refer to post-transformed field instead
            encodingWithoutContinuousAxis[channel] = {
                field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(channelDef),
                type: channelDef.type
            };
        }
        else {
            // For value def, just copy
            encodingWithoutContinuousAxis[channel] = encoding[channel];
        }
    });
    return {
        transform: [].concat(bins, timeUnits, [{ aggregate: aggregate, groupby: groupby }], postAggregateCalculates),
        continuousAxisChannelDef: continuousAxisChannelDef,
        continuousAxis: continuousAxis,
        encodingWithoutContinuousAxis: encodingWithoutContinuousAxis
    };
}
//# sourceMappingURL=boxplot.js.map

/***/ }),

/***/ "21jt":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/properties.js ***!
  \**********************************************************************/
/*! exports provided: parseScaleProperty, getDefaultValue, parseNonUnitScaleProperty, nice, padding, paddingInner, paddingOuter, reverse, zero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleProperty", function() { return parseScaleProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultValue", function() { return getDefaultValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseNonUnitScaleProperty", function() { return parseNonUnitScaleProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nice", function() { return nice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "padding", function() { return padding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paddingInner", function() { return paddingInner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paddingOuter", function() { return paddingOuter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./range */ "NEhT");








function parseScaleProperty(model, property) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model)) {
        parseUnitScaleProperty(model, property);
    }
    else {
        parseNonUnitScaleProperty(model, property);
    }
}
function parseUnitScaleProperty(model, property) {
    var localScaleComponents = model.component.scales;
    Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(localScaleComponents).forEach(function (channel) {
        var specifiedScale = model.specifiedScales[channel];
        var localScaleCmpt = localScaleComponents[channel];
        var mergedScaleCmpt = model.getScaleComponent(channel);
        var fieldDef = model.fieldDef(channel);
        var config = model.config;
        var specifiedValue = specifiedScale[property];
        var sType = mergedScaleCmpt.get('type');
        var supportedByScaleType = Object(_scale__WEBPACK_IMPORTED_MODULE_2__["scaleTypeSupportProperty"])(sType, property);
        var channelIncompatability = Object(_scale__WEBPACK_IMPORTED_MODULE_2__["channelScalePropertyIncompatability"])(channel, property);
        if (specifiedValue !== undefined) {
            // If there is a specified value, check if it is compatible with scale type and channel
            if (!supportedByScaleType) {
                _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].scalePropertyNotWorkWithScaleType(sType, property, channel));
            }
            else if (channelIncompatability) { // channel
                _log__WEBPACK_IMPORTED_MODULE_1__["warn"](channelIncompatability);
            }
        }
        if (supportedByScaleType && channelIncompatability === undefined) {
            if (specifiedValue !== undefined) {
                // copyKeyFromObject ensure type safety
                localScaleCmpt.copyKeyFromObject(property, specifiedScale);
            }
            else {
                var value = getDefaultValue(property, channel, fieldDef, mergedScaleCmpt.get('type'), mergedScaleCmpt.get('padding'), mergedScaleCmpt.get('paddingInner'), specifiedScale.domain, model.markDef, config);
                if (value !== undefined) {
                    localScaleCmpt.set(property, value, false);
                }
            }
        }
    });
}
// Note: This method is used in Voyager.
function getDefaultValue(property, channel, fieldDef, scaleType, scalePadding, scalePaddingInner, specifiedDomain, markDef, config) {
    var scaleConfig = config.scale;
    // If we have default rule-base, determine default value first
    switch (property) {
        case 'nice':
            return nice(scaleType, channel, fieldDef);
        case 'padding':
            return padding(channel, scaleType, scaleConfig, fieldDef, markDef, config.bar);
        case 'paddingInner':
            return paddingInner(scalePadding, channel, scaleConfig);
        case 'paddingOuter':
            return paddingOuter(scalePadding, channel, scaleType, scalePaddingInner, scaleConfig);
        case 'reverse':
            return reverse(scaleType, fieldDef.sort);
        case 'zero':
            return zero(channel, fieldDef, specifiedDomain, markDef);
    }
    // Otherwise, use scale config
    return scaleConfig[property];
}
function parseNonUnitScaleProperty(model, property) {
    var localScaleComponents = model.component.scales;
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        if (property === 'range') {
            Object(_range__WEBPACK_IMPORTED_MODULE_6__["parseScaleRange"])(child);
        }
        else {
            parseScaleProperty(child, property);
        }
    }
    Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(localScaleComponents).forEach(function (channel) {
        var valueWithExplicit;
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childComponent = child.component.scales[channel];
            if (childComponent) {
                var childValueWithExplicit = childComponent.getWithExplicit(property);
                valueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_5__["mergeValuesWithExplicit"])(valueWithExplicit, childValueWithExplicit, property, 'scale', Object(_split__WEBPACK_IMPORTED_MODULE_5__["tieBreakByComparing"])(function (v1, v2) {
                    switch (property) {
                        case 'range':
                            // For range step, prefer larger step
                            if (v1.step && v2.step) {
                                return v1.step - v2.step;
                            }
                            return 0;
                        // TODO: precedence rule for other properties
                    }
                    return 0;
                }));
            }
        }
        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);
    });
}
function nice(scaleType, channel, fieldDef) {
    if (fieldDef.bin || _util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_scale__WEBPACK_IMPORTED_MODULE_2__["ScaleType"].TIME, _scale__WEBPACK_IMPORTED_MODULE_2__["ScaleType"].UTC], scaleType)) {
        return undefined;
    }
    return _util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]], channel); // return true for quantitative X/Y unless binned
}
function padding(channel, scaleType, scaleConfig, fieldDef, markDef, barConfig) {
    if (_util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]], channel)) {
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_2__["isContinuousToContinuous"])(scaleType)) {
            if (scaleConfig.continuousPadding !== undefined) {
                return scaleConfig.continuousPadding;
            }
            var type = markDef.type, orient = markDef.orient;
            if (type === 'bar' && !fieldDef.bin) {
                if ((orient === 'vertical' && channel === 'x') ||
                    (orient === 'horizontal' && channel === 'y')) {
                    return barConfig.continuousBandSize;
                }
            }
        }
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_2__["ScaleType"].POINT) {
            return scaleConfig.pointPadding;
        }
    }
    return undefined;
}
function paddingInner(paddingValue, channel, scaleConfig) {
    if (paddingValue !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingInner.
        return undefined;
    }
    if (_util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.
        return scaleConfig.bandPaddingInner;
    }
    return undefined;
}
function paddingOuter(paddingValue, channel, scaleType, paddingInnerValue, scaleConfig) {
    if (paddingValue !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingOuter.
        return undefined;
    }
    if (_util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_2__["ScaleType"].BAND) {
            if (scaleConfig.bandPaddingOuter !== undefined) {
                return scaleConfig.bandPaddingOuter;
            }
            /* By default, paddingOuter is paddingInner / 2. The reason is that
                size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).
                and we want the width/height to be integer by default.
                Note that step (by default) and cardinality are integers.) */
            return paddingInnerValue / 2;
        }
    }
    return undefined;
}
function reverse(scaleType, sort) {
    if (Object(_scale__WEBPACK_IMPORTED_MODULE_2__["hasContinuousDomain"])(scaleType) && sort === 'descending') {
        // For continuous domain scales, Vega does not support domain sort.
        // Thus, we reverse range instead if sort is descending
        return true;
    }
    return undefined;
}
function zero(channel, fieldDef, specifiedScale, markDef) {
    // If users explicitly provide a domain range, we should not augment zero as that will be unexpected.
    var hasCustomDomain = !!specifiedScale && specifiedScale !== 'unaggregated';
    if (hasCustomDomain) {
        return false;
    }
    // If there is no custom domain, return true only for the following cases:
    // 1) using quantitative field with size
    // While this can be either ratio or interval fields, our assumption is that
    // ratio are more common.
    if (channel === 'size' && fieldDef.type === 'quantitative') {
        return true;
    }
    // 2) non-binned, quantitative x-scale or y-scale
    // (For binning, we should not include zero by default because binning are calculated without zero.)
    if (!fieldDef.bin && _util__WEBPACK_IMPORTED_MODULE_3__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]], channel)) {
        var orient = markDef.orient, type = markDef.type;
        if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["contains"])(['bar', 'area', 'line', 'trail'], type)) {
            if ((orient === 'horizontal' && channel === 'y') ||
                (orient === 'vertical' && channel === 'x')) {
                return false;
            }
        }
        return true;
    }
    return false;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "2JAl":
/*!************************************************!*\
  !*** ./node_modules/vega-geo/src/constants.js ***!
  \************************************************/
/*! exports provided: Feature, FeatureCollection, MultiPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Feature", function() { return Feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeatureCollection", function() { return FeatureCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiPoint", function() { return MultiPoint; });
var Feature = 'Feature';
var FeatureCollection = 'FeatureCollection';
var MultiPoint = 'MultiPoint';


/***/ }),

/***/ "2OXM":
/*!***************************************************!*\
  !*** ./node_modules/vega-util/src/stringValue.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return $; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "W2Gv");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject */ "zlEu");
/* harmony import */ var _isString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isString */ "MeId");




function $(x) {
  return Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["default"])(x) ? '[' + x.map($) + ']'
    : Object(_isObject__WEBPACK_IMPORTED_MODULE_1__["default"])(x) || Object(_isString__WEBPACK_IMPORTED_MODULE_2__["default"])(x) ?
      // Output valid JSON and JS source strings.
      // See http://timelessrepo.com/json-isnt-a-javascript-subset
      JSON.stringify(x).replace('\u2028','\\u2028').replace('\u2029', '\\u2029')
    : x;
}


/***/ }),

/***/ "2Qqt":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/parse.js ***!
  \******************************************************************/
/*! exports provided: parseLegend, parseLegendForChannel, mergeLegendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLegend", function() { return parseLegend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLegendForChannel", function() { return parseLegendForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeLegendComponent", function() { return mergeLegendComponent; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../legend */ "yuQx");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../resolve */ "aZSk");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component */ "ELKE");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./encode */ "GTsv");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./properties */ "rIyC");












function parseLegend(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model)) {
        model.component.legends = parseUnitLegend(model);
    }
    else {
        model.component.legends = parseNonUnitLegend(model);
    }
}
function parseUnitLegend(model) {
    var encoding = model.encoding;
    return [_channel__WEBPACK_IMPORTED_MODULE_0__["COLOR"], _channel__WEBPACK_IMPORTED_MODULE_0__["FILL"], _channel__WEBPACK_IMPORTED_MODULE_0__["STROKE"], _channel__WEBPACK_IMPORTED_MODULE_0__["SIZE"], _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"], _channel__WEBPACK_IMPORTED_MODULE_0__["OPACITY"]].reduce(function (legendComponent, channel) {
        var def = encoding[channel];
        if (model.legend(channel) && model.getScaleComponent(channel) && !(Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(def) && (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"] && def.type === _type__WEBPACK_IMPORTED_MODULE_3__["GEOJSON"]))) {
            legendComponent[channel] = parseLegendForChannel(model, channel);
        }
        return legendComponent;
    }, {});
}
function getLegendDefWithScale(model, channel) {
    var _a;
    // For binned field with continuous scale, use a special scale so we can overrride the mark props and labels
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_0__["COLOR"]:
            var scale = model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_0__["COLOR"]);
            return model.markDef.filled ? { fill: scale } : { stroke: scale };
        case _channel__WEBPACK_IMPORTED_MODULE_0__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_0__["STROKE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_0__["SIZE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_0__["OPACITY"]:
            return _a = {}, _a[channel] = model.scaleName(channel), _a;
    }
}
function parseLegendForChannel(model, channel) {
    var fieldDef = model.fieldDef(channel);
    var legend = model.legend(channel);
    var legendCmpt = new _component__WEBPACK_IMPORTED_MODULE_9__["LegendComponent"]({}, getLegendDefWithScale(model, channel));
    _legend__WEBPACK_IMPORTED_MODULE_2__["LEGEND_PROPERTIES"].forEach(function (property) {
        var value = getProperty(property, legend, channel, model);
        if (value !== undefined) {
            var explicit = 
            // specified legend.values is already respected, but may get transformed.
            property === 'values' ? !!legend.values :
                // title can be explicit if fieldDef.title is set
                property === 'title' && value === model.fieldDef(channel).title ? true :
                    // Otherwise, things are explicit if the returned value matches the specified property
                    value === legend[property];
            if (explicit || model.config.legend[property] === undefined) {
                legendCmpt.set(property, value, explicit);
            }
        }
    });
    // 2) Add mark property definition groups
    var legendEncoding = legend.encoding || {};
    var legendEncode = ['labels', 'legend', 'title', 'symbols', 'gradient'].reduce(function (e, part) {
        var legendEncodingPart = Object(_common__WEBPACK_IMPORTED_MODULE_5__["guideEncodeEntry"])(legendEncoding[part] || {}, model);
        var value = _encode__WEBPACK_IMPORTED_MODULE_10__[part] ?
            // TODO: replace legendCmpt with type is sufficient
            _encode__WEBPACK_IMPORTED_MODULE_10__[part](fieldDef, legendEncodingPart, model, channel, legendCmpt.get('type')) : // apply rule
            legendEncodingPart; // no rule -- just default values
        if (value !== undefined && Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(legendEncode).length > 0) {
        legendCmpt.set('encode', legendEncode, !!legend.encoding);
    }
    return legendCmpt;
}
function getProperty(property, specifiedLegend, channel, model) {
    var fieldDef = model.fieldDef(channel);
    switch (property) {
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            return Object(_common__WEBPACK_IMPORTED_MODULE_5__["numberFormat"])(fieldDef, specifiedLegend.format, model.config);
        case 'title':
            // For falsy value, keep undefined so we use default,
            // but use null for '', null, and false to hide the title
            var specifiedTitle = fieldDef.title !== undefined ? fieldDef.title :
                specifiedLegend.title || (specifiedLegend.title === undefined ? undefined : null);
            return Object(_common__WEBPACK_IMPORTED_MODULE_5__["getSpecifiedOrDefaultValue"])(specifiedTitle, Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["title"])(fieldDef, model.config)) || undefined; // make falsy value undefined so output Vega spec is shorter
        case 'values':
            return _properties__WEBPACK_IMPORTED_MODULE_11__["values"](specifiedLegend, fieldDef);
        case 'type':
            return Object(_common__WEBPACK_IMPORTED_MODULE_5__["getSpecifiedOrDefaultValue"])(specifiedLegend.type, _properties__WEBPACK_IMPORTED_MODULE_11__["type"](fieldDef.type, channel, model.getScaleComponent(channel).get('type')));
    }
    // Otherwise, return specified property.
    return specifiedLegend[property];
}
function parseNonUnitLegend(model) {
    var _a = model.component, legends = _a.legends, resolve = _a.resolve;
    var _loop_1 = function (child) {
        parseLegend(child);
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(child.component.legends).forEach(function (channel) {
            resolve.legend[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_7__["parseGuideResolve"])(model.component.resolve, channel);
            if (resolve.legend[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                legends[channel] = mergeLegendComponent(legends[channel], child.component.legends[channel]);
                if (!legends[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the legend shared.
                    // Thus, mark legend as independent and remove the legend component.
                    resolve.legend[channel] = 'independent';
                    delete legends[channel];
                }
            }
        });
    };
    for (var _i = 0, _b = model.children; _i < _b.length; _i++) {
        var child = _b[_i];
        _loop_1(child);
    }
    Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(legends).forEach(function (channel) {
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            if (!child.component.legends[channel]) {
                // skip if the child does not have a particular legend
                continue;
            }
            if (resolve.legend[channel] === 'shared') {
                // After merging shared legend, make sure to remove legend from child
                delete child.component.legends[channel];
            }
        }
    });
    return legends;
}
function mergeLegendComponent(mergedLegend, childLegend) {
    if (!mergedLegend) {
        return childLegend.clone();
    }
    var mergedOrient = mergedLegend.getWithExplicit('orient');
    var childOrient = childLegend.getWithExplicit('orient');
    if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
        // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
        // Cannot merge due to inconsistent orient
        return undefined;
    }
    var typeMerged = false;
    var _loop_2 = function (prop) {
        var mergedValueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_8__["mergeValuesWithExplicit"])(mergedLegend.getWithExplicit(prop), childLegend.getWithExplicit(prop), prop, 'legend', 
        // Tie breaker function
        function (v1, v2) {
            switch (prop) {
                case 'title':
                    return Object(_common__WEBPACK_IMPORTED_MODULE_5__["mergeTitleComponent"])(v1, v2);
                case 'type':
                    // There are only two types. If we have different types, then prefer symbol over gradient.
                    typeMerged = true;
                    return Object(_split__WEBPACK_IMPORTED_MODULE_8__["makeImplicit"])('symbol');
            }
            return Object(_split__WEBPACK_IMPORTED_MODULE_8__["defaultTieBreaker"])(v1, v2, prop, 'legend');
        });
        mergedLegend.setWithExplicit(prop, mergedValueWithExplicit);
    };
    // Otherwise, let's merge
    for (var _i = 0, VG_LEGEND_PROPERTIES_1 = _legend__WEBPACK_IMPORTED_MODULE_2__["VG_LEGEND_PROPERTIES"]; _i < VG_LEGEND_PROPERTIES_1.length; _i++) {
        var prop = VG_LEGEND_PROPERTIES_1[_i];
        _loop_2(prop);
    }
    if (typeMerged) {
        if (((mergedLegend.implicit || {}).encode || {}).gradient) {
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["deleteNestedProperty"])(mergedLegend.implicit, ['encode', 'gradient']);
        }
        if (((mergedLegend.explicit || {}).encode || {}).gradient) {
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["deleteNestedProperty"])(mergedLegend.explicit, ['encode', 'gradient']);
        }
    }
    return mergedLegend;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "2TC1":
/*!*************************************************!*\
  !*** ./node_modules/vega-runtime/src/update.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "cf9k");
/* harmony import */ var _parameters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parameters */ "q8Se");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Parse an event-driven operator update.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var srcid = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(srcid = spec.source) ? srcid.$ref : srcid,
      source = ctx.get(srcid),
      target = null,
      update = spec.update,
      params = undefined;

  if (!source) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Source not defined: ' + spec.source);

  if (spec.target && spec.target.$expr) {
    target = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["eventExpression"])(spec.target.$expr, ctx);
  } else {
    target = ctx.get(spec.target);
  }

  if (update && update.$expr) {
    if (update.$params) {
      params = Object(_parameters__WEBPACK_IMPORTED_MODULE_1__["default"])(update.$params, ctx);
    }
    update = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["handlerExpression"])(update.$expr, ctx);
  }

  ctx.update(spec, source, target, update, params);
});


/***/ }),

/***/ "2V8r":
/*!****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/signal-updates.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./update */ "8yVq");



/* harmony default export */ __webpack_exports__["default"] = (function(signal, scope) {
  var op = scope.getSignal(signal.name);

  if (signal.update) {
    var expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(signal.update, scope);
    op.update = expr.$expr;
    op.params = expr.$params;
  }

  if (signal.on) {
    signal.on.forEach(function(_) {
      Object(_update__WEBPACK_IMPORTED_MODULE_1__["default"])(_, scope, op.id);
    });
  }
});


/***/ }),

/***/ "2dk+":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/toNumber.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : +_;
});


/***/ }),

/***/ "2toQ":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/timeunit.js ***!
  \*******************************************************************/
/*! exports provided: TimeUnitNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeUnitNode", function() { return TimeUnitNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../timeunit */ "f7J+");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "LH2n");





var TimeUnitNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TimeUnitNode, _super);
    function TimeUnitNode(parent, formula) {
        var _this = _super.call(this, parent) || this;
        _this.formula = formula;
        return _this;
    }
    TimeUnitNode.prototype.clone = function () {
        return new TimeUnitNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.formula));
    };
    TimeUnitNode.makeFromEncoding = function (parent, model) {
        var formula = model.reduceFieldDef(function (timeUnitComponent, fieldDef) {
            if (fieldDef.timeUnit) {
                var f = Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef);
                timeUnitComponent[f] = {
                    as: f,
                    timeUnit: fieldDef.timeUnit,
                    field: fieldDef.field
                };
            }
            return timeUnitComponent;
        }, {});
        if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(formula).length === 0) {
            return null;
        }
        return new TimeUnitNode(parent, formula);
    };
    TimeUnitNode.makeFromTransform = function (parent, t) {
        var _a;
        return new TimeUnitNode(parent, (_a = {},
            _a[t.field] = {
                as: t.as,
                timeUnit: t.timeUnit,
                field: t.field
            },
            _a));
    };
    TimeUnitNode.prototype.merge = function (other) {
        this.formula = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.formula, other.formula);
        other.remove();
    };
    TimeUnitNode.prototype.producedFields = function () {
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.formula).forEach(function (f) {
            out[f.as] = true;
        });
        return out;
    };
    TimeUnitNode.prototype.dependentFields = function () {
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.formula).forEach(function (f) {
            out[f.field] = true;
        });
        return out;
    };
    TimeUnitNode.prototype.assemble = function () {
        return Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.formula).map(function (c) {
            return {
                type: 'formula',
                as: c.as,
                expr: Object(_timeunit__WEBPACK_IMPORTED_MODULE_2__["fieldExpr"])(c.timeUnit, c.field)
            };
        });
    };
    return TimeUnitNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"]));

//# sourceMappingURL=timeunit.js.map

/***/ }),

/***/ "2wP2":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/domain.js ***!
  \******************************************************************/
/*! exports provided: parseScaleDomain, parseDomainForChannel, domainSort, canUseUnaggregatedDomain, mergeDomains, getFieldFromDomain, assembleDomain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleDomain", function() { return parseScaleDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDomainForChannel", function() { return parseDomainForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domainSort", function() { return domainSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canUseUnaggregatedDomain", function() { return canUseUnaggregatedDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDomains", function() { return mergeDomains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFieldFromDomain", function() { return getFieldFromDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleDomain", function() { return assembleDomain; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../aggregate */ "OCqH");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bin */ "4qum");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/calculate */ "a40Z");
/* harmony import */ var _data_optimize__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../data/optimize */ "rSoo");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../selection/selection */ "3eK9");

















function parseScaleDomain(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_15__["isUnitModel"])(model)) {
        parseUnitScaleDomain(model);
    }
    else {
        parseNonUnitScaleDomain(model);
    }
}
function parseUnitScaleDomain(model) {
    var scales = model.specifiedScales;
    var localScaleComponents = model.component.scales;
    _util__WEBPACK_IMPORTED_MODULE_10__["keys"](localScaleComponents).forEach(function (channel) {
        var specifiedScale = scales[channel];
        var specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;
        var domains = parseDomainForChannel(model, channel);
        var localScaleCmpt = localScaleComponents[channel];
        localScaleCmpt.domains = domains;
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isSelectionDomain"])(specifiedDomain)) {
            // As scale parsing occurs before selection parsing, we use a temporary
            // signal here and append the scale.domain definition. This is replaced
            // with the correct domainRaw signal during scale assembly.
            // For more information, see isRawSelectionDomain in selection.ts.
            // FIXME: replace this with a special property in the scaleComponent
            localScaleCmpt.set('domainRaw', {
                signal: _selection_selection__WEBPACK_IMPORTED_MODULE_16__["SELECTION_DOMAIN"] + _util__WEBPACK_IMPORTED_MODULE_10__["hash"](specifiedDomain)
            }, true);
        }
        if (model.component.data.isFaceted) {
            // get resolve from closest facet parent as this decides whether we need to refer to cloned subtree or not
            var facetParent = model;
            while (!Object(_model__WEBPACK_IMPORTED_MODULE_15__["isFacetModel"])(facetParent) && facetParent.parent) {
                facetParent = facetParent.parent;
            }
            var resolve = facetParent.component.resolve.scale[channel];
            if (resolve === 'shared') {
                for (var _i = 0, domains_1 = domains; _i < domains_1.length; _i++) {
                    var domain = domains_1[_i];
                    // Replace the scale domain with data output from a cloned subtree after the facet.
                    if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
                        // use data from cloned subtree (which is the same as data but with a prefix added once)
                        domain.data = _data_optimize__WEBPACK_IMPORTED_MODULE_14__["FACET_SCALE_PREFIX"] + domain.data.replace(_data_optimize__WEBPACK_IMPORTED_MODULE_14__["FACET_SCALE_PREFIX"], '');
                    }
                }
            }
        }
    });
}
function parseNonUnitScaleDomain(model) {
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        parseScaleDomain(child);
    }
    var localScaleComponents = model.component.scales;
    _util__WEBPACK_IMPORTED_MODULE_10__["keys"](localScaleComponents).forEach(function (channel) {
        var domains;
        var domainRaw = null;
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childComponent = child.component.scales[channel];
            if (childComponent) {
                if (domains === undefined) {
                    domains = childComponent.domains;
                }
                else {
                    domains = domains.concat(childComponent.domains);
                }
                var dr = childComponent.get('domainRaw');
                if (domainRaw && dr && domainRaw.signal !== dr.signal) {
                    _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('The same selection must be used to override scale domains in a layered view.');
                }
                domainRaw = dr;
            }
        }
        localScaleComponents[channel].domains = domains;
        if (domainRaw) {
            localScaleComponents[channel].set('domainRaw', domainRaw, true);
        }
    });
}
/**
 * Remove unaggregated domain if it is not applicable
 * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.
 */
function normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {
    if (domain === 'unaggregated') {
        var _a = canUseUnaggregatedDomain(fieldDef, scaleType), valid = _a.valid, reason = _a.reason;
        if (!valid) {
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](reason);
            return undefined;
        }
    }
    else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {
        // Apply config if domain is not specified.
        var valid = canUseUnaggregatedDomain(fieldDef, scaleType).valid;
        if (valid) {
            return 'unaggregated';
        }
    }
    return domain;
}
function parseDomainForChannel(model, channel) {
    var scaleType = model.getScaleComponent(channel).get('type');
    var domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);
    if (domain !== model.scaleDomain(channel)) {
        model.specifiedScales[channel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, model.specifiedScales[channel], { domain: domain });
    }
    // If channel is either X or Y then union them with X2 & Y2 if they exist
    if (channel === 'x' && model.channelHasField('x2')) {
        if (model.channelHasField('x')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));
        }
        else {
            return parseSingleChannelDomain(scaleType, domain, model, 'x2');
        }
    }
    else if (channel === 'y' && model.channelHasField('y2')) {
        if (model.channelHasField('y')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));
        }
        else {
            return parseSingleChannelDomain(scaleType, domain, model, 'y2');
        }
    }
    return parseSingleChannelDomain(scaleType, domain, model, channel);
}
function mapDomainToDataSignal(domain, type, timeUnit) {
    return domain.map(function (v) {
        var data = Object(_fielddef__WEBPACK_IMPORTED_MODULE_6__["valueExpr"])(v, { timeUnit: timeUnit, type: type });
        return { signal: "{data: " + data + "}" };
    });
}
function parseSingleChannelDomain(scaleType, domain, model, channel) {
    var fieldDef = model.fieldDef(channel);
    if (domain && domain !== 'unaggregated' && !Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isSelectionDomain"])(domain)) { // explicit value
        var type = fieldDef.type, timeUnit = fieldDef.timeUnit;
        if (type === 'temporal' || timeUnit) {
            return mapDomainToDataSignal(domain, type, timeUnit);
        }
        return [domain];
    }
    var stack = model.stack;
    if (stack && channel === stack.fieldChannel) {
        if (stack.offset === 'normalize') {
            return [[0, 1]];
        }
        var data = model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]);
        return [{
                data: data,
                field: model.vgField(channel, { suffix: 'start' })
            }, {
                data: data,
                field: model.vgField(channel, { suffix: 'end' })
            }];
    }
    var sort = Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isScaleChannel"])(channel) ? domainSort(model, channel, scaleType) : undefined;
    if (domain === 'unaggregated') {
        var data = model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]);
        var field = fieldDef.field;
        return [{
                data: data,
                field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_6__["vgField"])({ field: field, aggregate: 'min' })
            }, {
                data: data,
                field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_6__["vgField"])({ field: field, aggregate: 'max' })
            }];
    }
    else if (fieldDef.bin) { // bin
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isBinScale"])(scaleType)) {
            var signal = model.getName(Object(_bin__WEBPACK_IMPORTED_MODULE_3__["binToString"])(fieldDef.bin) + "_" + fieldDef.field + "_bins");
            return [{ signal: "sequence(" + signal + ".start, " + signal + ".stop + " + signal + ".step, " + signal + ".step)" }];
        }
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["hasDiscreteDomain"])(scaleType)) {
            // ordinal bin scale takes domain from bin_range, ordered by bin start
            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).
            return [{
                    // If sort by aggregation of a specified sort field, we need to use RAW table,
                    // so we can aggregate values for the scale independently from the main aggregation.
                    data: _util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](sort) ? model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]) : model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["RAW"]),
                    // Use range if we added it and the scale does not support computing a range as a signal.
                    field: model.vgField(channel, Object(_common__WEBPACK_IMPORTED_MODULE_12__["binRequiresRange"])(fieldDef, channel) ? { binSuffix: 'range' } : {}),
                    // we have to use a sort object if sort = true to make the sort correct by bin start
                    sort: sort === true || !Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortField"])(sort) ? {
                        field: model.vgField(channel, {}),
                        op: 'min' // min or max doesn't matter since we sort by the start of the bin range
                    } : sort
                }];
        }
        else { // continuous scales
            if (channel === 'x' || channel === 'y') {
                if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinParams"])(fieldDef.bin) && fieldDef.bin.extent) {
                    return [fieldDef.bin.extent];
                }
                // X/Y position have to include start and end for non-ordinal scale
                var data = model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]);
                return [{
                        data: data,
                        field: model.vgField(channel, {})
                    }, {
                        data: data,
                        field: model.vgField(channel, { binSuffix: 'end' })
                    }];
            }
            else {
                // TODO: use bin_mid
                return [{
                        data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]),
                        field: model.vgField(channel, {})
                    }];
            }
        }
    }
    else if (sort) {
        return [{
                // If sort by aggregation of a specified sort field, we need to use RAW table,
                // so we can aggregate values for the scale independently from the main aggregation.
                data: _util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](sort) ? model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]) : model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["RAW"]),
                field: model.vgField(channel),
                sort: sort
            }];
    }
    else {
        return [{
                data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_5__["MAIN"]),
                field: model.vgField(channel)
            }];
    }
}
function domainSort(model, channel, scaleType) {
    if (!Object(_scale__WEBPACK_IMPORTED_MODULE_8__["hasDiscreteDomain"])(scaleType)) {
        return undefined;
    }
    var fieldDef = model.fieldDef(channel);
    var sort = fieldDef.sort;
    // if the sort is specified with array, use the derived sort index field
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortArray"])(sort)) {
        return {
            op: 'min',
            field: Object(_data_calculate__WEBPACK_IMPORTED_MODULE_13__["sortArrayIndexField"])(fieldDef, channel),
            order: 'ascending'
        };
    }
    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortField"])(sort)) {
        // flatten nested fields
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, sort, (sort.field ? { field: _util__WEBPACK_IMPORTED_MODULE_10__["replacePathInField"](sort.field) } : {}));
    }
    if (sort === 'descending') {
        return {
            op: 'min',
            field: model.vgField(channel),
            order: 'descending'
        };
    }
    if (_util__WEBPACK_IMPORTED_MODULE_10__["contains"](['ascending', undefined /* default =ascending*/], sort)) {
        return true;
    }
    // sort == null
    return undefined;
}
/**
 * Determine if a scale can use unaggregated domain.
 * @return {Boolean} Returns true if all of the following conditons applies:
 * 1. `scale.domain` is `unaggregated`
 * 2. Aggregation function is not `count` or `sum`
 * 3. The scale is quantitative or time scale.
 */
function canUseUnaggregatedDomain(fieldDef, scaleType) {
    if (!fieldDef.aggregate) {
        return {
            valid: false,
            reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregateDomainHasNoEffectForRawField(fieldDef)
        };
    }
    if (!_aggregate__WEBPACK_IMPORTED_MODULE_2__["SHARED_DOMAIN_OP_INDEX"][fieldDef.aggregate]) {
        return {
            valid: false,
            reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)
        };
    }
    if (fieldDef.type === 'quantitative') {
        if (scaleType === 'log') {
            return {
                valid: false,
                reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregatedDomainWithLogScale(fieldDef)
            };
        }
    }
    return { valid: true };
}
/**
 * Converts an array of domains to a single Vega scale domain.
 */
function mergeDomains(domains) {
    var uniqueDomains = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains.map(function (domain) {
        // ignore sort property when computing the unique domains
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
            var _s = domain.sort, domainWithoutSort = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](domain, ["sort"]);
            return domainWithoutSort;
        }
        return domain;
    }), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    var sorts = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains.map(function (d) {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(d)) {
            var s = d.sort;
            if (s !== undefined && !_util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](s)) {
                if (s.op === 'count') {
                    // let's make sure that if op is count, we don't use a field
                    delete s.field;
                }
                if (s.order === 'ascending') {
                    // drop order: ascending as it is the default
                    delete s.order;
                }
            }
            return s;
        }
        return undefined;
    }).filter(function (s) { return s !== undefined; }), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    if (uniqueDomains.length === 1) {
        var domain = domains[0];
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain) && sorts.length > 0) {
            var sort_1 = sorts[0];
            if (sorts.length > 1) {
                _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].MORE_THAN_ONE_SORT);
                sort_1 = true;
            }
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, domain, { sort: sort_1 });
        }
        return domain;
    }
    // only keep simple sort properties that work with unioned domains
    var simpleSorts = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](sorts.map(function (s) {
        if (s === true) {
            return s;
        }
        if (s.op === 'count') {
            return s;
        }
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].domainSortDropped(s));
        return true;
    }), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    var sort = undefined;
    if (simpleSorts.length === 1) {
        sort = simpleSorts[0];
    }
    else if (simpleSorts.length > 1) {
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].MORE_THAN_ONE_SORT);
        sort = true;
    }
    var allData = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains.map(function (d) {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(d)) {
            return d.data;
        }
        return null;
    }), function (x) { return x; });
    if (allData.length === 1 && allData[0] !== null) {
        // create a union domain of different fields with a single data source
        var domain = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ data: allData[0], fields: uniqueDomains.map(function (d) { return d.field; }) }, (sort ? { sort: sort } : {}));
        return domain;
    }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ fields: uniqueDomains }, (sort ? { sort: sort } : {}));
}
/**
 * Return a field if a scale single field.
 * Return `undefined` otherwise.
 *
 */
function getFieldFromDomain(domain) {
    if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(domain.field)) {
        return domain.field;
    }
    else if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefUnionedDomain"])(domain)) {
        var field = void 0;
        for (var _i = 0, _a = domain.fields; _i < _a.length; _i++) {
            var nonUnionDomain = _a[_i];
            if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(nonUnionDomain) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(nonUnionDomain.field)) {
                if (!field) {
                    field = nonUnionDomain.field;
                }
                else if (field !== nonUnionDomain.field) {
                    _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect.');
                    return field;
                }
            }
        }
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect.');
        return field;
    }
    else if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isFieldRefUnionDomain"])(domain)) {
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.');
        var field = domain.fields[0];
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field) ? field : undefined;
    }
    return undefined;
}
function assembleDomain(model, channel) {
    var scaleComponent = model.component.scales[channel];
    var domains = scaleComponent.domains.map(function (domain) {
        // Correct references to data as the original domain's data was determined
        // in parseScale, which happens before parseData. Thus the original data
        // reference can be incorrect.
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
            domain.data = model.lookupDataSource(domain.data);
        }
        return domain;
    });
    // domains is an array that has to be merged into a single vega domain
    return mergeDomains(domains);
}
//# sourceMappingURL=domain.js.map

/***/ }),

/***/ "3/fx":
/*!**************************************************!*\
  !*** ./node_modules/vega-encode/src/DataJoin.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataJoin; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Joins a set of data elements against a set of visual items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): object} [params.item] - An item generator function.
 * @param {function(object): *} [params.key] - The key field associating data and visual items.
 */
function DataJoin(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(DataJoin, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

function defaultItemCreate() {
  return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({});
}

function isExit(t) {
  return t.exit;
}

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      item = _.item || defaultItemCreate,
      key = _.key || vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"],
      map = this.value;

  // prevent transient (e.g., hover) requests from
  // cascading across marks derived from marks
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(out.encode)) {
    out.encode = null;
  }

  if (map && (_.modified('key') || pulse.modified(key))) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('DataJoin does not support modified key function or fields.');
  }

  if (!map) {
    pulse = pulse.addAll();
    this.value = map = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])().test(isExit);
    map.lookup = function(t) { return map.get(key(t)); };
  }

  pulse.visit(pulse.ADD, function(t) {
    var k = key(t),
        x = map.get(k);

    if (x) {
      if (x.exit) {
        map.empty--;
        out.add.push(x);
      } else {
        out.mod.push(x);
      }
    } else {
      map.set(k, (x = item(t)));
      out.add.push(x);
    }

    x.datum = t;
    x.exit = false;
  });

  pulse.visit(pulse.MOD, function(t) {
    var k = key(t),
        x = map.get(k);

    if (x) {
      x.datum = t;
      out.mod.push(x);
    }
  });

  pulse.visit(pulse.REM, function(t) {
    var k = key(t),
        x = map.get(k);

    if (t === x.datum && !x.exit) {
      out.rem.push(x);
      x.exit = true;
      ++map.empty;
    }
  });

  if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');

  if (_.clean && map.empty > df.cleanThreshold) df.runAfter(map.clean);

  return out;
};


/***/ }),

/***/ "3J2f":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/rectangle.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "83xM");


function rectangleX(d) {
  return d.x;
}

function rectangleY(d) {
  return d.y;
}

function rectangleWidth(d) {
  return d.width;
}

function rectangleHeight(d) {
  return d.height;
}

function constant(_) {
  return function() { return _; };
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x = rectangleX,
      y = rectangleY,
      width = rectangleWidth,
      height = rectangleHeight,
      cornerRadius = constant(0),
      context = null;

  function rectangle(_, x0, y0) {
    var buffer,
        x1 = x0 != null ? x0 : +x.call(this, _),
        y1 = y0 != null ? y0 : +y.call(this, _),
        w  = +width.call(this, _),
        h  = +height.call(this, _),
        cr = +cornerRadius.call(this, _);

    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();

    if (cr <= 0) {
      context.rect(x1, y1, w, h);
    } else {
      var x2 = x1 + w,
          y2 = y1 + h;
      context.moveTo(x1 + cr, y1);
      context.lineTo(x2 - cr, y1);
      context.quadraticCurveTo(x2, y1, x2, y1 + cr);
      context.lineTo(x2, y2 - cr);
      context.quadraticCurveTo(x2, y2, x2 - cr, y2);
      context.lineTo(x1 + cr, y2);
      context.quadraticCurveTo(x1, y2, x1, y2 - cr);
      context.lineTo(x1, y1 + cr);
      context.quadraticCurveTo(x1, y1, x1 + cr, y1);
      context.closePath();
    }

    if (buffer) {
      context = null;
      return buffer + '' || null;
    }
  }

  rectangle.x = function(_) {
    if (arguments.length) {
      x = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return x;
    }
  };

  rectangle.y = function(_) {
    if (arguments.length) {
      y = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return y;
    }
  };

  rectangle.width = function(_) {
    if (arguments.length) {
      width = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return width;
    }
  };

  rectangle.height = function(_) {
    if (arguments.length) {
      height = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return height;
    }
  };

  rectangle.cornerRadius = function(_) {
    if (arguments.length) {
      cornerRadius = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return cornerRadius;
    }
  };

  rectangle.context = function(_) {
    if (arguments.length) {
      context = _ == null ? null : _;
      return rectangle;
    } else {
      return context;
    }
  };

  return rectangle;
});


/***/ }),

/***/ "3LL3":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGRenderer.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "KHmK");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/index */ "Mi2v");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/tags */ "LBcO");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/text */ "/fEO");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/visit */ "TMLr");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/svg/clip */ "R+vW");
/* harmony import */ var _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/svg/metadata */ "PQn1");
/* harmony import */ var _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/svg/styles */ "4nT4");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "J29t");











var ns = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__["default"].xmlns;

function SVGRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);
  this._dirtyID = 1;
  this._dirty = [];
  this._svg = null;
  this._root = null;
  this._defs = null;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["inherits"])(SVGRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]);
var base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;

prototype.initialize = function(el, width, height, padding) {
  if (el) {
    this._svg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, 0, 'svg', ns);
    this._svg.setAttribute('class', 'marks');
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(el, 1);
    // set the svg root group
    this._root = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(this._svg, 0, 'g', ns);
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(this._svg, 1);
  }

  // create the svg definitions cache
  this._defs = {
    gradient: {},
    clipping: {}
  };

  // set background color if defined
  this.background(this._bgcolor);

  return base.initialize.call(this, el, width, height, padding);
};

prototype.background = function(bgcolor) {
  if (arguments.length && this._svg) {
    this._svg.style.setProperty('background-color', bgcolor);
  }
  return base.background.apply(this, arguments);
};

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);

  if (this._svg) {
    this._svg.setAttribute('width', this._width * this._scale);
    this._svg.setAttribute('height', this._height * this._scale);
    this._svg.setAttribute('viewBox', '0 0 ' + this._width + ' ' + this._height);
    this._root.setAttribute('transform', 'translate(' + this._origin + ')');
  }

  this._dirty = [];

  return this;
};

prototype.canvas = function() {
  return this._svg;
};

prototype.svg = function() {
  if (!this._svg) return null;

  var attr = {
    class:   'marks',
    width:   this._width * this._scale,
    height:  this._height * this._scale,
    viewBox: '0 0 ' + this._width + ' ' + this._height
  };
  for (var key in _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__["default"]) {
    attr[key] = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__["default"][key];
  }

  var bg = !this._bgcolor ? ''
    : (Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('rect', {
        width:  this._width,
        height: this._height,
        style:  'fill: ' + this._bgcolor + ';'
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('rect'));

  return Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('svg', attr) + bg + this._svg.innerHTML + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('svg');
};


// -- Render entry point --

prototype._render = function(scene) {
  // perform spot updates and re-render markup
  if (this._dirtyCheck()) {
    if (this._dirtyAll) this._resetDefs();
    this.draw(this._root, scene);
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(this._root, 1);
  }

  this.updateDefs();

  this._dirty = [];
  ++this._dirtyID;

  return this;
};

// -- Manage SVG definitions ('defs') block --

prototype.updateDefs = function() {
  var svg = this._svg,
      defs = this._defs,
      el = defs.el,
      index = 0, id;

  for (id in defs.gradient) {
    if (!el) defs.el = (el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(svg, 0, 'defs', ns));
    updateGradient(el, defs.gradient[id], index++);
  }

  for (id in defs.clipping) {
    if (!el) defs.el = (el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(svg, 0, 'defs', ns));
    updateClipping(el, defs.clipping[id], index++);
  }

  // clean-up
  if (el) {
    if (index === 0) {
      svg.removeChild(el);
      defs.el = null;
    } else {
      Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(el, index);
    }
  }
};

function updateGradient(el, grad, index) {
  var i, n, stop;

  el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, index, 'linearGradient', ns);
  el.setAttribute('id', grad.id);
  el.setAttribute('x1', grad.x1);
  el.setAttribute('x2', grad.x2);
  el.setAttribute('y1', grad.y1);
  el.setAttribute('y2', grad.y2);

  for (i=0, n=grad.stops.length; i<n; ++i) {
    stop = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, i, 'stop', ns);
    stop.setAttribute('offset', grad.stops[i].offset);
    stop.setAttribute('stop-color', grad.stops[i].color);
  }
  Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(el, i);
}

function updateClipping(el, clip, index) {
  var mask;

  el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, index, 'clipPath', ns);
  el.setAttribute('id', clip.id);

  if (clip.path) {
    mask = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, 0, 'path', ns);
    mask.setAttribute('d', clip.path);
  } else {
    mask = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domChild"])(el, 0, 'rect', ns);
    mask.setAttribute('x', 0);
    mask.setAttribute('y', 0);
    mask.setAttribute('width', clip.width);
    mask.setAttribute('height', clip.height);
  }
}

prototype._resetDefs = function() {
  var def = this._defs;
  def.gradient = {};
  def.clipping = {};
};


// -- Manage rendering of items marked as dirty --

prototype.dirty = function(item) {
  if (item.dirty !== this._dirtyID) {
    item.dirty = this._dirtyID;
    this._dirty.push(item);
  }
};

prototype.isDirty = function(item) {
  return this._dirtyAll
    || !item._svg
    || item.dirty === this._dirtyID;
};

prototype._dirtyCheck = function() {
  this._dirtyAll = true;
  var items = this._dirty;
  if (!items.length) return true;

  var id = ++this._dirtyID,
      item, mark, type, mdef, i, n, o;

  for (i=0, n=items.length; i<n; ++i) {
    item = items[i];
    mark = item.mark;

    if (mark.marktype !== type) {
      // memoize mark instance lookup
      type = mark.marktype;
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][type];
    }

    if (mark.zdirty && mark.dirty !== id) {
      this._dirtyAll = false;
      dirtyParents(item, id);
      mark.items.forEach(function(i) { i.dirty = id; });
    }
    if (mark.zdirty) continue; // handle in standard drawing pass

    if (item.exit) { // EXIT
      if (mdef.nested && mark.items.length) {
        // if nested mark with remaining points, update instead
        o = mark.items[0];
        if (o._svg) this._update(mdef, o._svg, o);
      } else if (item._svg) {
        // otherwise remove from DOM
        o = item._svg.parentNode;
        if (o) o.removeChild(item._svg);
      }
      item._svg = null;
      continue;
    }

    item = (mdef.nested ? mark.items[0] : item);
    if (item._update === id) continue; // already visited

    if (!item._svg || !item._svg.ownerSVGElement) {
      // ENTER
      this._dirtyAll = false;
      dirtyParents(item, id);
    } else {
      // IN-PLACE UPDATE
      this._update(mdef, item._svg, item);
    }
    item._update = id;
  }
  return !this._dirtyAll;
};

function dirtyParents(item, id) {
  for (; item && item.dirty !== id; item=item.mark.group) {
    item.dirty = id;
    if (item.mark && item.mark.dirty !== id) {
      item.mark.dirty = id;
    } else return;
  }
}


// -- Construct & maintain scenegraph to SVG mapping ---

// Draw a mark container.
prototype.draw = function(el, scene, prev) {
  if (!this.isDirty(scene)) return scene._svg;

  var renderer = this,
      svg = this._svg,
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][scene.marktype],
      events = scene.interactive === false ? 'none' : null,
      isGroup = mdef.tag === 'g',
      sibling = null,
      i = 0,
      parent;

  parent = bind(scene, el, prev, 'g', svg);
  parent.setAttribute('class', Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["cssClass"])(scene));
  if (!isGroup) {
    parent.style.setProperty('pointer-events', events);
  }
  if (scene.clip) {
    parent.setAttribute('clip-path', Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_6__["default"])(renderer, scene, scene.group));
  } else {
    parent.removeAttribute('clip-path');
  }

  function process(item) {
    var dirty = renderer.isDirty(item),
        node = bind(item, parent, sibling, mdef.tag, svg);

    if (dirty) {
      renderer._update(mdef, node, item);
      if (isGroup) recurse(renderer, node, item);
    }

    sibling = node;
    ++i;
  }

  if (mdef.nested) {
    if (scene.items.length) process(scene.items[0]);
  } else {
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_5__["visit"])(scene, process);
  }

  Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(parent, i);
  return parent;
};

// Recursively process group contents.
function recurse(renderer, el, group) {
  el = el.lastChild;
  var prev, idx = 0;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_5__["visit"])(group, function(item) {
    prev = renderer.draw(el, item, prev);
    ++idx;
  });

  // remove any extraneous DOM elements
  Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domClear"])(el, 1 + idx);
}

// Bind a scenegraph item to an SVG DOM element.
// Create new SVG elements as needed.
function bind(item, el, sibling, tag, svg) {
  var node = item._svg, doc;

  // create a new dom node if needed
  if (!node) {
    doc = el.ownerDocument;
    node = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domCreate"])(doc, tag, ns);
    item._svg = node;

    if (item.mark) {
      node.__data__ = item;
      node.__values__ = {fill: 'default'};

      // if group, create background and foreground elements
      if (tag === 'g') {
        var bg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domCreate"])(doc, 'path', ns);
        bg.setAttribute('class', 'background');
        node.appendChild(bg);
        bg.__data__ = item;

        var fg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["domCreate"])(doc, 'g', ns);
        node.appendChild(fg);
        fg.__data__ = item;
      }
    }
  }

  // (re-)insert if (a) not contained in SVG or (b) sibling order has changed
  if (node.ownerSVGElement !== svg || hasSiblings(item) && node.previousSibling !== sibling) {
    el.insertBefore(node, sibling ? sibling.nextSibling : el.firstChild);
  }

  return node;
}

function hasSiblings(item) {
  var parent = item.mark || item.group;
  return parent && parent.items.length > 1;
}


// -- Set attributes & styles on SVG elements ---

var element = null, // temp var for current SVG element
    values = null;  // temp var for current values hash

// Extra configuration for certain mark types
var mark_extras = {
  group: function(mdef, el, item) {
    values = el.__values__; // use parent's values hash

    element = el.childNodes[1];
    mdef.foreground(emit, item, this);

    element = el.childNodes[0];
    mdef.background(emit, item, this);

    var value = item.mark.interactive === false ? 'none' : null;
    if (value !== values.events) {
      element.style.setProperty('pointer-events', value);
      values.events = value;
    }
  },
  text: function(mdef, el, item) {
    var value;

    value = Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["textValue"])(item);
    if (value !== values.text) {
      el.textContent = value;
      values.text = value;
    }

    setStyle(el, 'font-family', Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["fontFamily"])(item));
    setStyle(el, 'font-size', Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["fontSize"])(item) + 'px');
    setStyle(el, 'font-style', item.fontStyle);
    setStyle(el, 'font-variant', item.fontVariant);
    setStyle(el, 'font-weight', item.fontWeight);
  }
};

function setStyle(el, name, value) {
  if (value !== values[name]) {
    if (value == null) {
      el.style.removeProperty(name);
    } else {
      el.style.setProperty(name, value + '');
    }
    values[name] = value;
  }
}

prototype._update = function(mdef, el, item) {
  // set dom element and values cache
  // provides access to emit method
  element = el;
  values = el.__values__;

  // apply svg attributes
  mdef.attr(emit, item, this);

  // some marks need special treatment
  var extra = mark_extras[mdef.type];
  if (extra) extra.call(this, mdef, el, item);

  // apply svg css styles
  // note: element may be modified by 'extra' method
  this.style(element, item);
};

function emit(name, value, ns) {
  // early exit if value is unchanged
  if (value === values[name]) return;

  if (value != null) {
    // if value is provided, update DOM attribute
    if (ns) {
      element.setAttributeNS(ns, name, value);
    } else {
      element.setAttribute(name, value);
    }
  } else {
    // else remove DOM attribute
    if (ns) {
      element.removeAttributeNS(ns, name);
    } else {
      element.removeAttribute(name);
    }
  }

  // note current value for future comparison
  values[name] = value;
}

prototype.style = function(el, o) {
  if (o == null) return;
  var i, n, prop, name, value;

  for (i=0, n=_util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styleProperties"].length; i<n; ++i) {
    prop = _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styleProperties"][i];
    value = o[prop];

    if (prop === 'font') {
      value = Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["fontFamily"])(o);
    }

    if (value === values[prop]) continue;

    name = _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styles"][prop];
    if (value == null) {
      if (name === 'fill') {
        el.style.setProperty(name, 'none');
      } else {
        el.style.removeProperty(name);
      }
    } else {
      if (value.id) {
        // ensure definition is included
        this._defs.gradient[value.id] = value;
        value = 'url(' + href() + '#' + value.id + ')';
      }
      el.style.setProperty(name, value + '');
    }

    values[prop] = value;
  }
};

function href() {
  var loc;
  return typeof window === 'undefined' ? ''
    : (loc = window.location).hash ? loc.href.slice(0, -loc.hash.length)
    : loc.href;
}


/***/ }),

/***/ "3TMy":
/*!**********************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/topojson.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json */ "mw3f");
/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! topojson-client */ "4BhY");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/* harmony default export */ __webpack_exports__["default"] = (function(data, format) {
  var method, object, property;
  data = Object(_json__WEBPACK_IMPORTED_MODULE_0__["default"])(data, format);

  method = (format && (property = format.feature)) ? topojson_client__WEBPACK_IMPORTED_MODULE_1__["feature"]
    : (format && (property = format.mesh)) ? topojson_client__WEBPACK_IMPORTED_MODULE_1__["mesh"]
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Missing TopoJSON feature or mesh parameter.');

  object = (object = data.objects[property])
    ? method(data, object)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid TopoJSON object: ' + property);

  return object && object.features || [object];
});


/***/ }),

/***/ "3dAl":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/error.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(message) {
  throw Error(message);
});


/***/ }),

/***/ "3eK9":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/selection.js ***!
  \*************************************************************************/
/*! exports provided: STORE, TUPLE, MODIFY, SELECTION_DOMAIN, parseUnitSelection, assembleUnitSelectionSignals, assembleTopLevelSignals, assembleUnitSelectionData, assembleUnitSelectionMarks, assembleLayerSelectionMarks, selectionPredicate, isRawSelectionDomain, selectionScaleDomain, unitName, requiresSelectionId, channelSignalName, positionalProjections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STORE", function() { return STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TUPLE", function() { return TUPLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MODIFY", function() { return MODIFY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTION_DOMAIN", function() { return SELECTION_DOMAIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitSelection", function() { return parseUnitSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionSignals", function() { return assembleUnitSelectionSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleTopLevelSignals", function() { return assembleTopLevelSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionData", function() { return assembleUnitSelectionData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionMarks", function() { return assembleUnitSelectionMarks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLayerSelectionMarks", function() { return assembleLayerSelectionMarks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionPredicate", function() { return selectionPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRawSelectionDomain", function() { return isRawSelectionDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionScaleDomain", function() { return selectionScaleDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unitName", function() { return unitName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requiresSelectionId", function() { return requiresSelectionId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelSignalName", function() { return channelSignalName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "positionalProjections", function() { return positionalProjections; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-event-selector */ "8Sdu");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../selection */ "kygm");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./interval */ "aHhC");
/* harmony import */ var _multi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./multi */ "P+cg");
/* harmony import */ var _single__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./single */ "aICm");
/* harmony import */ var _transforms_transforms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transforms/transforms */ "+yzT");












var STORE = '_store';
var TUPLE = '_tuple';
var MODIFY = '_modify';
var SELECTION_DOMAIN = '_selection_domain_';
function parseUnitSelection(model, selDefs) {
    var selCmpts = {};
    var selectionConfig = model.config.selection;
    var _loop_1 = function (name_1) {
        if (!selDefs.hasOwnProperty(name_1)) {
            return "continue";
        }
        var selDef = selDefs[name_1];
        var cfg = selectionConfig[selDef.type];
        // Set default values from config if a property hasn't been specified,
        // or if it is true. E.g., "translate": true should use the default
        // event handlers for translate. However, true may be a valid value for
        // a property (e.g., "nearest": true).
        for (var key in cfg) {
            // A selection should contain either `encodings` or `fields`, only use
            // default values for these two values if neither of them is specified.
            if ((key === 'encodings' && selDef.fields) || (key === 'fields' && selDef.encodings)) {
                continue;
            }
            if (key === 'mark') {
                selDef[key] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, cfg[key], selDef[key]);
            }
            if (selDef[key] === undefined || selDef[key] === true) {
                selDef[key] = cfg[key] || selDef[key];
            }
        }
        name_1 = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(name_1);
        var selCmpt = selCmpts[name_1] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, selDef, { name: name_1, events: Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(selDef.on) ? Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_1__["selector"])(selDef.on, 'scope') : selDef.on });
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_11__["forEachTransform"])(selCmpt, function (txCompiler) {
            if (txCompiler.parse) {
                txCompiler.parse(model, selDef, selCmpt);
            }
        });
    };
    for (var name_1 in selDefs) {
        _loop_1(name_1);
    }
    return selCmpts;
}
function assembleUnitSelectionSignals(model, signals) {
    forEachSelection(model, function (selCmpt, selCompiler) {
        var name = selCmpt.name;
        var modifyExpr = selCompiler.modifyExpr(model, selCmpt);
        signals.push.apply(signals, selCompiler.signals(model, selCmpt));
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_11__["forEachTransform"])(selCmpt, function (txCompiler) {
            if (txCompiler.signals) {
                signals = txCompiler.signals(model, selCmpt, signals);
            }
            if (txCompiler.modifyExpr) {
                modifyExpr = txCompiler.modifyExpr(model, selCmpt, modifyExpr);
            }
        });
        signals.push({
            name: name + MODIFY,
            on: [{
                    events: { signal: name + TUPLE },
                    update: "modify(" + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selCmpt.name + STORE) + ", " + modifyExpr + ")"
                }]
        });
    });
    var facetModel = getFacetModel(model);
    if (signals.length && facetModel) {
        var name_2 = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(facetModel.getName('cell'));
        signals.unshift({
            name: 'facet',
            value: {},
            on: [{
                    events: Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_1__["selector"])('mousemove', 'scope'),
                    update: "isTuple(facet) ? facet : group(" + name_2 + ").datum"
                }]
        });
    }
    return signals;
}
function assembleTopLevelSignals(model, signals) {
    var needsUnit = false;
    forEachSelection(model, function (selCmpt, selCompiler) {
        if (selCompiler.topLevelSignals) {
            signals = selCompiler.topLevelSignals(model, selCmpt, signals);
        }
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_11__["forEachTransform"])(selCmpt, function (txCompiler) {
            if (txCompiler.topLevelSignals) {
                signals = txCompiler.topLevelSignals(model, selCmpt, signals);
            }
        });
        needsUnit = true;
    });
    if (needsUnit) {
        var hasUnit = signals.filter(function (s) { return s.name === 'unit'; });
        if (!(hasUnit.length)) {
            signals.unshift({
                name: 'unit',
                value: {},
                on: [{ events: 'mousemove', update: 'isTuple(group()) ? group() : unit' }]
            });
        }
    }
    return signals;
}
function assembleUnitSelectionData(model, data) {
    forEachSelection(model, function (selCmpt) {
        var contains = data.filter(function (d) { return d.name === selCmpt.name + STORE; });
        if (!contains.length) {
            data.push({ name: selCmpt.name + STORE });
        }
    });
    return data;
}
function assembleUnitSelectionMarks(model, marks) {
    forEachSelection(model, function (selCmpt, selCompiler) {
        marks = selCompiler.marks ? selCompiler.marks(model, selCmpt, marks) : marks;
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_11__["forEachTransform"])(selCmpt, function (txCompiler) {
            if (txCompiler.marks) {
                marks = txCompiler.marks(model, selCmpt, marks);
            }
        });
    });
    return marks;
}
function assembleLayerSelectionMarks(model, marks) {
    model.children.forEach(function (child) {
        if (Object(_model__WEBPACK_IMPORTED_MODULE_7__["isUnitModel"])(child)) {
            marks = assembleUnitSelectionMarks(child, marks);
        }
    });
    return marks;
}
function selectionPredicate(model, selections, dfnode) {
    var stores = [];
    function expr(name) {
        var vname = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(name);
        var selCmpt = model.getSelectionComponent(vname, name);
        var store = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(vname + STORE);
        if (selCmpt.timeUnit) {
            var child = dfnode || model.component.data.raw;
            var tunode = selCmpt.timeUnit.clone();
            if (child.parent) {
                tunode.insertAsParentOf(child);
            }
            else {
                child.parent = tunode;
            }
        }
        if (selCmpt.empty !== 'none') {
            stores.push(store);
        }
        return compiler(selCmpt.type).predicate + ("(" + store + ", datum") +
            (selCmpt.resolve === 'global' ? ')' : ", " + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selCmpt.resolve) + ")");
    }
    var predicateStr = Object(_util__WEBPACK_IMPORTED_MODULE_6__["logicalExpr"])(selections, expr);
    return (stores.length
        ? '!(' + stores.map(function (s) { return "length(data(" + s + "))"; }).join(' || ') + ') || '
        : '') + ("(" + predicateStr + ")");
}
// Selections are parsed _after_ scales. If a scale domain is set to
// use a selection, the SELECTION_DOMAIN constant is used as the
// domainRaw.signal during scale.parse and then replaced with the necessary
// selection expression function during scale.assemble. To not pollute the
// type signatures to account for this setup, the selection domain definition
// is coerced to a string and appended to SELECTION_DOMAIN.
function isRawSelectionDomain(domainRaw) {
    return domainRaw.signal.indexOf(SELECTION_DOMAIN) >= 0;
}
function selectionScaleDomain(model, domainRaw) {
    var selDomain = JSON.parse(domainRaw.signal.replace(SELECTION_DOMAIN, ''));
    var name = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(selDomain.selection);
    var selCmpt = model.component.selection && model.component.selection[name];
    if (selCmpt) {
        Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])('Use "bind": "scales" to setup a binding for scales and selections within the same view.');
    }
    else {
        selCmpt = model.getSelectionComponent(name, selDomain.selection);
        if (!selDomain.encoding && !selDomain.field) {
            selDomain.field = selCmpt.project[0].field;
            if (selCmpt.project.length > 1) {
                Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])('A "field" or "encoding" must be specified when using a selection as a scale domain. ' +
                    ("Using \"field\": " + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selDomain.field) + "."));
            }
        }
        return {
            signal: compiler(selCmpt.type).scaleDomain +
                ("(" + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(name + STORE) + ", " + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selDomain.encoding || null) + ", ") +
                Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selDomain.field || null) +
                (selCmpt.resolve === 'global' ? ')' : ", " + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(selCmpt.resolve) + ")")
        };
    }
    return { signal: 'null' };
}
// Utility functions
function forEachSelection(model, cb) {
    var selections = model.component.selection;
    for (var name_3 in selections) {
        if (selections.hasOwnProperty(name_3)) {
            var sel = selections[name_3];
            cb(sel, compiler(sel.type));
        }
    }
}
function compiler(type) {
    switch (type) {
        case 'single':
            return _single__WEBPACK_IMPORTED_MODULE_10__["default"];
        case 'multi':
            return _multi__WEBPACK_IMPORTED_MODULE_9__["default"];
        case 'interval':
            return _interval__WEBPACK_IMPORTED_MODULE_8__["default"];
    }
    return null;
}
function getFacetModel(model) {
    var parent = model.parent;
    while (parent) {
        if (Object(_model__WEBPACK_IMPORTED_MODULE_7__["isFacetModel"])(parent)) {
            break;
        }
        parent = parent.parent;
    }
    return parent;
}
function unitName(model) {
    var name = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(model.name);
    var facet = getFacetModel(model);
    if (facet) {
        name += (facet.facet.row ? " + '_' + (" + Object(_util__WEBPACK_IMPORTED_MODULE_6__["accessPathWithDatum"])(facet.vgField('row'), 'facet') + ")" : '')
            + (facet.facet.column ? " + '_' + (" + Object(_util__WEBPACK_IMPORTED_MODULE_6__["accessPathWithDatum"])(facet.vgField('column'), 'facet') + ")" : '');
    }
    return name;
}
function requiresSelectionId(model) {
    var identifier = false;
    forEachSelection(model, function (selCmpt) {
        identifier = identifier || selCmpt.project.some(function (proj) { return proj.field === _selection__WEBPACK_IMPORTED_MODULE_5__["SELECTION_ID"]; });
    });
    return identifier;
}
function channelSignalName(selCmpt, channel, range) {
    var sgNames = selCmpt._signalNames || (selCmpt._signalNames = {});
    if (sgNames[channel] && sgNames[channel][range]) {
        return sgNames[channel][range];
    }
    sgNames[channel] = sgNames[channel] || {};
    var basename = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(selCmpt.name + '_' + (range === 'visual' ? channel : selCmpt.fields[channel]));
    var name = basename;
    var counter = 1;
    while (sgNames[name]) {
        name = basename + "_" + counter++;
    }
    return (sgNames[name] = sgNames[channel][range] = name);
}
function positionalProjections(selCmpt) {
    var x = null;
    var xi = null;
    var y = null;
    var yi = null;
    selCmpt.project.forEach(function (p, i) {
        if (p.channel === _channel__WEBPACK_IMPORTED_MODULE_3__["X"]) {
            x = p;
            xi = i;
        }
        else if (p.channel === _channel__WEBPACK_IMPORTED_MODULE_3__["Y"]) {
            y = p;
            yi = i;
        }
    });
    return { x: x, xi: xi, y: y, yi: yi };
}
//# sourceMappingURL=selection.js.map

/***/ }),

/***/ "3faL":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Nest.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Nest; });
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookup */ "F1Ya");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-collection */ "bwSX");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");






 /**
  * Nest tuples into a tree structure, grouped by key values.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.
  * @param {boolean} [params.generate=false] - A boolean flag indicating if
  *   non-leaf nodes generated by this transform should be included in the
  *   output. The default (false) includes only the input data (leaf nodes)
  *   in the data stream.
  */
function Nest(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Nest.Definition = {
  "type": "Nest",
  "metadata": {"treesource": true, "changes": true},
  "params": [
    { "name": "keys", "type": "field", "array": true },
    { "name": "generate", "type": "boolean" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Nest, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

function children(n) {
  return n.values;
}

prototype.transform = function(_, pulse) {
  if (!pulse.source) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Nest transform requires an upstream data source.');
  }

  var gen = _.generate,
      mod = _.modified(),
      out = pulse.clone(),
      tree = this.value;

  if (!tree || mod || pulse.changed()) {
    // collect nodes to remove
    if (tree) {
      tree.each(function(node) {
        if (node.children && Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["isTuple"])(node.data)) {
          out.rem.push(node.data);
        }
      });
    }

    // generate new tree structure
    this.value = tree = Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_4__["hierarchy"])({
      values: Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(_.keys)
                .reduce(function(n, k) { n.key(k); return n; }, Object(d3_collection__WEBPACK_IMPORTED_MODULE_3__["nest"])())
                .entries(out.source)
    }, children);

    // collect nodes to add
    if (gen) {
      tree.each(function(node) {
        if (node.children) {
          node = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(node.data);
          out.add.push(node);
          out.source.push(node);
        }
      });
    }

    // build lookup table
    Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(tree, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"], vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"]);
  }

  out.source.root = tree;
  return out;
};


/***/ }),

/***/ "3pby":
/*!********************************************!*\
  !*** ./node_modules/vega-util/src/peek.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array) {
  return array[array.length - 1];
});


/***/ }),

/***/ "3tdj":
/*!***********************************************************!*\
  !*** ./node_modules/vega-view/src/initialize-renderer.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "NNLh");


/* harmony default export */ __webpack_exports__["default"] = (function(view, r, el, constructor, scaleFactor) {
  r = r || new constructor(view.loader());
  return r
    .initialize(el, Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["width"])(view), Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["height"])(view), Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view), scaleFactor)
    .background(view._background);
});


/***/ }),

/***/ "41T5":
/*!**************************************************!*\
  !*** ./node_modules/vega-scale/src/scaleBand.js ***!
  \**************************************************/
/*! exports provided: band, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "band", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var _bandSpace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bandSpace */ "+JMV");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "vBe5");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-scale */ "ziQ1");




function band() {
  var scale = Object(d3_scale__WEBPACK_IMPORTED_MODULE_2__["scaleOrdinal"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse],
        space = Object(_bandSpace__WEBPACK_IMPORTED_MODULE_0__["default"])(n, paddingInner, paddingOuter);

    step = (stop - start) / (space || 1);
    if (round) {
      step = Math.floor(step);
    }
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) {
      start = Math.round(start);
      bandwidth = Math.round(bandwidth);
    }
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["range"])(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    if (arguments.length) {
      domain(_);
      return rescale();
    } else {
      return domain();
    }
  };

  scale.range = function(_) {
    if (arguments.length) {
      range = [+_[0], +_[1]];
      return rescale();
    } else {
      return range.slice();
    }
  };

  scale.rangeRound = function(_) {
    range = [+_[0], +_[1]];
    round = true;
    return rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    if (arguments.length) {
      round = !!_;
      return rescale();
    } else {
      return round;
    }
  };

  scale.padding = function(_) {
    if (arguments.length) {
      paddingOuter = Math.max(0, Math.min(1, _));
      paddingInner = paddingOuter;
      return rescale();
    } else {
      return paddingInner;
    }
  };

  scale.paddingInner = function(_) {
    if (arguments.length) {
      paddingInner = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return paddingInner;
    }
  };

  scale.paddingOuter = function(_) {
    if (arguments.length) {
      paddingOuter = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return paddingOuter;
    }
  };

  scale.align = function(_) {
    if (arguments.length) {
      align = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return align;
    }
  };

  scale.invertRange = function(_) {
    // bail if range has null or undefined values
    if (_[0] == null || _[1] == null) return;

    var lo = +_[0],
        hi = +_[1],
        reverse = range[1] < range[0],
        values = reverse ? ordinalRange().reverse() : ordinalRange(),
        n = values.length - 1, a, b, t;

    // bail if either range endpoint is invalid
    if (lo !== lo || hi !== hi) return;

    // order range inputs, bail if outside of scale range
    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }
    if (hi < values[0] || lo > range[1-reverse]) return;

    // binary search to index into scale range
    a = Math.max(0, Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(values, lo) - 1);
    b = lo===hi ? a : Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(values, hi) - 1;

    // increment index a if lo is within padding gap
    if (lo - values[a] > bandwidth + 1e-10) ++a;

    if (reverse) {
      // map + swap
      t = a;
      a = n - b;
      b = n - t;
    }
    return (a > b) ? undefined : domain().slice(a, b+1);
  };

  scale.invert = function(_) {
    var value = scale.invertRange([_, _]);
    return value ? value[0] : value;
  };

  scale.copy = function() {
    return band()
        .domain(domain())
        .range(range)
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return rescale();
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band().paddingInner(1));
}


/***/ }),

/***/ "49vs":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient-discrete.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "J29t");








/* harmony default export */ __webpack_exports__["default"] = (function(spec, scale, config, userEncode, dataRef) {
  var zero = {value: 0},
      vertical = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["isVertical"])(spec, config.gradientDirection),
      thickness = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["gradientThickness"])(spec, config),
      length = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["gradientLength"])(spec, config),
      encode, enter, u, v, uu, vv, adjust = '';

  vertical
    ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-')
    : (u = 'x', uu = 'x2', v = 'y', vv = 'height');

  enter = {
    opacity: zero,
    fill: {scale: scale, field: _constants__WEBPACK_IMPORTED_MODULE_0__["Value"]}
  };
  enter[u]  = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"], mult: length};
  enter[v]  = zero;
  enter[uu] = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc2"], mult: length};
  enter[vv] = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(thickness);

  encode = {
    enter: enter,
    update: Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, enter, {opacity: {value: 1}}),
    exit: {opacity: zero}
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'stroke',      Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gradientStrokeColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeWidth', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gradientStrokeWidth', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'opacity',     Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gradientOpacity', spec, config), 'update');

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RectMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendBandRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});


/***/ }),

/***/ "4BhY":
/*!***********************************************!*\
  !*** ./node_modules/topojson-client/index.js ***!
  \***********************************************/
/*! exports provided: bbox, feature, mesh, meshArcs, merge, mergeArcs, neighbors, quantize, transform, untransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bbox */ "quX3");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bbox", function() { return _src_bbox__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_feature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/feature */ "+xE1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return _src_feature__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_mesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/mesh */ "sYtO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mesh", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["meshArcs"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/merge */ "r/lw");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["mergeArcs"]; });

/* harmony import */ var _src_neighbors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/neighbors */ "LKYe");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neighbors", function() { return _src_neighbors__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_quantize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/quantize */ "oJLp");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _src_quantize__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/transform */ "f9Sr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_untransform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/untransform */ "/glu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "untransform", function() { return _src_untransform__WEBPACK_IMPORTED_MODULE_7__["default"]; });











/***/ }),

/***/ "4D59":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/fastmap.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var NULL = {};

/* harmony default export */ __webpack_exports__["default"] = (function(input) {
  var obj = {},
      map,
      test;

  function has(key) {
    return obj.hasOwnProperty(key) && obj[key] !== NULL;
  }

  map = {
    size: 0,
    empty: 0,
    object: obj,
    has: has,
    get: function(key) {
      return has(key) ? obj[key] : undefined;
    },
    set: function(key, value) {
      if (!has(key)) {
        ++map.size;
        if (obj[key] === NULL) --map.empty;
      }
      obj[key] = value;
      return this;
    },
    delete: function(key) {
      if (has(key)) {
        --map.size;
        ++map.empty;
        obj[key] = NULL;
      }
      return this;
    },
    clear: function() {
      map.size = map.empty = 0;
      map.object = obj = {};
    },
    test: function(_) {
      if (arguments.length) {
        test = _;
        return map;
      } else {
        return test;
      }
    },
    clean: function() {
      var next = {},
          size = 0,
          key, value;
      for (key in obj) {
        value = obj[key];
        if (value !== NULL && (!test || !test(value))) {
          next[key] = value;
          ++size;
        }
      }
      map.size = size;
      map.empty = 0;
      map.object = (obj = next);
    }
  };

  if (input) Object.keys(input).forEach(function(key) {
    map.set(key, input[key]);
  });

  return map;
});


/***/ }),

/***/ "4IJS":
/*!*************************************************!*\
  !*** ./node_modules/vega-statistics/src/kde.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normal */ "Z0rA");
/* harmony import */ var _quartiles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quartiles */ "dg/A");
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./random */ "yD9f");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "vBe5");





// TODO: support for additional kernels?
/* harmony default export */ __webpack_exports__["default"] = (function(support, bandwidth) {
  var kernel = Object(_normal__WEBPACK_IMPORTED_MODULE_0__["default"])(),
      dist = {},
      n = 0;

  dist.data = function(_) {
    if (arguments.length) {
      support = _;
      n = _ ? _.length : 0;
      return dist.bandwidth(bandwidth);
    } else {
      return support;
    }
  };

  dist.bandwidth = function(_) {
    if (!arguments.length) return bandwidth;
    bandwidth = _;
    if (!bandwidth && support) bandwidth = estimateBandwidth(support);
    return dist;
  };

  dist.sample = function() {
    return support[~~(Object(_random__WEBPACK_IMPORTED_MODULE_2__["random"])() * n)] + bandwidth * kernel.sample();
  };

  dist.pdf = function(x) {
    for (var y=0, i=0; i<n; ++i) {
      y += kernel.pdf((x - support[i]) / bandwidth);
    }
    return y / bandwidth / n;
  };

  dist.cdf = function(x) {
    for (var y=0, i=0; i<n; ++i) {
      y += kernel.cdf((x - support[i]) / bandwidth);
    }
    return y / n;
  };

  dist.icdf = function() {
    throw Error('KDE icdf not supported.');
  };

  return dist.data(support);
});

// Scott, D. W. (1992) Multivariate Density Estimation:
// Theory, Practice, and Visualization. Wiley.
function estimateBandwidth(array) {
  var n = array.length,
      q = Object(_quartiles__WEBPACK_IMPORTED_MODULE_1__["default"])(array),
      h = (q[2] - q[0]) / 1.34;
  return 1.06 * Math.min(Math.sqrt(Object(d3_array__WEBPACK_IMPORTED_MODULE_3__["variance"])(array)), h) * Math.pow(n, -0.2);
}


/***/ }),

/***/ "4Nvv":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGHandler.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGHandler; });
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "kAsH");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var _util_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/events */ "zP17");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





function SVGHandler(loader, tooltip) {
  _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader, tooltip);
  var h = this;
  h._hrefHandler = listener(h, function(evt, item) {
    if (item && item.href) h.handleHref(evt, item, item.href);
  });
  h._tooltipHandler = listener(h, function(evt, item) {
    h.handleTooltip(evt, item, evt.type !== _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]);
  });
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(SVGHandler, _Handler__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.initialize = function(el, origin, obj) {
  var svg = this._svg;
  if (svg) {
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"], this._hrefHandler);
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"], this._tooltipHandler);
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"], this._tooltipHandler);
  }
  this._svg = svg = el && Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__["domFind"])(el, 'svg');
  if (svg) {
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"], this._hrefHandler);
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"], this._tooltipHandler);
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"], this._tooltipHandler);
  }
  return _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.initialize.call(this, el, origin, obj);
};

prototype.canvas = function() {
  return this._svg;
};

// wrap an event listener for the SVG DOM
function listener(context, handler) {
  return function(evt) {
    var target = evt.target,
        item = target.__data__;
    evt.vegaType = evt.type;
    item = Array.isArray(item) ? item[0] : item;
    handler.call(context._obj, evt, item);
  };
}

// add an event handler
prototype.on = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers,
      i = this._handlerIndex(h[name], type, handler);

  if (i < 0) {
    var x = {
      type:     type,
      handler:  handler,
      listener: listener(this, handler)
    };

    (h[name] || (h[name] = [])).push(x);
    if (this._svg) {
      this._svg.addEventListener(name, x.listener);
    }
  }

  return this;
};

// remove an event handler
prototype.off = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers[name],
      i = this._handlerIndex(h, type, handler);

  if (i >= 0) {
    if (this._svg) {
      this._svg.removeEventListener(name, h[i].listener);
    }
    h.splice(i, 1);
  }

  return this;
};


/***/ }),

/***/ "4U4r":
/*!****************************************!*\
  !*** ./node_modules/vega-geo/index.js ***!
  \****************************************/
/*! exports provided: contour, geojson, geopath, geopoint, geoshape, graticule, projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Contour__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Contour */ "F8yd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contour", function() { return _src_Contour__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_GeoJSON__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/GeoJSON */ "yViF");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geojson", function() { return _src_GeoJSON__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_GeoPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/GeoPath */ "TtRW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geopath", function() { return _src_GeoPath__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_GeoPoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/GeoPoint */ "SRKn");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geopoint", function() { return _src_GeoPoint__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_GeoShape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/GeoShape */ "7pZ0");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoshape", function() { return _src_GeoShape__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Graticule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Graticule */ "1PG8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "graticule", function() { return _src_Graticule__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Projection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Projection */ "g3H7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return _src_Projection__WEBPACK_IMPORTED_MODULE_6__["default"]; });










/***/ }),

/***/ "4Usi":
/*!***************************************************!*\
  !*** ./node_modules/vega-canvas/index.browser.js ***!
  \***************************************************/
/*! exports provided: canvas, image */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/domCanvas */ "KSMD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canvas", function() { return _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__["domCanvas"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__["domImage"]; });




/***/ }),

/***/ "4ci8":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/point.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(event, el) {
  var rect = el.getBoundingClientRect();
  return [
    event.clientX - rect.left - (el.clientLeft || 0),
    event.clientY - rect.top - (el.clientTop || 0)
  ];
});


/***/ }),

/***/ "4nT4":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/styles.js ***!
  \*************************************************************/
/*! exports provided: styles, styleProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styles", function() { return styles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styleProperties", function() { return styleProperties; });
var styles = {
  'fill':             'fill',
  'fillOpacity':      'fill-opacity',
  'stroke':           'stroke',
  'strokeOpacity':    'stroke-opacity',
  'strokeWidth':      'stroke-width',
  'strokeCap':        'stroke-linecap',
  'strokeJoin':       'stroke-linejoin',
  'strokeDash':       'stroke-dasharray',
  'strokeDashOffset': 'stroke-dashoffset',
  'strokeMiterLimit': 'stroke-miterlimit',
  'opacity':          'opacity'
};

var styleProperties = Object.keys(styles);


/***/ }),

/***/ "4pH0":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Cross.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Cross; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Perform a cross-product of a tuple stream with itself.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object):boolean} [params.filter] - An optional filter
 *   function for selectively including tuples in the cross product.
 * @param {Array<string>} [params.as] - The names of the output fields.
 */
function Cross(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Cross.Definition = {
  "type": "Cross",
  "metadata": {"generates": true},
  "params": [
    { "name": "filter", "type": "expr" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["a", "b"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Cross, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      data = this.value,
      as = _.as || ['a', 'b'],
      a = as[0], b = as[1],
      reset = !data
          || pulse.changed(pulse.ADD_REM)
          || _.modified('as')
          || _.modified('filter');

  if (reset) {
    if (data) out.rem = data;
    data = pulse.materialize(pulse.SOURCE).source;
    out.add = this.value = cross(data, a, b, _.filter || vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]);
  } else {
    out.mod = data;
  }

  out.source = this.value;
  return out.modifies(as);
};

function cross(input, a, b, filter) {
  var data = [],
      t = {},
      n = input.length,
      i = 0,
      j, left;

  for (; i<n; ++i) {
    t[a] = left = input[i];
    for (j=0; j<n; ++j) {
      t[b] = input[j];
      if (filter(t)) {
        data.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
        t = {};
        t[a] = left;
      }
    }
  }

  return data;
}


/***/ }),

/***/ "4qum":
/*!*************************************************!*\
  !*** ./node_modules/vega-lite/build/src/bin.js ***!
  \*************************************************/
/*! exports provided: binToString, isBinParams, autoMaxBins */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binToString", function() { return binToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinParams", function() { return isBinParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autoMaxBins", function() { return autoMaxBins; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "Hc3/");



function binToString(bin) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(bin)) {
        return 'bin';
    }
    return 'bin' + Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(bin).map(function (p) { return Object(_util__WEBPACK_IMPORTED_MODULE_2__["varName"])("_" + p + "_" + bin[p]); }).join('');
}
function isBinParams(bin) {
    return bin && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(bin);
}
function autoMaxBins(channel) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_1__["ROW"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["COLUMN"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SIZE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["COLOR"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["STROKE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["OPACITY"]:
        // Facets and Size shouldn't have too many bins
        // We choose 6 like shape to simplify the rule
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]:
            return 6; // Vega's "shape" has 6 distinct values
        default:
            return 10;
    }
}
//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "4t7u":
/*!********************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-canvas.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "zugC");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");



/**
 * Produce a Canvas instance containing a rendered visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to a Canvas instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(scaleFactor) {
  return Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].Canvas, scaleFactor)
    .then(function(renderer) { return renderer.canvas(); });
});


/***/ }),

/***/ "50Px":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/scale.js ***!
  \***************************************************/
/*! exports provided: ScaleType, SCALE_TYPES, scaleCompatible, scaleTypePrecedence, CONTINUOUS_TO_CONTINUOUS_SCALES, CONTINUOUS_DOMAIN_SCALES, DISCRETE_DOMAIN_SCALES, TIME_SCALE_TYPES, hasDiscreteDomain, isBinScale, hasContinuousDomain, isContinuousToContinuous, defaultScaleConfig, isExtendedScheme, isSelectionDomain, SCALE_PROPERTIES, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES, SCALE_TYPE_INDEX, scaleTypeSupportProperty, channelScalePropertyIncompatability, scaleTypeSupportDataType, channelSupportScaleType, getSupportedScaleType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleType", function() { return ScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TYPES", function() { return SCALE_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleCompatible", function() { return scaleCompatible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypePrecedence", function() { return scaleTypePrecedence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTINUOUS_TO_CONTINUOUS_SCALES", function() { return CONTINUOUS_TO_CONTINUOUS_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTINUOUS_DOMAIN_SCALES", function() { return CONTINUOUS_DOMAIN_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DISCRETE_DOMAIN_SCALES", function() { return DISCRETE_DOMAIN_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIME_SCALE_TYPES", function() { return TIME_SCALE_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasDiscreteDomain", function() { return hasDiscreteDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinScale", function() { return isBinScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasContinuousDomain", function() { return hasContinuousDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuousToContinuous", function() { return isContinuousToContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultScaleConfig", function() { return defaultScaleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExtendedScheme", function() { return isExtendedScheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionDomain", function() { return isSelectionDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_PROPERTIES", function() { return SCALE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES", function() { return NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TYPE_INDEX", function() { return SCALE_TYPE_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeSupportProperty", function() { return scaleTypeSupportProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelScalePropertyIncompatability", function() { return channelScalePropertyIncompatability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeSupportDataType", function() { return scaleTypeSupportDataType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelSupportScaleType", function() { return channelSupportScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupportedScaleType", function() { return getSupportedScaleType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "Hc3/");






var ScaleType;
(function (ScaleType) {
    // Continuous - Quantitative
    ScaleType.LINEAR = 'linear';
    ScaleType.BIN_LINEAR = 'bin-linear';
    ScaleType.LOG = 'log';
    ScaleType.POW = 'pow';
    ScaleType.SQRT = 'sqrt';
    // Continuous - Time
    ScaleType.TIME = 'time';
    ScaleType.UTC = 'utc';
    // sequential
    ScaleType.SEQUENTIAL = 'sequential';
    // Quantile, Quantize, threshold
    ScaleType.QUANTILE = 'quantile';
    ScaleType.QUANTIZE = 'quantize';
    ScaleType.THRESHOLD = 'threshold';
    ScaleType.ORDINAL = 'ordinal';
    ScaleType.BIN_ORDINAL = 'bin-ordinal';
    ScaleType.POINT = 'point';
    ScaleType.BAND = 'band';
})(ScaleType || (ScaleType = {}));
/**
 * Index for scale categories -- only scale of the same categories can be merged together.
 * Current implementation is trying to be conservative and avoid merging scale type that might not work together
 */
var SCALE_CATEGORY_INDEX = {
    linear: 'numeric',
    log: 'numeric',
    pow: 'numeric',
    sqrt: 'numeric',
    'bin-linear': 'bin-linear',
    time: 'time',
    utc: 'time',
    sequential: 'sequential',
    ordinal: 'ordinal',
    'bin-ordinal': 'bin-ordinal',
    point: 'ordinal-position',
    band: 'ordinal-position'
};
var SCALE_TYPES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(SCALE_CATEGORY_INDEX);
/**
 * Whether the two given scale types can be merged together.
 */
function scaleCompatible(scaleType1, scaleType2) {
    var scaleCategory1 = SCALE_CATEGORY_INDEX[scaleType1];
    var scaleCategory2 = SCALE_CATEGORY_INDEX[scaleType2];
    return scaleCategory1 === scaleCategory2 ||
        (scaleCategory1 === 'ordinal-position' && scaleCategory2 === 'time') ||
        (scaleCategory2 === 'ordinal-position' && scaleCategory1 === 'time');
}
/**
 * Index for scale precedence -- high score = higher priority for merging.
 */
var SCALE_PRECEDENCE_INDEX = {
    // numeric
    linear: 0,
    log: 1,
    pow: 1,
    sqrt: 1,
    // time
    time: 0,
    utc: 0,
    // ordinal-position -- these have higher precedence than continuous scales as they support more types of data
    point: 10,
    band: 11,
    // non grouped types
    'bin-linear': 0,
    sequential: 0,
    ordinal: 0,
    'bin-ordinal': 0,
};
/**
 * Return scale categories -- only scale of the same categories can be merged together.
 */
function scaleTypePrecedence(scaleType) {
    return SCALE_PRECEDENCE_INDEX[scaleType];
}
var CONTINUOUS_TO_CONTINUOUS_SCALES = ['linear', 'bin-linear', 'log', 'pow', 'sqrt', 'time', 'utc'];
var CONTINUOUS_TO_CONTINUOUS_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(CONTINUOUS_TO_CONTINUOUS_SCALES);
var CONTINUOUS_DOMAIN_SCALES = CONTINUOUS_TO_CONTINUOUS_SCALES.concat(['sequential' /* TODO add 'quantile', 'quantize', 'threshold'*/]);
var CONTINUOUS_DOMAIN_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(CONTINUOUS_DOMAIN_SCALES);
var DISCRETE_DOMAIN_SCALES = ['ordinal', 'bin-ordinal', 'point', 'band'];
var DISCRETE_DOMAIN_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(DISCRETE_DOMAIN_SCALES);
var BIN_SCALES_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(['bin-linear', 'bin-ordinal']);
var TIME_SCALE_TYPES = ['time', 'utc'];
function hasDiscreteDomain(type) {
    return type in DISCRETE_DOMAIN_INDEX;
}
function isBinScale(type) {
    return type in BIN_SCALES_INDEX;
}
function hasContinuousDomain(type) {
    return type in CONTINUOUS_DOMAIN_INDEX;
}
function isContinuousToContinuous(type) {
    return type in CONTINUOUS_TO_CONTINUOUS_INDEX;
}
var defaultScaleConfig = {
    textXRangeStep: 90,
    rangeStep: 21,
    pointPadding: 0.5,
    bandPaddingInner: 0.1,
    facetSpacing: 16,
    minBandSize: 2,
    minFontSize: 8,
    maxFontSize: 40,
    minOpacity: 0.3,
    maxOpacity: 0.8,
    // FIXME: revise if these *can* become ratios of rangeStep
    minSize: 9,
    minStrokeWidth: 1,
    maxStrokeWidth: 4
};
function isExtendedScheme(scheme) {
    return scheme && !!scheme['name'];
}
function isSelectionDomain(domain) {
    return domain && domain['selection'];
}
var SCALE_PROPERTY_INDEX = {
    type: 1,
    domain: 1,
    range: 1,
    rangeStep: 1,
    scheme: 1,
    // Other properties
    reverse: 1,
    round: 1,
    // quantitative / time
    clamp: 1,
    nice: 1,
    // quantitative
    base: 1,
    exponent: 1,
    interpolate: 1,
    zero: 1,
    // band/point
    padding: 1,
    paddingInner: 1,
    paddingOuter: 1
};
var SCALE_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["flagKeys"])(SCALE_PROPERTY_INDEX);
var type = SCALE_PROPERTY_INDEX.type, domain = SCALE_PROPERTY_INDEX.domain, range = SCALE_PROPERTY_INDEX.range, rangeStep = SCALE_PROPERTY_INDEX.rangeStep, scheme = SCALE_PROPERTY_INDEX.scheme, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](SCALE_PROPERTY_INDEX, ["type", "domain", "range", "rangeStep", "scheme"]);
var NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["flagKeys"])(NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX);
var SCALE_TYPE_INDEX = generateScaleTypeIndex();
function scaleTypeSupportProperty(scaleType, propName) {
    switch (propName) {
        case 'type':
        case 'domain':
        case 'reverse':
        case 'range':
            return true;
        case 'scheme':
            return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['sequential', 'ordinal', 'bin-ordinal', 'quantile', 'quantize'], scaleType);
        case 'interpolate':
            // FIXME(https://github.com/vega/vega-lite/issues/2902) how about ordinal?
            return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['linear', 'bin-linear', 'pow', 'log', 'sqrt', 'utc', 'time'], scaleType);
        case 'round':
            return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';
        case 'padding':
            return isContinuousToContinuous(scaleType) || Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band'], scaleType);
        case 'paddingOuter':
        case 'rangeStep':
            return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band'], scaleType);
        case 'paddingInner':
            return scaleType === 'band';
        case 'clamp':
            return isContinuousToContinuous(scaleType) || scaleType === 'sequential';
        case 'nice':
            return isContinuousToContinuous(scaleType) || scaleType === 'sequential' || scaleType === 'quantize';
        case 'exponent':
            return scaleType === 'pow';
        case 'base':
            return scaleType === 'log';
        case 'zero':
            return hasContinuousDomain(scaleType) && !Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([
                'log',
                'time', 'utc',
                'bin-linear',
                'threshold',
                'quantile' // quantile depends on distribution so zero does not matter
            ], scaleType);
    }
    /* istanbul ignore next: should never reach here*/
    throw new Error("Invalid scale property " + propName + ".");
}
/**
 * Returns undefined if the input channel supports the input scale property name
 */
function channelScalePropertyIncompatability(channel, propName) {
    switch (propName) {
        case 'interpolate':
        case 'scheme':
            if (!Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isColorChannel"])(channel)) {
                return _log__WEBPACK_IMPORTED_MODULE_3__["message"].cannotUseScalePropertyWithNonColor(channel);
            }
            return undefined;
        case 'type':
        case 'domain':
        case 'range':
        case 'base':
        case 'exponent':
        case 'nice':
        case 'padding':
        case 'paddingInner':
        case 'paddingOuter':
        case 'rangeStep':
        case 'reverse':
        case 'round':
        case 'clamp':
        case 'zero':
            return undefined; // GOOD!
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error("Invalid scale property \"" + propName + "\".");
}
function scaleTypeSupportDataType(specifiedType, fieldDefType, bin) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([_type__WEBPACK_IMPORTED_MODULE_4__["Type"].ORDINAL, _type__WEBPACK_IMPORTED_MODULE_4__["Type"].NOMINAL], fieldDefType)) {
        return specifiedType === undefined || hasDiscreteDomain(specifiedType);
    }
    else if (fieldDefType === _type__WEBPACK_IMPORTED_MODULE_4__["Type"].TEMPORAL) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([ScaleType.TIME, ScaleType.UTC, ScaleType.SEQUENTIAL, undefined], specifiedType);
    }
    else if (fieldDefType === _type__WEBPACK_IMPORTED_MODULE_4__["Type"].QUANTITATIVE) {
        if (bin) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([ScaleType.BIN_LINEAR, ScaleType.BIN_ORDINAL, ScaleType.LINEAR], specifiedType);
        }
        return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([ScaleType.LOG, ScaleType.POW, ScaleType.SQRT, ScaleType.QUANTILE, ScaleType.QUANTIZE, ScaleType.LINEAR, ScaleType.SEQUENTIAL, undefined], specifiedType);
    }
    return true;
}
function channelSupportScaleType(channel, scaleType) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].X:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].Y:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].SIZE: // TODO: size and opacity can support ordinal with more modification
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].OPACITY:
            // Although it generally doesn't make sense to use band with size and opacity,
            // it can also work since we use band: 0.5 to get midpoint.
            return isContinuousToContinuous(scaleType) || Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['band', 'point'], scaleType);
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].COLOR:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].FILL:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].STROKE:
            return scaleType !== 'band'; // band does not make sense with color
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Channel"].SHAPE:
            return scaleType === 'ordinal'; // shape = lookup only
    }
    /* istanbul ignore next: it should never reach here */
    return false;
}
function getSupportedScaleType(channel, fieldDefType, bin) {
    return SCALE_TYPE_INDEX[generateScaleTypeIndexKey(channel, fieldDefType, bin)];
}
// generates ScaleTypeIndex where keys are encoding channels and values are list of valid ScaleTypes
function generateScaleTypeIndex() {
    var index = {};
    for (var _i = 0, CHANNELS_1 = _channel__WEBPACK_IMPORTED_MODULE_2__["CHANNELS"]; _i < CHANNELS_1.length; _i++) {
        var channel = CHANNELS_1[_i];
        for (var _a = 0, _b = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(_type__WEBPACK_IMPORTED_MODULE_4__["TYPE_INDEX"]); _a < _b.length; _a++) {
            var fieldDefType = _b[_a];
            for (var _c = 0, SCALE_TYPES_1 = SCALE_TYPES; _c < SCALE_TYPES_1.length; _c++) {
                var scaleType = SCALE_TYPES_1[_c];
                for (var _d = 0, _e = [false, true]; _d < _e.length; _d++) {
                    var bin = _e[_d];
                    var key = generateScaleTypeIndexKey(channel, fieldDefType, bin);
                    if (channelSupportScaleType(channel, scaleType) && scaleTypeSupportDataType(scaleType, fieldDefType, bin)) {
                        index[key] = index[key] || [];
                        index[key].push(scaleType);
                    }
                }
            }
        }
    }
    return index;
}
function generateScaleTypeIndexKey(channel, fieldDefType, bin) {
    var key = channel + '_' + fieldDefType;
    return bin ? key + '_bin' : key;
}
//# sourceMappingURL=scale.js.map

/***/ }),

/***/ "58wk":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/sort.js ***!
  \**************************************************/
/*! exports provided: isSortField, isSortArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortField", function() { return isSortField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortArray", function() { return isSortArray; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");

function isSortField(sort) {
    return !!sort && (sort['op'] === 'count' || !!sort['field']) && !!sort['op'];
}
function isSortArray(sort) {
    return !!sort && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort);
}
//# sourceMappingURL=sort.js.map

/***/ }),

/***/ "5CN0":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/formatparse.js ***!
  \**********************************************************************/
/*! exports provided: ParseNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseNode", function() { return ParseNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../aggregate */ "OCqH");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../datetime */ "QzCd");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../logical */ "s/HG");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../predicate */ "WSy+");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dataflow */ "LH2n");













/**
 * @param field The field.
 * @param parse What to parse the field as.
 */
function parseExpression(field, parse) {
    var f = Object(_util__WEBPACK_IMPORTED_MODULE_9__["accessPathWithDatum"])(field);
    if (parse === 'number') {
        return "toNumber(" + f + ")";
    }
    else if (parse === 'boolean') {
        return "toBoolean(" + f + ")";
    }
    else if (parse === 'string') {
        return "toString(" + f + ")";
    }
    else if (parse === 'date') {
        return "toDate(" + f + ")";
    }
    else if (parse === 'flatten') {
        return f;
    }
    else if (parse.indexOf('date:') === 0) {
        var specifier = parse.slice(5, parse.length);
        return "timeParse(" + f + "," + specifier + ")";
    }
    else if (parse.indexOf('utc:') === 0) {
        var specifier = parse.slice(4, parse.length);
        return "utcParse(" + f + "," + specifier + ")";
    }
    else {
        _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].unrecognizedParse(parse));
        return null;
    }
}
var ParseNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ParseNode, _super);
    function ParseNode(parent, parse) {
        var _this = _super.call(this, parent) || this;
        _this._parse = parse;
        return _this;
    }
    ParseNode.prototype.clone = function () {
        return new ParseNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_9__["duplicate"])(this._parse));
    };
    /**
     * Creates a parse node from a data.format.parse and updates ancestorParse.
     */
    ParseNode.makeExplicit = function (parent, model, ancestorParse) {
        // Custom parse
        var explicit = {};
        var data = model.data;
        if (data && data.format && data.format.parse) {
            explicit = data.format.parse;
        }
        return this.makeWithAncestors(parent, explicit, {}, ancestorParse);
    };
    ParseNode.makeImplicitFromFilterTransform = function (parent, transform, ancestorParse) {
        var parse = {};
        Object(_logical__WEBPACK_IMPORTED_MODULE_6__["forEachLeaf"])(transform.filter, function (filter) {
            if (Object(_predicate__WEBPACK_IMPORTED_MODULE_7__["isFieldPredicate"])(filter)) {
                // Automatically add a parse node for filters with filter objects
                var val = null;
                // For EqualFilter, just use the equal property.
                // For RangeFilter and OneOfFilter, all array members should have
                // the same type, so we only use the first one.
                if (Object(_predicate__WEBPACK_IMPORTED_MODULE_7__["isFieldEqualPredicate"])(filter)) {
                    val = filter.equal;
                }
                else if (Object(_predicate__WEBPACK_IMPORTED_MODULE_7__["isFieldRangePredicate"])(filter)) {
                    val = filter.range[0];
                }
                else if (Object(_predicate__WEBPACK_IMPORTED_MODULE_7__["isFieldOneOfPredicate"])(filter)) {
                    val = (filter.oneOf || filter['in'])[0];
                } // else -- for filter expression, we can't infer anything
                if (val) {
                    if (Object(_datetime__WEBPACK_IMPORTED_MODULE_3__["isDateTime"])(val)) {
                        parse[filter.field] = 'date';
                    }
                    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(val)) {
                        parse[filter.field] = 'number';
                    }
                    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(val)) {
                        parse[filter.field] = 'string';
                    }
                }
                if (filter.timeUnit) {
                    parse[filter.field] = 'date';
                }
            }
        });
        if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(parse).length === 0) {
            return null;
        }
        return this.makeWithAncestors(parent, {}, parse, ancestorParse);
    };
    /**
     * Creates a parse node for implicit parsing from a model and updates ancestorParse.
     */
    ParseNode.makeImplicitFromEncoding = function (parent, model, ancestorParse) {
        var implicit = {};
        if (Object(_model__WEBPACK_IMPORTED_MODULE_10__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_10__["isFacetModel"])(model)) {
            // Parse encoded fields
            model.forEachFieldDef(function (fieldDef) {
                if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isTimeFieldDef"])(fieldDef)) {
                    implicit[fieldDef.field] = 'date';
                }
                else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isNumberFieldDef"])(fieldDef)) {
                    if (!Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isCountingAggregateOp"])(fieldDef.aggregate)) {
                        implicit[fieldDef.field] = 'number';
                    }
                }
                else if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["accessPathDepth"])(fieldDef.field) > 1) {
                    // For non-date/non-number (strings and booleans), derive a flattened field for a referenced nested field.
                    // (Parsing numbers / dates already flattens numeric and temporal fields.)
                    if (!(fieldDef.field in implicit)) {
                        implicit[fieldDef.field] = 'flatten';
                    }
                }
                else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isScaleFieldDef"])(fieldDef) && Object(_sort__WEBPACK_IMPORTED_MODULE_8__["isSortField"])(fieldDef.sort) && Object(_util__WEBPACK_IMPORTED_MODULE_9__["accessPathDepth"])(fieldDef.sort.field) > 1) {
                    // Flatten fields that we sort by but that are not otherwise flattened.
                    if (!(fieldDef.sort.field in implicit)) {
                        implicit[fieldDef.sort.field] = 'flatten';
                    }
                }
            });
        }
        return this.makeWithAncestors(parent, {}, implicit, ancestorParse);
    };
    /**
     * Creates a parse node from "explicit" parse and "implicit" parse and updates ancestorParse.
     */
    ParseNode.makeWithAncestors = function (parent, explicit, implicit, ancestorParse) {
        // We should not parse what has already been parsed in a parent (explicitly or implicitly) or what has been derived (maked as "derived"). We also don't need to flatten a field that has already been parsed.
        for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(implicit); _i < _a.length; _i++) {
            var field = _a[_i];
            var parsedAs = ancestorParse.getWithExplicit(field);
            if (parsedAs.value !== undefined) {
                // We always ignore derived fields even if they are implicitly defined because we expect users to create the right types.
                if (parsedAs.explicit || parsedAs.value === implicit[field] || parsedAs.value === 'derived' || implicit[field] === 'flatten') {
                    delete implicit[field];
                }
                else {
                    _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].differentParse(field, implicit[field], parsedAs.value));
                }
            }
        }
        for (var _b = 0, _c = Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(explicit); _b < _c.length; _b++) {
            var field = _c[_b];
            var parsedAs = ancestorParse.get(field);
            if (parsedAs !== undefined) {
                // Don't parse a field again if it has been parsed with the same type already.
                if (parsedAs === explicit[field]) {
                    delete explicit[field];
                }
                else {
                    _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].differentParse(field, explicit[field], parsedAs));
                }
            }
        }
        var parse = new _split__WEBPACK_IMPORTED_MODULE_11__["Split"](explicit, implicit);
        // add the format parse from this model so that children don't parse the same field again
        ancestorParse.copyAll(parse);
        // copy only non-null parses
        var p = {};
        for (var _d = 0, _e = Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(parse.combine()); _d < _e.length; _d++) {
            var key = _e[_d];
            var val = parse.get(key);
            if (val !== null) {
                p[key] = val;
            }
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(p).length === 0 || ancestorParse.parseNothing) {
            return null;
        }
        return new ParseNode(parent, p);
    };
    Object.defineProperty(ParseNode.prototype, "parse", {
        get: function () {
            return this._parse;
        },
        enumerable: true,
        configurable: true
    });
    ParseNode.prototype.merge = function (other) {
        this._parse = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this._parse, other.parse);
        other.remove();
    };
    /**
     * Assemble an object for Vega's format.parse property.
     */
    ParseNode.prototype.assembleFormatParse = function () {
        var formatParse = {};
        for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(this._parse); _i < _a.length; _i++) {
            var field = _a[_i];
            var p = this._parse[field];
            if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["accessPathDepth"])(field) === 1) {
                formatParse[field] = p;
            }
        }
        return formatParse;
    };
    // format parse depends and produces all fields in its parse
    ParseNode.prototype.producedFields = function () {
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(this._parse));
    };
    ParseNode.prototype.dependentFields = function () {
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(this._parse));
    };
    ParseNode.prototype.assembleTransforms = function (onlyNested) {
        var _this = this;
        if (onlyNested === void 0) { onlyNested = false; }
        return Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(this._parse)
            .filter(function (field) { return onlyNested ? Object(_util__WEBPACK_IMPORTED_MODULE_9__["accessPathDepth"])(field) > 1 : true; })
            .map(function (field) {
            var expr = parseExpression(field, _this._parse[field]);
            if (!expr) {
                return null;
            }
            var formula = {
                type: 'formula',
                expr: expr,
                as: Object(_util__WEBPACK_IMPORTED_MODULE_9__["removePathFromField"])(field) // Vega output is always flattened
            };
            return formula;
        }).filter(function (t) { return t !== null; });
    };
    return ParseNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_12__["DataFlowNode"]));

//# sourceMappingURL=formatparse.js.map

/***/ }),

/***/ "5JQG":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Field.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Field; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Generates one or more field accessor functions.
 * If the 'name' parameter is an array, an array of field accessors
 * will be created and the 'as' parameter will be ignored.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.name - The field name(s) to access.
 * @param {string} params.as - The accessor function name.
 */
function Field(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Field, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified()) ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_.name) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_.name).map(function(f) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["field"])(f); })
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["field"])(_.name, _.as);
}


/***/ }),

/***/ "5VU1":
/*!*************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Tuple.js ***!
  \*************************************************/
/*! exports provided: reset, isTuple, tupleid, ingest, derive, rederive, replace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return isTuple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return tupleid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return ingest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derive", function() { return derive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rederive", function() { return rederive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return replace; });
var TUPLE_ID_KEY = Symbol('vega_id'),
    TUPLE_ID = 1;

/**
 * Resets the internal tuple id counter to one.
 */
function reset() {
  TUPLE_ID = 1;
}

/**
 * Checks if an input value is a registered tuple.
 * @param {*} t - The value to check.
 * @return {boolean} True if the input is a tuple, false otherwise.
 */
function isTuple(t) {
  return !!(t && tupleid(t));
}

/**
 * Returns the id of a tuple.
 * @param {object} t - The input tuple.
 * @return {*} the tuple id.
 */
function tupleid(t) {
  return t[TUPLE_ID_KEY];
}

/**
 * Sets the id of a tuple.
 * @param {object} t - The input tuple.
 * @param {*} id - The id value to set.
 * @return {object} the input tuple.
 */
function setid(t, id) {
  t[TUPLE_ID_KEY] = id;
  return t;
}

/**
 * Ingest an object or value as a data tuple.
 * If the input value is an object, an id field will be added to it. For
 * efficiency, the input object is modified directly. A copy is not made.
 * If the input value is a literal, it will be wrapped in a new object
 * instance, with the value accessible as the 'data' property.
 * @param datum - The value to ingest.
 * @return {object} The ingested data tuple.
 */
function ingest(datum) {
  var t = (datum === Object(datum)) ? datum : {data: datum};
  return tupleid(t) ? t : setid(t, TUPLE_ID++);
}

/**
 * Given a source tuple, return a derived copy.
 * @param {object} t - The source tuple.
 * @return {object} The derived tuple.
 */
function derive(t) {
  return rederive(t, ingest({}));
}

/**
 * Rederive a derived tuple by copying values from the source tuple.
 * @param {object} t - The source tuple.
 * @param {object} d - The derived tuple.
 * @return {object} The derived tuple.
 */
function rederive(t, d) {
  for (var k in t) d[k] = t[k];
  return d;
}

/**
 * Replace an existing tuple with a new tuple.
 * @param {object} t - The existing data tuple.
 * @param {object} d - The new tuple that replaces the old.
 * @return {object} The new tuple.
 */
function replace(t, d) {
  return setid(d, tupleid(t));
}


/***/ }),

/***/ "5g++":
/*!*****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/channel.js ***!
  \*****************************************************/
/*! exports provided: Channel, X, Y, X2, Y2, LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2, ROW, COLUMN, SHAPE, SIZE, COLOR, FILL, STROKE, TEXT, DETAIL, KEY, ORDER, OPACITY, TOOLTIP, HREF, GEOPOSITION_CHANNEL_INDEX, GEOPOSITION_CHANNELS, isColorChannel, CHANNELS, SINGLE_DEF_CHANNELS, isChannel, UNIT_CHANNELS, NONPOSITION_CHANNELS, POSITION_SCALE_CHANNELS, NONPOSITION_SCALE_CHANNELS, SCALE_CHANNELS, isScaleChannel, supportMark, getSupportedMark, rangeType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Channel", function() { return Channel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X2", function() { return X2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y2", function() { return Y2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LATITUDE", function() { return LATITUDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LATITUDE2", function() { return LATITUDE2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LONGITUDE", function() { return LONGITUDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LONGITUDE2", function() { return LONGITUDE2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROW", function() { return ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLUMN", function() { return COLUMN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHAPE", function() { return SHAPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SIZE", function() { return SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLOR", function() { return COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL", function() { return FILL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKE", function() { return STROKE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEXT", function() { return TEXT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DETAIL", function() { return DETAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY", function() { return KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ORDER", function() { return ORDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPACITY", function() { return OPACITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOOLTIP", function() { return TOOLTIP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HREF", function() { return HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOPOSITION_CHANNEL_INDEX", function() { return GEOPOSITION_CHANNEL_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOPOSITION_CHANNELS", function() { return GEOPOSITION_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isColorChannel", function() { return isColorChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHANNELS", function() { return CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SINGLE_DEF_CHANNELS", function() { return SINGLE_DEF_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChannel", function() { return isChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNIT_CHANNELS", function() { return UNIT_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NONPOSITION_CHANNELS", function() { return NONPOSITION_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POSITION_SCALE_CHANNELS", function() { return POSITION_SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NONPOSITION_SCALE_CHANNELS", function() { return NONPOSITION_SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_CHANNELS", function() { return SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScaleChannel", function() { return isScaleChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportMark", function() { return supportMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupportedMark", function() { return getSupportedMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeType", function() { return rangeType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");
/*
 * Constants and utilities for encoding channels (Visual variables)
 * such as 'x', 'y', 'color'.
 */


var Channel;
(function (Channel) {
    // Facet
    Channel.ROW = 'row';
    Channel.COLUMN = 'column';
    // Position
    Channel.X = 'x';
    Channel.Y = 'y';
    Channel.X2 = 'x2';
    Channel.Y2 = 'y2';
    // Geo Position
    Channel.LATITUDE = 'latitude';
    Channel.LONGITUDE = 'longitude';
    Channel.LATITUDE2 = 'latitude2';
    Channel.LONGITUDE2 = 'longitude2';
    // Mark property with scale
    Channel.COLOR = 'color';
    Channel.FILL = 'fill';
    Channel.STROKE = 'stroke';
    Channel.SHAPE = 'shape';
    Channel.SIZE = 'size';
    Channel.OPACITY = 'opacity';
    // Non-scale channel
    Channel.TEXT = 'text';
    Channel.ORDER = 'order';
    Channel.DETAIL = 'detail';
    Channel.KEY = 'key';
    Channel.TOOLTIP = 'tooltip';
    Channel.HREF = 'href';
})(Channel || (Channel = {}));
var X = Channel.X;
var Y = Channel.Y;
var X2 = Channel.X2;
var Y2 = Channel.Y2;
var LATITUDE = Channel.LATITUDE;
var LATITUDE2 = Channel.LATITUDE2;
var LONGITUDE = Channel.LONGITUDE;
var LONGITUDE2 = Channel.LONGITUDE2;
var ROW = Channel.ROW;
var COLUMN = Channel.COLUMN;
var SHAPE = Channel.SHAPE;
var SIZE = Channel.SIZE;
var COLOR = Channel.COLOR;
var FILL = Channel.FILL;
var STROKE = Channel.STROKE;
var TEXT = Channel.TEXT;
var DETAIL = Channel.DETAIL;
var KEY = Channel.KEY;
var ORDER = Channel.ORDER;
var OPACITY = Channel.OPACITY;
var TOOLTIP = Channel.TOOLTIP;
var HREF = Channel.HREF;
var GEOPOSITION_CHANNEL_INDEX = {
    longitude: 1,
    longitude2: 1,
    latitude: 1,
    latitude2: 1,
};
var GEOPOSITION_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(GEOPOSITION_CHANNEL_INDEX);
var UNIT_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ 
    // position
    x: 1, y: 1, x2: 1, y2: 1 }, GEOPOSITION_CHANNEL_INDEX, { 
    // color
    color: 1, fill: 1, stroke: 1, 
    // other non-position with scale
    opacity: 1, size: 1, shape: 1, 
    // channels without scales
    order: 1, text: 1, detail: 1, key: 1, tooltip: 1, href: 1 });
function isColorChannel(channel) {
    return channel === 'color' || channel === 'fill' || channel === 'stroke';
}
var FACET_CHANNEL_INDEX = {
    row: 1,
    column: 1
};
var CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, UNIT_CHANNEL_INDEX, FACET_CHANNEL_INDEX);
var CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(CHANNEL_INDEX);
var _o = CHANNEL_INDEX.order, _d = CHANNEL_INDEX.detail, SINGLE_DEF_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](CHANNEL_INDEX, ["order", "detail"]);
/**
 * Channels that cannot have an array of channelDef.
 * model.fieldDef, getFieldDef only work for these channels.
 *
 * (The only two channels that can have an array of channelDefs are "detail" and "order".
 * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef
 * are not applicable for them.  Similarly, selection projection won't work with "detail" and "order".)
 */
var SINGLE_DEF_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(SINGLE_DEF_CHANNEL_INDEX);
function isChannel(str) {
    return !!CHANNEL_INDEX[str];
}
// CHANNELS without COLUMN, ROW
var UNIT_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(UNIT_CHANNEL_INDEX);
// NONPOSITION_CHANNELS = UNIT_CHANNELS without X, Y, X2, Y2;
var _x = UNIT_CHANNEL_INDEX.x, _y = UNIT_CHANNEL_INDEX.y, 
// x2 and y2 share the same scale as x and y
_x2 = UNIT_CHANNEL_INDEX.x2, _y2 = UNIT_CHANNEL_INDEX.y2, _latitude = UNIT_CHANNEL_INDEX.latitude, _longitude = UNIT_CHANNEL_INDEX.longitude, _latitude2 = UNIT_CHANNEL_INDEX.latitude2, _longitude2 = UNIT_CHANNEL_INDEX.longitude2, 
// The rest of unit channels then have scale
NONPOSITION_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](UNIT_CHANNEL_INDEX, ["x", "y", "x2", "y2", "latitude", "longitude", "latitude2", "longitude2"]);
var NONPOSITION_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(NONPOSITION_CHANNEL_INDEX);
// POSITION_SCALE_CHANNELS = X and Y;
var POSITION_SCALE_CHANNEL_INDEX = { x: 1, y: 1 };
var POSITION_SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(POSITION_SCALE_CHANNEL_INDEX);
// NON_POSITION_SCALE_CHANNEL = SCALE_CHANNELS without X, Y
var 
// x2 and y2 share the same scale as x and y
// text and tooltip have format instead of scale,
// href has neither format, nor scale
_t = NONPOSITION_CHANNEL_INDEX.text, _tt = NONPOSITION_CHANNEL_INDEX.tooltip, _hr = NONPOSITION_CHANNEL_INDEX.href, 
// detail and order have no scale
_dd = NONPOSITION_CHANNEL_INDEX.detail, _k = NONPOSITION_CHANNEL_INDEX.key, _oo = NONPOSITION_CHANNEL_INDEX.order, NONPOSITION_SCALE_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](NONPOSITION_CHANNEL_INDEX, ["text", "tooltip", "href", "detail", "key", "order"]);
var NONPOSITION_SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(NONPOSITION_SCALE_CHANNEL_INDEX);
// Declare SCALE_CHANNEL_INDEX
var SCALE_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, POSITION_SCALE_CHANNEL_INDEX, NONPOSITION_SCALE_CHANNEL_INDEX);
/** List of channels with scales */
var SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(SCALE_CHANNEL_INDEX);
function isScaleChannel(channel) {
    return !!SCALE_CHANNEL_INDEX[channel];
}
/**
 * Return whether a channel supports a particular mark type.
 * @param channel  channel name
 * @param mark the mark type
 * @return whether the mark supports the channel
 */
function supportMark(channel, mark) {
    return mark in getSupportedMark(channel);
}
/**
 * Return a dictionary showing whether a channel supports mark type.
 * @param channel
 * @return A dictionary mapping mark types to boolean values.
 */
function getSupportedMark(channel) {
    switch (channel) {
        case COLOR:
        case FILL:
        case STROKE:
        case DETAIL:
        case KEY:
        case TOOLTIP:
        case HREF:
        case ORDER: // TODO: revise (order might not support rect, which is not stackable?)
        case OPACITY:
        case ROW:
        case COLUMN:
            return {
                point: true, tick: true, rule: true, circle: true, square: true,
                bar: true, rect: true, line: true, trail: true, area: true, text: true, geoshape: true
            };
        case X:
        case Y:
        case LATITUDE:
        case LONGITUDE:
            return {
                point: true, tick: true, rule: true, circle: true, square: true,
                bar: true, rect: true, line: true, trail: true, area: true, text: true
            };
        case X2:
        case Y2:
        case LATITUDE2:
        case LONGITUDE2:
            return {
                rule: true, bar: true, rect: true, area: true
            };
        case SIZE:
            return {
                point: true, tick: true, rule: true, circle: true, square: true,
                bar: true, text: true, line: true, trail: true
            };
        case SHAPE:
            return { point: true, geoshape: true };
        case TEXT:
            return { text: true };
    }
}
function rangeType(channel) {
    switch (channel) {
        case X:
        case Y:
        case SIZE:
        case OPACITY:
        // X2 and Y2 use X and Y scales, so they similarly have continuous range.
        case X2:
        case Y2:
            return 'continuous';
        case ROW:
        case COLUMN:
        case SHAPE:
        // TEXT, TOOLTIP, and HREF have no scale but have discrete output
        case TEXT:
        case TOOLTIP:
        case HREF:
            return 'discrete';
        // Color can be either continuous or discrete, depending on scale type.
        case COLOR:
        case FILL:
        case STROKE:
            return 'flexible';
        // No scale, no range type.
        case LATITUDE:
        case LONGITUDE:
        case LATITUDE2:
        case LONGITUDE2:
        case DETAIL:
        case KEY:
        case ORDER:
            return undefined;
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('rangeType not implemented for ' + channel);
}
//# sourceMappingURL=channel.js.map

/***/ }),

/***/ "5kG8":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Filter.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Filter; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Filters data tuples according to a predicate function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The predicate expression function
 *   that determines a tuple's filter status. Truthy values pass the filter.
 */
function Filter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])(), params);
}

Filter.Definition = {
  "type": "Filter",
  "metadata": {"changes": true},
  "params": [
    { "name": "expr", "type": "expr", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Filter, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      cache = this.value, // cache ids of filtered tuples
      output = pulse.fork(),
      add = output.add,
      rem = output.rem,
      mod = output.mod,
      test = _.expr,
      isMod = true;

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
    if (!cache.has(id)) rem.push(t);
    else cache.delete(id);
  });

  pulse.visit(pulse.ADD, function(t) {
    if (test(t, _)) add.push(t);
    else cache.set(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t), 1);
  });

  function revisit(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t),
        b = test(t, _),
        s = cache.get(id);
    if (b && s) {
      cache.delete(id);
      add.push(t);
    } else if (!b && !s) {
      cache.set(id, 1);
      rem.push(t);
    } else if (isMod && b && !s) {
      mod.push(t);
    }
  }

  pulse.visit(pulse.MOD, revisit);

  if (_.modified()) {
    isMod = false;
    pulse.visit(pulse.REFLOW, revisit);
  }

  if (cache.empty > df.cleanThreshold) df.runAfter(cache.clean);
  return output;
};


/***/ }),

/***/ "5vJq":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/clip.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(context, scene) {
  var clip = scene.clip;

  context.save();
  context.beginPath();

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(clip)) {
    clip(context);
  } else {
    var group = scene.group;
    context.rect(0, 0, group.width || 0, group.height || 0);
  }

  context.clip();
});


/***/ }),

/***/ "6GNL":
/*!*****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/position.js ***!
  \*****************************************************/
/*! exports provided: calculatePosition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculatePosition", function() { return calculatePosition; });
/**
 * Position the tooltip
 *
 * @param event The mouse event.
 * @param tooltipBox
 * @param offsetX Horizontal offset.
 * @param offsetY Vertical offset.
 */
function calculatePosition(event, tooltipBox, offsetX, offsetY) {
    var x = event.clientX + offsetX;
    if (x + tooltipBox.width > window.innerWidth) {
        x = +event.clientX - offsetX - tooltipBox.width;
    }
    var y = event.clientY + offsetY;
    if (y + tooltipBox.height > window.innerHeight) {
        y = +event.clientY - offsetY - tooltipBox.height;
    }
    return { x: x, y: y };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zaXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcG9zaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUNILE1BQU0sNEJBQ0osS0FBaUIsRUFDakIsVUFBNkMsRUFDN0MsT0FBZSxFQUNmLE9BQWU7SUFFZixJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUNoQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLEVBQUU7UUFDNUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztLQUNqRDtJQUVELElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ2hDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRTtRQUM5QyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0tBQ2xEO0lBRUQsT0FBTyxFQUFFLENBQUMsR0FBQSxFQUFFLENBQUMsR0FBQSxFQUFFLENBQUM7QUFDbEIsQ0FBQyJ9

/***/ }),

/***/ "6RUl":
/*!*********************************************!*\
  !*** ./node_modules/vega-dataflow/index.js ***!
  \*********************************************/
/*! exports provided: UniqueList, changeset, isChangeSet, Dataflow, EventStream, Parameters, Pulse, MultiPulse, Operator, Transform, derive, rederive, ingest, isTuple, replace, tupleid, definition, transform, transforms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/util/UniqueList */ "YCOJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UniqueList", function() { return _src_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_ChangeSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/ChangeSet */ "1h1d");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeset", function() { return _src_ChangeSet__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isChangeSet", function() { return _src_ChangeSet__WEBPACK_IMPORTED_MODULE_1__["isChangeSet"]; });

/* harmony import */ var _src_dataflow_Dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/dataflow/Dataflow */ "DLe+");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dataflow", function() { return _src_dataflow_Dataflow__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_EventStream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/EventStream */ "yiO1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventStream", function() { return _src_EventStream__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Parameters */ "wZ22");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parameters", function() { return _src_Parameters__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Pulse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Pulse */ "8gyZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pulse", function() { return _src_Pulse__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_MultiPulse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/MultiPulse */ "ilY1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiPulse", function() { return _src_MultiPulse__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_Operator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Operator */ "7/cf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operator", function() { return _src_Operator__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Transform__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Transform */ "+rUc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return _src_Transform__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_Tuple__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Tuple */ "5VU1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derive", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["derive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rederive", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["rederive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["ingest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["isTuple"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["replace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_9__["tupleid"]; });

/* harmony import */ var _src_register__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/register */ "1XMV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return _src_register__WEBPACK_IMPORTED_MODULE_10__["definition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _src_register__WEBPACK_IMPORTED_MODULE_10__["transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return _src_register__WEBPACK_IMPORTED_MODULE_10__["transforms"]; });

// Utilities


// Core Runtime










// Transform Registry



/***/ }),

/***/ "6Zp8":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scale/src/timeInterval.js ***!
  \*****************************************************/
/*! exports provided: timeInterval, utcInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcInterval", function() { return utcInterval; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "tgfz");


var time = {
  millisecond: d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMillisecond"],
  second:      d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSecond"],
  minute:      d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMinute"],
  hour:        d3_time__WEBPACK_IMPORTED_MODULE_0__["timeHour"],
  day:         d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"],
  week:        d3_time__WEBPACK_IMPORTED_MODULE_0__["timeWeek"],
  month:       d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonth"],
  year:        d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"]
};

var utc = {
  millisecond: d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMillisecond"],
  second:      d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSecond"],
  minute:      d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMinute"],
  hour:        d3_time__WEBPACK_IMPORTED_MODULE_0__["utcHour"],
  day:         d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"],
  week:        d3_time__WEBPACK_IMPORTED_MODULE_0__["utcWeek"],
  month:       d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonth"],
  year:        d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"]
}

function timeInterval(name) {
  return time.hasOwnProperty(name) && time[name];
}

function utcInterval(name) {
  return utc.hasOwnProperty(name) && utc[name];
}


/***/ }),

/***/ "6g+2":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/source.js ***!
  \*****************************************************************/
/*! exports provided: SourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SourceNode", function() { return SourceNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "LH2n");




var SourceNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SourceNode, _super);
    function SourceNode(data) {
        var _this = _super.call(this, null) || this;
        data = data || { name: 'source' };
        if (Object(_data__WEBPACK_IMPORTED_MODULE_1__["isInlineData"])(data)) {
            _this._data = { values: data.values };
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_1__["isUrlData"])(data)) {
            _this._data = { url: data.url };
            if (!data.format) {
                data.format = {};
            }
            if (!data.format || !data.format.type) {
                // Extract extension from URL using snippet from
                // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript
                var defaultExtension = /(?:\.([^.]+))?$/.exec(data.url)[1];
                if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(['json', 'csv', 'tsv', 'dsv', 'topojson'], defaultExtension)) {
                    defaultExtension = 'json';
                }
                // defaultExtension has type string but we ensure that it is DataFormatType above
                data.format.type = defaultExtension;
            }
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_1__["isNamedData"])(data)) {
            _this._data = {};
        }
        // any dataset can be named
        if (data.name) {
            _this._name = data.name;
        }
        if (data.format) {
            var _a = data.format, _b = _a.parse, parse = _b === void 0 ? null : _b, format = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["parse"]);
            _this._data.format = format;
        }
        return _this;
    }
    Object.defineProperty(SourceNode.prototype, "data", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    SourceNode.prototype.hasName = function () {
        return !!this._name;
    };
    Object.defineProperty(SourceNode.prototype, "dataName", {
        get: function () {
            return this._name;
        },
        set: function (name) {
            this._name = name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SourceNode.prototype, "parent", {
        set: function (parent) {
            throw new Error('Source nodes have to be roots.');
        },
        enumerable: true,
        configurable: true
    });
    SourceNode.prototype.remove = function () {
        throw new Error('Source nodes are roots and cannot be removed.');
    };
    /**
     * Return a unique identifier for this data source.
     */
    SourceNode.prototype.hash = function () {
        if (Object(_data__WEBPACK_IMPORTED_MODULE_1__["isInlineData"])(this._data)) {
            if (!this._hash) {
                // Hashing can be expensive for large inline datasets.
                this._hash = Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])(this._data);
            }
            return this._hash;
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_1__["isUrlData"])(this._data)) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])([this._data.url, this._data.format]);
        }
        else {
            return this._name;
        }
    };
    SourceNode.prototype.assemble = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: this._name }, this._data, { transform: [] });
    };
    return SourceNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"]));

//# sourceMappingURL=source.js.map

/***/ }),

/***/ "6g/r":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/facet.js ***!
  \***********************************************************/
/*! exports provided: facetSortFieldName, FacetModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "facetSortFieldName", function() { return facetSortFieldName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FacetModel", function() { return FacetModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "5g++");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scale */ "50Px");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../vega.schema */ "P9ZJ");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./axis/assemble */ "lp5H");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./buildmodel */ "zzEA");
/* harmony import */ var _data_assemble__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./data/assemble */ "gxyW");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./data/calculate */ "a40Z");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./data/parse */ "S7P/");
/* harmony import */ var _header_index__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./header/index */ "k2RQ");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layoutsize/parse */ "drwQ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./model */ "MqRG");
/* harmony import */ var _repeater__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./repeater */ "7N9s");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resolve */ "aZSk");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scale/domain */ "2wP2");





















function facetSortFieldName(fieldDef, sort, expr) {
    return Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(sort, { expr: expr, suffix: "by_" + Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef) });
}
var FacetModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FacetModel, _super);
    function FacetModel(spec, parent, parentGivenName, repeater, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, repeater, spec.resolve) || this;
        _this.type = 'facet';
        _this.child = Object(_buildmodel__WEBPACK_IMPORTED_MODULE_11__["buildModel"])(spec.spec, _this, _this.getName('child'), undefined, repeater, config, false);
        _this.children = [_this.child];
        var facet = Object(_repeater__WEBPACK_IMPORTED_MODULE_18__["replaceRepeaterInFacet"])(spec.facet, repeater);
        _this.facet = _this.initFacet(facet);
        return _this;
    }
    FacetModel.prototype.initFacet = function (facet) {
        // clone to prevent side effect to the original spec
        return Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["reduce"])(facet, function (normalizedFacet, fieldDef, channel) {
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])([_channel__WEBPACK_IMPORTED_MODULE_2__["ROW"], _channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"]], channel)) {
                // Drop unsupported channel
                _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].incompatibleChannel(channel, 'facet'));
                return normalizedFacet;
            }
            if (fieldDef.field === undefined) {
                _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].emptyFieldDef(fieldDef, channel));
                return normalizedFacet;
            }
            // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
            normalizedFacet[channel] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["normalize"])(fieldDef, channel);
            return normalizedFacet;
        }, {});
    };
    FacetModel.prototype.channelHasField = function (channel) {
        return !!this.facet[channel];
    };
    FacetModel.prototype.fieldDef = function (channel) {
        return this.facet[channel];
    };
    FacetModel.prototype.parseData = function () {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_14__["parseData"])(this);
        this.child.parseData();
    };
    FacetModel.prototype.parseLayoutSize = function () {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_16__["parseChildrenLayoutSize"])(this);
    };
    FacetModel.prototype.parseSelection = function () {
        // As a facet has a single child, the selection components are the same.
        // The child maintains its selections to assemble signals, which remain
        // within its unit.
        this.child.parseSelection();
        this.component.selection = this.child.component.selection;
    };
    FacetModel.prototype.parseMarkGroup = function () {
        this.child.parseMarkGroup();
    };
    FacetModel.prototype.parseAxisAndHeader = function () {
        this.child.parseAxisAndHeader();
        this.parseHeader('column');
        this.parseHeader('row');
        this.mergeChildAxis('x');
        this.mergeChildAxis('y');
    };
    FacetModel.prototype.parseHeader = function (channel) {
        if (this.channelHasField(channel)) {
            var fieldDef = this.facet[channel];
            var header = fieldDef.header || {};
            var title = fieldDef.title !== undefined ? fieldDef.title :
                header.title !== undefined ? header.title : Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["title"])(fieldDef, this.config);
            if (this.child.component.layoutHeaders[channel].title) {
                // merge title with child to produce "Title / Subtitle / Sub-subtitle"
                title += ' / ' + this.child.component.layoutHeaders[channel].title;
                this.child.component.layoutHeaders[channel].title = null;
            }
            this.component.layoutHeaders[channel] = {
                title: title,
                facetFieldDef: fieldDef,
                // TODO: support adding label to footer as well
                header: [this.makeHeaderComponent(channel, true)]
            };
        }
    };
    FacetModel.prototype.makeHeaderComponent = function (channel, labels) {
        var sizeType = channel === 'row' ? 'height' : 'width';
        return {
            labels: labels,
            sizeSignal: this.child.component.layoutSize.get(sizeType) ? this.child.getSizeSignalRef(sizeType) : undefined,
            axes: []
        };
    };
    FacetModel.prototype.mergeChildAxis = function (channel) {
        var child = this.child;
        if (child.component.axes[channel]) {
            var _a = this.component, layoutHeaders = _a.layoutHeaders, resolve = _a.resolve;
            resolve.axis[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_19__["parseGuideResolve"])(resolve, channel);
            if (resolve.axis[channel] === 'shared') {
                // For shared axis, move the axes to facet's header or footer
                var headerChannel = channel === 'x' ? 'column' : 'row';
                var layoutHeader = layoutHeaders[headerChannel];
                for (var _i = 0, _b = child.component.axes[channel]; _i < _b.length; _i++) {
                    var axisComponent = _b[_i];
                    var headerType = Object(_header_index__WEBPACK_IMPORTED_MODULE_15__["getHeaderType"])(axisComponent.get('orient'));
                    layoutHeader[headerType] = layoutHeader[headerType] ||
                        [this.makeHeaderComponent(headerChannel, false)];
                    var mainAxis = Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_10__["assembleAxis"])(axisComponent, 'main', this.config, { header: true });
                    // LayoutHeader no longer keep track of property precedence, thus let's combine.
                    layoutHeader[headerType][0].axes.push(mainAxis);
                    axisComponent.mainExtracted = true;
                }
            }
            else {
                // Otherwise do nothing for independent axes
            }
        }
    };
    FacetModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.child.assembleSelectionTopLevelSignals(signals);
    };
    FacetModel.prototype.assembleSelectionSignals = function () {
        this.child.assembleSelectionSignals();
        return [];
    };
    FacetModel.prototype.assembleSelectionData = function (data) {
        return this.child.assembleSelectionData(data);
    };
    FacetModel.prototype.getHeaderLayoutMixins = function () {
        var _this = this;
        var layoutMixins = {};
        ['row', 'column'].forEach(function (channel) {
            ['header', 'footer'].forEach(function (headerType) {
                var layoutHeaderComponent = _this.component.layoutHeaders[channel];
                var headerComponent = layoutHeaderComponent[headerType];
                if (headerComponent && headerComponent[0]) {
                    // set header/footerBand
                    var sizeType = channel === 'row' ? 'height' : 'width';
                    var bandType = headerType === 'header' ? 'headerBand' : 'footerBand';
                    if (!_this.child.component.layoutSize.get(sizeType)) {
                        // If facet child does not have size signal, then apply headerBand
                        layoutMixins[bandType] = layoutMixins[bandType] || {};
                        layoutMixins[bandType][channel] = 0.5;
                    }
                    if (layoutHeaderComponent.title) {
                        layoutMixins.offset = layoutMixins.offset || {};
                        layoutMixins.offset[channel === 'row' ? 'rowTitle' : 'columnTitle'] = 10;
                    }
                }
            });
        });
        return layoutMixins;
    };
    FacetModel.prototype.assembleDefaultLayout = function () {
        var columns = this.channelHasField('column') ? this.columnDistinctSignal() : 1;
        // TODO: determine default align based on shared / independent scales
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.getHeaderLayoutMixins(), { columns: columns, bounds: 'full', align: 'all' });
    };
    FacetModel.prototype.assembleLayoutSignals = function () {
        // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.
        return this.child.assembleLayoutSignals();
    };
    FacetModel.prototype.columnDistinctSignal = function () {
        if (this.parent && (this.parent instanceof FacetModel)) {
            // For nested facet, we will add columns to group mark instead
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return undefined;
        }
        else {
            // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.
            var facetLayoutDataName = this.getName('column_domain');
            return { signal: "length(data('" + facetLayoutDataName + "'))" };
        }
    };
    FacetModel.prototype.assembleGroup = function (signals) {
        if (this.parent && (this.parent instanceof FacetModel)) {
            // Provide number of columns for layout.
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (this.channelHasField('column') ? {
                encode: {
                    update: {
                        // TODO(https://github.com/vega/vega-lite/issues/2759):
                        // Correct the signal for facet of concat of facet_column
                        columns: { field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(this.facet.column, { prefix: 'distinct' }) }
                    }
                }
            } : {}), _super.prototype.assembleGroup.call(this, signals));
        }
        return _super.prototype.assembleGroup.call(this, signals);
    };
    /**
     * Aggregate cardinality for calculating size
     */
    FacetModel.prototype.getCardinalityAggregateForChild = function () {
        var fields = [];
        var ops = [];
        var as = [];
        if (this.child instanceof FacetModel) {
            if (this.child.channelHasField('column')) {
                var field = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(this.child.facet.column);
                fields.push(field);
                ops.push('distinct');
                as.push("distinct_" + field);
            }
        }
        else {
            for (var _i = 0, _a = ['x', 'y']; _i < _a.length; _i++) {
                var channel = _a[_i];
                var childScaleComponent = this.child.component.scales[channel];
                if (childScaleComponent && !childScaleComponent.merged) {
                    var type = childScaleComponent.get('type');
                    var range = childScaleComponent.get('range');
                    if (Object(_scale__WEBPACK_IMPORTED_MODULE_6__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_9__["isVgRangeStep"])(range)) {
                        var domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_20__["assembleDomain"])(this.child, channel);
                        var field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_20__["getFieldFromDomain"])(domain);
                        if (field) {
                            fields.push(field);
                            ops.push('distinct');
                            as.push("distinct_" + field);
                        }
                        else {
                            _log__WEBPACK_IMPORTED_MODULE_5__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                        }
                    }
                }
            }
        }
        return { fields: fields, ops: ops, as: as };
    };
    FacetModel.prototype.assembleFacet = function () {
        var _this = this;
        var _a = this.component.data.facetRoot, name = _a.name, data = _a.data;
        var _b = this.facet, row = _b.row, column = _b.column;
        var _c = this.getCardinalityAggregateForChild(), fields = _c.fields, ops = _c.ops, as = _c.as;
        var groupby = [];
        ['row', 'column'].forEach(function (channel) {
            var fieldDef = _this.facet[channel];
            if (fieldDef) {
                groupby.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef));
                var sort = fieldDef.sort;
                if (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(sort)) {
                    var field = sort.field, op = sort.op;
                    var outputName = facetSortFieldName(fieldDef, sort);
                    if (row && column) {
                        // For crossed facet, use pre-calculate field as it requires a different groupby
                        // For each calculated field, apply max and assign them to the same name as
                        // all values of the same group should be the same anyway.
                        fields.push(outputName);
                        ops.push('max');
                        as.push(outputName);
                    }
                    else {
                        fields.push(field);
                        ops.push(op);
                        as.push(outputName);
                    }
                }
                else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sort)) {
                    var outputName = Object(_data_calculate__WEBPACK_IMPORTED_MODULE_13__["sortArrayIndexField"])(fieldDef, channel);
                    fields.push(outputName);
                    ops.push('max');
                    as.push(outputName);
                }
            }
        });
        var cross = !!row && !!column;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: name,
            data: data,
            groupby: groupby }, (cross || fields.length ? {
            aggregate: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (cross ? { cross: cross } : {}), (fields.length ? { fields: fields, ops: ops, as: as } : {}))
        } : {}));
    };
    FacetModel.prototype.headerSortFields = function (channel) {
        var facet = this.facet;
        var fieldDef = facet[channel];
        if (fieldDef) {
            if (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(fieldDef.sort)) {
                return [facetSortFieldName(fieldDef, fieldDef.sort, 'datum')];
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(fieldDef.sort)) {
                return [Object(_data_calculate__WEBPACK_IMPORTED_MODULE_13__["sortArrayIndexField"])(fieldDef, channel, 'datum')];
            }
            return [Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, { expr: 'datum' })];
        }
        return [];
    };
    FacetModel.prototype.headerSortOrder = function (channel) {
        var facet = this.facet;
        var fieldDef = facet[channel];
        if (fieldDef) {
            var sort = fieldDef.sort;
            var order = (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(sort) ? sort.order : !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sort) && sort) || 'ascending';
            return [order];
        }
        return [];
    };
    FacetModel.prototype.assembleMarks = function () {
        var child = this.child;
        var facetRoot = this.component.data.facetRoot;
        var data = Object(_data_assemble__WEBPACK_IMPORTED_MODULE_12__["assembleFacetData"])(facetRoot);
        // If we facet by two dimensions, we need to add a cross operator to the aggregation
        // so that we create all groups
        var layoutSizeEncodeEntry = child.assembleLayoutSize();
        var title = child.assembleTitle();
        var style = child.assembleGroupStyle();
        var markGroup = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: this.getName('cell'), type: 'group' }, (title ? { title: title } : {}), (style ? { style: style } : {}), { from: {
                facet: this.assembleFacet()
            }, 
            // TODO: move this to after data
            sort: {
                field: this.headerSortFields('row').concat(this.headerSortFields('column')),
                order: this.headerSortOrder('row').concat(this.headerSortOrder('column'))
            } }, (data.length > 0 ? { data: data } : {}), (layoutSizeEncodeEntry ? { encode: { update: layoutSizeEncodeEntry } } : {}), child.assembleGroup());
        return [markGroup];
    };
    FacetModel.prototype.getMapping = function () {
        return this.facet;
    };
    return FacetModel;
}(_model__WEBPACK_IMPORTED_MODULE_17__["ModelWithField"]));

//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "6ow0":
/*!*************************************************!*\
  !*** ./node_modules/vega-lite/build/src/log.js ***!
  \*************************************************/
/*! exports provided: LocalLogger, wrap, set, reset, warn, info, debug, message */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalLogger", function() { return LocalLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "info", function() { return info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "message", function() { return message; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");
/**
 * Vega-Lite's singleton logger utility.
 */


/**
 * Main (default) Vega Logger instance for Vega-Lite
 */
var main = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["logger"])(vega_util__WEBPACK_IMPORTED_MODULE_0__["Warn"]);
var current = main;
/**
 * Logger tool for checking if the code throws correct warning
 */
var LocalLogger = /** @class */ (function () {
    function LocalLogger() {
        this.warns = [];
        this.infos = [];
        this.debugs = [];
    }
    LocalLogger.prototype.level = function () {
        return this;
    };
    LocalLogger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        (_a = this.warns).push.apply(_a, args);
        return this;
    };
    LocalLogger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        (_a = this.infos).push.apply(_a, args);
        return this;
    };
    LocalLogger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _a;
        (_a = this.debugs).push.apply(_a, args);
        return this;
    };
    return LocalLogger;
}());

function wrap(f) {
    return function () {
        current = new LocalLogger();
        f(current);
        reset();
    };
}
/**
 * Set the singleton logger to be a custom logger
 */
function set(newLogger) {
    current = newLogger;
    return current;
}
/**
 * Reset the main logger to use the default Vega Logger
 */
function reset() {
    current = main;
    return current;
}
function warn() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.warn.apply(current, arguments);
}
function info() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.info.apply(current, arguments);
}
function debug() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.debug.apply(current, arguments);
}
/**
 * Collection of all Vega-Lite Error Messages
 */
var message;
(function (message) {
    message.INVALID_SPEC = 'Invalid spec';
    // FIT
    message.FIT_NON_SINGLE = 'Autosize "fit" only works for single views and layered views.';
    message.CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of "rangeStep" when "autosize" is "fit".';
    // SELECTION
    function cannotProjectOnChannelWithoutField(channel) {
        return "Cannot project a selection on encoding channel \"" + channel + "\", which has no field.";
    }
    message.cannotProjectOnChannelWithoutField = cannotProjectOnChannelWithoutField;
    function nearestNotSupportForContinuous(mark) {
        return "The \"nearest\" transform is not supported for " + mark + " marks.";
    }
    message.nearestNotSupportForContinuous = nearestNotSupportForContinuous;
    function selectionNotFound(name) {
        return "Cannot find a selection named \"" + name + "\"";
    }
    message.selectionNotFound = selectionNotFound;
    message.SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';
    // REPEAT
    function noSuchRepeatedValue(field) {
        return "Unknown repeated value \"" + field + "\".";
    }
    message.noSuchRepeatedValue = noSuchRepeatedValue;
    // CONCAT
    message.CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views.';
    // REPEAT
    message.REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views.';
    // TITLE
    function cannotSetTitleAnchor(type) {
        return "Cannot set title \"anchor\" for a " + type + " spec";
    }
    message.cannotSetTitleAnchor = cannotSetTitleAnchor;
    // DATA
    function unrecognizedParse(p) {
        return "Unrecognized parse \"" + p + "\".";
    }
    message.unrecognizedParse = unrecognizedParse;
    function differentParse(field, local, ancestor) {
        return "An ancestor parsed field \"" + field + "\" as " + ancestor + " but a child wants to parse the field as " + local + ".";
    }
    message.differentParse = differentParse;
    // TRANSFORMS
    function invalidTransformIgnored(transform) {
        return "Ignoring an invalid transform: " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(transform) + ".";
    }
    message.invalidTransformIgnored = invalidTransformIgnored;
    message.NO_FIELDS_NEEDS_AS = 'If "from.fields" is not specified, "as" has to be a string that specifies the key to be used for the data from the secondary source.';
    // ENCODING & FACET
    function encodingOverridden(channels) {
        return "Layer's shared " + channels.join(',') + " channel " + (channels.length === 1 ? 'is' : 'are') + " overriden";
    }
    message.encodingOverridden = encodingOverridden;
    function projectionOverridden(opt) {
        var parentProjection = opt.parentProjection, projection = opt.projection;
        return "Layer's shared projection " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(parentProjection) + " is overridden by a child projection " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(projection) + ".";
    }
    message.projectionOverridden = projectionOverridden;
    function primitiveChannelDef(channel, type, value) {
        return "Channel " + channel + " is a " + type + ". Converted to {value: " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(value) + "}.";
    }
    message.primitiveChannelDef = primitiveChannelDef;
    function invalidFieldType(type) {
        return "Invalid field type \"" + type + "\"";
    }
    message.invalidFieldType = invalidFieldType;
    function nonZeroScaleUsedWithLengthMark(mark, channel, opt) {
        var scaleText = opt.scaleType ? opt.scaleType + " scale" :
            opt.zeroFalse ? 'scale with zero=false' :
                'scale with custom domain that excludes zero';
        return "A " + scaleText + " is used to encode " + mark + "'s " + channel + ". This can be misleading as the " + (channel === 'x' ? 'width' : 'height') + " of the " + mark + " can be arbitrary based on the scale domain. You may want to use point mark instead.";
    }
    message.nonZeroScaleUsedWithLengthMark = nonZeroScaleUsedWithLengthMark;
    function invalidFieldTypeForCountAggregate(type, aggregate) {
        return "Invalid field type \"" + type + "\" for aggregate: \"" + aggregate + "\", using \"quantitative\" instead.";
    }
    message.invalidFieldTypeForCountAggregate = invalidFieldTypeForCountAggregate;
    function invalidAggregate(aggregate) {
        return "Invalid aggregation operator \"" + aggregate + "\"";
    }
    message.invalidAggregate = invalidAggregate;
    function emptyOrInvalidFieldType(type, channel, newType) {
        return "Invalid field type \"" + type + "\" for channel \"" + channel + "\", using \"" + newType + "\" instead.";
    }
    message.emptyOrInvalidFieldType = emptyOrInvalidFieldType;
    function droppingColor(type, opt) {
        var fill = opt.fill, stroke = opt.stroke;
        return "Dropping color " + type + " as the plot also has " + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke');
    }
    message.droppingColor = droppingColor;
    function emptyFieldDef(fieldDef, channel) {
        return "Dropping " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(fieldDef) + " from channel \"" + channel + "\" since it does not contain data field or value.";
    }
    message.emptyFieldDef = emptyFieldDef;
    function latLongDeprecated(channel, type, newChannel) {
        return channel + "-encoding with type " + type + " is deprecated. Replacing with " + newChannel + "-encoding.";
    }
    message.latLongDeprecated = latLongDeprecated;
    message.LINE_WITH_VARYING_SIZE = 'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';
    function incompatibleChannel(channel, markOrFacet, when) {
        return channel + " dropped as it is incompatible with \"" + markOrFacet + "\"" + (when ? " when " + when : '') + ".";
    }
    message.incompatibleChannel = incompatibleChannel;
    function invalidEncodingChannel(channel) {
        return channel + "-encoding is dropped as " + channel + " is not a valid encoding channel.";
    }
    message.invalidEncodingChannel = invalidEncodingChannel;
    function facetChannelShouldBeDiscrete(channel) {
        return channel + " encoding should be discrete (ordinal / nominal / binned).";
    }
    message.facetChannelShouldBeDiscrete = facetChannelShouldBeDiscrete;
    function discreteChannelCannotEncode(channel, type) {
        return "Using discrete channel \"" + channel + "\" to encode \"" + type + "\" field can be misleading as it does not encode " + (type === 'ordinal' ? 'order' : 'magnitude') + ".";
    }
    message.discreteChannelCannotEncode = discreteChannelCannotEncode;
    // Mark
    message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';
    function lineWithRange(hasX2, hasY2) {
        var channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';
        return "Line mark is for continuous lines and thus cannot be used with " + channels + ". We will use the rule mark (line segments) instead.";
    }
    message.lineWithRange = lineWithRange;
    function orientOverridden(original, actual) {
        return "Specified orient \"" + original + "\" overridden with \"" + actual + "\"";
    }
    message.orientOverridden = orientOverridden;
    // SCALE
    message.CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';
    function cannotUseScalePropertyWithNonColor(prop) {
        return "Cannot use the scale property \"" + prop + "\" with non-color channel.";
    }
    message.cannotUseScalePropertyWithNonColor = cannotUseScalePropertyWithNonColor;
    function unaggregateDomainHasNoEffectForRawField(fieldDef) {
        return "Using unaggregated domain with raw field has no effect (" + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(fieldDef) + ").";
    }
    message.unaggregateDomainHasNoEffectForRawField = unaggregateDomainHasNoEffectForRawField;
    function unaggregateDomainWithNonSharedDomainOp(aggregate) {
        return "Unaggregated domain not applicable for \"" + aggregate + "\" since it produces values outside the origin domain of the source data.";
    }
    message.unaggregateDomainWithNonSharedDomainOp = unaggregateDomainWithNonSharedDomainOp;
    function unaggregatedDomainWithLogScale(fieldDef) {
        return "Unaggregated domain is currently unsupported for log scale (" + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(fieldDef) + ").";
    }
    message.unaggregatedDomainWithLogScale = unaggregatedDomainWithLogScale;
    function cannotApplySizeToNonOrientedMark(mark) {
        return "Cannot apply size to non-oriented mark \"" + mark + "\".";
    }
    message.cannotApplySizeToNonOrientedMark = cannotApplySizeToNonOrientedMark;
    function rangeStepDropped(channel) {
        return "rangeStep for \"" + channel + "\" is dropped as top-level " + (channel === 'x' ? 'width' : 'height') + " is provided.";
    }
    message.rangeStepDropped = rangeStepDropped;
    function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {
        return "Channel \"" + channel + "\" does not work with \"" + scaleType + "\" scale. We are using \"" + defaultScaleType + "\" scale instead.";
    }
    message.scaleTypeNotWorkWithChannel = scaleTypeNotWorkWithChannel;
    function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {
        return "FieldDef does not work with \"" + scaleType + "\" scale. We are using \"" + defaultScaleType + "\" scale instead.";
    }
    message.scaleTypeNotWorkWithFieldDef = scaleTypeNotWorkWithFieldDef;
    function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {
        return channel + "-scale's \"" + propName + "\" is dropped as it does not work with " + scaleType + " scale.";
    }
    message.scalePropertyNotWorkWithScaleType = scalePropertyNotWorkWithScaleType;
    function scaleTypeNotWorkWithMark(mark, scaleType) {
        return "Scale type \"" + scaleType + "\" does not work with mark \"" + mark + "\".";
    }
    message.scaleTypeNotWorkWithMark = scaleTypeNotWorkWithMark;
    function mergeConflictingProperty(property, propertyOf, v1, v2) {
        return "Conflicting " + propertyOf.toString() + " property \"" + property.toString() + "\" (" + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(v1) + " and " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(v2) + ").  Using " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(v1) + ".";
    }
    message.mergeConflictingProperty = mergeConflictingProperty;
    function independentScaleMeansIndependentGuide(channel) {
        return "Setting the scale to be independent for \"" + channel + "\" means we also have to set the guide (axis or legend) to be independent.";
    }
    message.independentScaleMeansIndependentGuide = independentScaleMeansIndependentGuide;
    function domainSortDropped(sort) {
        return "Dropping sort property " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(sort) + " as unioned domains only support boolean or op 'count'.";
    }
    message.domainSortDropped = domainSortDropped;
    message.UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';
    message.MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';
    // AXIS
    message.INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';
    // STACK
    function cannotStackRangedMark(channel) {
        return "Cannot stack \"" + channel + "\" if there is already \"" + channel + "2\"";
    }
    message.cannotStackRangedMark = cannotStackRangedMark;
    function cannotStackNonLinearScale(scaleType) {
        return "Cannot stack non-linear scale (" + scaleType + ")";
    }
    message.cannotStackNonLinearScale = cannotStackNonLinearScale;
    function stackNonSummativeAggregate(aggregate) {
        return "Stacking is applied even though the aggregate function is non-summative (\"" + aggregate + "\")";
    }
    message.stackNonSummativeAggregate = stackNonSummativeAggregate;
    // TIMEUNIT
    function invalidTimeUnit(unitName, value) {
        return "Invalid " + unitName + ": " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(value);
    }
    message.invalidTimeUnit = invalidTimeUnit;
    function dayReplacedWithDate(fullTimeUnit) {
        return "Time unit \"" + fullTimeUnit + "\" is not supported. We are replacing it with " + fullTimeUnit.replace('day', 'date') + ".";
    }
    message.dayReplacedWithDate = dayReplacedWithDate;
    function droppedDay(d) {
        return "Dropping day from datetime " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(d) + " as day cannot be combined with other units.";
    }
    message.droppedDay = droppedDay;
})(message || (message = {}));
//# sourceMappingURL=log.js.map

/***/ }),

/***/ "6rlB":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/fill.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "TVcu");


/* harmony default export */ __webpack_exports__["default"] = (function(context, item, opacity) {
  opacity *= (item.fillOpacity==null ? 1 : item.fillOpacity);
  if (opacity > 0) {
    context.globalAlpha = opacity;
    context.fillStyle = Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, item.fill);
    return true;
  } else {
    return false;
  }
});


/***/ }),

/***/ "6tJH":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/integer.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "yD9f");


/* harmony default export */ __webpack_exports__["default"] = (function(min, max) {
  if (max == null) {
    max = min;
    min = 0;
  }

  var dist = {},
      a, b, d;

  dist.min = function(_) {
    if (arguments.length) {
      a = _ || 0;
      d = b - a;
      return dist;
    } else {
      return a;
    }
  };

  dist.max = function(_) {
    if (arguments.length) {
      b = _ || 0;
      d = b - a;
      return dist;
    } else {
      return b;
    }
  };

  dist.sample = function() {
    return a + Math.floor(d * Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])());
  };

  dist.pdf = function(x) {
    return (x === Math.floor(x) && x >= a && x < b) ? 1 / d : 0;
  };

  dist.cdf = function(x) {
    var v = Math.floor(x);
    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;
  };

  dist.icdf = function(p) {
    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p * d) : NaN;
  };

  return dist.min(min).max(max);
});


/***/ }),

/***/ "7/cf":
/*!****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Operator.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Operator; });
/* harmony import */ var _Parameters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Parameters */ "wZ22");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/UniqueList */ "YCOJ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var OP_ID = 0;
var PULSE = 'pulse';
var NO_PARAMS = new _Parameters__WEBPACK_IMPORTED_MODULE_0__["default"]();

// Boolean Flags
var SKIP     = 1,
    MODIFIED = 2;

/**
 * An Operator is a processing node in a dataflow graph.
 * Each operator stores a value and an optional value update function.
 * Operators can accept a hash of named parameters. Parameter values can
 * either be direct (JavaScript literals, arrays, objects) or indirect
 * (other operators whose values will be pulled dynamically). Operators
 * included as parameters will have this operator added as a dependency.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {function(object, Pulse)} [update] - An update function. Upon
 *   evaluation of this operator, the update function will be invoked and the
 *   return value will be used as the new value of this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @see parameters
 */
function Operator(init, update, params, react) {
  this.id = ++OP_ID;
  this.value = init;
  this.stamp = -1;
  this.rank = -1;
  this.qrank = -1;
  this.flags = 0;

  if (update) {
    this._update = update;
  }
  if (params) this.parameters(params, react);
}

var prototype = Operator.prototype;

/**
 * Returns a list of target operators dependent on this operator.
 * If this list does not exist, it is created and then returned.
 * @return {UniqueList}
 */
prototype.targets = function() {
  return this._targets || (this._targets = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_1__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_2__["id"]));
};

/**
 * Sets the value of this operator.
 * @param {*} value - the value to set.
 * @return {Number} Returns 1 if the operator value has changed
 *   according to strict equality, returns 0 otherwise.
 */
prototype.set = function(value) {
  if (this.value !== value) {
    this.value = value;
    return 1;
  } else {
    return 0;
  }
};

function flag(bit) {
  return function(state) {
    var f = this.flags;
    if (arguments.length === 0) return !!(f & bit);
    this.flags = state ? (f | bit) : (f & ~bit);
    return this;
  };
}

/**
 * Indicates that operator evaluation should be skipped on the next pulse.
 * This operator will still propagate incoming pulses, but its update function
 * will not be invoked. The skip flag is reset after every pulse, so calling
 * this method will affect processing of the next pulse only.
 */
prototype.skip = flag(SKIP);

/**
 * Indicates that this operator's value has been modified on its most recent
 * pulse. Normally modification is checked via strict equality; however, in
 * some cases it is more efficient to update the internal state of an object.
 * In those cases, the modified flag can be used to trigger propagation. Once
 * set, the modification flag persists across pulses until unset. The flag can
 * be used with the last timestamp to test if a modification is recent.
 */
prototype.modified = flag(MODIFIED);

/**
 * Sets the parameters for this operator. The parameter values are analyzed for
 * operator instances. If found, this operator will be added as a dependency
 * of the parameterizing operator. Operator values are dynamically marshalled
 * from each operator parameter prior to evaluation. If a parameter value is
 * an array, the array will also be searched for Operator instances. However,
 * the search does not recurse into sub-arrays or object properties.
 * @param {object} params - A hash of operator parameters.
 * @param {boolean} [react=true] - A flag indicating if this operator should
 *   automatically update (react) when parameter values change. In other words,
 *   this flag determines if the operator registers itself as a listener on
 *   any upstream operators included in the parameters.
 * @return {Operator[]} - An array of upstream dependencies.
 */
prototype.parameters = function(params, react) {
  react = react !== false;
  var self = this,
      argval = (self._argval = self._argval || new _Parameters__WEBPACK_IMPORTED_MODULE_0__["default"]()),
      argops = (self._argops = self._argops || []),
      deps = [],
      name, value, n, i;

  function add(name, index, value) {
    if (value instanceof Operator) {
      if (value !== self) {
        if (react) value.targets().add(self);
        deps.push(value);
      }
      argops.push({op:value, name:name, index:index});
    } else {
      argval.set(name, index, value);
    }
  }

  for (name in params) {
    value = params[name];

    if (name === PULSE) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(value).forEach(function(op) {
        if (!(op instanceof Operator)) {
          Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Pulse parameters must be operator instances.');
        } else if (op !== self) {
          op.targets().add(self);
          deps.push(op);
        }
      });
      self.source = value;
    } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
      argval.set(name, -1, Array(n = value.length));
      for (i=0; i<n; ++i) add(name, i, value[i]);
    } else {
      add(name, -1, value);
    }
  }

  this.marshall().clear(); // initialize values
  return deps;
};

/**
 * Internal method for marshalling parameter values.
 * Visits each operator dependency to pull the latest value.
 * @return {Parameters} A Parameters object to pass to the update function.
 */
prototype.marshall = function(stamp) {
  var argval = this._argval || NO_PARAMS,
      argops = this._argops, item, i, n, op, mod;

  if (argops && (n = argops.length)) {
    for (i=0; i<n; ++i) {
      item = argops[i];
      op = item.op;
      mod = op.modified() && op.stamp === stamp;
      argval.set(item.name, item.index, op.value, mod);
    }
  }
  return argval;
};

/**
 * Delegate method to perform operator processing.
 * Subclasses can override this method to perform custom processing.
 * By default, it marshalls parameters and calls the update function
 * if that function is defined. If the update function does not
 * change the operator value then StopPropagation is returned.
 * If no update function is defined, this method does nothing.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return The output pulse or StopPropagation. A falsy return value
 *   (including undefined) will let the input pulse pass through.
 */
prototype.evaluate = function(pulse) {
  if (this._update) {
    var params = this.marshall(pulse.stamp),
        v = this._update(params, pulse);

    params.clear();
    if (v !== this.value) {
      this.value = v;
    } else if (!this.modified()) {
      return pulse.StopPropagation;
    }
  }
};

/**
 * Run this operator for the current pulse. If this operator has already
 * been run at (or after) the pulse timestamp, returns StopPropagation.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */
prototype.run = function(pulse) {
  if (pulse.stamp <= this.stamp) return pulse.StopPropagation;
  var rv;
  if (this.skip()) {
    this.skip(false);
    rv = 0;
  } else {
    rv = this.evaluate(pulse);
  }
  this.stamp = pulse.stamp;
  return (this.pulse = rv || pulse);
};


/***/ }),

/***/ "70tb":
/*!*********************************************!*\
  !*** ./node_modules/vega-encode/src/Pie.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pie; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");




/**
 * Pie and donut chart layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size pie segments.
 * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.
 * @param {number} [params.endAngle=2π] - The end angle (in radians) of the layout.
 * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.
 */
function Pie(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Pie.Definition = {
  "type": "Pie",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "startAngle", "type": "number", "default": 0 },
    { "name": "endAngle", "type": "number", "default": 6.283185307179586 },
    { "name": "sort", "type": "boolean", "default": false },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["startAngle", "endAngle"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Pie, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var as = _.as || ['startAngle', 'endAngle'],
      startAngle = as[0],
      endAngle = as[1],
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_1__["one"],
      start = _.startAngle || 0,
      stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,
      data = pulse.source,
      values = data.map(field),
      n = values.length,
      a = start,
      k = (stop - start) / Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["sum"])(values),
      index = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["range"])(n),
      i, t, v;

  if (_.sort) {
    index.sort(function(a, b) {
      return values[a] - values[b];
    });
  }

  for (i=0; i<n; ++i) {
    v = values[index[i]];
    t = data[index[i]];
    t[startAngle] = a;
    t[endAngle] = (a += v * k);
  }

  this.value = values;
  return pulse.reflow(_.modified()).modifies(as);
};


/***/ }),

/***/ "73y2":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-ticks.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, size) {
  var orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      zero = {value: 0},
      encode, enter, exit, update, tickSize, tickPos;

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1}
    },
    exit: exit = {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'stroke',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickOpacity', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeWidth',   Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickWidth', spec, config));

  tickSize = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(size);
  tickSize.mult = sign;

  tickPos = {
    scale:  spec.scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('bandPosition', spec, config),
    round:  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickRound', spec, config),
    extra:  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickExtra', spec, config),
    offset: Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickOffset', spec, config)
  };

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    update.y = enter.y = zero;
    update.y2 = enter.y2 = tickSize;
    update.x = enter.x = exit.x = tickPos;
  } else {
    update.x = enter.x = zero;
    update.x2 = enter.x2 = tickSize;
    update.y = enter.y = exit.y = tickPos;
  }

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisTickRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});


/***/ }),

/***/ "7Ikf":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/repeat.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(str, reps) {
  var s = '';
  while (--reps >= 0) s += str;
  return s;
});


/***/ }),

/***/ "7N9s":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/repeater.js ***!
  \**************************************************************/
/*! exports provided: replaceRepeaterInFacet, replaceRepeaterInEncoding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceRepeaterInFacet", function() { return replaceRepeaterInFacet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceRepeaterInEncoding", function() { return replaceRepeaterInEncoding; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sort */ "58wk");





function replaceRepeaterInFacet(facet, repeater) {
    return replaceRepeater(facet, repeater);
}
function replaceRepeaterInEncoding(encoding, repeater) {
    return replaceRepeater(encoding, repeater);
}
/**
 * Replaces repeated value and returns if the repeated value is valid.
 */
function replaceRepeat(o, repeater) {
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isRepeatRef"])(o.field)) {
        if (o.field.repeat in repeater) {
            // any needed to calm down ts compiler
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, o, { field: repeater[o.field.repeat] });
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].noSuchRepeatedValue(o.field.repeat));
            return undefined;
        }
    }
    return o;
}
/**
 * Replace repeater values in a field def with the concrete field name.
 */
function replaceRepeaterInFieldDef(fieldDef, repeater) {
    fieldDef = replaceRepeat(fieldDef, repeater);
    if (fieldDef === undefined) {
        // the field def should be ignored
        return undefined;
    }
    if (fieldDef.sort && Object(_sort__WEBPACK_IMPORTED_MODULE_4__["isSortField"])(fieldDef.sort)) {
        var sort = replaceRepeat(fieldDef.sort, repeater);
        fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, (sort ? { sort: sort } : {}));
    }
    return fieldDef;
}
function replaceRepeaterInChannelDef(channelDef, repeater) {
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(channelDef)) {
        var fd = replaceRepeaterInFieldDef(channelDef, repeater);
        if (fd) {
            return fd;
        }
        else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isConditionalDef"])(channelDef)) {
            return { condition: channelDef.condition };
        }
    }
    else {
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["hasConditionalFieldDef"])(channelDef)) {
            var fd = replaceRepeaterInFieldDef(channelDef.condition, repeater);
            if (fd) {
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, channelDef, { condition: fd });
            }
            else {
                var condition = channelDef.condition, channelDefWithoutCondition = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](channelDef, ["condition"]);
                return channelDefWithoutCondition;
            }
        }
        return channelDef;
    }
    return undefined;
}
function replaceRepeater(mapping, repeater) {
    var out = {};
    for (var channel in mapping) {
        if (mapping.hasOwnProperty(channel)) {
            var channelDef = mapping[channel];
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
                // array cannot have condition
                out[channel] = channelDef.map(function (cd) { return replaceRepeaterInChannelDef(cd, repeater); })
                    .filter(function (cd) { return cd; });
            }
            else {
                var cd = replaceRepeaterInChannelDef(channelDef, repeater);
                if (cd) {
                    out[channel] = cd;
                }
            }
        }
    }
    return out;
}
//# sourceMappingURL=repeater.js.map

/***/ }),

/***/ "7PxQ":
/*!*********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/load.js ***!
  \*********************************************************/
/*! exports provided: ingest, request */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return ingest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "request", function() { return request; });
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-loader */ "Ln7r");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Ingests new data into the dataflow. First parses the data using the
 * vega-loader read method, then pulses a changeset to the target operator.
 * @param {Operator} target - The Operator to target with ingested data,
 *   typically a Collect transform instance.
 * @param {*} data - The input data, prior to parsing. For JSON this may
 *   be a string or an object. For CSV, TSV, etc should be a string.
 * @param {object} format - The data format description for parsing
 *   loaded data. This object is passed to the vega-loader read method.
 * @returns {Dataflow}
 */
function ingest(target, data, format) {
  return this.pulse(target, this.changeset().insert(Object(vega_loader__WEBPACK_IMPORTED_MODULE_0__["read"])(data, format)));
}

function loadPending(df) {
  var accept, reject,
      pending = new Promise(function(a, r) {
        accept = function() { a(df); };
        reject = r;
      });

  pending.requests = 0;

  pending.done = function() {
    if (--pending.requests === 0) {
      df.runAfter(function() {
        df._pending = null;
        try {
          df.run();
          if (df._pending) {
            df._pending.then(accept);
          } else {
            accept();
          }
        } catch (err) {
          reject(err);
        }
      });
    }
  };

  return (df._pending = pending);
}

/**
 * Request data from an external source, parse it, and pulse a changeset
 * to the specified target operator.
 * @param {Operator} target - The Operator to target with the loaded data,
 *   typically a Collect transform instance.
 * @param {string} url - The URL from which to load the data. This string
 *   is passed to the vega-loader load method.
 * @param {object} [format] - The data format description for parsing
 *   loaded data. This object is passed to the vega-loader read method.
 * @return {Promise} A Promise that resolves upon completion of the request.
 *   Resolves to a status code: 0 success, -1 load fail, -2 parse fail.
 */
function request(target, url, format) {
  var df = this,
      status = 0,
      pending = df._pending || loadPending(df);

  pending.requests += 1;

  return df.loader()
    .load(url, {context:'dataflow'})
    .then(
      function(data) {
        return Object(vega_loader__WEBPACK_IMPORTED_MODULE_0__["read"])(data, format);
      },
      function(error) {
        status = -1;
        df.error('Loading failed', url, error);
      })
    .catch(
      function(error) {
        status = -2;
        df.error('Data ingestion failed', url, error);
      })
    .then(function(data) {
      df.pulse(target, df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]).insert(data || []));
      pending.done();
      return status;
    });
}


/***/ }),

/***/ "7U5j":
/*!********************************************!*\
  !*** ./node_modules/vega-runtime/index.js ***!
  \********************************************/
/*! exports provided: parse, context, expression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/dataflow */ "bd+s");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_dataflow__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/context */ "MtNf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "context", function() { return _src_context__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/expression */ "cf9k");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return _src_expression__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "7byU":
/*!*****************************************************!*\
  !*** ./node_modules/vega-view/src/events-extend.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "NNLh");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");




/**
 * Extend an event with additional view-specific methods.
 * Adds a new property ('vega') to an event that provides a number
 * of methods for querying information about the current interaction.
 * The vega object provides the following methods:
 *   view - Returns the backing View instance.
 *   item - Returns the currently active scenegraph item (if any).
 *   group - Returns the currently active scenegraph group (if any).
 *     This method accepts a single string-typed argument indicating the name
 *     of the desired parent group. The scenegraph will be traversed from
 *     the item up towards the root to search for a matching group. If no
 *     argument is provided the enclosing group for the active item is
 *     returned, unless the item it itself a group, in which case it is
 *     returned directly.
 *   xy - Returns a two-element array containing the x and y coordinates for
 *     mouse or touch events. For touch events, this is based on the first
 *     elements in the changedTouches array. This method accepts a single
 *     argument: either an item instance or mark name that should serve as
 *     the reference coordinate system. If no argument is provided the
 *     top-level view coordinate system is assumed.
 *   x - Returns the current x-coordinate, accepts the same arguments as xy.
 *   y - Returns the current y-coordinate, accepts the same arguments as xy.
 * @param {Event} event - The input event to extend.
 * @param {Item} item - The currently active scenegraph item (if any).
 * @return {Event} - The extended input event.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(view, event, item) {
  var el = view._renderer.canvas(),
      p, e, translate;

  if (el) {
    translate = Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view);
    e = event.changedTouches ? event.changedTouches[0] : event;
    p = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["point"])(e, el);
    p[0] -= translate[0];
    p[1] -= translate[1];
  }

  event.dataflow = view;
  event.vega = extension(view, item, p);
  event.item = item;
  return event;
});

function extension(view, item, point) {
  var itemGroup = item
    ? item.mark.marktype === 'group' ? item : item.mark.group
    : null;

  function group(name) {
    var g = itemGroup, i;
    if (name) for (i = item; i; i = i.mark.group) {
      if (i.mark.name === name) { g = i; break; }
    }
    return g && g.mark && g.mark.interactive ? g : {};
  }

  function xy(item) {
    if (!item) return point;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(item)) item = group(item);

    var p = point.slice();
    while (item) {
      p[0] -= item.x || 0;
      p[1] -= item.y || 0;
      item = item.mark && item.mark.group;
    }
    return p;
  }

  return {
    view:  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(view),
    item:  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(item || {}),
    group: group,
    xy:    xy,
    x:     function(item) { return xy(item)[0]; },
    y:     function(item) { return xy(item)[1]; }
  };
}


/***/ }),

/***/ "7pZ0":
/*!***********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoShape.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoShape; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-projection */ "HD69");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Annotate items with a geopath shape generator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='shape'] - The output field in which to store
 *   the generated path data (default 'shape').
 */
function GeoShape(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoShape.Definition = {
  "type": "GeoShape",
  "metadata": {"modifies": true},
  "params": [
    { "name": "projection", "type": "projection" },
    { "name": "field", "type": "field", "default": "datum" },
    { "name": "pointRadius", "type": "number", "expr": true },
    { "name": "as", "type": "string", "default": "shape" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoShape, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      shape = this.value,
      datum = _.field || Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["field"])('datum'),
      as = _.as || 'shape',
      flag = out.ADD_MOD;

  if (!shape || _.modified()) {
    // parameters updated, reset and reflow
    this.value = shape = shapeGenerator(
      Object(vega_projection__WEBPACK_IMPORTED_MODULE_1__["getProjectionPath"])(_.projection),
      datum,
      _.pointRadius
    );
    out.materialize().reflow();
    flag = out.SOURCE;
  }

  out.visit(flag, function(t) { t[as] = shape; });

  return out.modifies(as);
};

function shapeGenerator(path, field, pointRadius) {
  var shape = pointRadius == null
    ? function(_) { return path(field(_)); }
    : function(_) {
      var prev = path.pointRadius(),
          value = path.pointRadius(pointRadius)(field(_));
      path.pointRadius(prev);
      return value;
    };
  shape.context = function(_) {
    path.context(_);
    return shape;
  };

  return shape;
}


/***/ }),

/***/ "7qzI":
/*!**********************************************!*\
  !*** ./node_modules/vega-force/src/Force.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Force; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-force */ "Ckr6");




var ForceMap = {
  center: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceCenter"],
  collide: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceCollide"],
  nbody: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceManyBody"],
  link: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceLink"],
  x: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceX"],
  y: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceY"]
};

var Forces = 'forces',
    ForceParams = [
      'alpha', 'alphaMin', 'alphaTarget',
      'velocityDecay', 'forces'
    ],
    ForceConfig = ['static', 'iterations'],
    ForceOutput = ['x', 'y', 'vx', 'vy'];

/**
 * Force simulation layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<object>} params.forces - The forces to apply.
 */
function Force(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Force.Definition = {
  "type": "Force",
  "metadata": {"modifies": true},
  "params": [
    { "name": "static", "type": "boolean", "default": false },
    { "name": "restart", "type": "boolean", "default": false },
    { "name": "iterations", "type": "number", "default": 300 },
    { "name": "alpha", "type": "number", "default": 1 },
    { "name": "alphaMin", "type": "number", "default": 0.001 },
    { "name": "alphaTarget", "type": "number", "default": 0 },
    { "name": "velocityDecay", "type": "number", "default": 0.4 },
    { "name": "forces", "type": "param", "array": true,
      "params": [
        {
          "key": {"force": "center"},
          "params": [
            { "name": "x", "type": "number", "default": 0 },
            { "name": "y", "type": "number", "default": 0 }
          ]
        },
        {
          "key": {"force": "collide"},
          "params": [
            { "name": "radius", "type": "number", "expr": true },
            { "name": "strength", "type": "number", "default": 0.7 },
            { "name": "iterations", "type": "number", "default": 1 }
          ]
        },
        {
          "key": {"force": "nbody"},
          "params": [
            { "name": "strength", "type": "number", "default": -30 },
            { "name": "theta", "type": "number", "default": 0.9 },
            { "name": "distanceMin", "type": "number", "default": 1 },
            { "name": "distanceMax", "type": "number" }
          ]
        },
        {
          "key": {"force": "link"},
          "params": [
            { "name": "links", "type": "data" },
            { "name": "id", "type": "field" },
            { "name": "distance", "type": "number", "default": 30, "expr": true },
            { "name": "strength", "type": "number", "expr": true },
            { "name": "iterations", "type": "number", "default": 1 }
          ]
        },
        {
          "key": {"force": "x"},
          "params": [
            { "name": "strength", "type": "number", "default": 0.1 },
            { "name": "x", "type": "field" }
          ]
        },
        {
          "key": {"force": "y"},
          "params": [
            { "name": "strength", "type": "number", "default": 0.1 },
            { "name": "y", "type": "field" }
          ]
        }
      ] },
    {
      "name": "as", "type": "string", "array": true, "modify": false,
      "default": ForceOutput
    }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Force, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var sim = this.value,
      change = pulse.changed(pulse.ADD_REM),
      params = _.modified(ForceParams),
      iters = _.iterations || 300;

  // configure simulation
  if (!sim) {
    this.value = sim = simulation(pulse.source, _);
    sim.on('tick', rerun(pulse.dataflow, this));
    if (!_.static) {
      change = true;
      sim.tick(); // ensure we run on init
    }
    pulse.modifies('index');
  } else {
    if (change) {
      pulse.modifies('index');
      sim.nodes(pulse.source);
    }
    if (params || pulse.changed(pulse.MOD)) {
      setup(sim, _, 0, pulse);
    }
  }

  // run simulation
  if (params || change || _.modified(ForceConfig)
      || (pulse.changed() && _.restart))
  {
    sim.alpha(Math.max(sim.alpha(), _.alpha || 1))
       .alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));

    if (_.static) {
      for (sim.stop(); --iters >= 0;) sim.tick();
    } else {
      if (sim.stopped()) sim.restart();
      if (!change) return pulse.StopPropagation; // defer to sim ticks
    }
  }

  return this.finish(_, pulse);
};

prototype.finish = function(_, pulse) {
  var dataflow = pulse.dataflow;

  // inspect dependencies, touch link source data
  for (var args=this._argops, j=0, m=args.length, arg; j<m; ++j) {
    arg = args[j];
    if (arg.name !== Forces || arg.op._argval.force !== 'link') {
      continue;
    }
    for (var ops=arg.op._argops, i=0, n=ops.length, op; i<n; ++i) {
      if (ops[i].name === 'links' && (op = ops[i].op.source)) {
        dataflow.pulse(op, dataflow.changeset().reflow());
        break;
      }
    }
  }

  // reflow all nodes
  return pulse.reflow(_.modified()).modifies(ForceOutput);
};

function rerun(df, op) {
  return function() { df.touch(op).run(); }
}

function simulation(nodes, _) {
  var sim = Object(d3_force__WEBPACK_IMPORTED_MODULE_2__["forceSimulation"])(nodes),
      stopped = false,
      stop = sim.stop,
      restart = sim.restart;

  sim.stopped = function() {
    return stopped;
  };
  sim.restart = function() {
    stopped = false;
    return restart();
  };
  sim.stop = function() {
    stopped = true;
    return stop();
  };

  return setup(sim, _, true).on('end', function() { stopped = true; });
}

function setup(sim, _, init, pulse) {
  var f = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_.forces), i, n, p, name;

  for (i=0, n=ForceParams.length; i<n; ++i) {
    p = ForceParams[i];
    if (p !== Forces && _.modified(p)) sim[p](_[p]);
  }

  for (i=0, n=f.length; i<n; ++i) {
    name = Forces + i;
    p = init || _.modified(Forces, i) ? getForce(f[i])
      : pulse && modified(f[i], pulse) ? sim.force(name)
      : null;
    if (p) sim.force(name, p);
  }

  for (n=(sim.numForces || 0); i<n; ++i) {
    sim.force(Forces + i, null); // remove
  }

  sim.numForces = f.length;
  return sim;
}

function modified(f, pulse) {
  var k, v;
  for (k in f) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(v = f[k]) && pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorFields"])(v)))
      return 1;
  }
  return 0;
}

function getForce(_) {
  var f, p;

  if (!ForceMap.hasOwnProperty(_.force)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized force: ' + _.force);
  }
  f = ForceMap[_.force]();

  for (p in _) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(f[p])) setForceParam(f[p], _[p], _);
  }

  return f;
}

function setForceParam(f, v, _) {
  f(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(v) ? function(d) { return v(d, _); } : v);
}


/***/ }),

/***/ "7rs/":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/format.js ***!
  \*******************************************************************/
/*! exports provided: format, timeFormat, utcFormat, timeParse, utcParse, monthFormat, monthAbbrevFormat, dayFormat, dayAbbrevFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monthFormat", function() { return monthFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monthAbbrevFormat", function() { return monthAbbrevFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dayFormat", function() { return dayFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dayAbbrevFormat", function() { return dayAbbrevFormat; });
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-format */ "rWgG");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "cOGN");



var formatCache = {};

function formatter(type, method, specifier) {
  var k = type + ':' + specifier,
      e = formatCache[k];
  if (!e || e[0] !== method) {
    formatCache[k] = (e = [method, method(specifier)]);
  }
  return e[1];
}

function format(_, specifier) {
  return formatter('format', d3_format__WEBPACK_IMPORTED_MODULE_0__["format"], specifier)(_);
}

function timeFormat(_, specifier) {
  return formatter('timeFormat', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["timeFormat"], specifier)(_);
}

function utcFormat(_, specifier) {
  return formatter('utcFormat', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"], specifier)(_);
}

function timeParse(_, specifier) {
  return formatter('timeParse', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["timeParse"], specifier)(_);
}

function utcParse(_, specifier) {
  return formatter('utcParse', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcParse"], specifier)(_);
}

var dateObj = new Date(2000, 0, 1);

function time(month, day, specifier) {
  dateObj.setMonth(month);
  dateObj.setDate(day);
  return timeFormat(dateObj, specifier);
}

function monthFormat(month) {
  return time(month, 1, '%B');
}

function monthAbbrevFormat(month) {
  return time(month, 1, '%b');
}

function dayFormat(day) {
  return time(0, 2 + day, '%A');
}

function dayAbbrevFormat(day) {
  return time(0, 2 + day, '%a');
}


/***/ }),

/***/ "7xeG":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js ***!
  \*********************************************************************************/
/*! exports provided: default, domain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domain", function() { return domain; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../scale */ "50Px");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../selection */ "3eK9");





var scaleBindings = {
    has: function (selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.resolve === 'global' &&
            selCmpt.bind && selCmpt.bind === 'scales';
    },
    parse: function (model, selDef, selCmpt) {
        var bound = selCmpt.scales = [];
        selCmpt.project.forEach(function (p) {
            var channel = p.channel;
            var scale = model.getScaleComponent(channel);
            var scaleType = scale ? scale.get('type') : undefined;
            if (!scale || !Object(_scale__WEBPACK_IMPORTED_MODULE_3__["hasContinuousDomain"])(scaleType) || Object(_scale__WEBPACK_IMPORTED_MODULE_3__["isBinScale"])(scaleType)) {
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].SCALE_BINDINGS_CONTINUOUS);
                return;
            }
            scale.set('domainRaw', { signal: Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, 'data') }, true);
            bound.push(channel);
            // Bind both x/y for diag plot of repeated views.
            if (model.repeater && model.repeater.row === model.repeater.column) {
                var scale2 = model.getScaleComponent(channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_1__["Y"] : _channel__WEBPACK_IMPORTED_MODULE_1__["X"]);
                scale2.set('domainRaw', { signal: Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, 'data') }, true);
            }
        });
    },
    topLevelSignals: function (model, selCmpt, signals) {
        // Top-level signals are only needed when coordinating composed views.
        if (!model.parent) {
            return signals;
        }
        var channels = selCmpt.scales.filter(function (channel) {
            return !(signals.filter(function (s) { return s.name === Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, 'data'); }).length);
        });
        return signals.concat(channels.map(function (channel) {
            return { name: Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, 'data') };
        }));
    },
    signals: function (model, selCmpt, signals) {
        // Nested signals need only push to top-level signals when within composed views.
        if (model.parent) {
            selCmpt.scales.forEach(function (channel) {
                var signal = signals.filter(function (s) { return s.name === Object(_selection__WEBPACK_IMPORTED_MODULE_4__["channelSignalName"])(selCmpt, channel, 'data'); })[0];
                signal.push = 'outer';
                delete signal.value;
                delete signal.update;
            });
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (scaleBindings);
function domain(model, channel) {
    var scale = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(model.scaleName(channel));
    return "domain(" + scale + ")";
}
//# sourceMappingURL=scales.js.map

/***/ }),

/***/ "7y5G":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/codegen.js ***!
  \********************************************************************/
/*! exports provided: functionContext, expressionFunction, codegenParams, codeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functionContext", function() { return functionContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return expressionFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "codegenParams", function() { return codegenParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "codeGenerator", function() { return codeGenerator; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-expression */ "jjHi");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-color */ "SC+/");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-array */ "vBe5");
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./format */ "7rs/");
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./arrays */ "lXap");
/* harmony import */ var _quarter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quarter */ "Iqbv");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./log */ "eppj");
/* harmony import */ var _inscope__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./inscope */ "ZsOb");
/* harmony import */ var _pinch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pinch */ "w4de");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./window */ "J68V");
/* harmony import */ var _flush__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./flush */ "JQxQ");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "zJeW");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scale */ "gngp");
/* harmony import */ var _scale_gradient__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scale-gradient */ "hTN5");
/* harmony import */ var _geo__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./geo */ "UVlX");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./shape */ "8WB4");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./data */ "QgY1");
/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./tree */ "T4Tz");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./encode */ "CwB2");
/* harmony import */ var _modify__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./modify */ "Amww");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./selection */ "Tpvd");


























// Expression function context object
var functionContext = {
  random: function() { return Object(vega_statistics__WEBPACK_IMPORTED_MODULE_2__["random"])(); }, // override default
  isArray: vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"],
  isBoolean: vega_util__WEBPACK_IMPORTED_MODULE_3__["isBoolean"],
  isDate: vega_util__WEBPACK_IMPORTED_MODULE_3__["isDate"],
  isNumber: vega_util__WEBPACK_IMPORTED_MODULE_3__["isNumber"],
  isObject: vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"],
  isRegExp: vega_util__WEBPACK_IMPORTED_MODULE_3__["isRegExp"],
  isString: vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"],
  isTuple: vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["isTuple"],
  toBoolean: vega_util__WEBPACK_IMPORTED_MODULE_3__["toBoolean"],
  toDate: vega_util__WEBPACK_IMPORTED_MODULE_3__["toDate"],
  toNumber: vega_util__WEBPACK_IMPORTED_MODULE_3__["toNumber"],
  toString: vega_util__WEBPACK_IMPORTED_MODULE_3__["toString"],
  pad: vega_util__WEBPACK_IMPORTED_MODULE_3__["pad"],
  peek: vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"],
  truncate: vega_util__WEBPACK_IMPORTED_MODULE_3__["truncate"],
  rgb: d3_color__WEBPACK_IMPORTED_MODULE_4__["rgb"],
  lab: d3_color__WEBPACK_IMPORTED_MODULE_4__["lab"],
  hcl: d3_color__WEBPACK_IMPORTED_MODULE_4__["hcl"],
  hsl: d3_color__WEBPACK_IMPORTED_MODULE_4__["hsl"],
  sequence: d3_array__WEBPACK_IMPORTED_MODULE_5__["range"],
  format: _format__WEBPACK_IMPORTED_MODULE_6__["format"],
  utcFormat: _format__WEBPACK_IMPORTED_MODULE_6__["utcFormat"],
  utcParse: _format__WEBPACK_IMPORTED_MODULE_6__["utcParse"],
  timeFormat: _format__WEBPACK_IMPORTED_MODULE_6__["timeFormat"],
  timeParse: _format__WEBPACK_IMPORTED_MODULE_6__["timeParse"],
  monthFormat: _format__WEBPACK_IMPORTED_MODULE_6__["monthFormat"],
  monthAbbrevFormat: _format__WEBPACK_IMPORTED_MODULE_6__["monthAbbrevFormat"],
  dayFormat: _format__WEBPACK_IMPORTED_MODULE_6__["dayFormat"],
  dayAbbrevFormat: _format__WEBPACK_IMPORTED_MODULE_6__["dayAbbrevFormat"],
  quarter: _quarter__WEBPACK_IMPORTED_MODULE_8__["quarter"],
  utcquarter: _quarter__WEBPACK_IMPORTED_MODULE_8__["utcquarter"],
  warn: _log__WEBPACK_IMPORTED_MODULE_9__["warn"],
  info: _log__WEBPACK_IMPORTED_MODULE_9__["info"],
  debug: _log__WEBPACK_IMPORTED_MODULE_9__["debug"],
  extent: _arrays__WEBPACK_IMPORTED_MODULE_7__["extent"],
  inScope: _inscope__WEBPACK_IMPORTED_MODULE_10__["default"],
  clampRange: _arrays__WEBPACK_IMPORTED_MODULE_7__["clampRange"],
  pinchDistance: _pinch__WEBPACK_IMPORTED_MODULE_11__["pinchDistance"],
  pinchAngle: _pinch__WEBPACK_IMPORTED_MODULE_11__["pinchAngle"],
  screen: _window__WEBPACK_IMPORTED_MODULE_12__["screen"],
  containerSize: _window__WEBPACK_IMPORTED_MODULE_12__["containerSize"],
  windowSize: _window__WEBPACK_IMPORTED_MODULE_12__["windowSize"],
  span: _arrays__WEBPACK_IMPORTED_MODULE_7__["span"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_14__["default"],
  flush: _flush__WEBPACK_IMPORTED_MODULE_13__["default"],
  bandspace: _scale__WEBPACK_IMPORTED_MODULE_15__["bandspace"],
  inrange: _arrays__WEBPACK_IMPORTED_MODULE_7__["inrange"],
  setdata: _data__WEBPACK_IMPORTED_MODULE_19__["setdata"],
  pathShape: _shape__WEBPACK_IMPORTED_MODULE_18__["pathShape"],
  panLinear: vega_util__WEBPACK_IMPORTED_MODULE_3__["panLinear"],
  panLog: vega_util__WEBPACK_IMPORTED_MODULE_3__["panLog"],
  panPow: vega_util__WEBPACK_IMPORTED_MODULE_3__["panPow"],
  zoomLinear: vega_util__WEBPACK_IMPORTED_MODULE_3__["zoomLinear"],
  zoomLog: vega_util__WEBPACK_IMPORTED_MODULE_3__["zoomLog"],
  zoomPow: vega_util__WEBPACK_IMPORTED_MODULE_3__["zoomPow"],
  encode: _encode__WEBPACK_IMPORTED_MODULE_21__["default"],
  modify: _modify__WEBPACK_IMPORTED_MODULE_22__["default"]
};

var eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'], // event functions
    eventPrefix = 'event.vega.', // event function prefix
    thisPrefix = 'this.', // function context prefix
    astVisitors = {}; // AST visitors for dependency analysis

function expressionFunction(name, fn, visitor) {
  if (arguments.length === 1) {
    return functionContext[name];
  }

  // register with the functionContext
  functionContext[name] = fn;

  // if there is an astVisitor register that, too
  if (visitor) astVisitors[name] = visitor;

  // if the code generator has already been initialized,
  // we need to also register the function with it
  if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;
  return this;
}

// register expression functions with ast visitors
expressionFunction('bandwidth', _scale__WEBPACK_IMPORTED_MODULE_15__["bandwidth"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('copy', _scale__WEBPACK_IMPORTED_MODULE_15__["copy"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('domain', _scale__WEBPACK_IMPORTED_MODULE_15__["domain"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('range', _scale__WEBPACK_IMPORTED_MODULE_15__["range"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('invert', _scale__WEBPACK_IMPORTED_MODULE_15__["invert"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('scale', _scale__WEBPACK_IMPORTED_MODULE_15__["scale"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('gradient', _scale_gradient__WEBPACK_IMPORTED_MODULE_16__["default"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('geoArea', _geo__WEBPACK_IMPORTED_MODULE_17__["geoArea"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('geoBounds', _geo__WEBPACK_IMPORTED_MODULE_17__["geoBounds"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('geoCentroid', _geo__WEBPACK_IMPORTED_MODULE_17__["geoCentroid"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('geoShape', _shape__WEBPACK_IMPORTED_MODULE_18__["geoShape"], _scale__WEBPACK_IMPORTED_MODULE_15__["scaleVisitor"]);
expressionFunction('indata', _data__WEBPACK_IMPORTED_MODULE_19__["indata"], _data__WEBPACK_IMPORTED_MODULE_19__["indataVisitor"]);
expressionFunction('data', _data__WEBPACK_IMPORTED_MODULE_19__["data"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('vlSingle', _selection__WEBPACK_IMPORTED_MODULE_23__["vlPoint"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('vlSingleDomain', _selection__WEBPACK_IMPORTED_MODULE_23__["vlPointDomain"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('vlMulti', _selection__WEBPACK_IMPORTED_MODULE_23__["vlPoint"], _selection__WEBPACK_IMPORTED_MODULE_23__["vlMultiVisitor"]);
expressionFunction('vlMultiDomain', _selection__WEBPACK_IMPORTED_MODULE_23__["vlPointDomain"], _selection__WEBPACK_IMPORTED_MODULE_23__["vlMultiVisitor"]);
expressionFunction('vlInterval', _selection__WEBPACK_IMPORTED_MODULE_23__["vlInterval"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('vlIntervalDomain', _selection__WEBPACK_IMPORTED_MODULE_23__["vlIntervalDomain"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('treePath', _tree__WEBPACK_IMPORTED_MODULE_20__["treePath"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);
expressionFunction('treeAncestors', _tree__WEBPACK_IMPORTED_MODULE_20__["treeAncestors"], _data__WEBPACK_IMPORTED_MODULE_19__["dataVisitor"]);

// Build expression function registry
function buildFunctions(codegen) {
  var fn = Object(vega_expression__WEBPACK_IMPORTED_MODULE_1__["functions"])(codegen);
  eventFunctions.forEach(function(name) { fn[name] = eventPrefix + name; });
  for (var name in functionContext) { fn[name] = thisPrefix + name; }
  return fn;
}

// Export code generator and parameters
var codegenParams = {
  blacklist:  ['_'],
  whitelist:  ['datum', 'event', 'item'],
  fieldvar:   'datum',
  globalvar:  function(id) { return '_[' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])('$' + id) + ']'; },
  functions:  buildFunctions,
  constants:  vega_expression__WEBPACK_IMPORTED_MODULE_1__["constants"],
  visitors:   astVisitors
};

var codeGenerator = Object(vega_expression__WEBPACK_IMPORTED_MODULE_1__["codegen"])(codegenParams);


/***/ }),

/***/ "8/Ji":
/*!*******************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Mark.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Mark; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "HkXN");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Bind scenegraph items to a scenegraph mark instance.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.markdef - The mark definition for creating the mark.
 *   This is an object of legal scenegraph mark properties which *must* include
 *   the 'marktype' property.
 */
function Mark(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Mark, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var mark = this.value;

  // acquire mark on first invocation, bind context and group
  if (!mark) {
    mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);
    mark.group.context = _.context;
    if (!_.context.group) _.context.group = mark.group;
    mark.source = this;
    mark.clip = _.clip;
    mark.interactive = _.interactive;
    this.value = mark;
  }

  // initialize entering items
  var Init = mark.marktype === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"] ? vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["GroupItem"] : vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Item"];
  pulse.visit(pulse.ADD, function(item) { Init.call(item, mark); });

  // update clipping and/or interactive status
  if (_.modified('clip') || _.modified('interactive')) {
    mark.clip = _.clip;
    mark.interactive = !!_.interactive;
    mark.zdirty = true; // force scenegraph re-eval
    pulse.reflow();
  }

  // bind items array to scenegraph mark
  mark.items = pulse.source;
  return pulse;
};

function lookup(_) {
  var g = _.groups, p = _.parent;
  return g && g.size === 1 ? g.get(Object.keys(g.object)[0])
    : g && p ? g.lookup(p)
    : null;
}


/***/ }),

/***/ "85cw":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/facet.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ "8qx1");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "zw9B");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../DataScope */ "/BrR");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "J29t");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, group) {
  var facet = spec.from.facet,
      name = facet.name,
      data = Object(_data__WEBPACK_IMPORTED_MODULE_0__["getDataRef"])(facet, scope),
      subscope, source, values, op;

  if (!facet.name) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must have a name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }
  if (!facet.data) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must reference a data set: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }

  if (facet.field) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["PreFacet"])({
      field: scope.fieldRef(facet.field),
      pulse: data
    }));
  } else if (facet.groupby) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Facet"])({
      key:   scope.keyRef(facet.groupby),
      group: Object(_util__WEBPACK_IMPORTED_MODULE_3__["ref"])(scope.proxy(group.parent)),
      pulse: data
    }));
  } else {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must specify groupby or field: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }

  // initialize facet subscope
  subscope = scope.fork();
  source = subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Collect"])());
  values = subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_3__["ref"])(source)}));
  subscope.addData(name, new _DataScope__WEBPACK_IMPORTED_MODULE_2__["default"](subscope, source, source, values));
  subscope.addSignal('parent', null);

  // parse faceted subflow
  op.params.subflow = {
    $subflow: Object(_spec__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, subscope).toRuntime()
  };
});


/***/ }),

/***/ "8L0m":
/*!********************************************!*\
  !*** ./node_modules/vega-voronoi/index.js ***!
  \********************************************/
/*! exports provided: voronoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Voronoi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Voronoi */ "oe4J");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return _src_Voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "8Mry":
/*!********************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/translateItem.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _translate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./translate */ "E/AX");


/* harmony default export */ __webpack_exports__["default"] = (function(item) {
  return Object(_translate__WEBPACK_IMPORTED_MODULE_0__["default"])(item.x || 0, item.y || 0);
});

/***/ }),

/***/ "8Sdu":
/*!***************************************************!*\
  !*** ./node_modules/vega-event-selector/index.js ***!
  \***************************************************/
/*! exports provided: selector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/event-selector */ "JgVu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return _src_event_selector__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "8WB4":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/shape.js ***!
  \******************************************************************/
/*! exports provided: geoShape, pathShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoShape", function() { return geoShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathShape", function() { return pathShape; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "gngp");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");



function geoShape(projection, geojson, group) {
  var p = Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(projection, (group || this).context);
  return function(context) {
    return p ? p.path.context(context)(geojson) : '';
  }
}

function pathShape(path) {
  var p = null;
  return function(context) {
    return context
      ? Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["pathRender"])(context, (p = p || Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["pathParse"])(path)))
      : path;
  };
}


/***/ }),

/***/ "8a2X":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/pick.js ***!
  \**************************************************************/
/*! exports provided: pick, hitPath, pickPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hitPath", function() { return hitPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickPath", function() { return pickPath; });
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../visit */ "TMLr");


var trueFunc = function() { return true; };

function pick(test) {
  if (!test) test = trueFunc;

  return function(context, scene, x, y, gx, gy) {
    x *= context.pixelRatio;
    y *= context.pixelRatio;

    return Object(_visit__WEBPACK_IMPORTED_MODULE_0__["pickVisit"])(scene, function(item) {
      var b = item.bounds;
      // first hit test against bounding box
      if ((b && !b.contains(gx, gy)) || !b) return;
      // if in bounding box, perform more careful test
      if (test(context, item, x, y, gx, gy)) return item;
    });
  };
}

function hitPath(path, filled) {
  return function(context, o, x, y) {
    var item = Array.isArray(o) ? o[0] : o,
        fill = (filled == null) ? item.fill : filled,
        stroke = item.stroke && context.isPointInStroke, lw, lc;

    if (stroke) {
      lw = item.strokeWidth;
      lc = item.strokeCap;
      context.lineWidth = lw != null ? lw : 1;
      context.lineCap   = lc != null ? lc : 'butt';
    }

    return path(context, o) ? false :
      (fill && context.isPointInPath(x, y)) ||
      (stroke && context.isPointInStroke(x, y));
  };
}

function pickPath(path) {
  return pick(hitPath(path));
}


/***/ }),

/***/ "8fNt":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/parse.js ***!
  \****************************************************************/
/*! exports provided: parseUnitAxis, parseLayerAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitAxis", function() { return parseUnitAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLayerAxis", function() { return parseLayerAxis; });
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../axis */ "0iGg");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../resolve */ "aZSk");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./component */ "dW5G");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config */ "kLXP");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encode */ "LKV9");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./properties */ "ox7e");











function parseUnitAxis(model) {
    return _channel__WEBPACK_IMPORTED_MODULE_1__["POSITION_SCALE_CHANNELS"].reduce(function (axis, channel) {
        if (model.component.scales[channel] && model.axis(channel)) {
            axis[channel] = [parseAxis(channel, model)];
        }
        return axis;
    }, {});
}
var OPPOSITE_ORIENT = {
    bottom: 'top',
    top: 'bottom',
    left: 'right',
    right: 'left'
};
function parseLayerAxis(model) {
    var _a = model.component, axes = _a.axes, resolve = _a.resolve;
    var axisCount = { top: 0, bottom: 0, right: 0, left: 0 };
    for (var _i = 0, _b = model.children; _i < _b.length; _i++) {
        var child = _b[_i];
        child.parseAxisAndHeader();
        for (var _c = 0, _d = Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(child.component.axes); _c < _d.length; _c++) {
            var channel = _d[_c];
            resolve.axis[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_5__["parseGuideResolve"])(model.component.resolve, channel);
            if (resolve.axis[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                axes[channel] = mergeAxisComponents(axes[channel], child.component.axes[channel]);
                if (!axes[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the axis shared.
                    // Thus, mark axis as independent and remove the axis component.
                    resolve.axis[channel] = 'independent';
                    delete axes[channel];
                }
            }
        }
    }
    // Move axes to layer's axis component and merge shared axes
    for (var _e = 0, _f = [_channel__WEBPACK_IMPORTED_MODULE_1__["X"], _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]]; _e < _f.length; _e++) {
        var channel = _f[_e];
        for (var _g = 0, _h = model.children; _g < _h.length; _g++) {
            var child = _h[_g];
            if (!child.component.axes[channel]) {
                // skip if the child does not have a particular axis
                continue;
            }
            if (resolve.axis[channel] === 'independent') {
                // If axes are independent, concat the axisComponent array.
                axes[channel] = (axes[channel] || []).concat(child.component.axes[channel]);
                // Automatically adjust orient
                for (var _j = 0, _k = child.component.axes[channel]; _j < _k.length; _j++) {
                    var axisComponent = _k[_j];
                    var _l = axisComponent.getWithExplicit('orient'), orient = _l.value, explicit = _l.explicit;
                    if (axisCount[orient] > 0 && !explicit) {
                        // Change axis orient if the number do not match
                        var oppositeOrient = OPPOSITE_ORIENT[orient];
                        if (axisCount[orient] > axisCount[oppositeOrient]) {
                            axisComponent.set('orient', oppositeOrient, false);
                        }
                    }
                    axisCount[orient]++;
                    // TODO(https://github.com/vega/vega-lite/issues/2634): automaticaly add extra offset?
                }
            }
            // After merging, make sure to remove axes from child
            delete child.component.axes[channel];
        }
    }
}
function mergeAxisComponents(mergedAxisCmpts, childAxisCmpts) {
    if (mergedAxisCmpts) {
        // FIXME: this is a bit wrong once we support multiple axes
        if (mergedAxisCmpts.length !== childAxisCmpts.length) {
            return undefined; // Cannot merge axis component with different number of axes.
        }
        var length_1 = mergedAxisCmpts.length;
        for (var i = 0; i < length_1; i++) {
            var merged = mergedAxisCmpts[i];
            var child = childAxisCmpts[i];
            if ((!!merged) !== (!!child)) {
                return undefined;
            }
            else if (merged && child) {
                var mergedOrient = merged.getWithExplicit('orient');
                var childOrient = child.getWithExplicit('orient');
                if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
                    // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
                    // Cannot merge due to inconsistent orient
                    return undefined;
                }
                else {
                    mergedAxisCmpts[i] = mergeAxisComponent(merged, child);
                }
            }
        }
    }
    else {
        // For first one, return a copy of the child
        return childAxisCmpts.map(function (axisComponent) { return axisComponent.clone(); });
    }
    return mergedAxisCmpts;
}
function mergeAxisComponent(merged, child) {
    var _loop_1 = function (prop) {
        var mergedValueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_6__["mergeValuesWithExplicit"])(merged.getWithExplicit(prop), child.getWithExplicit(prop), prop, 'axis', 
        // Tie breaker function
        function (v1, v2) {
            switch (prop) {
                case 'title':
                    return Object(_common__WEBPACK_IMPORTED_MODULE_4__["mergeTitleComponent"])(v1, v2);
                case 'gridScale':
                    return {
                        explicit: v1.explicit,
                        value: v1.value || v2.value
                    };
            }
            return Object(_split__WEBPACK_IMPORTED_MODULE_6__["defaultTieBreaker"])(v1, v2, prop, 'axis');
        });
        merged.setWithExplicit(prop, mergedValueWithExplicit);
    };
    for (var _i = 0, VG_AXIS_PROPERTIES_1 = _axis__WEBPACK_IMPORTED_MODULE_0__["VG_AXIS_PROPERTIES"]; _i < VG_AXIS_PROPERTIES_1.length; _i++) {
        var prop = VG_AXIS_PROPERTIES_1[_i];
        _loop_1(prop);
    }
    return merged;
}
function getFieldDefTitle(model, channel) {
    var channel2 = channel === 'x' ? 'x2' : 'y2';
    var fieldDef = model.fieldDef(channel);
    var fieldDef2 = model.fieldDef(channel2);
    var title1 = fieldDef ? fieldDef.title : undefined;
    var title2 = fieldDef2 ? fieldDef2.title : undefined;
    if (title1 && title2) {
        return Object(_common__WEBPACK_IMPORTED_MODULE_4__["mergeTitle"])(title1, title2);
    }
    else if (title1) {
        return title1;
    }
    else if (title2) {
        return title2;
    }
    else if (title1 !== undefined) { // falsy value to disable config
        return title1;
    }
    else if (title2 !== undefined) { // falsy value to disable config
        return title2;
    }
    return undefined;
}
function parseAxis(channel, model) {
    var axis = model.axis(channel);
    var axisComponent = new _component__WEBPACK_IMPORTED_MODULE_7__["AxisComponent"]();
    // 1.2. Add properties
    _axis__WEBPACK_IMPORTED_MODULE_0__["VG_AXIS_PROPERTIES"].forEach(function (property) {
        var value = getProperty(property, axis, channel, model);
        if (value !== undefined) {
            var explicit = 
            // specified axis.values is already respected, but may get transformed.
            property === 'values' ? !!axis.values :
                // both VL axis.encoding and axis.labelAngle affect VG axis.encode
                property === 'encode' ? !!axis.encoding || !!axis.labelAngle :
                    // title can be explicit if fieldDef.title is set
                    property === 'title' && value === getFieldDefTitle(model, channel) ? true :
                        // Otherwise, things are explicit if the returned value matches the specified property
                        value === axis[property];
            var configValue = Object(_config__WEBPACK_IMPORTED_MODULE_8__["getAxisConfig"])(property, model.config, channel, axisComponent.get('orient'), model.getScaleComponent(channel).get('type'));
            // only set property if it is explicitly set or has no config value (otherwise we will accidentally override config)
            if (explicit || configValue === undefined) {
                // Do not apply implicit rule if there is a config value
                axisComponent.set(property, value, explicit);
            }
            else if (property === 'grid' && configValue) {
                // Grid is an exception because we need to set grid = true to generate another grid axis
                axisComponent.set(property, configValue, false);
            }
        }
    });
    // 2) Add guide encode definition groups
    var axisEncoding = axis.encoding || {};
    var axisEncode = _axis__WEBPACK_IMPORTED_MODULE_0__["AXIS_PARTS"].reduce(function (e, part) {
        if (!axisComponent.hasAxisPart(part)) {
            // No need to create encode for a disabled part.
            return e;
        }
        var axisEncodingPart = Object(_common__WEBPACK_IMPORTED_MODULE_4__["guideEncodeEntry"])(axisEncoding[part] || {}, model);
        var value = part === 'labels' ?
            _encode__WEBPACK_IMPORTED_MODULE_9__["labels"](model, channel, axisEncodingPart, axisComponent.get('orient')) :
            axisEncodingPart;
        if (value !== undefined && Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    // FIXME: By having encode as one property, we won't have fine grained encode merging.
    if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(axisEncode).length > 0) {
        axisComponent.set('encode', axisEncode, !!axis.encoding || axis.labelAngle !== undefined);
    }
    return axisComponent;
}
function getProperty(property, specifiedAxis, channel, model) {
    var fieldDef = model.fieldDef(channel);
    switch (property) {
        case 'scale':
            return model.scaleName(channel);
        case 'gridScale':
            return _properties__WEBPACK_IMPORTED_MODULE_10__["gridScale"](model, channel);
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            return Object(_common__WEBPACK_IMPORTED_MODULE_4__["numberFormat"])(fieldDef, specifiedAxis.format, model.config);
        case 'grid': {
            var scaleType = model.getScaleComponent(channel).get('type');
            return Object(_common__WEBPACK_IMPORTED_MODULE_4__["getSpecifiedOrDefaultValue"])(specifiedAxis.grid, _properties__WEBPACK_IMPORTED_MODULE_10__["grid"](scaleType, fieldDef));
        }
        case 'labelFlush':
            return _properties__WEBPACK_IMPORTED_MODULE_10__["labelFlush"](fieldDef, channel, specifiedAxis);
        case 'labelOverlap': {
            var scaleType = model.getScaleComponent(channel).get('type');
            return _properties__WEBPACK_IMPORTED_MODULE_10__["labelOverlap"](fieldDef, specifiedAxis, channel, scaleType);
        }
        case 'orient':
            return Object(_common__WEBPACK_IMPORTED_MODULE_4__["getSpecifiedOrDefaultValue"])(specifiedAxis.orient, _properties__WEBPACK_IMPORTED_MODULE_10__["orient"](channel));
        case 'tickCount': {
            var scaleType = model.getScaleComponent(channel).get('type');
            var sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
            var size = sizeType ? model.getSizeSignalRef(sizeType)
                : undefined;
            return Object(_common__WEBPACK_IMPORTED_MODULE_4__["getSpecifiedOrDefaultValue"])(specifiedAxis.tickCount, _properties__WEBPACK_IMPORTED_MODULE_10__["tickCount"](channel, fieldDef, scaleType, size));
        }
        case 'title':
            var channel2 = channel === 'x' ? 'x2' : 'y2';
            var fieldDef2 = model.fieldDef(channel2);
            // Keep undefined so we use default if title is unspecified.
            // For other falsy value, keep them so we will hide the title.
            var fieldDefTitle = getFieldDefTitle(model, channel);
            var specifiedTitle = fieldDefTitle !== undefined ? fieldDefTitle :
                specifiedAxis.title === undefined ? undefined : specifiedAxis.title;
            return Object(_common__WEBPACK_IMPORTED_MODULE_4__["getSpecifiedOrDefaultValue"])(specifiedTitle, 
            // If title not specified, store base parts of fieldDef (and fieldDef2 if exists)
            Object(_common__WEBPACK_IMPORTED_MODULE_4__["mergeTitleFieldDefs"])([Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["toFieldDefBase"])(fieldDef)], fieldDef2 ? [Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["toFieldDefBase"])(fieldDef2)] : []));
        case 'values':
            return _properties__WEBPACK_IMPORTED_MODULE_10__["values"](specifiedAxis, model, fieldDef, channel);
    }
    // Otherwise, return specified property.
    return Object(_axis__WEBPACK_IMPORTED_MODULE_0__["isAxisProperty"])(property) ? specifiedAxis[property] : undefined;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "8gyZ":
/*!*************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Pulse.js ***!
  \*************************************************/
/*! exports provided: StopPropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StopPropagation", function() { return StopPropagation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pulse; });
/* harmony import */ var _Tuple__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tuple */ "5VU1");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Sentinel value indicating pulse propagation should stop.
 */
var StopPropagation = {};

// Pulse visit type flags
var ADD       = (1 << 0),
    REM       = (1 << 1),
    MOD       = (1 << 2),
    ADD_REM   = ADD | REM,
    ADD_MOD   = ADD | MOD,
    ALL       = ADD | REM | MOD,
    REFLOW    = (1 << 3),
    SOURCE    = (1 << 4),
    NO_SOURCE = (1 << 5),
    NO_FIELDS = (1 << 6);

/**
 * A Pulse enables inter-operator communication during a run of the
 * dataflow graph. In addition to the current timestamp, a pulse may also
 * contain a change-set of added, removed or modified data tuples, as well as
 * a pointer to a full backing data source. Tuple change sets may not
 * be fully materialized; for example, to prevent needless array creation
 * a change set may include larger arrays and corresponding filter functions.
 * The pulse provides a {@link visit} method to enable proper and efficient
 * iteration over requested data tuples.
 *
 * In addition, each pulse can track modification flags for data tuple fields.
 * Responsible transform operators should call the {@link modifies} method to
 * indicate changes to data fields. The {@link modified} method enables
 * querying of this modification state.
 *
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The current propagation timestamp.
 * @param {string} [encode] - An optional encoding set name, which is then
 *   accessible as Pulse.encode. Operators can respond to (or ignore) this
 *   setting as appropriate. This parameter can be used in conjunction with
 *   the Encode transform in the vega-encode module.
 */
function Pulse(dataflow, stamp, encode) {
  this.dataflow = dataflow;
  this.stamp = stamp == null ? -1 : stamp;
  this.add = [];
  this.rem = [];
  this.mod = [];
  this.fields = null;
  this.encode = encode || null;
}

var prototype = Pulse.prototype;

/**
 * Sentinel value indicating pulse propagation should stop.
 */
prototype.StopPropagation = StopPropagation;

/**
 * Boolean flag indicating ADD (added) tuples.
 */
prototype.ADD = ADD;

/**
 * Boolean flag indicating REM (removed) tuples.
 */
prototype.REM = REM;

/**
 * Boolean flag indicating MOD (modified) tuples.
 */
prototype.MOD = MOD;

/**
 * Boolean flag indicating ADD (added) and REM (removed) tuples.
 */
prototype.ADD_REM = ADD_REM;

/**
 * Boolean flag indicating ADD (added) and MOD (modified) tuples.
 */
prototype.ADD_MOD = ADD_MOD;

/**
 * Boolean flag indicating ADD, REM and MOD tuples.
 */
prototype.ALL = ALL;

/**
 * Boolean flag indicating all tuples in a data source
 * except for the ADD, REM and MOD tuples.
 */
prototype.REFLOW = REFLOW;

/**
 * Boolean flag indicating a 'pass-through' to a
 * backing data source, ignoring ADD, REM and MOD tuples.
 */
prototype.SOURCE = SOURCE;

/**
 * Boolean flag indicating that source data should be
 * suppressed when creating a forked pulse.
 */
prototype.NO_SOURCE = NO_SOURCE;

/**
 * Boolean flag indicating that field modifications should be
 * suppressed when creating a forked pulse.
 */
prototype.NO_FIELDS = NO_FIELDS;

/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created.
 * @return {Pulse} - The forked pulse instance.
 * @see init
 */
prototype.fork = function(flags) {
  return new Pulse(this.dataflow).init(this, flags);
};

/**
 * Creates a copy of this pulse with new materialized array
 * instances for the ADD, REM, MOD, and SOURCE arrays.
 * The dataflow, time stamp and field modification values are copied over.
 * @return {Pulse} - The cloned pulse instance.
 * @see init
 */
prototype.clone = function() {
  var p = this.fork(ALL);
  p.add = p.add.slice();
  p.rem = p.rem.slice();
  p.mod = p.mod.slice();
  if (p.source) p.source = p.source.slice();
  return p.materialize(ALL | SOURCE);
};

/**
 * Returns a pulse that adds all tuples from a backing source. This is
 * useful for cases where operators are added to a dataflow after an
 * upstream data pipeline has already been processed, ensuring that
 * new operators can observe all tuples within a stream.
 * @return {Pulse} - A pulse instance with all source tuples included
 *   in the add array. If the current pulse already has all source
 *   tuples in its add array, it is returned directly. If the current
 *   pulse does not have a backing source, it is returned directly.
 */
prototype.addAll = function() {
  var p = this;
  if (!this.source || this.source.length === this.add.length) {
    return p;
  } else {
    p = new Pulse(this.dataflow).init(this);
    p.add = p.source;
    return p;
  }
};

/**
 * Initialize this pulse based on the values of another pulse. This method
 * is used internally by {@link fork} to initialize a new forked tuple.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {Pulse} src - The source pulse to copy from.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created. By default, source data arrays are copied
 *   to the new pulse. Use the NO_SOURCE flag to enforce a null source.
 * @return {Pulse} - Returns this Pulse instance.
 */
prototype.init = function(src, flags) {
  var p = this;
  p.stamp = src.stamp;
  p.encode = src.encode;

  if (src.fields && !(flags & NO_FIELDS)) {
    p.fields = src.fields;
  }

  if (flags & ADD) {
    p.addF = src.addF;
    p.add = src.add;
  } else {
    p.addF = null;
    p.add = [];
  }

  if (flags & REM) {
    p.remF = src.remF;
    p.rem = src.rem;
  } else {
    p.remF = null;
    p.rem = [];
  }

  if (flags & MOD) {
    p.modF = src.modF;
    p.mod = src.mod;
  } else {
    p.modF = null;
    p.mod = [];
  }

  if (flags & NO_SOURCE) {
    p.srcF = null;
    p.source = null;
  } else {
    p.srcF = src.srcF;
    p.source = src.source;
  }

  return p;
};

/**
 * Schedules a function to run after pulse propagation completes.
 * @param {function} func - The function to run.
 */
prototype.runAfter = function(func) {
  this.dataflow.runAfter(func);
};

/**
 * Indicates if tuples have been added, removed or modified.
 * @param {number} [flags] - The tuple types (ADD, REM or MOD) to query.
 *   Defaults to ALL, returning true if any tuple type has changed.
 * @return {boolean} - Returns true if one or more queried tuple types have
 *   changed, false otherwise.
 */
prototype.changed = function(flags) {
  var f = flags || ALL;
  return ((f & ADD) && this.add.length)
      || ((f & REM) && this.rem.length)
      || ((f & MOD) && this.mod.length);
};

/**
 * Forces a "reflow" of tuple values, such that all tuples in the backing
 * source are added to the MOD set, unless already present in the ADD set.
 * @param {boolean} [fork=false] - If true, returns a forked copy of this
 *   pulse, and invokes reflow on that derived pulse.
 * @return {Pulse} - The reflowed pulse instance.
 */
prototype.reflow = function(fork) {
  if (fork) return this.fork(ALL).reflow();

  var len = this.add.length,
      src = this.source && this.source.length;
  if (src && src !== len) {
    this.mod = this.source;
    if (len) this.filter(MOD, filter(this, ADD));
  }
  return this;
};

/**
 * Marks one or more data field names as modified to assist dependency
 * tracking and incremental processing by transform operators.
 * @param {string|Array<string>} _ - The field(s) to mark as modified.
 * @return {Pulse} - This pulse instance.
 */
prototype.modifies = function(_) {
  var fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_),
      hash = this.fields || (this.fields = {});
  fields.forEach(function(f) { hash[f] = true; });
  return this;
};

/**
 * Checks if one or more data fields have been modified during this pulse
 * propagation timestamp.
 * @param {string|Array<string>} _ - The field(s) to check for modified.
 * @return {boolean} - Returns true if any of the provided fields has been
 *   marked as modified, false otherwise.
 */
prototype.modified = function(_) {
  var fields = this.fields;
  return !(this.mod.length && fields) ? false
    : !arguments.length ? !!fields
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_) ? _.some(function(f) { return fields[f]; })
    : fields[_];
};

/**
 * Adds a filter function to one more tuple sets. Filters are applied to
 * backing tuple arrays, to determine the actual set of tuples considered
 * added, removed or modified. They can be used to delay materialization of
 * a tuple set in order to avoid expensive array copies. In addition, the
 * filter functions can serve as value transformers: unlike standard predicate
 * function (which return boolean values), Pulse filters should return the
 * actual tuple value to process. If a tuple set is already filtered, the
 * new filter function will be appended into a conjuntive ('and') query.
 * @param {number} flags - Flags indicating the tuple set(s) to filter.
 * @param {function(*):object} filter - Filter function that will be applied
 *   to the tuple set array, and should return a data tuple if the value
 *   should be included in the tuple set, and falsy (or null) otherwise.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.filter = function(flags, filter) {
  var p = this;
  if (flags & ADD) p.addF = addFilter(p.addF, filter);
  if (flags & REM) p.remF = addFilter(p.remF, filter);
  if (flags & MOD) p.modF = addFilter(p.modF, filter);
  if (flags & SOURCE) p.srcF = addFilter(p.srcF, filter);
  return p;
};

function addFilter(a, b) {
  return a ? function(t,i) { return a(t,i) && b(t,i); } : b;
}

/**
 * Materialize one or more tuple sets in this pulse. If the tuple set(s) have
 * a registered filter function, it will be applied and the tuple set(s) will
 * be replaced with materialized tuple arrays.
 * @param {number} flags - Flags indicating the tuple set(s) to materialize.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.materialize = function(flags) {
  flags = flags || ALL;
  var p = this;
  if ((flags & ADD) && p.addF) {
    p.add = materialize(p.add, p.addF);
    p.addF = null;
  }
  if ((flags & REM) && p.remF) {
    p.rem = materialize(p.rem, p.remF);
    p.remF = null;
  }
  if ((flags & MOD) && p.modF) {
    p.mod = materialize(p.mod, p.modF);
    p.modF = null;
  }
  if ((flags & SOURCE) && p.srcF) {
    p.source = p.source.filter(p.srcF);
    p.srcF = null;
  }
  return p;
};

function materialize(data, filter) {
  var out = [];
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(data, filter, function(_) { out.push(_); });
  return out;
}

function filter(pulse, flags) {
  var map = {};
  pulse.visit(flags, function(t) { map[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });
  return function(t) { return map[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] ? null : t; };
}

/**
 * Visit one or more tuple sets in this pulse.
 * @param {number} flags - Flags indicating the tuple set(s) to visit.
 *   Legal values are ADD, REM, MOD and SOURCE (if a backing data source
 *   has been set).
 * @param {function(object):*} - Visitor function invoked per-tuple.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.visit = function(flags, visitor) {
  var p = this, v = visitor, src, sum;

  if (flags & SOURCE) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.source, p.srcF, v);
    return p;
  }

  if (flags & ADD) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.add, p.addF, v);
  if (flags & REM) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.rem, p.remF, v);
  if (flags & MOD) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.mod, p.modF, v);

  if ((flags & REFLOW) && (src = p.source)) {
    sum = p.add.length + p.mod.length;
    if (sum === src.length) {
      // do nothing
    } else if (sum) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(src, filter(p, ADD_MOD), v);
    } else {
      // if no add/rem/mod tuples, visit source
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(src, p.srcF, v);
    }
  }

  return p;
};


/***/ }),

/***/ "8qx1":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/data.js ***!
  \************************************************************/
/*! exports provided: default, getDataRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataRef", function() { return getDataRef; });
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transform */ "LX4U");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/* harmony default export */ __webpack_exports__["default"] = (function(from, group, scope) {
  var facet, key, op, dataRef, parent;

  // if no source data, generate singleton datum
  if (!from) {
    dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_2__["Collect"])(null, [{}])));
  }

  // if faceted, process facet specification
  else if (facet = from.facet) {
    if (!group) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Only group marks can be faceted.');

    // use pre-faceted source data, if available
    if (facet.field != null) {
      dataRef = parent = getDataRef(facet, scope);
    } else {
      // generate facet aggregates if no direct data specification
      if (!from.data) {
        op = Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["extend"])({
          type:    'aggregate',
          groupby: Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(facet.groupby)
        }, facet.aggregate), scope);
        op.params.key = scope.keyRef(facet.groupby);
        op.params.pulse = getDataRef(facet, scope);
        dataRef = parent = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(op));
      } else {
        parent = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(from.data).aggregate);
      }

      key = scope.keyRef(facet.groupby, true);
    }
  }

  // if not yet defined, get source data reference
  if (!dataRef) {
    dataRef = getDataRef(from, scope);
  }

  return {
    key: key,
    pulse: dataRef,
    parent: parent
  };
});

function getDataRef(from, scope) {
  return from.$ref ? from
    : from.data && from.data.$ref ? from.data
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(from.data).output);
}

/***/ }),

/***/ "8yVq":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/update.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream */ "koaG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-event-selector */ "8Sdu");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






var preamble = 'var datum=event.item&&event.item.datum;';

/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, target) {
  var events = spec.events,
      update = spec.update,
      encode = spec.encode,
      sources = [],
      value = '', entry;

  if (!events) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Signal update missing events specification.');
  }

  // interpret as an event selector string
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(events)) {
    events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_3__["selector"])(events, scope.isSubscope() ? _util__WEBPACK_IMPORTED_MODULE_2__["Scope"] : _util__WEBPACK_IMPORTED_MODULE_2__["View"]);
  }

  // separate event streams from signal updates
  events = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(events).filter(function(stream) {
    if (stream.signal || stream.scale) {
      sources.push(stream);
      return 0;
    } else {
      return 1;
    }
  });

  // merge event streams, include as source
  if (events.length) {
    sources.push(events.length > 1 ? {merge: events} : events[0]);
  }

  if (encode != null) {
    if (update) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Signal encode and update are mutually exclusive.');
    update = 'encode(item(),' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(encode) + ')';
  }

  // resolve update value
  value = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(update) ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update, scope, preamble)
    : update.expr != null ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update.expr, scope, preamble)
    : update.value != null ? update.value
    : update.signal != null ? {
        $expr:   '_.value',
        $params: {value: scope.signalRef(update.signal)}
      }
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Invalid signal update specification.');

  entry = {
    target: target,
    update: value
  };

  if (spec.force) {
    entry.options = {force: true};
  }

  sources.forEach(function(source) {
    scope.addUpdate(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])(streamSource(source, scope), entry));
  });
});

function streamSource(stream, scope) {
  return {
    source: stream.signal ? scope.signalRef(stream.signal)
          : stream.scale ? scope.scaleRef(stream.scale)
          : Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(stream, scope)
  };
}


/***/ }),

/***/ "939a":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/extend.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  for (var x, k, i=1, len=arguments.length; i<len; ++i) {
    x = arguments[i];
    for (k in x) { _[k] = x[k]; }
  }
  return _;
});


/***/ }),

/***/ "9C4T":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/header.js ***!
  \****************************************************/
/*! exports provided: HEADER_TITLE_PROPERTIES_MAP, HEADER_LABEL_PROPERTIES_MAP, HEADER_TITLE_PROPERTIES, HEADER_LABEL_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TITLE_PROPERTIES_MAP", function() { return HEADER_TITLE_PROPERTIES_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_LABEL_PROPERTIES_MAP", function() { return HEADER_LABEL_PROPERTIES_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TITLE_PROPERTIES", function() { return HEADER_TITLE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_LABEL_PROPERTIES", function() { return HEADER_LABEL_PROPERTIES; });
var HEADER_TITLE_PROPERTIES_MAP = {
    titleAnchor: 'anchor',
    titleAngle: 'angle',
    titleBaseline: 'baseline',
    titleColor: 'color',
    titleFont: 'font',
    titleFontSize: 'fontSize',
    titleFontWeight: 'fontWeight',
    titleLimit: 'limit'
};
var HEADER_LABEL_PROPERTIES_MAP = {
    labelAngle: 'angle',
    labelColor: 'color',
    labelFont: 'font',
    labelFontSize: 'fontSize',
    labelLimit: 'limit',
};
var HEADER_TITLE_PROPERTIES = Object.keys(HEADER_TITLE_PROPERTIES_MAP);
var HEADER_LABEL_PROPERTIES = Object.keys(HEADER_LABEL_PROPERTIES_MAP);
//# sourceMappingURL=header.js.map

/***/ }),

/***/ "9UmT":
/*!***********************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-image-url.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "zugC");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");



/**
 * Produce an image URL for the visualization. Depending on the type
 * parameter, the generated URL contains data for either a PNG or SVG image.
 * The URL can be used (for example) to download images of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.
 *   The 'canvas' and 'png' types are synonyms for a PNG image.
 * @return {Promise} - A promise that resolves to an image URL.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(type, scaleFactor) {
  return (type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].Canvas && type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG && type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].PNG)
    ? Promise.reject('Unrecognized image type: ' + type)
    : Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, type, scaleFactor).then(function(renderer) {
        return type === vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG
          ? toBlobURL(renderer.svg(), 'image/svg+xml')
          : renderer.canvas().toDataURL('image/png');
      });
});

function toBlobURL(data, mime) {
  var blob = new Blob([data], {type: mime});
  return window.URL.createObjectURL(blob);
}


/***/ }),

/***/ "9WUu":
/*!**********************************************!*\
  !*** ./node_modules/vega-loader/src/type.js ***!
  \**********************************************/
/*! exports provided: typeParsers, inferType, inferTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return typeParsers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return inferType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return inferTypes; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var typeParsers = {
  boolean: vega_util__WEBPACK_IMPORTED_MODULE_0__["toBoolean"],
  integer: vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"],
  number:  vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"],
  date:    vega_util__WEBPACK_IMPORTED_MODULE_0__["toDate"],
  string:  vega_util__WEBPACK_IMPORTED_MODULE_0__["toString"],
  unknown: vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"]
};

var typeTests = [
  isBoolean,
  isInteger,
  isNumber,
  isDate
];

var typeList = [
  'boolean',
  'integer',
  'number',
  'date'
];

function inferType(values, field) {
  if (!values || !values.length) return 'unknown';

  var value, i, j, t = 0,
      n = values.length,
      m = typeTests.length,
      a = typeTests.map(function(_, i) { return i + 1; });

  for (i=0, n=values.length; i<n; ++i) {
    value = field ? values[i][field] : values[i];
    for (j=0; j<m; ++j) {
      if (a[j] && isValid(value) && !typeTests[j](value)) {
        a[j] = 0;
        ++t;
        if (t === typeTests.length) return 'string';
      }
    }
  }

  t = a.reduce(function(u, v) { return u === 0 ? v : u; }, 0) - 1;
  return typeList[t];
}

function inferTypes(data, fields) {
  return fields.reduce(function(types, field) {
    types[field] = inferType(data, field);
    return types;
  }, {});
}

// -- Type Checks ----

function isValid(_) {
  return _ != null && _ === _;
}

function isBoolean(_) {
  return _ === 'true' || _ === 'false' || _ === true || _ === false;
}

function isDate(_) {
  return !isNaN(Date.parse(_));
}

function isNumber(_) {
  return !isNaN(+_) && !(_ instanceof Date);
}

function isInteger(_) {
  return isNumber(_) && (_=+_) === ~~_;
}


/***/ }),

/***/ "9b3q":
/*!*********************************************************!*\
  !*** ./node_modules/vega-transforms/src/MultiExtent.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiExtent; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Computes global min/max extents over a collection of extents.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<number>>} params.extents - The input extents.
 */
function MultiExtent(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiExtent, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  if (this.value && !_.modified()) {
    return this.value;
  }

  var min = +Infinity,
      max = -Infinity,
      ext = _.extents,
      i, n, e;

  for (i=0, n=ext.length; i<n; ++i) {
    e = ext[i];
    if (e[0] < min) min = e[0];
    if (e[1] > max) max = e[1];
  }
  return [min, max];
}


/***/ }),

/***/ "ABo2":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/repeat.js ***!
  \************************************************************/
/*! exports provided: RepeatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatModel", function() { return RepeatModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _baseconcat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseconcat */ "jLeK");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buildmodel */ "zzEA");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layoutsize/parse */ "drwQ");





var RepeatModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatModel, _super);
    function RepeatModel(spec, parent, parentGivenName, repeatValues, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, repeatValues, spec.resolve) || this;
        _this.type = 'repeat';
        if (spec.resolve && spec.resolve.axis && (spec.resolve.axis.x === 'shared' || spec.resolve.axis.y === 'shared')) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].REPEAT_CANNOT_SHARE_AXIS);
        }
        _this.repeat = spec.repeat;
        _this.children = _this._initChildren(spec, _this.repeat, repeatValues, config);
        return _this;
    }
    RepeatModel.prototype._initChildren = function (spec, repeat, repeater, config) {
        var children = [];
        var row = repeat.row || [repeater ? repeater.row : null];
        var column = repeat.column || [repeater ? repeater.column : null];
        // cross product
        for (var _i = 0, row_1 = row; _i < row_1.length; _i++) {
            var rowField = row_1[_i];
            for (var _a = 0, column_1 = column; _a < column_1.length; _a++) {
                var columnField = column_1[_a];
                var name_1 = (rowField ? '_' + rowField : '') + (columnField ? '_' + columnField : '');
                var childRepeat = {
                    row: rowField,
                    column: columnField
                };
                children.push(Object(_buildmodel__WEBPACK_IMPORTED_MODULE_3__["buildModel"])(spec.spec, this, this.getName('child' + name_1), undefined, childRepeat, config, false));
            }
        }
        return children;
    };
    RepeatModel.prototype.parseLayoutSize = function () {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__["parseRepeatLayoutSize"])(this);
    };
    RepeatModel.prototype.assembleDefaultLayout = function () {
        return {
            columns: this.repeat && this.repeat.column ? this.repeat.column.length : 1,
            bounds: 'full',
            align: 'all'
        };
    };
    return RepeatModel;
}(_baseconcat__WEBPACK_IMPORTED_MODULE_2__["BaseConcatModel"]));

//# sourceMappingURL=repeat.js.map

/***/ }),

/***/ "ACir":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/point.js ***!
  \****************************************************************/
/*! exports provided: shapeMixins, point, circle, square */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shapeMixins", function() { return shapeMixins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circle", function() { return circle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "square", function() { return square; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./valueref */ "vfFY");




function encodeEntry(model, fixedShape) {
    var config = model.config, width = model.width, height = model.height;
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_2__["baseEncodeEntry"](model, { size: 'include', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_2__["nonPosition"]('size', model), shapeMixins(model, config, fixedShape));
}
function shapeMixins(model, config, fixedShape) {
    if (fixedShape) {
        return { shape: { value: fixedShape } };
    }
    return _mixins__WEBPACK_IMPORTED_MODULE_2__["nonPosition"]('shape', model, { defaultValue: Object(_common__WEBPACK_IMPORTED_MODULE_1__["getMarkConfig"])('shape', model.markDef, config) });
}
var point = {
    vgMark: 'symbol',
    encodeEntry: function (model) {
        return encodeEntry(model);
    }
};
var circle = {
    vgMark: 'symbol',
    encodeEntry: function (model) {
        return encodeEntry(model, 'circle');
    }
};
var square = {
    vgMark: 'symbol',
    encodeEntry: function (model) {
        return encodeEntry(model, 'square');
    }
};
//# sourceMappingURL=point.js.map

/***/ }),

/***/ "AQU9":
/*!**************************************************!*\
  !*** ./node_modules/vega-encode/src/LinkPath.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LinkPath; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



var Paths = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])({
  'line': line,
  'line-radial': lineR,
  'arc': arc,
  'arc-radial': arcR,
  'curve': curve,
  'curve-radial': curveR,
  'orthogonal-horizontal': orthoX,
  'orthogonal-vertical': orthoY,
  'orthogonal-radial': orthoR,
  'diagonal-horizontal': diagonalX,
  'diagonal-vertical': diagonalY,
  'diagonal-radial': diagonalR
});

function sourceX(t) { return t.source.x; }
function sourceY(t) { return t.source.y; }
function targetX(t) { return t.target.x; }
function targetY(t) { return t.target.y; }

 /**
  * Layout paths linking source and target elements.
  * @constructor
  * @param {object} params - The parameters for this operator.
  */
function LinkPath(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, {}, params);
}

LinkPath.Definition = {
  "type": "LinkPath",
  "metadata": {"modifies": true},
  "params": [
    { "name": "sourceX", "type": "field", "default": "source.x" },
    { "name": "sourceY", "type": "field", "default": "source.y" },
    { "name": "targetX", "type": "field", "default": "target.x" },
    { "name": "targetY", "type": "field", "default": "target.y" },
    { "name": "orient", "type": "enum", "default": "vertical",
      "values": ["horizontal", "vertical", "radial"] },
    { "name": "shape", "type": "enum", "default": "line",
      "values": ["line", "arc", "curve", "diagonal", "orthogonal"] },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(LinkPath, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var sx = _.sourceX || sourceX,
      sy = _.sourceY || sourceY,
      tx = _.targetX || targetX,
      ty = _.targetY || targetY,
      as = _.as || 'path',
      orient = _.orient || 'vertical',
      shape = _.shape || 'line',
      path = Paths.get(shape + '-' + orient) || Paths.get(shape);

  if (!path) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('LinkPath unsupported type: ' + _.shape
      + (_.orient ? '-' + _.orient : ''));
  }

  pulse.visit(pulse.SOURCE, function(t) {
    t[as] = path(sx(t), sy(t), tx(t), ty(t));
  });

  return pulse.reflow(_.modified()).modifies(as);
};

// -- Link Path Generation Methods -----

function line(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'L' + tx + ',' + ty;
}

function lineR(sa, sr, ta, tr) {
  return line(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function arc(sx, sy, tx, ty) {
  var dx = tx - sx,
      dy = ty - sy,
      rr = Math.sqrt(dx * dx + dy * dy) / 2,
      ra = 180 * Math.atan2(dy, dx) / Math.PI;
  return 'M' + sx + ',' + sy +
         'A' + rr + ',' + rr +
         ' ' + ra + ' 0 1' +
         ' ' + tx + ',' + ty;
}

function arcR(sa, sr, ta, tr) {
  return arc(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function curve(sx, sy, tx, ty) {
  var dx = tx - sx,
      dy = ty - sy,
      ix = 0.2 * (dx + dy),
      iy = 0.2 * (dy - dx);
  return 'M' + sx + ',' + sy +
         'C' + (sx+ix) + ',' + (sy+iy) +
         ' ' + (tx+iy) + ',' + (ty-ix) +
         ' ' + tx + ',' + ty;
}

function curveR(sa, sr, ta, tr) {
  return curve(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function orthoX(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'V' + ty + 'H' + tx;
}

function orthoY(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'H' + tx + 'V' + ty;
}

function orthoR(sa, sr, ta, tr) {
  var sc = Math.cos(sa),
      ss = Math.sin(sa),
      tc = Math.cos(ta),
      ts = Math.sin(ta),
      sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;
  return 'M' + (sr*sc) + ',' + (sr*ss) +
         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +
         ' ' + (sr*tc) + ',' + (sr*ts) +
         'L' + (tr*tc) + ',' + (tr*ts);
}

function diagonalX(sx, sy, tx, ty) {
  var m = (sx + tx) / 2;
  return 'M' + sx + ',' + sy +
         'C' + m  + ',' + sy +
         ' ' + m  + ',' + ty +
         ' ' + tx + ',' + ty;
}

function diagonalY(sx, sy, tx, ty) {
  var m = (sy + ty) / 2;
  return 'M' + sx + ',' + sy +
         'C' + sx + ',' + m +
         ' ' + tx + ',' + m +
         ' ' + tx + ',' + ty;
}

function diagonalR(sa, sr, ta, tr) {
  var sc = Math.cos(sa),
      ss = Math.sin(sa),
      tc = Math.cos(ta),
      ts = Math.sin(ta),
      mr = (sr + tr) / 2;
  return 'M' + (sr*sc) + ',' + (sr*ss) +
         'C' + (mr*sc) + ',' + (mr*ss) +
         ' ' + (mr*tc) + ',' + (mr*ts) +
         ' ' + (tr*tc) + ',' + (tr*ts);
}


/***/ }),

/***/ "AVVR":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/data.js ***!
  \********************************************/
/*! exports provided: data, change, insert, remove */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "change", function() { return change; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert", function() { return insert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



function dataref(view, name) {
  var data = view._runtime.data;
  if (!data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized data set: ' + name);
  }
  return data[name];
}

function data(name) {
  return dataref(this, name).values.value;
}

function change(name, changes) {
  if (!Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["isChangeSet"])(changes)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Second argument to changes must be a changeset.');
  }
  var dataset = dataref(this, name);
  dataset.modified = true;
  return this.pulse(dataset.input, changes);
}

function insert(name, _) {
  return change.call(this, name, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["changeset"])().insert(_));
}

function remove(name, _) {
  return change.call(this, name, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["changeset"])().remove(_));
}


/***/ }),

/***/ "AiIN":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/markItemPath.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "lW0u");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/canvas/draw */ "mwYA");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_svg_translateItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/svg/translateItem */ "8Mry");






/* harmony default export */ __webpack_exports__["default"] = (function(type, shape) {

  function attr(emit, item) {
    emit('transform', Object(_util_svg_translateItem__WEBPACK_IMPORTED_MODULE_4__["default"])(item));
    emit('d', shape(null, item));
  }

  function bound(bounds, item) {
    shape(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), item);
    return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, item)
      .translate(item.x || 0, item.y || 0);
  }

  function draw(context, item) {
    var x = item.x || 0,
        y = item.y || 0;
    context.translate(x, y);
    context.beginPath();
    shape(context, item);
    context.translate(-x, -y);
  }

  return {
    type:   type,
    tag:    'path',
    nested: false,
    attr:   attr,
    bound:  bound,
    draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__["drawAll"])(draw),
    pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__["pickPath"])(draw)
  };

});


/***/ }),

/***/ "Amww":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/modify.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



function equal(a, b) {
  return a === b || a !== a && b !== b ? true
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(a) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(b) && a.length === b.length ? equalArray(a, b)
    : false;
}

function equalArray(a, b) {
  for (var i=0, n=a.length; i<n; ++i) {
    if (!equal(a[i], b[i])) return false;
  }
  return true;
}

function removePredicate(props) {
  return function(_) {
    for (var key in props) {
      if (!equal(_[key], props[key])) return false;
    }
    return true;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, insert, remove, toggle, modify, values) {
  var df = this.context.dataflow,
      data = this.context.data[name],
      input = data.input,
      changes = data.changes,
      stamp = df.stamp(),
      predicate, key;

  if (df._trigger === false || !(input.value.length || insert || toggle)) {
    // nothing to do!
    return 0;
  }

  if (!changes || changes.stamp < stamp) {
    data.changes = (changes = df.changeset());
    changes.stamp = stamp;
    df.runAfter(function() {
      data.modified = true;
      df.pulse(input, changes).run();
    }, true, 1);
  }

  if (remove) {
    predicate = remove === true ? vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]
      : (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(remove) || Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["isTuple"])(remove)) ? remove
      : removePredicate(remove);
    changes.remove(predicate);
  }

  if (insert) {
    changes.insert(insert);
  }

  if (toggle) {
    predicate = removePredicate(toggle);
    if (input.value.some(predicate)) {
      changes.remove(predicate);
    } else {
      changes.insert(toggle);
    }
  }

  if (modify) {
    for (key in values) {
      changes.modify(modify, key, values[key]);
    }
  }

  return 1;
});


/***/ }),

/***/ "B/ym":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/logger.js ***!
  \**********************************************/
/*! exports provided: None, Error, Warn, Info, Debug, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "None", function() { return None; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return Error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return Warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return Info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return Debug; });
function log(method, level, input) {
  var args = [level].concat([].slice.call(input));
  console[method].apply(console, args); // eslint-disable-line no-console
}

var None  = 0;
var Error = 1;
var Warn  = 2;
var Info  = 3;
var Debug = 4;

/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  var level = _ || None;
  return {
    level: function(_) {
      if (arguments.length) {
        level = +_;
        return this;
      } else {
        return level;
      }
    },
    error: function() {
      if (level >= Error) log('error', 'ERROR', arguments);
      return this;
    },
    warn: function() {
      if (level >= Warn) log('warn', 'WARN', arguments);
      return this;
    },
    info: function() {
      if (level >= Info) log('log', 'INFO', arguments);
      return this;
    },
    debug: function() {
      if (level >= Debug) log('log', 'DEBUG', arguments);
      return this;
    }
  }
});


/***/ }),

/***/ "B5NT":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundStroke.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(bounds, item) {
  if (item.stroke && item.opacity !== 0 && item.strokeOpacity !== 0) {
    bounds.expand(item.strokeWidth != null ? +item.strokeWidth : 1);
  }
  return bounds;
});


/***/ }),

/***/ "BGsV":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/size.js ***!
  \********************************************/
/*! exports provided: viewWidth, viewHeight, initializeResize, resizeView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewWidth", function() { return viewWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewHeight", function() { return viewHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeResize", function() { return initializeResize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeView", function() { return resizeView; });
var Width = 'width',
    Height = 'height',
    Padding = 'padding',
    Skip = {skip: true};

function viewWidth(view, width) {
  var a = view.autosize(),
      p = view.padding();
  return width - (a && a.contains === Padding ? p.left + p.right : 0);
}

function viewHeight(view, height) {
  var a = view.autosize(),
      p = view.padding();
  return height - (a && a.contains === Padding ? p.top + p.bottom : 0);
}

function initializeResize(view) {
  var s = view._signals,
      w = s[Width],
      h = s[Height],
      p = s[Padding];

  function resetSize() {
    view._autosize = view._resize = 1;
  }

  // respond to width signal
  view._resizeWidth = view.add(null,
    function(_) {
      view._width = _.size;
      view._viewWidth = viewWidth(view, _.size);
      resetSize();
    },
    {size: w}
  );

  // respond to height signal
  view._resizeHeight = view.add(null,
    function(_) {
      view._height = _.size;
      view._viewHeight = viewHeight(view, _.size);
      resetSize();
    },
    {size: h}
  );

  // respond to padding signal
  var resizePadding = view.add(null, resetSize, {pad: p});

  // set rank to run immediately after source signal
  view._resizeWidth.rank = w.rank + 1;
  view._resizeHeight.rank = h.rank + 1;
  resizePadding.rank = p.rank + 1;
}

function resizeView(viewWidth, viewHeight, width, height, origin, auto) {
  this.runAfter(function(view) {
    var rerun = 0;

    // reset autosize flag
    view._autosize = 0;

    // width value changed: update signal, skip resize op
    if (view.width() !== width) {
      rerun = 1;
      view.signal(Width, width, Skip); // set width, skip update calc
      view._resizeWidth.skip(true); // skip width resize handler
    }

    // height value changed: update signal, skip resize op
    if (view.height() !== height) {
      rerun = 1;
      view.signal(Height, height, Skip); // set height, skip update calc
      view._resizeHeight.skip(true); // skip height resize handler
    }

    // view width changed: update view property, set resize flag
    if (view._viewWidth !== viewWidth) {
      view._resize = 1;
      view._viewWidth = viewWidth;
    }

    // view height changed: update view property, set resize flag
    if (view._viewHeight !== viewHeight) {
      view._resize = 1;
      view._viewHeight = viewHeight;
    }

    // origin changed: update view property, set resize flag
    if (view._origin[0] !== origin[0] || view._origin[1] !== origin[1]) {
      view._resize = 1;
      view._origin = origin;
    }

    // run dataflow on width/height signal change
    if (rerun) view.run('enter');
    if (auto) view.runAfter(function() { view.resize(); });
  }, false, 1);
}


/***/ }),

/***/ "BM/x":
/*!*****************************************************!*\
  !*** ./node_modules/vega-encode/src/scale-types.js ***!
  \*****************************************************/
/*! exports provided: Log, Pow, Utc, Sqrt, Band, Time, Point, Linear, Ordinal, Quantile, Quantize, Threshold, BinLinear, BinOrdinal, Sequential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Log", function() { return Log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return Pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Utc", function() { return Utc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sqrt", function() { return Sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Band", function() { return Band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return Time; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Linear", function() { return Linear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ordinal", function() { return Ordinal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Quantile", function() { return Quantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Quantize", function() { return Quantize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Threshold", function() { return Threshold; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinLinear", function() { return BinLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinOrdinal", function() { return BinOrdinal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sequential", function() { return Sequential; });
var Log = 'log';
var Pow = 'pow';
var Utc = 'utc';
var Sqrt = 'sqrt';
var Band = 'band';
var Time = 'time';
var Point = 'point';
var Linear = 'linear';
var Ordinal = 'ordinal';
var Quantile = 'quantile';
var Quantize = 'quantize';
var Threshold = 'threshold';
var BinLinear = 'bin-linear';
var BinOrdinal = 'bin-ordinal';
var Sequential = 'sequential';


/***/ }),

/***/ "BSwg":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/guide.js ***!
  \***************************************************/
/*! exports provided: VL_ONLY_GUIDE_CONFIG */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_GUIDE_CONFIG", function() { return VL_ONLY_GUIDE_CONFIG; });
var VL_ONLY_GUIDE_CONFIG = ['shortTimeLabels'];
//# sourceMappingURL=guide.js.map

/***/ }),

/***/ "BY7D":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/toDate.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isDate */ "Oysb");
/* harmony import */ var _isNumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isNumber */ "K8zk");



function defaultParser(_) {
  return Object(_isNumber__WEBPACK_IMPORTED_MODULE_1__["default"])(_) ? _ : Object(_isDate__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : Date.parse(_);
}

/* harmony default export */ __webpack_exports__["default"] = (function(_, parser) {
  parser = parser || defaultParser;
  return _ == null || _ === '' ? null : parser(_);
});


/***/ }),

/***/ "C2wT":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/accessors.js ***!
  \*************************************************/
/*! exports provided: id, identity, zero, one, truthy, falsy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "id", function() { return id; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "one", function() { return one; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return truthy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return falsy; });
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "iMRA");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "xjBs");



var empty = [];

var id = Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])('id');

var identity = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function(_) { return _; }, empty, 'identity');

var zero = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return 0; }, empty, 'zero');

var one = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return 1; }, empty, 'one');

var truthy = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return true; }, empty, 'true');

var falsy = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return false; }, empty, 'false');


/***/ }),

/***/ "CLBL":
/*!************************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/HierarchyLayout.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HierarchyLayout; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Abstract class for tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function HierarchyLayout(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(HierarchyLayout, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!pulse.source || !pulse.source.root) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])(this.constructor.name
      + ' transform requires a backing tree data source.');
  }

  var layout = this.layout(_.method),
      fields = this.fields,
      root = pulse.source.root,
      as = _.as || fields;

  if (_.field) root.sum(_.field);
  if (_.sort) root.sort(_.sort);

  setParams(layout, this.params, _);
  try {
    this.value = layout(root);
  } catch (err) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])(err);
  }
  root.each(function(node) { setFields(node, fields, as); });

  return pulse.reflow(_.modified()).modifies(as).modifies('leaf');
};

function setParams(layout, params, _) {
  for (var p, i=0, n=params.length; i<n; ++i) {
    p = params[i];
    if (p in _) layout[p](_[p]);
  }
}

function setFields(node, fields, as) {
  var t = node.data;
  for (var i=0, n=fields.length-1; i<n; ++i) {
    t[as[i]] = node[fields[i]];
  }
  t[as[n]] = node.children ? node.children.length : 0;
}


/***/ }),

/***/ "CWVO":
/*!***************************************************!*\
  !*** ./node_modules/vega-util/src/extentIndex.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var i = -1,
      n = array.length,
      a, b, c, u, v;

  if (f == null) {
    while (++i < n) {
      b = array[i];
      if (b != null && b >= b) {
        a = c = b;
        break;
      }
    }
    u = v = i;
    while (++i < n) {
      b = array[i];
      if (b != null) {
        if (a > b) {
          a = b;
          u = i;
        }
        if (c < b) {
          c = b;
          v = i;
        }
      }
    }
  } else {
    while (++i < n) {
      b = f(array[i], i, array);
      if (b != null && b >= b) {
        a = c = b;
        break;
      }
    }
    u = v = i;
    while (++i < n) {
      b = f(array[i], i, array);
      if (b != null) {
        if (a > b) {
          a = b;
          u = i;
        }
        if (c < b) {
          c = b;
          v = i;
        }
      }
    }
  }

  return [u, v];
});


/***/ }),

/***/ "CcjM":
/*!*************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Identifier.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Identifier; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



var COUNTER_NAME = ':vega_identifier:';

/**
 * Adds a unique identifier to all added tuples.
 * This transform creates a new signal that serves as an id counter.
 * As a result, the id counter is shared across all instances of this
 * transform, generating unique ids across multiple data streams. In
 * addition, this signal value can be included in a snapshot of the
 * dataflow state, enabling correct resumption of id allocation.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.as - The field name for the generated identifier.
 */
function Identifier(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, 0, params);
}

Identifier.Definition = {
  "type": "Identifier",
  "metadata": {"modifies": true},
  "params": [
    { "name": "as", "type": "string", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Identifier, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var counter = getCounter(pulse.dataflow),
      id = counter.value,
      as = _.as;

  pulse.visit(pulse.ADD, function(t) {
    if (!t[as]) t[as] = ++id;
  });

  counter.set(this.value = id);
  return pulse;
};

function getCounter(view) {
  var counter = view._signals[COUNTER_NAME];
  if (!counter) {
    view._signals[COUNTER_NAME] = (counter = view.add(0));
  }
  return counter;
}


/***/ }),

/***/ "CdCN":
/*!***********************************************!*\
  !*** ./node_modules/vega-parser/src/parse.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _parsers_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers/view */ "LW4m");
/* harmony import */ var _Scope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scope */ "crAc");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ "G0eu");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(spec)) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Input Vega specification must be an object.');
  return Object(_parsers_view__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, new _Scope__WEBPACK_IMPORTED_MODULE_1__["default"](Object(_config__WEBPACK_IMPORTED_MODULE_2__["default"])([config, spec.config])))
    .toRuntime();
});


/***/ }),

/***/ "CtAy":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/runtime.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-parser */ "Je5T");
/* harmony import */ var vega_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-runtime */ "7U5j");




/* harmony default export */ __webpack_exports__["default"] = (function(view, spec, functions) {
  var fn = functions || vega_parser__WEBPACK_IMPORTED_MODULE_1__["functionContext"];
  return Object(vega_runtime__WEBPACK_IMPORTED_MODULE_2__["parse"])(spec, Object(vega_runtime__WEBPACK_IMPORTED_MODULE_2__["context"])(view, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["transforms"], fn));
});


/***/ }),

/***/ "CwB2":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/encode.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(item, name, retval) {
  if (item) {
    var df = this.context.dataflow,
        target = item.mark.source;
    df.pulse(target, df.changeset().encode(item, name));
  }
  return retval !== undefined ? retval : item;
});


/***/ }),

/***/ "D3Kc":
/*!*************************************************!*\
  !*** ./node_modules/vega-transforms/src/Bin.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bin; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Generates a binning function for discretizing data.
 * @constructor
 * @param {object} params - The parameters for this operator. The
 *   provided values should be valid options for the {@link bin} function.
 * @param {function(object): *} params.field - The data field to bin.
 */
function Bin(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Bin.Definition = {
  "type": "Bin",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "anchor", "type": "number" },
    { "name": "maxbins", "type": "number", "default": 20 },
    { "name": "base", "type": "number", "default": 10 },
    { "name": "divide", "type": "number", "array": true, "default": [5, 2] },
    { "name": "extent", "type": "number", "array": true, "length": 2, "required": true },
    { "name": "step", "type": "number" },
    { "name": "steps", "type": "number", "array": true },
    { "name": "minstep", "type": "number", "default": 0 },
    { "name": "nice", "type": "boolean", "default": true },
    { "name": "name", "type": "string" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["bin0", "bin1"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Bin, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var bins = this._bins(_),
      start = bins.start,
      step = bins.step,
      as = _.as || ['bin0', 'bin1'],
      b0 = as[0],
      b1 = as[1],
      flag;

  if (_.modified()) {
    pulse = pulse.reflow(true);
    flag = pulse.SOURCE;
  } else {
    flag = pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(_.field)) ? pulse.ADD_MOD : pulse.ADD;
  }

  pulse.visit(flag, function(t) {
    var v = bins(t);
    // minimum bin value (inclusive)
    t[b0] = v;
    // maximum bin value (exclusive)
    // use convoluted math for better floating point agreement
    // see https://github.com/vega/vega/issues/830
    t[b1] = v == null ? null : start + step * (1 + (v - start) / step);
  });

  return pulse.modifies(as);
};

prototype._bins = function(_) {
  if (this.value && !_.modified()) {
    return this.value;
  }

  var field = _.field,
      bins  = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["bin"])(_),
      start = bins.start,
      stop  = bins.stop,
      step  = bins.step,
      a, d;

  if ((a = _.anchor) != null) {
    d = a - (start + step * Math.floor((a - start) / step));
    start += d;
    stop += d;
  }

  var f = function(t) {
    var v = field(t);
    if (v == null) {
      return null;
    } else {
      v = Math.max(start, Math.min(+v, stop - step));
      return start + step * Math.floor((v - start) / step);
    }
  };

  f.start = start;
  f.stop = stop;
  f.step = step;

  return this.value = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessor"])(
    f,
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(field),
    _.name || 'bin_' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorName"])(field)
  );
};


/***/ }),

/***/ "DLe+":
/*!*************************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/Dataflow.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Dataflow; });
/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add */ "xxJJ");
/* harmony import */ var _connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect */ "Ttxx");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ "Vpq7");
/* harmony import */ var _load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./load */ "7PxQ");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./on */ "WhBC");
/* harmony import */ var _rank__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rank */ "w21d");
/* harmony import */ var _run__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./run */ "YL/A");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./update */ "fDie");
/* harmony import */ var _ChangeSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ChangeSet */ "1h1d");
/* harmony import */ var _util_Heap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/Heap */ "cLaD");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/UniqueList */ "YCOJ");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vega-loader */ "Ln7r");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vega-util */ "J29t");














/**
 * A dataflow graph for reactive processing of data streams.
 * @constructor
 */
function Dataflow() {
  this._log = Object(vega_util__WEBPACK_IMPORTED_MODULE_12__["logger"])();
  this.logLevel(vega_util__WEBPACK_IMPORTED_MODULE_12__["Error"]);

  this._clock = 0;
  this._rank = 0;
  try {
    this._loader = Object(vega_loader__WEBPACK_IMPORTED_MODULE_11__["loader"])();
  } catch (e) {
    // do nothing if loader module is unavailable
  }

  this._touched = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_10__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_12__["id"]);
  this._pulses = {};
  this._pulse = null;

  this._heap = new _util_Heap__WEBPACK_IMPORTED_MODULE_9__["default"](function(a, b) { return a.qrank - b.qrank; });
  this._postrun = [];
}

var prototype = Dataflow.prototype;

/**
 * The current timestamp of this dataflow. This value reflects the
 * timestamp of the previous dataflow run. The dataflow is initialized
 * with a stamp value of 0. The initial run of the dataflow will have
 * a timestap of 1, and so on. This value will match the
 * {@link Pulse.stamp} property.
 * @return {number} - The current timestamp value.
 */
prototype.stamp = function() {
  return this._clock;
};

/**
 * Gets or sets the loader instance to use for data file loading. A
 * loader object must provide a "load" method for loading files and a
 * "sanitize" method for checking URL/filename validity. Both methods
 * should accept a URI and options hash as arguments, and return a Promise
 * that resolves to the loaded file contents (load) or a hash containing
 * sanitized URI data with the sanitized url assigned to the "href" property
 * (sanitize).
 * @param {object} _ - The loader instance to use.
 * @return {object|Dataflow} - If no arguments are provided, returns
 *   the current loader instance. Otherwise returns this Dataflow instance.
 */
prototype.loader = function(_) {
  if (arguments.length) {
    this._loader = _;
    return this;
  } else {
    return this._loader;
  }
};

/**
 * Empty entry threshold for garbage cleaning. Map data structures will
 * perform cleaning once the number of empty entries exceeds this value.
 */
prototype.cleanThreshold = 1e4;

// OPERATOR REGISTRATION
prototype.add = _add__WEBPACK_IMPORTED_MODULE_0__["default"];
prototype.connect = _connect__WEBPACK_IMPORTED_MODULE_1__["default"];
prototype.rank = _rank__WEBPACK_IMPORTED_MODULE_5__["rank"];
prototype.rerank = _rank__WEBPACK_IMPORTED_MODULE_5__["rerank"];

// OPERATOR UPDATES
prototype.pulse = _update__WEBPACK_IMPORTED_MODULE_7__["pulse"];
prototype.touch = _update__WEBPACK_IMPORTED_MODULE_7__["touch"];
prototype.update = _update__WEBPACK_IMPORTED_MODULE_7__["update"];
prototype.changeset = _ChangeSet__WEBPACK_IMPORTED_MODULE_8__["default"];

// DATA LOADING
prototype.ingest = _load__WEBPACK_IMPORTED_MODULE_3__["ingest"];
prototype.request = _load__WEBPACK_IMPORTED_MODULE_3__["request"];

// EVENT HANDLING
prototype.events = _events__WEBPACK_IMPORTED_MODULE_2__["default"];
prototype.on = _on__WEBPACK_IMPORTED_MODULE_4__["default"];

// PULSE PROPAGATION
prototype.run = _run__WEBPACK_IMPORTED_MODULE_6__["run"];
prototype.runAsync = _run__WEBPACK_IMPORTED_MODULE_6__["runAsync"];
prototype.runAfter = _run__WEBPACK_IMPORTED_MODULE_6__["runAfter"];
prototype._enqueue = _run__WEBPACK_IMPORTED_MODULE_6__["enqueue"];
prototype._getPulse = _run__WEBPACK_IMPORTED_MODULE_6__["getPulse"];

// LOGGING AND ERROR HANDLING

function logMethod(method) {
  return function() {
    return this._log[method].apply(this, arguments);
  };
}

/**
 * Logs an error message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit error messages.
 */
prototype.error = logMethod('error');

/**
 * Logs a warning message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit warning messages.
 */
prototype.warn = logMethod('warn');

/**
 * Logs a information message. By default, logged messages are written to
 * console output. The message will only be logged if the current log level is
 * high enough to permit information messages.
 */
prototype.info = logMethod('info');

/**
 * Logs a debug message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit debug messages.
 */
prototype.debug = logMethod('debug');

/**
 * Get or set the current log level. If an argument is provided, it
 * will be used as the new log level.
 * @param {number} [level] - Should be one of None, Warn, Info
 * @return {number} - The current log level.
 */
prototype.logLevel = logMethod('level');


/***/ }),

/***/ "DMe5":
/*!************************************************!*\
  !*** ./node_modules/vega-encode/src/Encode.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Encode; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Invokes encoding functions for visual items.
 * @constructor
 * @param {object} params - The parameters to the encoding functions. This
 *   parameter object will be passed through to all invoked encoding functions.
 * @param {object} param.encoders - The encoding functions
 * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set
 * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set
 * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set
 */
function Encode(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Encode, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ADD_REM),
      encoders = _.encoders,
      encode = pulse.encode;

  // if an array, the encode directive includes additional sets
  // that must be defined in order for the primary set to be invoked
  // e.g., only run the update set if the hover set is defined
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(encode)) {
    if (out.changed() || encode.every(function(e) { return encoders[e]; })) {
      encode = encode[0];
      out.encode = null; // consume targeted encode directive
    } else {
      return pulse.StopPropagation;
    }
  }

  // marshall encoder functions
  var reenter = encode === 'enter',
      update = encoders.update || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      enter = encoders.enter || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      exit = encoders.exit || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      set = (encode && !reenter ? encoders[encode] : update) || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"];

  if (pulse.changed(pulse.ADD)) {
    pulse.visit(pulse.ADD, function(t) {
      enter(t, _);
      update(t, _);
      if (set !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"] && set !== update) set(t, _);
    });
    out.modifies(enter.output);
    out.modifies(update.output);
    if (set !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"] && set !== update) out.modifies(set.output);
  }

  if (pulse.changed(pulse.REM) && exit !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"]) {
    pulse.visit(pulse.REM, function(t) { exit(t, _); });
    out.modifies(exit.output);
  }

  if (reenter || set !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"]) {
    var flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);
    if (reenter) {
      pulse.visit(flag, function(t) {
        var mod = enter(t, _);
        if (set(t, _) || mod) out.mod.push(t);
      });
      if (out.mod.length) out.modifies(enter.output);
    } else {
      pulse.visit(flag, function(t) {
        if (set(t, _)) out.mod.push(t);
      });
    }
    if (out.mod.length) out.modifies(set.output);
  }

  return out.changed() ? out : pulse.StopPropagation;
};


/***/ }),

/***/ "DMgY":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-grid.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var orient = spec.orient,
      vscale = spec.gridScale,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? 1 : -1,
      offset = sign * spec.offset || 0,
      zero = {value: 0},
      encode, enter, exit, update, tickPos, u, v, v2, s;

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1}
    },
    exit: exit = {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'stroke',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gridColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeDash',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gridDash', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gridOpacity', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeWidth',   Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('gridWidth', spec, config));

  tickPos = {
    scale:  spec.scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('bandPosition', spec, config),
    round:  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickRound', spec, config),
    extra:  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickExtra', spec, config),
    offset: Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickOffset', spec, config)
  };

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    u = 'x';
    v = 'y';
    s = 'height';
  } else {
    u = 'y';
    v = 'x';
    s = 'width';
  }
  v2 = v + '2';

  update[u] = enter[u] = exit[u] = tickPos;

  if (vscale) {
    enter[v] = {scale: vscale, range: 0, mult: sign, offset: offset};
    update[v2] = enter[v2] = {scale: vscale, range: 1, mult: sign, offset: offset};
  } else {
    enter[v] = {value: offset};
    update[v2] = enter[v2] = {signal: s, mult: sign, offset: offset};
  }

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisGridRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});


/***/ }),

/***/ "DQPB":
/*!***********************************************!*\
  !*** ./node_modules/vega-runtime/src/util.js ***!
  \***********************************************/
/*! exports provided: canonicalType, isOperator, isCollect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canonicalType", function() { return canonicalType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOperator", function() { return isOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCollect", function() { return isCollect; });
function canonicalType(type) {
  return (type + '').toLowerCase();
}
function isOperator(type) {
   return canonicalType(type) === 'operator';
}

function isCollect(type) {
  return canonicalType(type) === 'collect';
}


/***/ }),

/***/ "Ddaq":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/concat.js ***!
  \************************************************************/
/*! exports provided: ConcatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcatModel", function() { return ConcatModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spec */ "ySvk");
/* harmony import */ var _baseconcat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./baseconcat */ "jLeK");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buildmodel */ "zzEA");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./layoutsize/parse */ "drwQ");






var ConcatModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConcatModel, _super);
    function ConcatModel(spec, parent, parentGivenName, repeater, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, repeater, spec.resolve) || this;
        _this.type = 'concat';
        if (spec.resolve && spec.resolve.axis && (spec.resolve.axis.x === 'shared' || spec.resolve.axis.y === 'shared')) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].CONCAT_CANNOT_SHARE_AXIS);
        }
        _this.isVConcat = Object(_spec__WEBPACK_IMPORTED_MODULE_2__["isVConcatSpec"])(spec);
        _this.children = (Object(_spec__WEBPACK_IMPORTED_MODULE_2__["isVConcatSpec"])(spec) ? spec.vconcat : spec.hconcat).map(function (child, i) {
            return Object(_buildmodel__WEBPACK_IMPORTED_MODULE_4__["buildModel"])(child, _this, _this.getName('concat_' + i), undefined, repeater, config, false);
        });
        return _this;
    }
    ConcatModel.prototype.parseLayoutSize = function () {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_5__["parseConcatLayoutSize"])(this);
    };
    ConcatModel.prototype.parseAxisGroup = function () {
        return null;
    };
    ConcatModel.prototype.assembleDefaultLayout = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (this.isVConcat ? { columns: 1 } : {}), { bounds: 'full', 
            // Use align each so it can work with multiple plots with different size
            align: 'each' });
    };
    return ConcatModel;
}(_baseconcat__WEBPACK_IMPORTED_MODULE_3__["BaseConcatModel"]));

//# sourceMappingURL=concat.js.map

/***/ }),

/***/ "Ds8r":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js ***!
  \*************************************************************************/
/*! exports provided: assembleLayoutSignals, sizeSignals, sizeExpr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLayoutSignals", function() { return assembleLayoutSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeSignals", function() { return sizeSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeExpr", function() { return sizeExpr; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model */ "MqRG");



function assembleLayoutSignals(model) {
    return [].concat(sizeSignals(model, 'width'), sizeSignals(model, 'height'));
}
function sizeSignals(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var size = model.component.layoutSize.get(sizeType);
    if (!size || size === 'merged') {
        return [];
    }
    // Read size signal name from name map, just in case it is the top-level size signal that got renamed.
    var name = model.getSizeSignalRef(sizeType).signal;
    if (size === 'range-step') {
        var scaleComponent = model.getScaleComponent(channel);
        if (scaleComponent) {
            var type = scaleComponent.get('type');
            var range = scaleComponent.get('range');
            if (Object(_scale__WEBPACK_IMPORTED_MODULE_0__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_1__["isVgRangeStep"])(range)) {
                var scaleName = model.scaleName(channel);
                if (Object(_model__WEBPACK_IMPORTED_MODULE_2__["isFacetModel"])(model.parent)) {
                    // If parent is facet and this is an independent scale, return only signal signal
                    // as the width/height will be calculated using the cardinality from
                    // facet's aggregate rather than reading from scale domain
                    var parentResolve = model.parent.component.resolve;
                    if (parentResolve.scale[channel] === 'independent') {
                        return [stepSignal(scaleName, range)];
                    }
                }
                return [
                    stepSignal(scaleName, range),
                    {
                        name: name,
                        update: sizeExpr(scaleName, scaleComponent, "domain('" + scaleName + "').length")
                    }
                ];
            }
        }
        /* istanbul ignore next: Condition should not happen -- only for warning in development. */
        throw new Error('layout size is range step although there is no rangeStep.');
    }
    else {
        return [{
                name: name,
                value: size
            }];
    }
}
function stepSignal(scaleName, range) {
    return {
        name: scaleName + '_step',
        value: range.step,
    };
}
function sizeExpr(scaleName, scaleComponent, cardinality) {
    var type = scaleComponent.get('type');
    var padding = scaleComponent.get('padding');
    var paddingOuter = scaleComponent.get('paddingOuter');
    paddingOuter = paddingOuter !== undefined ? paddingOuter : padding;
    var paddingInner = scaleComponent.get('paddingInner');
    paddingInner = type === 'band' ?
        // only band has real paddingInner
        (paddingInner !== undefined ? paddingInner : padding) :
        // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,
        // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.
        1;
    return "bandspace(" + cardinality + ", " + paddingInner + ", " + paddingOuter + ") * " + scaleName + "_step";
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "DuFz":
/*!*****************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-symbol-groups.js ***!
  \*****************************************************************************/
/*! exports provided: default, legendSymbolLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legendSymbolLayout", function() { return legendSymbolLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-group */ "PNr2");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");








var zero = {value: 0};

// userEncode is top-level, includes entries, symbols, labels
/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, columns) {
  var entries = userEncode.entries,
      interactive = !!(entries && entries.interactive),
      name = entries ? entries.name : undefined,
      height = Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('clipHeight', spec, config),
      symbolOffset = Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolOffset', spec, config),
      valueRef = {data: 'value'},
      encode = {},
      xSignal = columns + '?' + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Offset"] + ':' + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Size"],
      yEncode = height ? Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(height) : {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Size"]},
      index = 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Index"],
      ncols = 'max(1,' + columns + ')',
      enter, update, labelOffset, symbols, labels, nrows, sort;

  yEncode.mult = 0.5;

  // -- LEGEND SYMBOLS --
  encode = {
    enter:  enter = {
      opacity: zero,
      x: {signal: xSignal, mult: 0.5, offset: symbolOffset},
      y: yEncode
    },
    update: update = {
      opacity: {value: 1},
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: zero
    }
  };

  if (!spec.fill) {
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fill',   config.symbolBaseFillColor);
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'stroke', config.symbolBaseStrokeColor);
  }
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'shape',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolType', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'size',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'strokeWidth', Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolStrokeWidth', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolFillColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'stroke',      Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolStrokeColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'opacity',     Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('symbolOpacity', spec, config), 'update');

  _constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].forEach(function(scale) {
    if (spec[scale]) {
      update[scale] = enter[scale] = {scale: spec[scale], field: _constants__WEBPACK_IMPORTED_MODULE_0__["Value"]};
    }
  });

  symbols = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_2__["default"])(
    _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["SymbolMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendSymbolRole"], null,
    _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], valueRef, encode, userEncode.symbols
  );
  if (height) symbols.clip = true;

  // -- LEGEND LABELS --
  labelOffset = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(symbolOffset);
  labelOffset.offset = Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelOffset', spec, config);

  encode = {
    enter:  enter = {
      opacity: zero,
      x: {signal: xSignal, offset: labelOffset},
      y: yEncode
    },
    update: update = {
      opacity: {value: 1},
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]},
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: zero
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'align',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelAlign', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'baseline',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelBaseline', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'font',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelFont', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fontSize',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelFontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fontWeight',  Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelFontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'limit',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelLimit', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fillOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('labelOpacity', spec, config));

  labels = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_2__["default"])(
    _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"],
    _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], valueRef, encode, userEncode.labels
  );

  // -- LEGEND ENTRY GROUPS --
  encode = {
    enter: {
      noBound: {value: true}, // ignore width/height in bounds calc
      width: zero,
      height: height ? Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(height) : zero,
      opacity: zero
    },
    exit: {opacity: zero},
    update: update = {
      opacity: {value: 1},
      row: {signal: null},
      column: {signal: null}
    }
  };

  // annotate and sort groups to ensure correct ordering
  if (Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["isVertical"])(spec, config.symbolDirection)) {
    nrows = 'ceil(item.mark.items.length/' + ncols + ')';
    update.row.signal = index + '%' + nrows;
    update.column.signal = 'floor(' + index + '/' + nrows + ')';
    sort = {field: ['row', index]};
  } else {
    update.row.signal = 'floor(' + index + '/' + ncols + ')';
    update.column.signal = index + '%' + ncols;
    sort = {field: index};
  }
  // handle zero column case (implies infinite columns)
  update.column.signal = columns + '?' + update.column.signal + ':' + index;

  // facet legend entries into sub-groups
  dataRef = {facet: {data: dataRef, name: 'value', groupby: _constants__WEBPACK_IMPORTED_MODULE_0__["Index"]}};

  spec = Object(_guide_group__WEBPACK_IMPORTED_MODULE_1__["default"])(
    _marks_roles__WEBPACK_IMPORTED_MODULE_5__["ScopeRole"], null, name, dataRef, interactive,
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["extendEncode"])(encode, entries, _constants__WEBPACK_IMPORTED_MODULE_0__["Skip"]), [symbols, labels]
  );
  spec.sort = sort;
  return spec;
});

function legendSymbolLayout(spec, config) {
  // layout parameters for legend entries
  return {
    align:   Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('gridAlign', spec, config),
    center:  {row: true, column: false},
    columns: Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["entryColumns"])(spec, config),
    padding: {
      row:    Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('rowPadding', spec, config),
      column: Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])('columnPadding', spec, config)
    }
  };
}


/***/ }),

/***/ "E/AX":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/translate.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x, y) {
  return 'translate(' + x + ',' + y + ')';
});

/***/ }),

/***/ "ELKE":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/component.js ***!
  \**********************************************************************/
/*! exports provided: LegendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendComponent", function() { return LegendComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../split */ "cq+n");


var LegendComponent = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LegendComponent, _super);
    function LegendComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LegendComponent;
}(_split__WEBPACK_IMPORTED_MODULE_1__["Split"]));

//# sourceMappingURL=component.js.map

/***/ }),

/***/ "Egee":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/index.js ***!
  \*****************************************************************/
/*! exports provided: add, remove, COMPOSITE_MARK_STYLES, VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX, normalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPOSITE_MARK_STYLES", function() { return COMPOSITE_MARK_STYLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX", function() { return VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../mark */ "fKXb");
/* harmony import */ var _boxplot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boxplot */ "2035");
/* harmony import */ var _errorbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorbar */ "xi+b");




// This package import below makes the generated .d.ts file compatible with
// Typescript 2.7 so that libraries requiring us can use Typedoc (which
// currently is limited to Typescript 2.7). This comment and import can be
// removed when Typedoc is updated to Typescript 2.9 or later. See
// https://github.com/vega/vega-lite/issues/3862 for more details.

/**
 * Registry index for all composite mark's normalizer
 */
var normalizerRegistry = {};
function add(mark, normalizer) {
    normalizerRegistry[mark] = normalizer;
}
function remove(mark) {
    delete normalizerRegistry[mark];
}
var COMPOSITE_MARK_STYLES = _boxplot__WEBPACK_IMPORTED_MODULE_2__["BOXPLOT_STYLES"];
var VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _boxplot__WEBPACK_IMPORTED_MODULE_2__["VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX"]);
add(_boxplot__WEBPACK_IMPORTED_MODULE_2__["BOXPLOT"], _boxplot__WEBPACK_IMPORTED_MODULE_2__["normalizeBoxPlot"]);
add(_errorbar__WEBPACK_IMPORTED_MODULE_3__["ERRORBAR"], _errorbar__WEBPACK_IMPORTED_MODULE_3__["normalizeErrorBar"]);
/**
 * Transform a unit spec with composite mark into a normal layer spec.
 */
function normalize(
// This GenericUnitSpec has any as Encoding because unit specs with composite mark can have additional encoding channels.
spec, config) {
    var mark = Object(_mark__WEBPACK_IMPORTED_MODULE_1__["isMarkDef"])(spec.mark) ? spec.mark.type : spec.mark;
    var normalizer = normalizerRegistry[mark];
    if (normalizer) {
        return normalizer(spec, config);
    }
    throw new Error("Invalid mark type \"" + mark + "\"");
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "Eqt6":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/numbers.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var numbers = [],
      n = array.length,
      i = -1, a;

  if (f == null) {
    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);
  } else {
    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);
  }
  return numbers;
});

function number(x) {
  return x === null ? NaN : +x;
}


/***/ }),

/***/ "ExLr":
/*!******************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/TreeLinks.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TreeLinks; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



 /**
  * Generate tuples representing links between tree nodes.
  * The resulting tuples will contain 'source' and 'target' fields,
  * which point to parent and child node tuples, respectively.
  * @constructor
  * @param {object} params - The parameters for this operator.
  */
function TreeLinks(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

TreeLinks.Definition = {
  "type": "TreeLinks",
  "metadata": {"tree": true, "generates": true, "changes": true},
  "params": []
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(TreeLinks, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var links = this.value,
      tree = pulse.source && pulse.source.root,
      out = pulse.fork(pulse.NO_SOURCE),
      lut = {};

  if (!tree) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('TreeLinks transform requires a tree data source.');

  if (pulse.changed(pulse.ADD_REM)) {
    // remove previous links
    out.rem = links;

    // build lookup table of valid tuples
    pulse.visit(pulse.SOURCE, function(t) { lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });

    // generate links for all edges incident on valid tuples
    tree.each(function(node) {
      var t = node.data,
          p = node.parent && node.parent.data;
      if (p && lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] && lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(p)]) {
        out.add.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({source: p, target: t}));
      }
    });
    this.value = out.add;
  }

  else if (pulse.changed(pulse.MOD)) {
    // build lookup table of modified tuples
    pulse.visit(pulse.MOD, function(t) { lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });

    // gather links incident on modified tuples
    links.forEach(function(link) {
      if (lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(link.source)] || lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(link.target)]) {
        out.mod.push(link);
      }
    });
  }

  return out;
};


/***/ }),

/***/ "F1Ya":
/*!***************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/lookup.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Build lookup table mapping tuple keys to tree node instances
/* harmony default export */ __webpack_exports__["default"] = (function(tree, key, filter) {
  var map = {};
  tree.each(function(node) {
    var t = node.data;
    if (filter(t)) map[key(t)] = node;
  });
  tree.lookup = map;
  return tree;
});


/***/ }),

/***/ "F8yd":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/Contour.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Contour; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");
/* harmony import */ var d3_contour__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-contour */ "zMfI");





var CONTOUR_PARAMS = ['size', 'smooth'];
var DENSITY_PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];

/**
 * Generate contours based on kernel-density estimation of point data.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.
 *  If the values parameter is provided, this must be the dimensions of the input data.
 *  If density estimation is performed, this is the output view dimensions in pixels.
 * @param {Array<number>} [params.values] - An array of numeric values representing an
 *  width x height grid of values over which to compute contours. If unspecified, this
 *  transform will instead attempt to compute contours for the kernel density estimate
 *  using values drawn from data tuples in the input pulse.
 * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.
 * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.
 * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.
 * @param {number} [params.cellSize] - Contour density calculation cell size.
 * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.
 * @param {Array<number>} [params.thresholds] - Contour threshold array. If
 *   this parameter is set, the count and nice parameters will be ignored.
 * @param {number} [params.count] - The desired number of contours.
 * @param {boolean} [params.nice] - Boolean flag indicating if the contour
 *   threshold values should be automatically aligned to "nice"
 *   human-friendly values. Setting this flag may cause the number of
 *   thresholds to deviate from the specified count.
 * @param {boolean} [params.smooth] - Boolean flag indicating if the contour
 *   polygons should be smoothed using linear interpolation. The default is
 *   true. The parameter is ignored when using density estimation.
 */
function Contour(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Contour.Definition = {
  "type": "Contour",
  "metadata": {"generates": true},
  "params": [
    { "name": "size", "type": "number", "array": true, "length": 2, "required": true },
    { "name": "values", "type": "number", "array": true },
    { "name": "x", "type": "field" },
    { "name": "y", "type": "field" },
    { "name": "weight", "type": "field" },
    { "name": "cellSize", "type": "number" },
    { "name": "bandwidth", "type": "number" },
    { "name": "count", "type": "number" },
    { "name": "smooth", "type": "boolean" },
    { "name": "nice", "type": "boolean", "default": false },
    { "name": "thresholds", "type": "number", "array": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Contour, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !pulse.changed() && !_.modified())
    return pulse.StopPropagation;

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      count = _.count || 10,
      contour, params, values;

  if (_.values) {
    contour = Object(d3_contour__WEBPACK_IMPORTED_MODULE_3__["contours"])();
    params = CONTOUR_PARAMS;
    values = _.values;
  } else {
    contour = Object(d3_contour__WEBPACK_IMPORTED_MODULE_3__["contourDensity"])();
    params = DENSITY_PARAMS;
    values = pulse.materialize(pulse.SOURCE).source;
  }

  // set threshold parameter
  contour.thresholds(_.thresholds || (_.nice ? count : quantize(count)));

  // set all other parameters
  params.forEach(function(param) {
    if (_[param] != null) contour[param](_[param]);
  });

  if (this.value) out.rem = this.value;
  values = values && values.length ? contour(values).map(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"]) : [];
  this.value = out.source = out.add = values;

  return out;
};

function quantize(k) {
  return function(values) {
    var ex = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["extent"])(values), x0 = ex[0], dx = ex[1] - x0,
        t = [], i = 1;
    for (; i<=k; ++i) t.push(x0 + dx * i / (k + 1));
    return t;
  };
}


/***/ }),

/***/ "FTaR":
/*!**********************************************!*\
  !*** ./node_modules/vega-loader/src/read.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type */ "9WUu");
/* harmony import */ var _formats_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats/index */ "tbDw");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-time-format */ "cOGN");





/* harmony default export */ __webpack_exports__["default"] = (function(data, schema, dateParse) {
  schema = schema || {};

  var reader = Object(_formats_index__WEBPACK_IMPORTED_MODULE_1__["default"])(schema.type || 'json');
  if (!reader) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unknown data format type: ' + schema.type);

  data = reader(data, schema);
  if (schema.parse) parse(data, schema.parse, dateParse);

  if (data.hasOwnProperty('columns')) delete data.columns;
  return data;
});

function parse(data, types, dateParse) {
  if (!data.length) return; // early exit for empty data

  dateParse = dateParse || d3_time_format__WEBPACK_IMPORTED_MODULE_3__["timeParse"];

  var fields = data.columns || Object.keys(data[0]),
      parsers, datum, field, i, j, n, m;

  if (types === 'auto') types = Object(_type__WEBPACK_IMPORTED_MODULE_0__["inferTypes"])(data, fields);

  fields = Object.keys(types);
  parsers = fields.map(function(field) {
    var type = types[field],
        parts, pattern;

    if (type && (type.indexOf('date:') === 0 || type.indexOf('utc:') === 0)) {
      parts = type.split(/:(.+)?/, 2);  // split on first :
      pattern = parts[1];

      if ((pattern[0] === '\'' && pattern[pattern.length-1] === '\'') ||
          (pattern[0] === '"'  && pattern[pattern.length-1] === '"')) {
        pattern = pattern.slice(1, -1);
      }

      return parts[0] === 'utc' ? Object(d3_time_format__WEBPACK_IMPORTED_MODULE_3__["utcParse"])(pattern) : dateParse(pattern);
    }

    if (!_type__WEBPACK_IMPORTED_MODULE_0__["typeParsers"][type]) {
      throw Error('Illegal format pattern: ' + field + ':' + type);
    }

    return _type__WEBPACK_IMPORTED_MODULE_0__["typeParsers"][type];
  });

  for (i=0, n=data.length, m=fields.length; i<n; ++i) {
    datum = data[i];
    for (j=0; j<m; ++j) {
      field = fields[j];
      datum[field] = parsers[j](datum[field]);
    }
  }
}


/***/ }),

/***/ "Fqei":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/set.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(obj, key, value) {
  return obj + '[' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(key) + ']=' + value + ';';
});


/***/ }),

/***/ "FvSR":
/*!*******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/scale.js ***!
  \*******************************************************/
/*! exports provided: isOrdinal, isDiscretizing, isContinuous, isQuantile, initScale, parseScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOrdinal", function() { return isOrdinal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiscretizing", function() { return isDiscretizing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuous", function() { return isContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isQuantile", function() { return isQuantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScale", function() { return initScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScale", function() { return parseScale; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var FIELD_REF_ID = 0;

var types = [
  'identity',
  'ordinal', 'band', 'point',
  'bin-linear', 'bin-ordinal',
  'quantize', 'quantile', 'threshold',
  'linear', 'pow', 'sqrt', 'log', 'sequential',
  'time', 'utc'
];

var allTypes = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(types),
    discreteTypes = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(types.slice(4, 9)),
    continuousTypes = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(types.slice(9)),
    ordinalTypes = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(types.slice(1, 6));

function isOrdinal(type) {
  return ordinalTypes.hasOwnProperty(type);
}

function isDiscretizing(type) {
  return discreteTypes.hasOwnProperty(type);
}

function isContinuous(type) {
  return continuousTypes.hasOwnProperty(type);
}

function isQuantile(type) {
  return type === 'quantile';
}

function initScale(spec, scope) {
  var type = spec.type || 'linear';

  if (!allTypes.hasOwnProperty(type)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized scale type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(type));
  }

  scope.addScale(spec.name, {
    type:   type,
    domain: undefined
  });
}

function parseScale(spec, scope) {
  var params = scope.getScale(spec.name).params,
      key;

  params.domain = parseScaleDomain(spec.domain, spec, scope);

  if (spec.range != null) {
    params.range = parseScaleRange(spec, scope, params);
  }

  if (spec.interpolate != null) {
    parseScaleInterpolate(spec.interpolate, params);
  }

  if (spec.nice != null) {
    parseScaleNice(spec.nice, params);
  }

  for (key in spec) {
    if (params.hasOwnProperty(key) || key === 'name') continue;
    params[key] = parseLiteral(spec[key], scope);
  }
}

function parseLiteral(v, scope) {
  return !Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(v) ? v
    : v.signal ? scope.signalRef(v.signal)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unsupported object: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(v));
}

function parseArray(v, scope) {
  return v.signal
    ? scope.signalRef(v.signal)
    : v.map(function(v) { return parseLiteral(v, scope); });
}

function dataLookupError(name) {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Can not find data set: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(name));
}

// -- SCALE DOMAIN ----

function parseScaleDomain(domain, spec, scope) {
  if (!domain) {
    if (spec.domainMin != null || spec.domainMax != null) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('No scale domain defined for domainMin/domainMax to override.');
    }
    return; // default domain
  }

  return domain.signal ? scope.signalRef(domain.signal)
    : (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(domain) ? explicitDomain
    : domain.fields ? multipleDomain
    : singularDomain)(domain, spec, scope);
}

function explicitDomain(domain, spec, scope) {
  return domain.map(function(v) {
    return parseLiteral(v, scope);
  });
}

function singularDomain(domain, spec, scope) {
  var data = scope.getData(domain.data);
  if (!data) dataLookupError(domain.data);

  return isOrdinal(spec.type)
      ? data.valuesRef(scope, domain.field, parseSort(domain.sort, false))
      : isQuantile(spec.type) ? data.domainRef(scope, domain.field)
      : data.extentRef(scope, domain.field);
}

function multipleDomain(domain, spec, scope) {
  var data = domain.data,
      fields = domain.fields.reduce(function(dom, d) {
        d = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(d) ? {data: data, field: d}
          : (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(d) || d.signal) ? fieldRef(d, scope)
          : d;
        dom.push(d);
        return dom;
      }, []);

  return (isOrdinal(spec.type) ? ordinalMultipleDomain
    : isQuantile(spec.type) ? quantileMultipleDomain
    : numericMultipleDomain)(domain, scope, fields);
}

function fieldRef(data, scope) {
  var name = '_:vega:_' + (FIELD_REF_ID++),
      coll = Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({});

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(data)) {
    coll.value = {$ingest: data};
  } else if (data.signal) {
    var code = 'setdata(' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(name) + ',' + data.signal + ')';
    coll.params.input = scope.signalRef(code);
  }
  scope.addDataPipeline(name, [coll, Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Sieve"])({})]);
  return {data: name, field: 'data'};
}

function ordinalMultipleDomain(domain, scope, fields) {
  var counts, a, c, v;

  // get value counts for each domain field
  counts = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.countsRef(scope, f.field);
  });

  // sum counts from all fields
  a = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Aggregate"])({
    groupby: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"],
    ops:['sum'], fields: [scope.fieldRef('count')], as:['count'],
    pulse: counts
  }));

  // collect aggregate output
  c = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(a)}));

  // extract values for combined domain
  v = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Values"])({
    field: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"],
    sort:  scope.sortRef(parseSort(domain.sort, true)),
    pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(c)
  }));

  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(v);
}

function parseSort(sort, multidomain) {
  if (sort) {
    if (!sort.field && !sort.op) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(sort)) sort.field = 'key';
      else sort = {field: 'key'};
    } else if (!sort.field && sort.op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('No field provided for sort aggregate op: ' + sort.op);
    } else if (multidomain && sort.field) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Multiple domain scales can not sort by field.');
    } else if (multidomain && sort.op && sort.op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Multiple domain scales support op count only.');
    }
  }
  return sort;
}

function quantileMultipleDomain(domain, scope, fields) {
  // get value arrays for each domain field
  var values = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.domainRef(scope, f.field);
  });

  // combine value arrays
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["MultiValues"])({values: values})));
}

function numericMultipleDomain(domain, scope, fields) {
  // get extents for each domain field
  var extents = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.extentRef(scope, f.field);
  });

  // combine extents
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["MultiExtent"])({extents: extents})));
}

// -- SCALE NICE -----

function parseScaleNice(nice, params) {
  params.nice = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(nice)
    ? {
        interval: parseLiteral(nice.interval),
        step: parseLiteral(nice.step)
      }
    : parseLiteral(nice);
}

// -- SCALE INTERPOLATION -----

function parseScaleInterpolate(interpolate, params) {
  params.interpolate = parseLiteral(interpolate.type || interpolate);
  if (interpolate.gamma != null) {
    params.interpolateGamma = parseLiteral(interpolate.gamma);
  }
}

// -- SCALE RANGE -----

function parseScaleRange(spec, scope, params) {
  var range = spec.range,
      config = scope.config.range;

  if (range.signal) {
    return scope.signalRef(range.signal);
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(range)) {
    if (config && config.hasOwnProperty(range)) {
      spec = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, spec, {range: config[range]});
      return parseScaleRange(spec, scope, params);
    } else if (range === 'width') {
      range = [0, {signal: 'width'}]
    } else if (range === 'height') {
      range = isOrdinal(spec.type)
        ? [0, {signal: 'height'}]
        : [{signal: 'height'}, 0]
    } else {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized scale range value: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(range));
    }
  } else if (range.scheme) {
    params.scheme = parseLiteral(range.scheme, scope);
    if (range.extent) params.schemeExtent = parseArray(range.extent, scope);
    if (range.count) params.schemeCount = parseLiteral(range.count, scope);
    return;
  } else if (range.step) {
    params.rangeStep = parseLiteral(range.step, scope);
    return;
  } else if (isOrdinal(spec.type) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(range)) {
    return parseScaleDomain(range, spec, scope);
  } else if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(range)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unsupported range type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(range));
  }

  return range.map(function(v) {
    return parseLiteral(v, scope);
  });
}


/***/ }),

/***/ "G+K7":
/*!********************************************************!*\
  !*** ./node_modules/vega-tooltip/build/formatValue.js ***!
  \********************************************************/
/*! exports provided: formatValue, replacer, stringify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatValue", function() { return formatValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return replacer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");


/**
 * Format the value to be shown in the toolip.
 *
 * @param value The value to show in the tooltip.
 * @param valueToHtml Function to convert a single cell value to an HTML string
 */
function formatValue(value, valueToHtml, maxDepth) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(value)) {
        return "[" + value.map(function (v) { return valueToHtml(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(v) ? v : stringify(v, maxDepth)); }).join(', ') + "]";
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(value)) {
        var content = '';
        var _a = value, title = _a.title, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["title"]);
        if (title) {
            content += "<h2>" + valueToHtml(title) + "</h2>";
        }
        var keys = Object.keys(rest);
        if (keys.length > 0) {
            content += '<table>';
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                var val = rest[key];
                if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(val)) {
                    val = stringify(val, maxDepth);
                }
                content += "<tr><td class=\"key\">" + valueToHtml(key) + ":</td><td class=\"value\">" + valueToHtml(val) + "</td></tr>";
            }
            content += "</table>";
        }
        return content || '{}'; // show empty object if there are no properties
    }
    return valueToHtml(value);
}
function replacer(maxDepth) {
    var stack = [];
    return function (key, value) {
        if (typeof value !== 'object' || value === null) {
            return value;
        }
        var pos = stack.indexOf(this) + 1;
        stack.length = pos;
        if (stack.length > maxDepth) {
            return '[Object]';
        }
        if (stack.indexOf(value) >= 0) {
            return '[Circular]';
        }
        stack.push(value);
        return value;
    };
}
/**
 * Stringify any JS object to valid JSON
 */
function stringify(obj, maxDepth) {
    return JSON.stringify(obj, replacer(maxDepth));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0VmFsdWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZm9ybWF0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV4RDs7Ozs7R0FLRztBQUNILE1BQU0sc0JBQXNCLEtBQVUsRUFBRSxXQUFtQyxFQUFFLFFBQWdCO0lBQzNGLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2xCLE9BQU8sTUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEVBQXJELENBQXFELENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQUcsQ0FBQztLQUNoRztJQUVELElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ25CLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVqQixJQUFNLFVBQWlDLEVBQS9CLGdCQUFLLEVBQUUsb0NBQXdCLENBQUM7UUFFeEMsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLElBQUksU0FBTyxXQUFXLENBQUMsS0FBSyxDQUFDLFVBQU8sQ0FBQztTQUM3QztRQUVELElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPLElBQUksU0FBUyxDQUFDO1lBQ3JCLEtBQWtCLFVBQUksRUFBSixhQUFJLEVBQUosa0JBQUksRUFBSixJQUFJLEVBQUU7Z0JBQW5CLElBQU0sR0FBRyxhQUFBO2dCQUNaLElBQUksR0FBRyxHQUFJLElBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDN0IsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQ2pCLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2lCQUNoQztnQkFFRCxPQUFPLElBQUksMkJBQXVCLFdBQVcsQ0FBQyxHQUFHLENBQUMsa0NBQTJCLFdBQVcsQ0FBQyxHQUFHLENBQUMsZUFBWSxDQUFDO2FBQzNHO1lBQ0QsT0FBTyxJQUFJLFVBQVUsQ0FBQztTQUN2QjtRQUVELE9BQU8sT0FBTyxJQUFJLElBQUksQ0FBQyxDQUFDLCtDQUErQztLQUN4RTtJQUVELE9BQU8sV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRCxNQUFNLG1CQUFtQixRQUFnQjtJQUN2QyxJQUFNLEtBQUssR0FBVSxFQUFFLENBQUM7SUFFeEIsT0FBTyxVQUFvQixHQUFXLEVBQUUsS0FBVTtRQUNoRCxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQy9DLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztRQUNuQixJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsUUFBUSxFQUFFO1lBQzNCLE9BQU8sVUFBVSxDQUFDO1NBQ25CO1FBQ0QsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM3QixPQUFPLFlBQVksQ0FBQztTQUNyQjtRQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEIsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLG9CQUFvQixHQUFRLEVBQUUsUUFBZ0I7SUFDbEQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNqRCxDQUFDIn0=

/***/ }),

/***/ "G0eu":
/*!************************************************!*\
  !*** ./node_modules/vega-parser/src/config.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(configs) {
  var output = defaults();
  (configs || []).forEach(function(config) {
    var key, value, style;
    if (config) {
      for (key in config) {
        if (key === 'style') {
          style = output.style || (output.style = {});
          for (key in config.style) {
            style[key] = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(style[key] || {}, config.style[key]);
          }
        } else {
          value = config[key];
          output[key] = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)
            ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(output[key]) ? output[key] : {}, value)
            : value;
        }
      }
    }
  });
  return output;
});

var defaultFont = 'sans-serif',
    defaultSymbolSize = 30,
    defaultStrokeWidth = 2,
    defaultColor = '#4c78a8',
    black = "#000",
    gray = '#888',
    lightGray = '#ddd';

/**
 * Standard configuration defaults for Vega specification parsing.
 * Users can provide their own (sub-)set of these default values
 * by passing in a config object to the top-level parse method.
 */
function defaults() {
  return {
    // default padding around visualization
    padding: 0,

    // default for automatic sizing; options: "none", "pad", "fit"
    // or provide an object (e.g., {"type": "pad", "resize": true})
    autosize: 'pad',

    // default view background color
    // covers the entire view component
    background: null,

    // default event handling configuration
    // preventDefault for view-sourced event types except 'wheel'
    events: {
      defaults: {allow: ['wheel']}
    },

    // defaults for top-level group marks
    // accepts mark properties (fill, stroke, etc)
    // covers the data rectangle within group width/height
    group: null,

    // defaults for basic mark types
    // each subset accepts mark properties (fill, stroke, etc)
    mark: null,
    arc: { fill: defaultColor },
    area: { fill: defaultColor },
    image: null,
    line: {
      stroke: defaultColor,
      strokeWidth: defaultStrokeWidth
    },
    path: { stroke: defaultColor },
    rect: { fill: defaultColor },
    rule: { stroke: black },
    shape: { stroke: defaultColor },
    symbol: {
      fill: defaultColor,
      size: 64
    },
    text: {
      fill: black,
      font: defaultFont,
      fontSize: 11
    },

    // style definitions
    style: {
      // axis & legend labels
      "guide-label": {
        fill: black,
        font: defaultFont,
        fontSize: 10
      },
      // axis & legend titles
      "guide-title": {
        fill: black,
        font: defaultFont,
        fontSize: 11,
        fontWeight: 'bold'
      },
      // headers, including chart title
      "group-title": {
        fill: black,
        font: defaultFont,
        fontSize: 13,
        fontWeight: 'bold'
      },
      // defaults for styled point marks in Vega-Lite
      point: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth,
        shape: 'circle'
      },
      circle: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth
      },
      square: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth,
        shape: 'square'
      },
      // defaults for styled group marks in Vega-Lite
      cell: {
        fill: 'transparent',
        stroke: lightGray
      }
    },

    // defaults for axes
    axis: {
      minExtent: 0,
      maxExtent: 200,
      bandPosition: 0.5,
      domain: true,
      domainWidth: 1,
      domainColor: gray,
      grid: false,
      gridWidth: 1,
      gridColor: lightGray,
      labels: true,
      labelAngle: 0,
      labelLimit: 180,
      labelPadding: 2,
      ticks: true,
      tickColor: gray,
      tickOffset: 0,
      tickRound: true,
      tickSize: 5,
      tickWidth: 1,
      titleAlign: 'center',
      titlePadding: 4
    },

    // correction for centering bias
    axisBand: {
      tickOffset: -1
    },

    // defaults for legends
    legend: {
      orient: 'right',
      offset: 18,
      padding: 0,
      gridAlign: 'each',
      columnPadding: 10,
      rowPadding: 2,
      symbolDirection: 'vertical',
      gradientDirection: 'vertical',
      gradientLength: 200,
      gradientThickness: 16,
      gradientStrokeColor: lightGray,
      gradientStrokeWidth: 0,
      gradientLabelOffset: 2,
      labelAlign: 'left',
      labelBaseline: 'middle',
      labelLimit: 160,
      labelOffset: 4,
      labelOverlap: true,
      symbolType: 'circle',
      symbolSize: 100,
      symbolOffset: 0,
      symbolStrokeWidth: 1.5,
      symbolBaseFillColor: 'transparent',
      symbolBaseStrokeColor: gray,
      titleAlign: 'left',
      titleBaseline: 'top',
      titleLimit: 180,
      titlePadding: 5
    },

    // defaults for group title
    title: {
      orient: 'top',
      anchor: 'middle',
      offset: 4
    },

    // defaults for scale ranges
    range: {
      category: {
        scheme: 'tableau10'
      },
      ordinal: {
        scheme: 'blues',
        extent: [0.2, 1]
      },
      heatmap: {
        scheme: 'viridis'
      },
      ramp: {
        scheme: 'blues',
        extent: [0.2, 1]
      },
      diverging: {
        scheme: 'blueorange'
      },
      symbol: [
        'circle',
        'square',
        'triangle-up',
        'cross',
        'diamond',
        'triangle-right',
        'triangle-down',
        'triangle-left'
      ]
    }
  };
}


/***/ }),

/***/ "GRzZ":
/*!*******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/title.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/constants */ "Z42V");
/* harmony import */ var _guides_guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/guide-mark */ "IFTd");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/guide-util */ "T/Dk");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mark */ "dkbZ");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encode/encode-util */ "PkT2");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "J29t");











function anchorExpr(startValue, endValue, centerValue) {
  return 'item.anchor==="' + _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Start"] + '"?' + startValue
    + ':item.anchor==="' + _guides_constants__WEBPACK_IMPORTED_MODULE_0__["End"] + '"?' + endValue
    + ':' + centerValue;
}

// title text alignment
var alignExpr = anchorExpr(
  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["stringValue"])(_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Left"]), Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["stringValue"])(_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Right"]), Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["stringValue"])(_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Center"])
);

// multiplication factor for anchor positioning
var multExpr = anchorExpr(
  '+(item.orient==="' + _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Right"] + '")',
  '+(item.orient!=="' + _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Left"] + '")',
  '0.5'
);

/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  spec = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["isString"])(spec) ? {text: spec} : spec;

  var config = scope.config.title,
      encode = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["extend"])({}, spec.encode),
      datum, dataRef, title;

  // single-element data source for group title
  datum = {
    orient: Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('orient', spec, config)
  };
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_8__["Collect"])(null, [datum])));

  // build title specification
  encode.name = spec.name;
  encode.interactive = spec.interactive;
  title = buildTitle(spec, config, encode, dataRef);
  if (spec.zindex) title.zindex = spec.zindex;

  // parse title specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_3__["default"])(title, scope);
});

function buildTitle(spec, config, userEncode, dataRef) {
  var zero = {value: 0},
      title = spec.text,
      orient = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('orient', spec, config),
      anchor = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('anchor', spec, config),
      sign = (orient === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      horizontal = (orient === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]),
      extent = {group: (horizontal ? 'width' : 'height')},
      encode, enter, update, pos, opp;

  // title positioning along orientation axis
  pos = {field: extent, mult: {signal: multExpr}};

  // title baseline position
  opp = sign < 0 ? zero
    : horizontal ? {field: {group: 'height'}}
    : {field: {group: 'width'}};

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1},
      text:   Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(title),
      anchor: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(anchor),
      orient: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(orient),
      extent: {field: extent},
      align:  {signal: alignExpr}
    },
    exit: {
      opacity: zero
    }
  };

  if (horizontal) {
    update.x = pos;
    update.y = opp;
    enter.angle = zero;
    enter.baseline = {value: orient === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Top"] ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"] : _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Top"]};
  } else {
    update.x = opp;
    update.y = pos;
    enter.angle = {value: sign * 90};
    enter.baseline = {value: _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]};
  }

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'align',      Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('align', spec, config), 'update');
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'angle',      Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('angle', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'baseline',   Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('baseline', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fill',       Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('color', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'font',       Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('font', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fontSize',   Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('fontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'fontWeight', Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('fontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'frame',      Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('frame', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'limit',      Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('limit', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncode"])(encode, 'offset',     Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('offset', spec, config) || 0);

  return Object(_guides_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["TitleRole"], spec.style || _guides_constants__WEBPACK_IMPORTED_MODULE_0__["GroupTitleStyle"],
                   null, dataRef, encode, userEncode);
}


/***/ }),

/***/ "GTsv":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/encode.js ***!
  \*******************************************************************/
/*! exports provided: symbols, gradient, labels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gradient", function() { return gradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labels", function() { return labels; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _mark_mixins__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../mark/mixins */ "NITR");









function symbols(fieldDef, symbolsSpec, model, channel, type) {
    if (type === 'gradient') {
        return undefined;
    }
    var out = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, Object(_common__WEBPACK_IMPORTED_MODULE_7__["applyMarkConfig"])({}, model, _mark__WEBPACK_IMPORTED_MODULE_4__["FILL_STROKE_CONFIG"]), _mark_mixins__WEBPACK_IMPORTED_MODULE_8__["color"](model));
    switch (model.mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_4__["BAR"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TICK"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TEXT"]:
            out.shape = { value: 'square' };
            break;
        case _mark__WEBPACK_IMPORTED_MODULE_4__["CIRCLE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["SQUARE"]:
            out.shape = { value: model.mark };
            break;
        case _mark__WEBPACK_IMPORTED_MODULE_4__["POINT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["LINE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["GEOSHAPE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["AREA"]:
            // use default circle
            break;
    }
    var markDef = model.markDef, encoding = model.encoding;
    var filled = markDef.filled;
    if (out.fill) {
        // for fill legend, we don't want any fill in symbol
        if (channel === 'fill' || (filled && channel === _channel__WEBPACK_IMPORTED_MODULE_2__["COLOR"])) {
            delete out.fill;
        }
        else {
            if (out.fill['field']) {
                // For others, remove fill field
                delete out.fill;
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(out.fill)) {
                var fill = getFirstConditionValue(encoding.fill || encoding.color) || markDef.fill || (filled && markDef.color);
                if (fill) {
                    out.fill = { value: fill };
                }
            }
        }
    }
    if (out.stroke) {
        if (channel === 'stroke' || (!filled && channel === _channel__WEBPACK_IMPORTED_MODULE_2__["COLOR"])) {
            delete out.stroke;
        }
        else {
            if (out.stroke['field']) {
                // For others, remove stroke field
                delete out.stroke;
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(out.stroke)) {
                var stroke = getFirstConditionValue(encoding.stroke || encoding.color) || markDef.stroke || (!filled && markDef.color);
                if (stroke) {
                    out.stroke = { value: stroke };
                }
            }
        }
    }
    if (out.fill && out.fill['value'] !== 'transparent' && !out.stroke) {
        // for non color channel's legend, we need to override symbol stroke config from Vega config
        out.stroke = { value: 'transparent' };
    }
    if (channel !== _channel__WEBPACK_IMPORTED_MODULE_2__["SHAPE"]) {
        var shape = getFirstConditionValue(encoding.shape) || markDef.shape;
        if (shape) {
            out.shape = { value: shape };
        }
    }
    if (channel !== _channel__WEBPACK_IMPORTED_MODULE_2__["OPACITY"]) {
        var opacity = getMaxValue(encoding.opacity) || markDef.opacity;
        if (opacity) { // only apply opacity if it is neither zero or undefined
            out.opacity = { value: opacity };
        }
    }
    out = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, out, symbolsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(out).length > 0 ? out : undefined;
}
function gradient(fieldDef, gradientSpec, model, channel, type) {
    var out = {};
    if (type === 'gradient') {
        var opacity = getMaxValue(model.encoding.opacity) || model.markDef.opacity;
        if (opacity) { // only apply opacity if it is neither zero or undefined
            out.opacity = { value: opacity };
        }
    }
    out = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, out, gradientSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(out).length > 0 ? out : undefined;
}
function labels(fieldDef, labelsSpec, model, channel, type) {
    var legend = model.legend(channel);
    var config = model.config;
    var out = {};
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isTimeFieldDef"])(fieldDef)) {
        var isUTCScale = model.getScaleComponent(channel).get('type') === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].UTC;
        var expr = Object(_common__WEBPACK_IMPORTED_MODULE_7__["timeFormatExpression"])('datum.value', fieldDef.timeUnit, legend.format, config.legend.shortTimeLabels, config.timeFormat, isUTCScale);
        labelsSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (expr ? { text: { signal: expr } } : {}), labelsSpec);
    }
    out = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, out, labelsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(out).length > 0 ? out : undefined;
}
function getMaxValue(channelDef) {
    return getConditionValue(channelDef, function (v, conditionalDef) { return Math.max(v, conditionalDef.value); });
}
function getFirstConditionValue(channelDef) {
    return getConditionValue(channelDef, function (v, conditionalDef) { return v !== undefined ? v : conditionalDef.value; });
}
function getConditionValue(channelDef, reducer) {
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["hasConditionalValueDef"])(channelDef)) {
        return (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef.condition) ? channelDef.condition : [channelDef.condition])
            .reduce(reducer, channelDef.value);
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(channelDef)) {
        return channelDef.value;
    }
    return undefined;
}
//# sourceMappingURL=encode.js.map

/***/ }),

/***/ "GYXB":
/*!************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/WindowOps.js ***!
  \************************************************************/
/*! exports provided: WindowOp, WindowOps, ValidWindowOps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowOp", function() { return WindowOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowOps", function() { return WindowOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidWindowOps", function() { return ValidWindowOps; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function WindowOp(op, field, param, as) {
  var fn = WindowOps[op](field, param);
  return {
    init:   fn.init || vega_util__WEBPACK_IMPORTED_MODULE_0__["zero"],
    update: function(w, t) { t[as] = fn.next(w); }
  };
}

var WindowOps = {
  row_number: function() {
    return {
      next: function(w) { return w.index + 1; }
    };
  },
  rank: function() {
    var rank;
    return {
      init: function() { rank = 1; },
      next: function(w) {
        var i = w.index,
            data = w.data;
        return (i && w.compare(data[i - 1], data[i])) ? (rank = i + 1) : rank;
      }
    };
  },
  dense_rank: function() {
    var drank;
    return {
      init: function() { drank = 1; },
      next: function(w) {
        var i = w.index,
            d = w.data;
        return (i && w.compare(d[i - 1], d[i])) ? ++drank : drank;
      }
    };
  },
  percent_rank: function() {
    var rank = WindowOps.rank(),
        next = rank.next;
    return {
      init: rank.init,
      next: function(w) {
        return (next(w) - 1) / (w.data.length - 1);
      }
    };
  },
  cume_dist: function() {
    var cume;
    return {
      init: function() { cume = 0; },
      next: function(w) {
        var i = w.index,
            d = w.data,
            c = w.compare;
        if (cume < i) {
          while (i + 1 < d.length && !c(d[i], d[i + 1])) ++i;
          cume = i;
        }
        return (1 + cume) / d.length;
      }
    };
  },
  ntile: function(field, num) {
    num = +num;
    if (!(num > 0)) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('ntile num must be greater than zero.');
    var cume = WindowOps.cume_dist(),
        next = cume.next;
    return {
      init: cume.init,
      next: function(w) { return Math.ceil(num * next(w)); }
    };
  },

  lag: function(field, offset) {
    offset = +offset || 1;
    return {
      next: function(w) {
        var i = w.index - offset;
        return i >= 0 ? field(w.data[i]) : null;
      }
    };
  },
  lead: function(field, offset) {
    offset = +offset || 1;
    return {
      next: function(w) {
        var i = w.index + offset,
            d = w.data;
        return i < d.length ? field(d[i]) : null;
      }
    };
  },

  first_value: function(field) {
    return {
      next: function(w) { return field(w.data[w.i0]); }
    };
  },
  last_value: function(field) {
    return {
      next: function(w) { return field(w.data[w.i1 - 1]); }
    }
  },
  nth_value: function(field, nth) {
    nth = +nth;
    if (!(nth > 0)) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('nth_value nth must be greater than zero.');
    return {
      next: function(w) {
        var i = w.i0 + (nth - 1);
        return i < w.i1 ? field(w.data[i]) : null;
      }
    }
  }
};

var ValidWindowOps = Object.keys(WindowOps);


/***/ }),

/***/ "HD69":
/*!***********************************************!*\
  !*** ./node_modules/vega-projection/index.js ***!
  \***********************************************/
/*! exports provided: projection, projectionProperties, getProjectionPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_projections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/projections */ "MSxZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["projection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projectionProperties", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["projectionProperties"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getProjectionPath", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["getProjectionPath"]; });




/***/ }),

/***/ "HIPa":
/*!********************************************!*\
  !*** ./node_modules/vega-lib/package.json ***!
  \********************************************/
/*! exports provided: name, version, description, keywords, license, author, contributors, main, module, jsnext:main, unpkg, jsdelivr, repository, scripts, dependencies, devDependencies, browser, default */
/***/ (function(module) {

module.exports = {"name":"vega-lib","version":"4.2.0","description":"Include Vega in projects using minimal dependencies.","keywords":["vega","visualization","interaction","dataflow","library","data","d3"],"license":"BSD-3-Clause","author":{"name":"UW Interactive Data Lab","url":"http://idl.cs.washington.edu"},"contributors":[{"name":"Jeffrey Heer","url":"http://idl.cs.washington.edu"},{"name":"Arvind Satyanarayan","url":"http://arvindsatya.com"},{"name":"Ryan Russell","url":"https://github.com/RussellSprouts"},{"name":"Emily Gu","url":"https://github.com/emilygu"},{"name":"Dominik Moritz","url":"https://www.domoritz.de"},{"name":"Yuri Astrakhan","url":"https://github.com/nyurik"}],"main":"build/vega.js","module":"index","jsnext:main":"index","unpkg":"build/vega.min.js","jsdelivr":"build/vega.min.js","repository":{"type":"git","url":"https://github.com/vega/vega-lib.git"},"scripts":{"rollup":"bin/rollup && bin/schema > build/vega-schema.json","prebuild":"rm -rf build && mkdir build","build":"npm run rollup && bin/rollup -e","postbuild":"uglifyjs build/vega.js -c -m -o build/vega.min.js && uglifyjs build/vega-core.js -c -m -o build/vega-core.min.js","pretest":"npm run prebuild && npm run rollup","test":"TZ=America/Los_Angeles tape 'test/**/*-test.js' && eslint index.js test","prepublishOnly":"npm run test && npm run build","postpublish":"git push && git push --tags"},"dependencies":{"vega-crossfilter":"^3.0.0","vega-dataflow":"^4.0.4","vega-encode":"^3.1.4","vega-event-selector":"^2.0.0","vega-expression":"^2.3.1","vega-force":"^3.0.0","vega-geo":"^3.1.0","vega-hierarchy":"^3.0.3","vega-loader":"^3.0.1","vega-parser":"^3.7.2","vega-projection":"^1.2.0","vega-runtime":"^3.1.0","vega-scale":"^2.4.0","vega-scenegraph":"^3.2.2","vega-statistics":"^1.2.1","vega-transforms":"^2.2.0","vega-typings":"*","vega-util":"^1.7.0","vega-view":"^3.3.3","vega-view-transforms":"^2.0.2","vega-voronoi":"^3.0.0","vega-wordcloud":"^3.0.0"},"devDependencies":{"eslint":"5","rollup":"0.62.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-resolve":"^3.3.0","tape":"4","tv4":"1","uglify-js":"3"},"browser":{"buffer":false,"fs":false}};

/***/ }),

/***/ "HRhJ":
/*!********************************************************!*\
  !*** ./node_modules/vega-transforms/src/Expression.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Expression; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Wraps an expression function with access to external parameters.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function} params.expr - The expression function. The
 *  function should accept both a datum and a parameter object.
 *  This operator's value will be a new function that wraps the
 *  expression function with access to this operator's parameters.
 */
function Expression(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
  this.modified(true);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Expression, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  var expr = _.expr;
  return this.value && !_.modified('expr')
    ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessor"])(
        function(datum) { return expr(datum, _); },
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorFields"])(expr),
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(expr)
      );
}


/***/ }),

/***/ "Hc3/":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/util.js ***!
  \**************************************************/
/*! exports provided: pick, omit, stringify, hash, contains, without, union, some, every, flatten, mergeDeep, unique, differ, hasIntersection, isNumeric, differArray, keys, vals, flagKeys, duplicate, isBoolean, varName, logicalExpr, deleteNestedProperty, titlecase, accessPathWithDatum, flatAccessWithDatum, replacePathInField, removePathFromField, accessPathDepth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return omit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hash", function() { return hash; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "without", function() { return without; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "union", function() { return union; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "some", function() { return some; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeep", function() { return mergeDeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unique", function() { return unique; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "differ", function() { return differ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasIntersection", function() { return hasIntersection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "differArray", function() { return differArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vals", function() { return vals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flagKeys", function() { return flagKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "duplicate", function() { return duplicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "varName", function() { return varName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logicalExpr", function() { return logicalExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteNestedProperty", function() { return deleteNestedProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "titlecase", function() { return titlecase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessPathWithDatum", function() { return accessPathWithDatum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatAccessWithDatum", function() { return flatAccessWithDatum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacePathInField", function() { return replacePathInField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removePathFromField", function() { return removePathFromField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessPathDepth", function() { return accessPathDepth; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-stable-stringify */ "rE/H");
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logical */ "s/HG");




/**
 * Creates an object composed of the picked object properties.
 *
 * Example:  (from lodash)
 *
 * var object = {'a': 1, 'b': '2', 'c': 3};
 * pick(object, ['a', 'c']);
 * // → {'a': 1, 'c': 3}
 *
 */
function pick(obj, props) {
    var copy = {};
    for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {
        var prop = props_1[_i];
        if (obj.hasOwnProperty(prop)) {
            copy[prop] = obj[prop];
        }
    }
    return copy;
}
/**
 * The opposite of _.pick; this method creates an object composed of the own
 * and inherited enumerable string keyed properties of object that are not omitted.
 */
function omit(obj, props) {
    var copy = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, obj);
    for (var _i = 0, props_2 = props; _i < props_2.length; _i++) {
        var prop = props_2[_i];
        delete copy[prop];
    }
    return copy;
}
/**
 * Converts any object into a string representation that can be consumed by humans.
 */
var stringify = json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default.a;
/**
 * Converts any object into a string of limited size, or a number.
 */
function hash(a) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(a)) {
        return a;
    }
    var str = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(a) ? a : json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default()(a);
    // short strings can be used as hash directly, longer strings are hashed to reduce memory usage
    if (str.length < 100) {
        return str;
    }
    // from http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/
    var h = 0;
    for (var i = 0; i < str.length; i++) {
        var char = str.charCodeAt(i);
        h = ((h << 5) - h) + char;
        h = h & h; // Convert to 32bit integer
    }
    return h;
}
function contains(array, item) {
    return array.indexOf(item) > -1;
}
/** Returns the array without the elements in item */
function without(array, excludedItems) {
    return array.filter(function (item) { return !contains(excludedItems, item); });
}
function union(array, other) {
    return array.concat(without(other, array));
}
/**
 * Returns true if any item returns true.
 */
function some(arr, f) {
    var i = 0;
    for (var k = 0; k < arr.length; k++) {
        if (f(arr[k], k, i++)) {
            return true;
        }
    }
    return false;
}
/**
 * Returns true if all items return true.
 */
function every(arr, f) {
    var i = 0;
    for (var k = 0; k < arr.length; k++) {
        if (!f(arr[k], k, i++)) {
            return false;
        }
    }
    return true;
}
function flatten(arrays) {
    return [].concat.apply([], arrays);
}
/**
 * recursively merges src into dest
 */
function mergeDeep(dest) {
    var src = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        src[_i - 1] = arguments[_i];
    }
    for (var _a = 0, src_1 = src; _a < src_1.length; _a++) {
        var s = src_1[_a];
        dest = deepMerge_(dest, s);
    }
    return dest;
}
// recursively merges src into dest
function deepMerge_(dest, src) {
    if (typeof src !== 'object' || src === null) {
        return dest;
    }
    for (var p in src) {
        if (!src.hasOwnProperty(p)) {
            continue;
        }
        if (src[p] === undefined) {
            continue;
        }
        if (typeof src[p] !== 'object' || Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(src[p]) || src[p] === null) {
            dest[p] = src[p];
        }
        else if (typeof dest[p] !== 'object' || dest[p] === null) {
            dest[p] = mergeDeep(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(src[p].constructor) ? [] : {}, src[p]);
        }
        else {
            mergeDeep(dest[p], src[p]);
        }
    }
    return dest;
}
function unique(values, f) {
    var results = [];
    var u = {};
    var v;
    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
        var val = values_1[_i];
        v = f(val);
        if (v in u) {
            continue;
        }
        u[v] = 1;
        results.push(val);
    }
    return results;
}
/**
 * Returns true if the two dictionaries disagree. Applies only to defined values.
 */
function differ(dict, other) {
    for (var key in dict) {
        if (dict.hasOwnProperty(key)) {
            if (other[key] && dict[key] && other[key] !== dict[key]) {
                return true;
            }
        }
    }
    return false;
}
function hasIntersection(a, b) {
    for (var key in a) {
        if (key in b) {
            return true;
        }
    }
    return false;
}
function isNumeric(num) {
    return !isNaN(num);
}
function differArray(array, other) {
    if (array.length !== other.length) {
        return true;
    }
    array.sort();
    other.sort();
    for (var i = 0; i < array.length; i++) {
        if (other[i] !== array[i]) {
            return true;
        }
    }
    return false;
}
// This is a stricter version of Object.keys but with better types. See https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-263132208
var keys = Object.keys;
function vals(x) {
    var _vals = [];
    for (var k in x) {
        if (x.hasOwnProperty(k)) {
            _vals.push(x[k]);
        }
    }
    return _vals;
}
function flagKeys(f) {
    return keys(f);
}
function duplicate(obj) {
    return JSON.parse(JSON.stringify(obj));
}
function isBoolean(b) {
    return b === true || b === false;
}
/**
 * Convert a string into a valid variable name
 */
function varName(s) {
    // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _
    var alphanumericS = s.replace(/\W/g, '_');
    // Add _ if the string has leading numbers.
    return (s.match(/^\d+/) ? '_' : '') + alphanumericS;
}
function logicalExpr(op, cb) {
    if (Object(_logical__WEBPACK_IMPORTED_MODULE_3__["isLogicalNot"])(op)) {
        return '!(' + logicalExpr(op.not, cb) + ')';
    }
    else if (Object(_logical__WEBPACK_IMPORTED_MODULE_3__["isLogicalAnd"])(op)) {
        return '(' + op.and.map(function (and) { return logicalExpr(and, cb); }).join(') && (') + ')';
    }
    else if (Object(_logical__WEBPACK_IMPORTED_MODULE_3__["isLogicalOr"])(op)) {
        return '(' + op.or.map(function (or) { return logicalExpr(or, cb); }).join(') || (') + ')';
    }
    else {
        return cb(op);
    }
}
/**
 * Delete nested property of an object, and delete the ancestors of the property if they become empty.
 */
function deleteNestedProperty(obj, orderedProps) {
    if (orderedProps.length === 0) {
        return true;
    }
    var prop = orderedProps.shift();
    if (deleteNestedProperty(obj[prop], orderedProps)) {
        delete obj[prop];
    }
    return Object.keys(obj).length === 0;
}
function titlecase(s) {
    return s.charAt(0).toUpperCase() + s.substr(1);
}
/**
 * Converts a path to an access path with datum.
 * @param path The field name.
 * @param datum The string to use for `datum`.
 */
function accessPathWithDatum(path, datum) {
    if (datum === void 0) { datum = 'datum'; }
    var pieces = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["splitAccessPath"])(path);
    var prefixes = [];
    for (var i = 1; i <= pieces.length; i++) {
        var prefix = "[" + pieces.slice(0, i).map(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"]).join('][') + "]";
        prefixes.push("" + datum + prefix);
    }
    return prefixes.join(' && ');
}
/**
 * Return access with datum to the falttened field.
 * @param path The field name.
 * @param datum The string to use for `datum`.
 */
function flatAccessWithDatum(path, datum) {
    if (datum === void 0) { datum = 'datum'; }
    return datum + "[" + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["splitAccessPath"])(path).join('.')) + "]";
}
/**
 * Replaces path accesses with access to non-nested field.
 * For example, `foo["bar"].baz` becomes `foo\\.bar\\.baz`.
 */
function replacePathInField(path) {
    return "" + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["splitAccessPath"])(path).map(function (p) { return p.replace('.', '\\.'); }).join('\\.');
}
/**
 * Remove path accesses with access from field.
 * For example, `foo["bar"].baz` becomes `foo.bar.baz`.
 */
function removePathFromField(path) {
    return "" + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["splitAccessPath"])(path).join('.');
}
/**
 * Count the depth of the path. Returns 1 for fields that are not nested.
 */
function accessPathDepth(path) {
    if (!path) {
        return 0;
    }
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["splitAccessPath"])(path).length;
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "HkXN":
/*!************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/constants.js ***!
  \************************************************************/
/*! exports provided: Top, Left, Right, Bottom, TopLeft, TopRight, BottomLeft, BottomRight, Start, Middle, End, Group, AxisRole, TitleRole, FrameRole, ScopeRole, LegendRole, RowHeader, RowFooter, RowTitle, ColHeader, ColFooter, ColTitle, Padding, Symbols, Fit, FitX, FitY, Pad, None, All, Each, Flush, Column, Row */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Top", function() { return Top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Left", function() { return Left; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Right", function() { return Right; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bottom", function() { return Bottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopLeft", function() { return TopLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopRight", function() { return TopRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BottomLeft", function() { return BottomLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BottomRight", function() { return BottomRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Start", function() { return Start; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Middle", function() { return Middle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "End", function() { return End; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return Group; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return AxisRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleRole", function() { return TitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return FrameRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return ScopeRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return LegendRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowHeader", function() { return RowHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowFooter", function() { return RowFooter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowTitle", function() { return RowTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColHeader", function() { return ColHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColFooter", function() { return ColFooter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColTitle", function() { return ColTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Padding", function() { return Padding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fit", function() { return Fit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FitX", function() { return FitX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FitY", function() { return FitY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pad", function() { return Pad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "None", function() { return None; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "All", function() { return All; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Each", function() { return Each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Flush", function() { return Flush; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Column", function() { return Column; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Row", function() { return Row; });
var Top = 'top';
var Left = 'left';
var Right = 'right';
var Bottom = 'bottom';

var TopLeft = 'top-left';
var TopRight = 'top-right';
var BottomLeft = 'bottom-left';
var BottomRight = 'bottom-right';

var Start = 'start';
var Middle = 'middle';
var End = 'end';

var Group = 'group';

var AxisRole = 'axis';
var TitleRole = 'title';
var FrameRole = 'frame';
var ScopeRole = 'scope';
var LegendRole = 'legend';

var RowHeader = 'row-header';
var RowFooter = 'row-footer';
var RowTitle  = 'row-title';
var ColHeader = 'column-header';
var ColFooter = 'column-footer';
var ColTitle  = 'column-title';

var Padding = 'padding';

var Symbols = 'symbol';

var Fit  = 'fit';
var FitX = 'fit-x';
var FitY = 'fit-y';
var Pad  = 'pad';
var None = 'none';

var All = 'all';
var Each = 'each';
var Flush = 'flush';

var Column = 'column';
var Row = 'row';




/***/ }),

/***/ "HumB":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/index.js ***!
  \****************************************************************/
/*! exports provided: AncestorParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AncestorParse", function() { return AncestorParse; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../split */ "cq+n");


/**
 * Class to track interesting properties (see https://15721.courses.cs.cmu.edu/spring2016/papers/graefe-ieee1995.pdf)
 * about how fields have been parsed or whether they have been derived in a transforms. We use this to not parse the
 * same field again (or differently).
 */
var AncestorParse = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AncestorParse, _super);
    function AncestorParse(explicit, implicit, parseNothing) {
        if (explicit === void 0) { explicit = {}; }
        if (implicit === void 0) { implicit = {}; }
        if (parseNothing === void 0) { parseNothing = false; }
        var _this = _super.call(this, explicit, implicit) || this;
        _this.explicit = explicit;
        _this.implicit = implicit;
        _this.parseNothing = parseNothing;
        return _this;
    }
    AncestorParse.prototype.clone = function () {
        var clone = _super.prototype.clone.call(this);
        clone.parseNothing = this.parseNothing;
        return clone;
    };
    return AncestorParse;
}(_split__WEBPACK_IMPORTED_MODULE_1__["Split"]));

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "IAF7":
/*!****************************************************!*\
  !*** ./node_modules/topojson-client/src/stitch.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology, arcs) {
  var stitchedArcs = {},
      fragmentByStart = {},
      fragmentByEnd = {},
      fragments = [],
      emptyIndex = -1;

  // Stitch empty arcs first, since they may be subsumed by other arcs.
  arcs.forEach(function(i, j) {
    var arc = topology.arcs[i < 0 ? ~i : i], t;
    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
    }
  });

  arcs.forEach(function(i) {
    var e = ends(i),
        start = e[0],
        end = e[1],
        f, g;

    if (f = fragmentByEnd[start]) {
      delete fragmentByEnd[f.end];
      f.push(i);
      f.end = end;
      if (g = fragmentByStart[end]) {
        delete fragmentByStart[g.start];
        var fg = g === f ? f : f.concat(g);
        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else if (f = fragmentByStart[end]) {
      delete fragmentByStart[f.start];
      f.unshift(i);
      f.start = start;
      if (g = fragmentByEnd[start]) {
        delete fragmentByEnd[g.end];
        var gf = g === f ? f : g.concat(f);
        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else {
      f = [i];
      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;
    }
  });

  function ends(i) {
    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });
    else p1 = arc[arc.length - 1];
    return i < 0 ? [p1, p0] : [p0, p1];
  }

  function flush(fragmentByEnd, fragmentByStart) {
    for (var k in fragmentByEnd) {
      var f = fragmentByEnd[k];
      delete fragmentByStart[f.start];
      delete f.start;
      delete f.end;
      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });
      fragments.push(f);
    }
  }

  flush(fragmentByEnd, fragmentByStart);
  flush(fragmentByStart, fragmentByEnd);
  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });

  return fragments;
});


/***/ }),

/***/ "IFTd":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-mark.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");



/* harmony default export */ __webpack_exports__["default"] = (function(type, role, style, key, dataRef, encode, extras) {
  return {
    type:  type,
    name:  extras ? extras.name : undefined,
    role:  role,
    style: (extras && extras.style) || style,
    key:   key,
    from:  dataRef,
    interactive: !!(extras && extras.interactive),
    encode: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_1__["extendEncode"])(encode, extras, _constants__WEBPACK_IMPORTED_MODULE_0__["Skip"])
  };
});


/***/ }),

/***/ "IQEy":
/*!******************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-dark.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var lightColor = '#fff';
var medColor = '#aaa';
var darkTheme = {
    background: '#333',
    title: { color: lightColor },
    style: {
        'guide-label': {
            fill: lightColor,
        },
        'guide-title': {
            fill: lightColor,
        },
    },
    axis: {
        domainColor: lightColor,
        gridColor: medColor,
        tickColor: lightColor,
    },
};
/* harmony default export */ __webpack_exports__["default"] = (darkTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZGFyay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90aGVtZS1kYXJrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQztBQUMxQixJQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFeEIsSUFBTSxTQUFTLEdBQVc7SUFDeEIsVUFBVSxFQUFFLE1BQU07SUFFbEIsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUU1QixLQUFLLEVBQUU7UUFDTCxhQUFhLEVBQUU7WUFDYixJQUFJLEVBQUUsVUFBVTtTQUNqQjtRQUNELGFBQWEsRUFBRTtZQUNiLElBQUksRUFBRSxVQUFVO1NBQ2pCO0tBQ0Y7SUFFRCxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsVUFBVTtRQUN2QixTQUFTLEVBQUUsUUFBUTtRQUNuQixTQUFTLEVBQUUsVUFBVTtLQUN0QjtDQUNGLENBQUM7QUFFRixlQUFlLFNBQVMsQ0FBQyJ9

/***/ }),

/***/ "ImxY":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/element.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(tag, attr, text) {
  var el = document.createElement(tag);
  for (var key in attr) el.setAttribute(key, attr[key]);
  if (text != null) el.textContent = text;
  return el;
});


/***/ }),

/***/ "Iqbv":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/quarter.js ***!
  \********************************************************************/
/*! exports provided: quarter, utcquarter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarter", function() { return quarter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcquarter", function() { return utcquarter; });
function quarter(date) {
  return 1 + ~~(new Date(date).getMonth() / 3);
}

function utcquarter(date) {
  return 1 + ~~(new Date(date).getUTCMonth() / 3);
}


/***/ }),

/***/ "IsBD":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "lW0u");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/canvas/draw */ "mwYA");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");





/* harmony default export */ __webpack_exports__["default"] = (function(type, shape, tip) {

  function attr(emit, item) {
    var items = item.mark.items;
    if (items.length) emit('d', shape(null, items));
  }

  function bound(bounds, mark) {
    var items = mark.items;
    if (items.length === 0) {
      return bounds;
    } else {
      shape(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), items);
      return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, items[0]);
    }
  }

  function draw(context, items) {
    context.beginPath();
    shape(context, items);
  }

  var hit = Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__["hitPath"])(draw);

  function pick(context, scene, x, y, gx, gy) {
    var items = scene.items,
        b = scene.bounds;

    if (!items || !items.length || b && !b.contains(gx, gy)) {
      return null;
    }

    x *= context.pixelRatio;
    y *= context.pixelRatio;
    return hit(context, items, x, y) ? items[0] : null;
  }

  return {
    type:   type,
    tag:    'path',
    nested: true,
    attr:   attr,
    bound:  bound,
    draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__["drawOne"])(draw),
    pick:   pick,
    tip:    tip
  };

});




/***/ }),

/***/ "J06u":
/*!**************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/component.js ***!
  \**************************************************************************/
/*! exports provided: ProjectionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectionComponent", function() { return ProjectionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../split */ "cq+n");


var ProjectionComponent = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ProjectionComponent, _super);
    function ProjectionComponent(name, specifiedProjection, size, data) {
        var _this = _super.call(this, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, specifiedProjection), // all explicit properties of projection
        { name: name } // name as initial implicit property
        ) || this;
        _this.specifiedProjection = specifiedProjection;
        _this.size = size;
        _this.data = data;
        _this.merged = false;
        return _this;
    }
    return ProjectionComponent;
}(_split__WEBPACK_IMPORTED_MODULE_1__["Split"]));

//# sourceMappingURL=component.js.map

/***/ }),

/***/ "J29t":
/*!*****************************************!*\
  !*** ./node_modules/vega-util/index.js ***!
  \*****************************************/
/*! exports provided: accessor, accessorName, accessorFields, id, identity, zero, one, truthy, falsy, logger, None, Error, Warn, Info, Debug, panLinear, panLog, panPow, zoomLinear, zoomLog, zoomPow, array, compare, constant, debounce, error, extend, extentIndex, fastmap, field, inherits, isArray, isBoolean, isDate, isFunction, isNumber, isObject, isRegExp, isString, key, merge, pad, peek, repeat, splitAccessPath, stringValue, toBoolean, toDate, toNumber, toString, toSet, truncate, visitArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/accessor */ "iMRA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessor", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorFields"]; });

/* harmony import */ var _src_accessors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/accessors */ "C2wT");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "id", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["id"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["zero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "one", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["one"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["truthy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["falsy"]; });

/* harmony import */ var _src_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/logger */ "B/ym");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logger", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "None", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["None"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Warn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Debug"]; });

/* harmony import */ var _src_transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/transform */ "RiFC");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomPow"]; });

/* harmony import */ var _src_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/array */ "PNfb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "array", function() { return _src_array__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_compare__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/compare */ "nwJO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _src_compare__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_constant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/constant */ "WaVQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return _src_constant__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_debounce__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/debounce */ "vSVW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _src_debounce__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_error__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/error */ "3dAl");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "error", function() { return _src_error__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_extend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/extend */ "939a");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _src_extend__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_extentIndex__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/extentIndex */ "CWVO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extentIndex", function() { return _src_extentIndex__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_fastmap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/fastmap */ "4D59");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fastmap", function() { return _src_fastmap__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_field__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/field */ "xjBs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return _src_field__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_inherits__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/inherits */ "Uu5a");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inherits", function() { return _src_inherits__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _src_isArray__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/isArray */ "W2Gv");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _src_isArray__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_isBoolean__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/isBoolean */ "qsdV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _src_isBoolean__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_isDate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/isDate */ "Oysb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _src_isDate__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_isFunction__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/isFunction */ "LOlD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _src_isFunction__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_isNumber__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/isNumber */ "K8zk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _src_isNumber__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_isObject__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/isObject */ "zlEu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _src_isObject__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_isRegExp__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/isRegExp */ "W7Xn");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _src_isRegExp__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_isString__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/isString */ "MeId");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _src_isString__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_key__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/key */ "NPSd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return _src_key__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/merge */ "TUx5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_pad__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/pad */ "lYE4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return _src_pad__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_peek__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/peek */ "3pby");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "peek", function() { return _src_peek__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_repeat__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/repeat */ "7Ikf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _src_repeat__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_splitAccessPath__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/splitAccessPath */ "QGy5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitAccessPath", function() { return _src_splitAccessPath__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _src_stringValue__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/stringValue */ "2OXM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringValue", function() { return _src_stringValue__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _src_toBoolean__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/toBoolean */ "rL+x");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toBoolean", function() { return _src_toBoolean__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _src_toDate__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/toDate */ "BY7D");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDate", function() { return _src_toDate__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _src_toNumber__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/toNumber */ "2dk+");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return _src_toNumber__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _src_toString__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/toString */ "KuqN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return _src_toString__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _src_toSet__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/toSet */ "ZLKQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSet", function() { return _src_toSet__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _src_truncate__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/truncate */ "nlKP");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return _src_truncate__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _src_visitArray__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/visitArray */ "VuCQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visitArray", function() { return _src_visitArray__WEBPACK_IMPORTED_MODULE_35__["default"]; });











































/***/ }),

/***/ "J2W8":
/*!*********************************************************!*\
  !*** ./node_modules/vega-statistics/src/bootstrapCI.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "Eqt6");
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random */ "yD9f");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");




/* harmony default export */ __webpack_exports__["default"] = (function(array, samples, alpha, f) {
  var values = Object(_numbers__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f),
      n = values.length,
      m = samples,
      a, i, j, mu;

  for (j=0, mu=Array(m); j<m; ++j) {
    for (a=0, i=0; i<n; ++i) {
      a += values[~~(Object(_random__WEBPACK_IMPORTED_MODULE_1__["random"])() * n)];
    }
    mu[j] = a / n;
  }

  return [
    Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["quantile"])(mu.sort(d3_array__WEBPACK_IMPORTED_MODULE_2__["ascending"]), alpha/2),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["quantile"])(mu, 1-(alpha/2))
  ];
});


/***/ }),

/***/ "J68V":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/window.js ***!
  \*******************************************************************/
/*! exports provided: screen, windowSize, containerSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "screen", function() { return screen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowSize", function() { return windowSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containerSize", function() { return containerSize; });
var _window = (typeof window !== 'undefined' && window) || null;

function screen() {
  return _window ? _window.screen : {};
}

function windowSize() {
  return _window
    ? [_window.innerWidth, _window.innerHeight]
    : [undefined, undefined];
}

function containerSize() {
  var view = this.context.dataflow,
      el = view.container && view.container();
  return el
    ? [el.clientWidth, el.clientHeight]
    : [undefined, undefined];
}


/***/ }),

/***/ "JIox":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Formula.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Formula; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Invokes a function for each data tuple and saves the results as a new field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The formula function to invoke for each tuple.
 * @param {string} params.as - The field name under which to save the result.
 * @param {boolean} [params.initonly=false] - If true, the formula is applied to
 *   added tuples only, and does not update in response to modifications.
 */
function Formula(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Formula.Definition = {
  "type": "Formula",
  "metadata": {"modifies": true},
  "params": [
    { "name": "expr", "type": "expr", "required": true },
    { "name": "as", "type": "string", "required": true },
    { "name": "initonly", "type": "boolean" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Formula, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var func = _.expr,
      as = _.as,
      mod = _.modified(),
      flag = _.initonly ? pulse.ADD
        : mod ? pulse.SOURCE
        : pulse.modified(func.fields) ? pulse.ADD_MOD
        : pulse.ADD;

  function set(t) {
    t[as] = func(t, _);
  }

  if (mod) {
    // parameters updated, need to reflow
    pulse = pulse.materialize().reflow(true);
  }

  if (!_.initonly) {
    pulse.modifies(as);
  }

  return pulse.visit(flag, set);
};


/***/ }),

/***/ "JQJb":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/color.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "1/lU");


/* harmony default export */ __webpack_exports__["default"] = (function(enc, scope, params, fields) {
  function color(type, x, y, z) {
    var a = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, x, scope, params, fields),
        b = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, y, scope, params, fields),
        c = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, z, scope, params, fields);
    return 'this.' + type + '(' + [a, b, c].join(',') + ').toString()';
  }

  return (enc.c) ? color('hcl', enc.h, enc.c, enc.l)
    : (enc.h || enc.s) ? color('hsl', enc.h, enc.s, enc.l)
    : (enc.l || enc.a) ? color('lab', enc.l, enc.a, enc.b)
    : (enc.r || enc.g || enc.b) ? color('rgb', enc.r, enc.g, enc.b)
    : null;
});


/***/ }),

/***/ "JQxQ":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/flush.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(range, value, threshold, left, right, center) {
  if (!threshold && threshold !== 0) return center;

  var a = range[0],
      b = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["peek"])(range),
      t = +threshold,
      l, r;

  // swap endpoints if range is reversed
  if (b < a) {
    l = a; a = b; b = l;
  }

  // compare value to endpoints
  l = Math.abs(value - a);
  r = Math.abs(b - value);

  // adjust if value within threshold distance of endpoint
  return l < r && l <= t ? left : r <= t ? right : center;
});


/***/ }),

/***/ "JbBH":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/aggregate.js ***!
  \********************************************************************/
/*! exports provided: AggregateNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AggregateNode", function() { return AggregateNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataflow */ "LH2n");







function addDimension(dims, channel, fieldDef) {
    if (fieldDef.bin) {
        dims[Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, {})] = true;
        dims[Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { binSuffix: 'end' })] = true;
        if (Object(_common__WEBPACK_IMPORTED_MODULE_5__["binRequiresRange"])(fieldDef, channel)) {
            dims[Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { binSuffix: 'range' })] = true;
        }
    }
    else {
        dims[Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef)] = true;
    }
    return dims;
}
function mergeMeasures(parentMeasures, childMeasures) {
    for (var f in childMeasures) {
        if (childMeasures.hasOwnProperty(f)) {
            // when we merge a measure, we either have to add an aggregation operator or even a new field
            var ops = childMeasures[f];
            for (var op in ops) {
                if (ops.hasOwnProperty(op)) {
                    if (f in parentMeasures) {
                        // add operator to existing measure field
                        parentMeasures[f][op] = ops[op];
                    }
                    else {
                        parentMeasures[f] = { op: ops[op] };
                    }
                }
            }
        }
    }
}
var AggregateNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AggregateNode, _super);
    /**
     * @param dimensions string set for dimensions
     * @param measures dictionary mapping field name => dict of aggregation functions and names to use
     */
    function AggregateNode(parent, dimensions, measures) {
        var _this = _super.call(this, parent) || this;
        _this.dimensions = dimensions;
        _this.measures = measures;
        return _this;
    }
    AggregateNode.prototype.clone = function () {
        return new AggregateNode(null, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.dimensions), Object(_util__WEBPACK_IMPORTED_MODULE_4__["duplicate"])(this.measures));
    };
    AggregateNode.makeFromEncoding = function (parent, model) {
        var isAggregate = false;
        model.forEachFieldDef(function (fd) {
            if (fd.aggregate) {
                isAggregate = true;
            }
        });
        var meas = {};
        var dims = {};
        if (!isAggregate) {
            // no need to create this node if the model has no aggregation
            return null;
        }
        model.forEachFieldDef(function (fieldDef, channel) {
            var aggregate = fieldDef.aggregate, field = fieldDef.field;
            if (aggregate) {
                if (aggregate === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef);
                }
                else {
                    meas[field] = meas[field] || {};
                    meas[field][aggregate] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef);
                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain
                    if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isScaleChannel"])(channel) && model.scaleDomain(channel) === 'unaggregated') {
                        meas[field]['min'] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])({ field: field, aggregate: 'min' });
                        meas[field]['max'] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])({ field: field, aggregate: 'max' });
                    }
                }
            }
            else {
                addDimension(dims, channel, fieldDef);
            }
        });
        if ((Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(dims).length + Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(meas).length) === 0) {
            return null;
        }
        return new AggregateNode(parent, dims, meas);
    };
    AggregateNode.makeFromTransform = function (parent, t) {
        var dims = {};
        var meas = {};
        for (var _i = 0, _a = t.aggregate; _i < _a.length; _i++) {
            var s = _a[_i];
            var op = s.op, field = s.field, as = s.as;
            if (op) {
                if (op === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = as || Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(s);
                }
                else {
                    meas[field] = meas[field] || {};
                    meas[field][op] = as || Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(s);
                }
            }
        }
        for (var _b = 0, _c = t.groupby || []; _b < _c.length; _b++) {
            var s = _c[_b];
            dims[s] = true;
        }
        if ((Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(dims).length + Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(meas).length) === 0) {
            return null;
        }
        return new AggregateNode(parent, dims, meas);
    };
    AggregateNode.prototype.merge = function (other) {
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_4__["differ"])(this.dimensions, other.dimensions)) {
            mergeMeasures(this.measures, other.measures);
            other.remove();
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_3__["debug"]('different dimensions, cannot merge');
        }
    };
    AggregateNode.prototype.addDimensions = function (fields) {
        var _this = this;
        fields.forEach(function (f) { return _this.dimensions[f] = true; });
    };
    AggregateNode.prototype.dependentFields = function () {
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.dimensions).forEach(function (f) { return out[f] = true; });
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.measures).forEach(function (m) { return out[m] = true; });
        return out;
    };
    AggregateNode.prototype.producedFields = function () {
        var _this = this;
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.measures).forEach(function (field) {
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(_this.measures[field]).forEach(function (op) {
                out[op + "_" + field] = true;
            });
        });
        return out;
    };
    AggregateNode.prototype.assemble = function () {
        var ops = [];
        var fields = [];
        var as = [];
        for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.measures); _i < _a.length; _i++) {
            var field = _a[_i];
            for (var _b = 0, _c = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.measures[field]); _b < _c.length; _b++) {
                var op = _c[_b];
                as.push(this.measures[field][op]);
                ops.push(op);
                fields.push(field);
            }
        }
        var result = {
            type: 'aggregate',
            groupby: Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.dimensions),
            ops: ops,
            fields: fields,
            as: as
        };
        return result;
    };
    return AggregateNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_6__["DataFlowNode"]));

//# sourceMappingURL=aggregate.js.map

/***/ }),

/***/ "Je5T":
/*!*******************************************!*\
  !*** ./node_modules/vega-parser/index.js ***!
  \*******************************************/
/*! exports provided: parse, config, signal, signalUpdates, stream, codeGenerator, functionContext, expressionFunction, MarkRole, FrameRole, ScopeRole, AxisRole, AxisDomainRole, AxisGridRole, AxisLabelRole, AxisTickRole, AxisTitleRole, LegendRole, LegendEntryRole, LegendLabelRole, LegendSymbolRole, LegendTitleRole, Scope, DataScope, formatLocale, timeFormatLocale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/parse */ "CdCN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_parse__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/config */ "G0eu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _src_config__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_parsers_signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/parsers/signal */ "v1SV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signal", function() { return _src_parsers_signal__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_parsers_signal_updates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/parsers/signal-updates */ "2V8r");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signalUpdates", function() { return _src_parsers_signal_updates__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_parsers_stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/parsers/stream */ "koaG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stream", function() { return _src_parsers_stream__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_parsers_expression_codegen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/parsers/expression/codegen */ "7y5G");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codeGenerator", function() { return _src_parsers_expression_codegen__WEBPACK_IMPORTED_MODULE_5__["codeGenerator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functionContext", function() { return _src_parsers_expression_codegen__WEBPACK_IMPORTED_MODULE_5__["functionContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return _src_parsers_expression_codegen__WEBPACK_IMPORTED_MODULE_5__["expressionFunction"]; });

/* harmony import */ var _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/parsers/marks/roles */ "VX1o");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MarkRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["MarkRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["FrameRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["ScopeRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisDomainRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisDomainRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisGridRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisGridRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisLabelRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisLabelRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisTickRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisTickRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisTitleRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["AxisTitleRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["LegendRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendEntryRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["LegendEntryRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendLabelRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["LegendLabelRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSymbolRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["LegendSymbolRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendTitleRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_6__["LegendTitleRole"]; });

/* harmony import */ var _src_Scope__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Scope */ "crAc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scope", function() { return _src_Scope__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_DataScope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/DataScope */ "/BrR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataScope", function() { return _src_DataScope__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-format */ "rWgG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_9__["formatDefaultLocale"]; });

/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-time-format */ "cOGN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_10__["timeFormatDefaultLocale"]; });



















/***/ }),

/***/ "JgVu":
/*!****************************************************************!*\
  !*** ./node_modules/vega-event-selector/src/event-selector.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Parse an event selector string.
 * Returns an array of event stream definitions.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(selector, source, marks) {
  DEFAULT_SOURCE = source || VIEW;
  MARKS = marks || DEFAULT_MARKS;
  return parseMerge(selector.trim()).map(parseSelector);
});

var VIEW    = 'view',
    LBRACK  = '[',
    RBRACK  = ']',
    LBRACE  = '{',
    RBRACE  = '}',
    COLON   = ':',
    COMMA   = ',',
    NAME    = '@',
    GT      = '>',
    ILLEGAL = /[[\]{}]/,
    DEFAULT_SOURCE,
    MARKS,
    DEFAULT_MARKS = {
      '*': 1,
      arc: 1,
      area: 1,
      group: 1,
      image: 1,
      line: 1,
      path: 1,
      rect: 1,
      rule: 1,
      shape: 1,
      symbol: 1,
      text: 1,
      trail: 1
    };

function isMarkType(type) {
  return MARKS.hasOwnProperty(type);
}

function find(s, i, endChar, pushChar, popChar) {
  var count = 0,
      n = s.length,
      c;
  for (; i<n; ++i) {
    c = s[i];
    if (!count && c === endChar) return i;
    else if (popChar && popChar.indexOf(c) >= 0) --count;
    else if (pushChar && pushChar.indexOf(c) >= 0) ++count;
  }
  return i;
}

function parseMerge(s) {
  var output = [],
      start = 0,
      n = s.length,
      i = 0;

  while (i < n) {
    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);
    output.push(s.substring(start, i).trim());
    start = ++i;
  }

  if (output.length === 0) {
    throw 'Empty event selector: ' + s;
  }
  return output;
}

function parseSelector(s) {
  return s[0] === '['
    ? parseBetween(s)
    : parseStream(s);
}

function parseBetween(s) {
  var n = s.length,
      i = 1,
      b, stream;

  i = find(s, i, RBRACK, LBRACK, RBRACK);
  if (i === n) {
    throw 'Empty between selector: ' + s;
  }

  b = parseMerge(s.substring(1, i));
  if (b.length !== 2) {
    throw 'Between selector must have two elements: ' + s;
  }

  s = s.slice(i + 1).trim();
  if (s[0] !== GT) {
    throw 'Expected \'>\' after between selector: ' + s;
  }

  b = b.map(parseSelector);

  stream = parseSelector(s.slice(1).trim());
  if (stream.between) {
    return {
      between: b,
      stream: stream
    };
  } else {
    stream.between = b;
  }

  return stream;
}

function parseStream(s) {
  var stream = {source: DEFAULT_SOURCE},
      source = [],
      throttle = [0, 0],
      markname = 0,
      start = 0,
      n = s.length,
      i = 0, j,
      filter;

  // extract throttle from end
  if (s[n-1] === RBRACE) {
    i = s.lastIndexOf(LBRACE);
    if (i >= 0) {
      try {
        throttle = parseThrottle(s.substring(i+1, n-1));
      } catch (e) {
        throw 'Invalid throttle specification: ' + s;
      }
      s = s.slice(0, i).trim();
      n = s.length;
    } else throw 'Unmatched right brace: ' + s;
    i = 0;
  }

  if (!n) throw s;

  // set name flag based on first char
  if (s[0] === NAME) markname = ++i;

  // extract first part of multi-part stream selector
  j = find(s, i, COLON);
  if (j < n) {
    source.push(s.substring(start, j).trim());
    start = i = ++j;
  }

  // extract remaining part of stream selector
  i = find(s, i, LBRACK);
  if (i === n) {
    source.push(s.substring(start, n).trim());
  } else {
    source.push(s.substring(start, i).trim());
    filter = [];
    start = ++i;
    if (start === n) throw 'Unmatched left bracket: ' + s;
  }

  // extract filters
  while (i < n) {
    i = find(s, i, RBRACK);
    if (i === n) throw 'Unmatched left bracket: ' + s;
    filter.push(s.substring(start, i).trim());
    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;
    start = ++i;
  }

  // marshall event stream specification
  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {
    throw 'Invalid event selector: ' + s;
  }

  if (n > 1) {
    stream.type = source[1];
    if (markname) {
      stream.markname = source[0].slice(1);
    } else if (isMarkType(source[0])) {
      stream.marktype = source[0];
    } else {
      stream.source = source[0];
    }
  } else {
    stream.type = source[0];
  }
  if (stream.type.slice(-1) === '!') {
    stream.consume = true;
    stream.type = stream.type.slice(0, -1)
  }
  if (filter != null) stream.filter = filter;
  if (throttle[0]) stream.throttle = throttle[0];
  if (throttle[1]) stream.debounce = throttle[1];

  return stream;
}

function parseThrottle(s) {
  var a = s.split(COMMA);
  if (!s.length || a.length > 2) throw s;
  return a.map(function(_) {
    var x = +_;
    if (x !== x) throw s;
    return x;
  });
}


/***/ }),

/***/ "JhVQ":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Compare.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Compare; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Generates a comparator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string>} params.fields - The fields to compare.
 * @param {Array<string>} [params.orders] - The sort orders.
 *   Each entry should be one of "ascending" (default) or "descending".
 */
function Compare(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Compare, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified())
    ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["compare"])(_.fields, _.orders);
}


/***/ }),

/***/ "Jn0y":
/*!***************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/subflow.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec */ "zw9B");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transforms */ "ZQwF");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, input) {
  var op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["PreFacet"])({pulse: input.pulse})),
      subscope = scope.fork();

  subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Sieve"])());
  subscope.addSignal('parent', null);

  // parse group mark subflow
  op.params.subflow = {
    $subflow: Object(_spec__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, subscope).toRuntime()
  };
});


/***/ }),

/***/ "Jx0O":
/*!**********************************************!*\
  !*** ./node_modules/vega-view/src/events.js ***!
  \**********************************************/
/*! exports provided: initializeEventConfig, events */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeEventConfig", function() { return initializeEventConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "events", function() { return events; });
/* harmony import */ var _events_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events-extend */ "7byU");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var VIEW = 'view',
    TIMER = 'timer',
    WINDOW = 'window',
    NO_TRAP = {trap: false};

/**
 * Initialize event handling configuration.
 * @param {object} config - The configuration settings.
 * @return {object}
 */
function initializeEventConfig(config) {
  config = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, config);

  var def = config.defaults;
  if (def) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(def.prevent)) {
      def.prevent = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(def.prevent);
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(def.allow)) {
      def.allow = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(def.allow);
    }
  }

  return config;
}

function prevent(view, type) {
  var def = view._eventConfig.defaults,
      prevent = def && def.prevent,
      allow = def && def.allow;

  return prevent === false || allow === true ? false
    : prevent === true || allow === false ? true
    : prevent ? prevent[type]
    : allow ? !allow[type]
    : view.preventDefault();
}

/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @return {EventStream}
 */
function events(source, type, filter) {
  var view = this,
      s = new vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["EventStream"](filter),
      send = function(e, item) {
        if (source === VIEW && prevent(view, type)) {
          e.preventDefault();
        }
        try {
          s.receive(Object(_events_extend__WEBPACK_IMPORTED_MODULE_0__["default"])(view, e, item));
        } catch (error) {
          view.error(error);
        } finally {
          view.run();
        }
      },
      sources;

  if (source === TIMER) {
    view.timer(send, type);
  }

  else if (source === VIEW) {
    // send traps errors, so use {trap: false} option
    view.addEventListener(type, send, NO_TRAP);
  }

  else {
    if (source === WINDOW) {
      if (typeof window !== 'undefined') sources = [window];
    } else if (typeof document !== 'undefined') {
      sources = document.querySelectorAll(source);
    }

    if (!sources) {
      view.warn('Can not resolve event source: ' + source);
    } else {
      for (var i=0, n=sources.length; i<n; ++i) {
        sources[i].addEventListener(type, send);
      }

      view._eventListeners.push({
        type:    type,
        sources: sources,
        handler: send
      });
    }
  }

  return s;
}


/***/ }),

/***/ "K8zk":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isNumber.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'number';
});


/***/ }),

/***/ "KGJN":
/*!****************************************************!*\
  !*** ./node_modules/vega-scale/src/invertRange.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(scale) {
  return function(_) {
    var lo = _[0],
        hi = _[1],
        t;

    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }

    return [
      scale.invert(lo),
      scale.invert(hi)
    ];
  }
});


/***/ }),

/***/ "KHmK":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Renderer.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Renderer; });
/* harmony import */ var _ResourceLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResourceLoader */ "UrvT");


/**
 * Create a new Renderer instance.
 * @param {object} [loader] - Optional loader instance for
 *   image and href URL sanitization. If not specified, a
 *   standard loader instance will be generated.
 * @constructor
 */
function Renderer(loader) {
  this._el = null;
  this._bgcolor = null;
  this._loader = new _ResourceLoader__WEBPACK_IMPORTED_MODULE_0__["default"](loader);
}

var prototype = Renderer.prototype;

/**
 * Initialize a new Renderer instance.
 * @param {DOMElement} el - The containing DOM element for the display.
 * @param {number} width - The coordinate width of the display, in pixels.
 * @param {number} height - The coordinate height of the display, in pixels.
 * @param {Array<number>} origin - The origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply
 *   the width and height to determine the final pixel size.
 * @return {Renderer} - This renderer instance.
 */
prototype.initialize = function(el, width, height, origin, scaleFactor) {
  this._el = el;
  return this.resize(width, height, origin, scaleFactor);
};

/**
 * Returns the parent container element for a visualization.
 * @return {DOMElement} - The containing DOM element.
 */
prototype.element = function() {
  return this._el;
};

/**
 * Returns the scene element (e.g., canvas or SVG) of the visualization
 * Subclasses must override if the first child is not the scene element.
 * @return {DOMElement} - The scene (e.g., canvas or SVG) element.
 */
prototype.canvas = function() {
  return this._el && this._el.firstChild;
};

/**
 * Get / set the background color.
 */
prototype.background = function(bgcolor) {
  if (arguments.length === 0) return this._bgcolor;
  this._bgcolor = bgcolor;
  return this;
};

/**
 * Resize the display.
 * @param {number} width - The new coordinate width of the display, in pixels.
 * @param {number} height - The new coordinate height of the display, in pixels.
 * @param {Array<number>} origin - The new origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply
 *   the width and height to determine the final pixel size.
 * @return {Renderer} - This renderer instance;
 */
prototype.resize = function(width, height, origin, scaleFactor) {
  this._width = width;
  this._height = height;
  this._origin = origin || [0, 0];
  this._scale = scaleFactor || 1;
  return this;
};

/**
 * Report a dirty item whose bounds should be redrawn.
 * This base class method does nothing. Subclasses that perform
 * incremental should implement this method.
 * @param {Item} item - The dirty item whose bounds should be redrawn.
 */
prototype.dirty = function(/*item*/) {
};

/**
 * Render an input scenegraph, potentially with a set of dirty items.
 * This method will perform an immediate rendering with available resources.
 * The renderer may also need to perform image loading to perform a complete
 * render. This process can lead to asynchronous re-rendering of the scene
 * after this method returns. To receive notification when rendering is
 * complete, use the renderAsync method instead.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Renderer} - This renderer instance.
 */
prototype.render = function(scene) {
  var r = this;

  // bind arguments into a render call, and cache it
  // this function may be subsequently called for async redraw
  r._call = function() { r._render(scene); };

  // invoke the renderer
  r._call();

  // clear the cached call for garbage collection
  // async redraws will stash their own copy
  r._call = null;

  return r;
};

/**
 * Internal rendering method. Renderer subclasses should override this
 * method to actually perform rendering.
 * @param {object} scene - The root mark of a scenegraph to render.
 */
prototype._render = function(/*scene*/) {
  // subclasses to override
};

/**
 * Asynchronous rendering method. Similar to render, but returns a Promise
 * that resolves when all rendering is completed. Sometimes a renderer must
 * perform image loading to get a complete rendering. The returned
 * Promise will not resolve until this process completes.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Promise} - A Promise that resolves when rendering is complete.
 */
prototype.renderAsync = function(scene) {
  var r = this.render(scene);
  return this._ready
    ? this._ready.then(function() { return r; })
    : Promise.resolve(r);
};

/**
 * Internal method for asynchronous resource loading.
 * Proxies method calls to the ImageLoader, and tracks loading
 * progress to invoke a re-render once complete.
 * @param {string} method - The method name to invoke on the ImageLoader.
 * @param {string} uri - The URI for the requested resource.
 * @return {Promise} - A Promise that resolves to the requested resource.
 */
prototype._load = function(method, uri) {
  var r = this,
      p = r._loader[method](uri);

  if (!r._ready) {
    // re-render the scene when loading completes
    var call = r._call;
    r._ready = r._loader.ready()
      .then(function(redraw) {
        if (redraw) call();
        r._ready = null;
      });
  }

  return p;
};

/**
 * Sanitize a URL to include as a hyperlink in the rendered scene.
 * This method proxies a call to ImageLoader.sanitizeURL, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string to sanitize.
 * @return {Promise} - A Promise that resolves to the sanitized URL.
 */
prototype.sanitizeURL = function(uri) {
  return this._load('sanitizeURL', uri);
};

/**
 * Requests an image to include in the rendered scene.
 * This method proxies a call to ImageLoader.loadImage, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string of the image.
 * @return {Promise} - A Promise that resolves to the loaded Image.
 */
prototype.loadImage = function(uri) {
  return this._load('loadImage', uri);
};


/***/ }),

/***/ "KKBd":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/tick.js ***!
  \***************************************************************/
/*! exports provided: tick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tick", function() { return tick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./valueref */ "vfFY");




var tick = {
    vgMark: 'rect',
    encodeEntry: function (model) {
        var _a;
        var config = model.config, markDef = model.markDef, width = model.width, height = model.height;
        var orient = markDef.orient;
        var vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';
        var vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_2__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](width), 'xc'), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](height), 'yc'), _mixins__WEBPACK_IMPORTED_MODULE_2__["nonPosition"]('size', model, {
            defaultValue: defaultSize(model),
            vgChannel: vgSizeChannel
        }), (_a = {}, _a[vgThicknessChannel] = { value: markDef.thickness || config.tick.thickness }, _a));
    }
};
function defaultSize(model) {
    var config = model.config, markDef = model.markDef;
    var orient = markDef.orient;
    var scale = model.getScaleComponent(orient === 'horizontal' ? 'x' : 'y');
    if (markDef.size !== undefined) {
        return markDef.size;
    }
    else if (config.tick.bandSize !== undefined) {
        return config.tick.bandSize;
    }
    else {
        var scaleRange = scale ? scale.get('range') : undefined;
        var rangeStep = scaleRange && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_1__["isVgRangeStep"])(scaleRange) ?
            scaleRange.step :
            config.scale.rangeStep;
        if (typeof rangeStep !== 'number') {
            // FIXME consolidate this log
            throw new Error('Function does not handle non-numeric rangeStep');
        }
        return rangeStep / 1.5;
    }
}
//# sourceMappingURL=tick.js.map

/***/ }),

/***/ "KLxh":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/optimizers.js ***!
  \*********************************************************************/
/*! exports provided: iterateFromLeaves, moveParseUp, removeUnusedSubtrees, removeDuplicateTimeUnits */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterateFromLeaves", function() { return iterateFromLeaves; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveParseUp", function() { return moveParseUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeUnusedSubtrees", function() { return removeUnusedSubtrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeDuplicateTimeUnits", function() { return removeDuplicateTimeUnits; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataflow */ "LH2n");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./facet */ "LZFT");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatparse */ "5CN0");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./source */ "6g+2");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./timeunit */ "2toQ");







/**
 * Start optimization path at the leaves. Useful for merging up or removing things.
 *
 * If the callback returns true, the recursion continues.
 */
function iterateFromLeaves(f) {
    function optimizeNextFromLeaves(node) {
        if (node instanceof _source__WEBPACK_IMPORTED_MODULE_5__["SourceNode"]) {
            return;
        }
        var next = node.parent;
        if (f(node)) {
            optimizeNextFromLeaves(next);
        }
    }
    return optimizeNextFromLeaves;
}
/**
 * Move parse nodes up to forks.
 */
function moveParseUp(node) {
    var parent = node.parent;
    // move parse up by merging or swapping
    if (node instanceof _formatparse__WEBPACK_IMPORTED_MODULE_4__["ParseNode"]) {
        if (parent instanceof _source__WEBPACK_IMPORTED_MODULE_5__["SourceNode"]) {
            return false;
        }
        if (parent.numChildren() > 1) {
            // don't move parse further up but continue with parent.
            return true;
        }
        if (parent instanceof _formatparse__WEBPACK_IMPORTED_MODULE_4__["ParseNode"]) {
            parent.merge(node);
        }
        else {
            // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)
            if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["hasIntersection"])(parent.producedFields(), node.dependentFields())) {
                return true;
            }
            node.swapWithParent();
        }
    }
    return true;
}
/**
 * Repeatedly remove leaf nodes that are not output or facet nodes.
 * The reason is that we don't need subtrees that don't have any output nodes.
 * Facet nodes are needed for the row or column domains.
 */
function removeUnusedSubtrees(node) {
    if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_2__["OutputNode"] || node.numChildren() > 0 || node instanceof _facet__WEBPACK_IMPORTED_MODULE_3__["FacetNode"]) {
        // no need to continue with parent because it is output node or will have children (there was a fork)
        return false;
    }
    else {
        node.remove();
    }
    return true;
}
/**
 * Removes duplicate time unit nodes (as determined by the name of the
 * output field) that may be generated due to selections projected over
 * time units.
 */
function removeDuplicateTimeUnits(leaf) {
    var fields = {};
    return iterateFromLeaves(function (node) {
        if (node instanceof _timeunit__WEBPACK_IMPORTED_MODULE_6__["TimeUnitNode"]) {
            var pfields = node.producedFields();
            var dupe = Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(pfields).every(function (k) { return !!fields[k]; });
            if (dupe) {
                node.remove();
            }
            else {
                fields = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fields, pfields);
            }
        }
        return true;
    })(leaf);
}
//# sourceMappingURL=optimizers.js.map

/***/ }),

/***/ "KMWa":
/*!*************************************************!*\
  !*** ./node_modules/vega-scale/src/scaleBin.js ***!
  \*************************************************/
/*! exports provided: binLinear, binOrdinal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binLinear", function() { return binLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binOrdinal", function() { return binOrdinal; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "vBe5");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ "ziQ1");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var map = Array.prototype.map,
    slice = Array.prototype.slice;

function numbers(_) {
  return map.call(_, function(x) { return +x; });
}

function binLinear() {
  var linear = Object(d3_scale__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])(),
      domain = [];

  function scale(x) {
    return linear(x);
  }

  function setDomain(_) {
    domain = numbers(_);
    linear.domain([domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(domain)]);
  }

  scale.domain = function(_) {
    return arguments.length ? (setDomain(_), scale) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (linear.range(_), scale) : linear.range();
  };

  scale.rangeRound = function(_) {
    return arguments.length ? (linear.rangeRound(_), scale) : linear.rangeRound();
  };

  scale.interpolate = function(_) {
    return arguments.length ? (linear.interpolate(_), scale) : linear.interpolate();
  };

  scale.invert = function(_) {
    return linear.invert(_);
  };

  scale.ticks = function(count) {
    var n = domain.length,
        stride = ~~(n / (count || n));

    return stride < 2
      ? scale.domain()
      : domain.filter(function(x, i) { return !(i % stride); });
  };

  scale.tickFormat = function() {
    return linear.tickFormat.apply(linear, arguments);
  };

  scale.copy = function() {
    return binLinear().domain(scale.domain()).range(scale.range());
  };

  return scale;
}

function binOrdinal() {
  var domain = [],
      range = [];

  function scale(x) {
    return x == null || x !== x
      ? undefined
      : range[(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x) - 1) % range.length];
  }

  scale.domain = function(_) {
    if (arguments.length) {
      domain = numbers(_);
      return scale;
    } else {
      return domain.slice();
    }
  };

  scale.range = function(_) {
    if (arguments.length) {
      range = slice.call(_);
      return scale;
    } else {
      return range.slice();
    }
  };

  scale.copy = function() {
    return binOrdinal().domain(scale.domain()).range(scale.range());
  };

  return scale;
}


/***/ }),

/***/ "KPpO":
/*!******************************************************!*\
  !*** ./node_modules/vega-encode/src/legend-types.js ***!
  \******************************************************/
/*! exports provided: Symbols, Discrete, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Discrete", function() { return Discrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return Gradient; });
var Symbols  = 'symbol';
var Discrete = 'discrete';
var Gradient = 'gradient';


/***/ }),

/***/ "KSMD":
/*!***************************************************!*\
  !*** ./node_modules/vega-canvas/src/domCanvas.js ***!
  \***************************************************/
/*! exports provided: domCanvas, domImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domCanvas", function() { return domCanvas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domImage", function() { return domImage; });
function domCanvas(w, h) {
  if (typeof document !== 'undefined' && document.createElement) {
    var c = document.createElement('canvas');
    if (c && c.getContext) {
      c.width = w;
      c.height = h;
      return c;
    }
  }
  return null;
}

function domImage() {
  return typeof Image !== 'undefined' ? Image : null;
}


/***/ }),

/***/ "KW+5":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/serialize.js ***!
  \************************************************************/
/*! exports provided: sceneToJSON, sceneFromJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return sceneToJSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return sceneFromJSON; });
/* harmony import */ var _bound_boundMark__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundMark */ "Lc2I");


var keys = [
  'marktype', 'name', 'role', 'interactive', 'clip', 'items', 'zindex',
  'x', 'y', 'width', 'height', 'align', 'baseline',             // layout
  'fill', 'fillOpacity', 'opacity',                             // fill
  'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap',        // stroke
  'strokeDash', 'strokeDashOffset',                             // stroke dash
  'startAngle', 'endAngle', 'innerRadius', 'outerRadius',       // arc
  'cornerRadius', 'padAngle',                                   // arc, rect
  'interpolate', 'tension', 'orient', 'defined',                // area, line
  'url',                                                        // image
  'path',                                                       // path
  'x2', 'y2',                                                   // rule
  'size', 'shape',                                              // symbol
  'text', 'angle', 'theta', 'radius', 'dx', 'dy',               // text
  'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant'  // font
];

function sceneToJSON(scene, indent) {
  return JSON.stringify(scene, keys, indent);
}

function sceneFromJSON(json) {
  var scene = (typeof json === 'string' ? JSON.parse(json) : json);
  return initialize(scene);
}

function initialize(scene) {
  var type = scene.marktype,
      items = scene.items,
      parent, i, n;

  if (items) {
    for (i=0, n=items.length; i<n; ++i) {
      parent = type ? 'mark' : 'group';
      items[i][parent] = scene;
      if (items[i].zindex) items[i][parent].zdirty = true;
      if ('group' === (type || parent)) initialize(items[i]);
    }
  }

  if (type) Object(_bound_boundMark__WEBPACK_IMPORTED_MODULE_0__["default"])(scene);
  return scene;
}


/***/ }),

/***/ "KWmr":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sieve.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sieve; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Propagates a new pulse without any tuples so long as the input
 * pulse contains some added, removed or modified tuples.
 * @param {object} params - The parameters for this operator.
 * @constructor
 */
function Sieve(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Sieve, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  this.value = pulse.source;
  return pulse.changed()
    ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS)
    : pulse.StopPropagation;
};


/***/ }),

/***/ "KhyV":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/curves.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return curves; });
/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-shape */ "8d86");


var lookup = {
  'basis': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasis"]
  },
  'basis-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasisClosed"]
  },
  'basis-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasisOpen"]
  },
  'bundle': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBundle"],
    tension: 'beta',
    value: 0.85
  },
  'cardinal': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinal"],
    tension: 'tension',
    value: 0
  },
  'cardinal-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinalOpen"],
    tension: 'tension',
    value: 0
  },
  'cardinal-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinalClosed"],
    tension: 'tension',
    value: 0
  },
  'catmull-rom': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRom"],
    tension: 'alpha',
    value: 0.5
  },
  'catmull-rom-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRomClosed"],
    tension: 'alpha',
    value: 0.5
  },
  'catmull-rom-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRomOpen"],
    tension: 'alpha',
    value: 0.5
  },
  'linear': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveLinear"]
  },
  'linear-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveLinearClosed"]
  },
  'monotone': {
    horizontal: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveMonotoneY"],
    vertical:   d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveMonotoneX"]
  },
  'natural': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveNatural"]
  },
  'step': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStep"]
  },
  'step-after': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStepAfter"]
  },
  'step-before': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStepBefore"]
  }
};

function curves(type, orientation, tension) {
  var entry = lookup.hasOwnProperty(type) && lookup[type],
      curve = null;

  if (entry) {
    curve = entry.curve || entry[orientation || 'vertical'];
    if (entry.tension && tension != null) {
      curve = curve[entry.tension](tension);
    }
  }

  return curve;
}


/***/ }),

/***/ "KoP/":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/index.js ***!
  \***************************************************/
/*! exports provided: compile, aggregate, axis, bin, channel, compositeMark, config, data, datetime, encoding, facet, fieldDef, header, legend, mark, scale, sort, spec, stack, timeUnit, transform, type, util, validate, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aggregate */ "OCqH");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "aggregate", function() { return _aggregate__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./axis */ "0iGg");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "axis", function() { return _axis__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bin */ "4qum");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _bin__WEBPACK_IMPORTED_MODULE_2__; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "channel", function() { return _channel__WEBPACK_IMPORTED_MODULE_3__; });
/* harmony import */ var _compositemark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compositemark */ "Egee");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "compositeMark", function() { return _compositemark__WEBPACK_IMPORTED_MODULE_4__; });
/* harmony import */ var _compile_compile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compile/compile */ "MOt7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _compile_compile__WEBPACK_IMPORTED_MODULE_5__["compile"]; });

/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config */ "zH0B");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _config__WEBPACK_IMPORTED_MODULE_6__; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data */ "NCIN");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "data", function() { return _data__WEBPACK_IMPORTED_MODULE_7__; });
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./datetime */ "QzCd");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "datetime", function() { return _datetime__WEBPACK_IMPORTED_MODULE_8__; });
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encoding */ "sHgr");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "encoding", function() { return _encoding__WEBPACK_IMPORTED_MODULE_9__; });
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./facet */ "r9P9");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_facet__WEBPACK_IMPORTED_MODULE_10__);
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "facet", function() { return _facet__WEBPACK_IMPORTED_MODULE_10__; });
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fielddef */ "d61h");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "fieldDef", function() { return _fielddef__WEBPACK_IMPORTED_MODULE_11__; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./header */ "9C4T");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "header", function() { return _header__WEBPACK_IMPORTED_MODULE_12__; });
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./legend */ "yuQx");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "legend", function() { return _legend__WEBPACK_IMPORTED_MODULE_13__; });
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./mark */ "fKXb");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mark", function() { return _mark__WEBPACK_IMPORTED_MODULE_14__; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scale */ "50Px");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _scale__WEBPACK_IMPORTED_MODULE_15__; });
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sort */ "58wk");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return _sort__WEBPACK_IMPORTED_MODULE_16__; });
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./spec */ "ySvk");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "spec", function() { return _spec__WEBPACK_IMPORTED_MODULE_17__; });
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stack */ "h4ZY");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _stack__WEBPACK_IMPORTED_MODULE_18__; });
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./timeunit */ "f7J+");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "timeUnit", function() { return _timeunit__WEBPACK_IMPORTED_MODULE_19__; });
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./transform */ "1mLV");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _transform__WEBPACK_IMPORTED_MODULE_20__; });
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./type */ "fFaC");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "type", function() { return _type__WEBPACK_IMPORTED_MODULE_21__; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./util */ "Hc3/");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "util", function() { return _util__WEBPACK_IMPORTED_MODULE_22__; });
/* harmony import */ var _validate__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./validate */ "VKuZ");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "validate", function() { return _validate__WEBPACK_IMPORTED_MODULE_23__; });
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../package.json */ "qHvB");
var _package_json__WEBPACK_IMPORTED_MODULE_24___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../package.json */ "qHvB", 1);

























var version = _package_json__WEBPACK_IMPORTED_MODULE_24__.version;

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "KuqN":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/toString.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : _ + '';
});


/***/ }),

/***/ "KwB+":
/*!*******************************************************!*\
  !*** ./node_modules/vega-encode/src/LegendEntries.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LegendEntries; });
/* harmony import */ var _labels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labels */ "0t2G");
/* harmony import */ var _legend_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legend-types */ "KPpO");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ticks */ "Wj74");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "J29t");







/**
 * Generates legend entries for visualizing a scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate items for.
 * @param {*} [params.count=5] - The approximate number of items, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid D3 format specifier string.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */
function LegendEntries(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, [], params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["inherits"])(LegendEntries, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value != null && !_.modified()) {
    return pulse.StopPropagation;
  }

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      items = this.value,
      type  = _.type || _legend_types__WEBPACK_IMPORTED_MODULE_1__["Symbols"],
      scale = _.scale,
      count = _.count == null ? 5 : Object(_ticks__WEBPACK_IMPORTED_MODULE_2__["tickCount"])(scale, _.count),
      format = _.format || Object(_ticks__WEBPACK_IMPORTED_MODULE_2__["tickFormat"])(scale, count, _.formatSpecifier),
      values = _.values || Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelValues"])(scale, count, type),
      domain, fraction, size, offset;

  format = Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelFormat"])(scale, format, type);
  if (items) out.rem = items;

  if (type === _legend_types__WEBPACK_IMPORTED_MODULE_1__["Symbols"]) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["isFunction"])(size = _.size)) {
      // if first value maps to size zero, remove from list (vega#717)
      if (!_.values && scale(values[0]) === 0) {
        values = values.slice(1);
      }
      // compute size offset for legend entries
      offset = values.reduce(function(max, value) {
        return Math.max(max, size(value, _));
      }, 0);
    } else {
      size = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["constant"])(offset = size || 8);
    }

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index:  index,
        label:  format(value, index, values),
        value:  value,
        offset: offset,
        size:   size(value, _)
      });
    });
  }

  else if (type === _legend_types__WEBPACK_IMPORTED_MODULE_1__["Gradient"]) {
    domain = scale.domain(),
    fraction = Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["scaleFraction"])(scale, domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain));

    // if automatic label generation produces 2 or fewer values,
    // use the domain end points instead (fixes vega/vega#1364)
    if (values.length < 3 && !_.values && domain[0] !== Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain)) {
      values = [domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain)];
    }

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index: index,
        label: format(value, index, values),
        value: value,
        perc:  fraction(value)
      });
    });
  }

  else {
    size = values.length - 1;
    fraction = Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelFraction"])(scale);

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index: index,
        label: format(value, index, values),
        value: value,
        perc:  index ? fraction(value) : 0,
        perc2: index === size ? 1 : fraction(values[index+1])
      });
    });
  }

  out.source = items;
  out.add = items;
  this.value = items;

  return out;
};


/***/ }),

/***/ "L758":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/render.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "18Xv");


var temp = ['l', 0, 0, 0, 0, 0, 0, 0];

function scale(current, s) {
  var c = (temp[0] = current[0]);
  if (c === 'a' || c === 'A') {
    temp[1] = s * current[1];
    temp[2] = s * current[2];
    temp[6] = s * current[6];
    temp[7] = s * current[7];
  } else {
    for (var i=1, n=current.length; i<n; ++i) {
      temp[i] = s * current[i];
    }
  }
  return temp;
}

/* harmony default export */ __webpack_exports__["default"] = (function(context, path, l, t, s) {
  var current, // current instruction
      previous = null,
      x = 0, // current x
      y = 0, // current y
      controlX = 0, // current control point x
      controlY = 0, // current control point y
      tempX,
      tempY,
      tempControlX,
      tempControlY;

  if (l == null) l = 0;
  if (t == null) t = 0;
  if (s == null) s = 1;

  if (context.beginPath) context.beginPath();

  for (var i=0, len=path.length; i<len; ++i) {
    current = path[i];
    if (s !== 1) current = scale(current, s);

    switch (current[0]) { // first letter

      case 'l': // lineto, relative
        x += current[1];
        y += current[2];
        context.lineTo(x + l, y + t);
        break;

      case 'L': // lineto, absolute
        x = current[1];
        y = current[2];
        context.lineTo(x + l, y + t);
        break;

      case 'h': // horizontal lineto, relative
        x += current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'H': // horizontal lineto, absolute
        x = current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'v': // vertical lineto, relative
        y += current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'V': // verical lineto, absolute
        y = current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'm': // moveTo, relative
        x += current[1];
        y += current[2];
        context.moveTo(x + l, y + t);
        break;

      case 'M': // moveTo, absolute
        x = current[1];
        y = current[2];
        context.moveTo(x + l, y + t);
        break;

      case 'c': // bezierCurveTo, relative
        tempX = x + current[5];
        tempY = y + current[6];
        controlX = x + current[3];
        controlY = y + current[4];
        context.bezierCurveTo(
          x + current[1] + l, // x1
          y + current[2] + t, // y1
          controlX + l, // x2
          controlY + t, // y2
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'C': // bezierCurveTo, absolute
        x = current[5];
        y = current[6];
        controlX = current[3];
        controlY = current[4];
        context.bezierCurveTo(
          current[1] + l,
          current[2] + t,
          controlX + l,
          controlY + t,
          x + l,
          y + t
        );
        break;

      case 's': // shorthand cubic bezierCurveTo, relative
        // transform to absolute x,y
        tempX = x + current[3];
        tempY = y + current[4];
        // calculate reflection of previous control points
        controlX = 2 * x - controlX;
        controlY = 2 * y - controlY;
        context.bezierCurveTo(
          controlX + l,
          controlY + t,
          x + current[1] + l,
          y + current[2] + t,
          tempX + l,
          tempY + t
        );

        // set control point to 2nd one of this command
        // the first control point is assumed to be the reflection of
        // the second control point on the previous command relative
        // to the current point.
        controlX = x + current[1];
        controlY = y + current[2];

        x = tempX;
        y = tempY;
        break;

      case 'S': // shorthand cubic bezierCurveTo, absolute
        tempX = current[3];
        tempY = current[4];
        // calculate reflection of previous control points
        controlX = 2*x - controlX;
        controlY = 2*y - controlY;
        context.bezierCurveTo(
          controlX + l,
          controlY + t,
          current[1] + l,
          current[2] + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        // set control point to 2nd one of this command
        // the first control point is assumed to be the reflection of
        // the second control point on the previous command relative
        // to the current point.
        controlX = current[1];
        controlY = current[2];

        break;

      case 'q': // quadraticCurveTo, relative
        // transform to absolute x,y
        tempX = x + current[3];
        tempY = y + current[4];

        controlX = x + current[1];
        controlY = y + current[2];

        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'Q': // quadraticCurveTo, absolute
        tempX = current[3];
        tempY = current[4];

        context.quadraticCurveTo(
          current[1] + l,
          current[2] + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        controlX = current[1];
        controlY = current[2];
        break;

      case 't': // shorthand quadraticCurveTo, relative

        // transform to absolute x,y
        tempX = x + current[1];
        tempY = y + current[2];

        if (previous[0].match(/[QqTt]/) === null) {
          // If there is no previous command or if the previous command was not a Q, q, T or t,
          // assume the control point is coincident with the current point
          controlX = x;
          controlY = y;
        }
        else if (previous[0] === 't') {
          // calculate reflection of previous control points for t
          controlX = 2 * x - tempControlX;
          controlY = 2 * y - tempControlY;
        }
        else if (previous[0] === 'q') {
          // calculate reflection of previous control points for q
          controlX = 2 * x - controlX;
          controlY = 2 * y - controlY;
        }

        tempControlX = controlX;
        tempControlY = controlY;

        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        controlX = x + current[1];
        controlY = y + current[2];
        break;

      case 'T':
        tempX = current[1];
        tempY = current[2];

        // calculate reflection of previous control points
        controlX = 2 * x - controlX;
        controlY = 2 * y - controlY;
        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'a':
        drawArc(context, x + l, y + t, [
          current[1],
          current[2],
          current[3],
          current[4],
          current[5],
          current[6] + x + l,
          current[7] + y + t
        ]);
        x += current[6];
        y += current[7];
        break;

      case 'A':
        drawArc(context, x + l, y + t, [
          current[1],
          current[2],
          current[3],
          current[4],
          current[5],
          current[6] + l,
          current[7] + t
        ]);
        x = current[6];
        y = current[7];
        break;

      case 'z':
      case 'Z':
        context.closePath();
        break;
    }
    previous = current;
  }
});

function drawArc(context, x, y, coords) {
  var seg = Object(_arc__WEBPACK_IMPORTED_MODULE_0__["segments"])(
    coords[5], // end x
    coords[6], // end y
    coords[0], // radius x
    coords[1], // radius y
    coords[3], // large flag
    coords[4], // sweep flag
    coords[2], // rotation
    x, y
  );
  for (var i=0; i<seg.length; ++i) {
    var bez = Object(_arc__WEBPACK_IMPORTED_MODULE_0__["bezier"])(seg[i]);
    context.bezierCurveTo(bez[0], bez[1], bez[2], bez[3], bez[4], bez[5]);
  }
}


/***/ }),

/***/ "LBcO":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/tags.js ***!
  \*******************************************************/
/*! exports provided: openTag, closeTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return openTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return closeTag; });
// generate string for an opening xml tag
// tag: the name of the xml tag
// attr: hash of attribute name-value pairs to include
// raw: additional raw string to include in tag markup
function openTag(tag, attr, raw) {
  var s = '<' + tag, key, val;
  if (attr) {
    for (key in attr) {
      val = attr[key];
      if (val != null) {
        s += ' ' + key + '="' + val + '"';
      }
    }
  }
  if (raw) s += ' ' + raw;
  return s + '>';
}

// generate string for closing xml tag
// tag: the name of the xml tag
function closeTag(tag) {
  return '</' + tag + '>';
}


/***/ }),

/***/ "LH2n":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/dataflow.js ***!
  \*******************************************************************/
/*! exports provided: DataFlowNode, OutputNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataFlowNode", function() { return DataFlowNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutputNode", function() { return OutputNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");

/**
 * A node in the dataflow tree.
 */
var DataFlowNode = /** @class */ (function () {
    function DataFlowNode(parent, debugName) {
        this.debugName = debugName;
        this._children = [];
        this._parent = null;
        if (parent) {
            this.parent = parent;
        }
    }
    /**
     * Clone this node with a deep copy but don't clone links to children or parents.
     */
    DataFlowNode.prototype.clone = function () {
        throw new Error('Cannot clone node');
    };
    /**
     * Set of fields that are being created by this node.
     */
    DataFlowNode.prototype.producedFields = function () {
        return {};
    };
    DataFlowNode.prototype.dependentFields = function () {
        return {};
    };
    Object.defineProperty(DataFlowNode.prototype, "parent", {
        get: function () {
            return this._parent;
        },
        /**
         * Set the parent of the node and also add this not to the parent's children.
         */
        set: function (parent) {
            this._parent = parent;
            parent.addChild(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataFlowNode.prototype, "children", {
        get: function () {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    DataFlowNode.prototype.numChildren = function () {
        return this._children.length;
    };
    DataFlowNode.prototype.addChild = function (child) {
        this._children.push(child);
    };
    DataFlowNode.prototype.removeChild = function (oldChild) {
        this._children.splice(this._children.indexOf(oldChild), 1);
    };
    /**
     * Remove node from the dataflow.
     */
    DataFlowNode.prototype.remove = function () {
        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parent = this._parent;
        }
        this._parent.removeChild(this);
    };
    /**
     * Insert another node as a parent of this node.
     */
    DataFlowNode.prototype.insertAsParentOf = function (other) {
        var parent = other.parent;
        parent.removeChild(this);
        this.parent = parent;
        other.parent = this;
    };
    DataFlowNode.prototype.swapWithParent = function () {
        var parent = this._parent;
        var newParent = parent.parent;
        // reconnect the children
        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parent = parent;
        }
        // remove old links
        this._children = []; // equivalent to removing every child link one by one
        parent.removeChild(this);
        parent.parent.removeChild(parent);
        // swap two nodes
        this.parent = newParent;
        parent.parent = this;
    };
    return DataFlowNode;
}());

var OutputNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OutputNode, _super);
    /**
     * @param source The name of the source. Will change in assemble.
     * @param type The type of the output node.
     * @param refCounts A global ref counter map.
     */
    function OutputNode(parent, source, type, refCounts) {
        var _this = _super.call(this, parent, source) || this;
        _this.type = type;
        _this.refCounts = refCounts;
        _this._source = _this._name = source;
        if (_this.refCounts && !(_this._name in _this.refCounts)) {
            _this.refCounts[_this._name] = 0;
        }
        return _this;
    }
    OutputNode.prototype.clone = function () {
        var cloneObj = new this.constructor;
        cloneObj.debugName = 'clone_' + this.debugName;
        cloneObj._source = this._source;
        cloneObj._name = 'clone_' + this._name;
        cloneObj.type = this.type;
        cloneObj.refCounts = this.refCounts;
        cloneObj.refCounts[cloneObj._name] = 0;
        return cloneObj;
    };
    /**
     * Request the datasource name and increase the ref counter.
     *
     * During the parsing phase, this will return the simple name such as 'main' or 'raw'.
     * It is crucial to request the name from an output node to mark it as a required node.
     * If nobody ever requests the name, this datasource will not be instantiated in the assemble phase.
     *
     * In the assemble phase, this will return the correct name.
     */
    OutputNode.prototype.getSource = function () {
        this.refCounts[this._name]++;
        return this._source;
    };
    OutputNode.prototype.isRequired = function () {
        return !!this.refCounts[this._name];
    };
    OutputNode.prototype.setSource = function (source) {
        this._source = source;
    };
    return OutputNode;
}(DataFlowNode));

//# sourceMappingURL=dataflow.js.map

/***/ }),

/***/ "LJ1n":
/*!*************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/ViewLayout.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ViewLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "HkXN");
/* harmony import */ var _gridLayout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gridLayout */ "YvCE");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






var AxisOffset = 0.5,
    tempBounds = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_3__["Bounds"]();

/**
 * Layout view elements such as axes and legends.
 * Also performs size adjustments.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - Scenegraph mark of groups to layout.
 */
function ViewLayout(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["inherits"])(ViewLayout, vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["Transform"]);

prototype.transform = function(_, pulse) {
  // TODO incremental update, output?
  var view = pulse.dataflow;
  _.mark.items.forEach(function(group) {
    if (_.layout) Object(_gridLayout__WEBPACK_IMPORTED_MODULE_1__["gridLayout"])(view, group, _.layout);
    layoutGroup(view, group, _);
  });
  if (_.modified()) pulse.reflow();
  return pulse;
};

function layoutGroup(view, group, _) {
  var items = group.items,
      width = Math.max(0, group.width || 0),
      height = Math.max(0, group.height || 0),
      viewBounds = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_3__["Bounds"]().set(0, 0, width, height),
      xBounds = viewBounds.clone(),
      yBounds = viewBounds.clone(),
      legends = [], title,
      mark, flow, b, i, n;

  // layout axes, gather legends, collect bounds
  for (i=0, n=items.length; i<n; ++i) {
    mark = items[i];
    switch (mark.role) {
      case _constants__WEBPACK_IMPORTED_MODULE_0__["AxisRole"]:
        b = isYAxis(mark) ? xBounds : yBounds;
        b.union(axisLayout(view, mark, width, height));
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["TitleRole"]:
        title = mark; break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]:
        legends.push(mark); break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["FrameRole"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ScopeRole"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowHeader"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowFooter"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowTitle"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColHeader"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColFooter"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColTitle"]:
        xBounds.union(mark.bounds);
        yBounds.union(mark.bounds);
        break;
      default:
        viewBounds.union(mark.bounds);
    }
  }

  // layout legends, adjust viewBounds
  if (legends.length) {
    flow = {
      leftWidth: legendPreprocess(view, legends),
      margin: _.legendMargin || 8,
      left: 0, right: 0, top: 0, bottom: 0
    };

    for (i=0, n=legends.length; i<n; ++i) {
      b = legendLayout(view, legends[i], flow, xBounds, yBounds, width, height);
      if (_.autosize && _.autosize.type === _constants__WEBPACK_IMPORTED_MODULE_0__["Fit"]) {
        // For autosize fit, incorporate the orthogonal dimension only.
        // Legends that overrun the chart area will then be clipped;
        // otherwise the chart area gets reduced to nothing!
        var orient = legends[i].items[0].datum.orient;
        if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]) {
          viewBounds.add(b.x1, 0).add(b.x2, 0);
        } else if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
          viewBounds.add(0, b.y1).add(0, b.y2);
        }
      } else {
        viewBounds.union(b);
      }
    }
  }

  // combine bounding boxes
  viewBounds.union(xBounds).union(yBounds);

  // layout title, adjust bounds
  if (title) {
    viewBounds.union(titleLayout(view, title, width, height, viewBounds));
  }

  // perform size adjustment
  viewSizeLayout(view, group, viewBounds, _);
}

function set(item, property, value) {
  if (item[property] === value) {
    return 0;
  } else {
    item[property] = value;
    return 1;
  }
}

function isYAxis(mark) {
  var orient = mark.items[0].datum.orient;
  return orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"];
}

function axisIndices(datum) {
  var index = +datum.grid;
  return [
    datum.ticks  ? index++ : -1, // ticks index
    datum.labels ? index++ : -1, // labels index
    index + (+datum.domain)      // title index
  ];
}

function axisLayout(view, axis, width, height) {
  var item = axis.items[0],
      datum = item.datum,
      orient = datum.orient,
      indices = axisIndices(datum),
      range = item.range,
      offset = item.offset,
      position = item.position,
      minExtent = item.minExtent,
      maxExtent = item.maxExtent,
      title = datum.title && item.items[indices[2]].items[0],
      titlePadding = item.titlePadding,
      bounds = item.bounds,
      x = 0, y = 0, i, s;

  tempBounds.clear().union(bounds);
  bounds.clear();
  if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);
  if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);

  // position axis group and title
  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      x = position || 0;
      y = -offset;
      s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));
      if (title) s = axisTitleLayout(title, s, titlePadding, 0, -1, bounds);
      bounds.add(0, -s).add(range, 0);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      x = -offset;
      y = position || 0;
      s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));
      if (title) s = axisTitleLayout(title, s, titlePadding, 1, -1, bounds);
      bounds.add(-s, 0).add(0, range);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      x = width + offset;
      y = position || 0;
      s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));
      if (title) s = axisTitleLayout(title, s, titlePadding, 1, 1, bounds);
      bounds.add(0, 0).add(s, range);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      x = position || 0;
      y = height + offset;
      s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));
      if (title) s = axisTitleLayout(title, s, titlePadding, 0, 1, bounds);
      bounds.add(0, 0).add(range, s);
      break;
    default:
      x = item.x;
      y = item.y;
  }

  // update bounds
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_3__["boundStroke"])(bounds.translate(x, y), item);

  if (set(item, 'x', x + AxisOffset) | set(item, 'y', y + AxisOffset)) {
    item.bounds = tempBounds;
    view.dirty(item);
    item.bounds = bounds;
    view.dirty(item);
  }

  return item.mark.bounds.clear().union(bounds);
}

function axisTitleLayout(title, offset, pad, isYAxis, sign, bounds) {
  var b = title.bounds, dx = 0, dy = 0;

  if (title.auto) {
    offset += pad;

    isYAxis
      ? dx = (title.x || 0) - (title.x = sign * offset)
      : dy = (title.y || 0) - (title.y = sign * offset);

    b.translate(-dx, -dy);
    title.mark.bounds.set(b.x1, b.y1, b.x2, b.y2);

    if (isYAxis) {
      bounds.add(0, b.y1).add(0, b.y2);
      offset += b.width();
    } else {
      bounds.add(b.x1, 0).add(b.x2, 0);
      offset += b.height();
    }
  } else {
    bounds.union(b);
  }

  return offset;
}

function titleLayout(view, title, width, height, viewBounds) {
  var item = title.items[0],
      orient = item.orient,
      frame = item.frame,
      anchor = item.anchor,
      offset = item.offset,
      bounds = item.bounds,
      vertical = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]),
      start = 0,
      end = vertical ? height : width,
      x = 0, y = 0, pos;

  if (frame !== _constants__WEBPACK_IMPORTED_MODULE_0__["Group"]) {
    orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] ? (start = viewBounds.y2, end = viewBounds.y1)
      : orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"] ? (start = viewBounds.y1, end = viewBounds.y2)
      : (start = viewBounds.x1, end = viewBounds.x2);
  } else if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]) {
    start = height, end = 0;
  }

  pos = (anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["Start"]) ? start
    : (anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"]) ? end
    : (start + end) / 2;

  tempBounds.clear().union(bounds);

  // position title text
  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      x = pos;
      y = viewBounds.y1 - offset;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      x = viewBounds.x1 - offset;
      y = pos;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      x = viewBounds.x2 + offset;
      y = pos;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      x = pos;
      y = viewBounds.y2 + offset;
      break;
    default:
      x = item.x;
      y = item.y;
  }

  bounds.translate(x - item.x, y - item.y);
  if (set(item, 'x', x) | set(item, 'y', y)) {
    item.bounds = tempBounds;
    view.dirty(item);
    item.bounds = bounds;
    view.dirty(item);
  }

  // update bounds
  return title.bounds.clear().union(bounds);
}

function legendPreprocess(view, legends) {
  return legends.reduce(function(w, legend) {
    var item = legend.items[0];

    // adjust entry to accommodate padding and title
    legendGroupLayout(view, item, item.items[0].items[0]);

    if (item.datum.orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]) {
      var b = tempBounds.clear();
      item.items.forEach(function(_) { b.union(_.bounds); });
      w = Math.max(w, Math.ceil(b.width() + 2 * item.padding - 1));
    }

    return w;
  }, 0);
}

function legendGroupLayout(view, item, entry) {
  var x = item.padding - entry.x,
      y = item.padding - entry.y;

  if (item.datum.title) {
    var title = item.items[1].items[0];
    y += item.titlePadding + title.fontSize;
  }

  if (x || y) {
    entry.x += x;
    entry.y += y;
    entry.bounds.translate(x, y);
    entry.mark.bounds.translate(x, y);
    view.dirty(entry);
  }
}

function legendLayout(view, legend, flow, xBounds, yBounds, width, height) {
  var item = legend.items[0],
      datum = item.datum,
      orient = datum.orient,
      offset = item.offset,
      bounds = item.bounds,
      x = 0,
      y = 0,
      w, h, axisBounds;

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    axisBounds = yBounds,
    x = flow[orient];
  } else if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]) {
    axisBounds = xBounds;
    y = flow[orient];
  }

  tempBounds.clear().union(bounds);
  bounds.clear();

  // aggregate bounds to determine size
  // shave off 1 pixel because it looks better...
  item.items.forEach(function(_) { bounds.union(_.bounds); });
  w = Math.ceil(bounds.width() + 2 * item.padding - 1);
  h = Math.ceil(bounds.height() + 2 * item.padding - 1);

  if (datum.type === _constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"]) {
    legendEntryLayout(item.items[0].items[0].items[0].items);
  }

  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      x -= flow.leftWidth + offset - Math.floor(axisBounds.x1);
      flow.left += h + flow.margin;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      x += offset + Math.ceil(axisBounds.x2);
      flow.right += h + flow.margin;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      y -= h + offset - Math.floor(axisBounds.y1);
      flow.top += w + flow.margin;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      y += offset + Math.ceil(axisBounds.y2);
      flow.bottom += w + flow.margin;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["TopLeft"]:
      x += offset;
      y += offset;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["TopRight"]:
      x += width - w - offset;
      y += offset;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["BottomLeft"]:
      x += offset;
      y += height - h - offset;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["BottomRight"]:
      x += width - w - offset;
      y += height - h - offset;
      break;
    default:
      x = item.x;
      y = item.y;
  }

  // update bounds
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_3__["boundStroke"])(bounds.set(x, y, x + w, y + h), item);

  // update legend layout
  if (set(item, 'x', x) | set(item, 'width', w) |
      set(item, 'y', y) | set(item, 'height', h)) {
    item.bounds = tempBounds;
    view.dirty(item);
    item.bounds = bounds;
    view.dirty(item);
  }

  return item.mark.bounds.clear().union(bounds);
}

function legendEntryLayout(entries) {
  // get max widths for each column
  var widths = entries.reduce(function(w, g) {
    w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);
    return w;
  }, {});

  // set dimensions of legend entry groups
  entries.forEach(function(g) {
    g.width  = widths[g.column];
    g.height = g.bounds.y2 - g.y;
  });
}

function viewSizeLayout(view, group, viewBounds, _) {
  var auto = _.autosize || {},
      type = auto.type,
      viewWidth = view._width,
      viewHeight = view._height,
      padding = view.padding();

  if (view._autosize < 1 || !type) return;

  var width  = Math.max(0, group.width || 0),
      left   = Math.max(0, Math.ceil(-viewBounds.x1)),
      right  = Math.max(0, Math.ceil(viewBounds.x2 - width)),
      height = Math.max(0, group.height || 0),
      top    = Math.max(0, Math.ceil(-viewBounds.y1)),
      bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));

  if (auto.contains === _constants__WEBPACK_IMPORTED_MODULE_0__["Padding"]) {
    viewWidth -= padding.left + padding.right;
    viewHeight -= padding.top + padding.bottom;
  }

  if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["None"]) {
    left = 0;
    top = 0;
    width = viewWidth;
    height = viewHeight;
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Fit"]) {
    width = Math.max(0, viewWidth - left - right);
    height = Math.max(0, viewHeight - top - bottom);
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["FitX"]) {
    width = Math.max(0, viewWidth - left - right);
    viewHeight = height + top + bottom;
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["FitY"]) {
    viewWidth = width + left + right;
    height = Math.max(0, viewHeight - top - bottom);
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Pad"]) {
    viewWidth = width + left + right;
    viewHeight = height + top + bottom;
  }

  view._resizeView(
    viewWidth, viewHeight,
    width, height,
    [left, top],
    auto.resize
  );
}


/***/ }),

/***/ "LKV9":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/encode.js ***!
  \*****************************************************************/
/*! exports provided: labels, labelBaseline, labelAngle, labelAlign */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labels", function() { return labels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelBaseline", function() { return labelBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelAngle", function() { return labelAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelAlign", function() { return labelAlign; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config */ "kLXP");








function labels(model, channel, specifiedLabelsSpec, orient) {
    var fieldDef = model.fieldDef(channel) ||
        (channel === 'x' ? model.fieldDef('x2') :
            channel === 'y' ? model.fieldDef('y2') :
                undefined);
    var axis = model.axis(channel);
    var config = model.config;
    var labelsSpec = {};
    // Text
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isTimeFieldDef"])(fieldDef)) {
        var isUTCScale = model.getScaleComponent(channel).get('type') === _scale__WEBPACK_IMPORTED_MODULE_3__["ScaleType"].UTC;
        var expr = Object(_common__WEBPACK_IMPORTED_MODULE_6__["timeFormatExpression"])('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, config.timeFormat, isUTCScale);
        if (expr) {
            labelsSpec.text = { signal: expr };
        }
    }
    // Label Angle
    var angle = Object(_config__WEBPACK_IMPORTED_MODULE_7__["getAxisConfig"])('labelAngle', model.config, channel, orient, model.getScaleComponent(channel).get('type'));
    if (angle === undefined) {
        angle = labelAngle(axis, channel, fieldDef);
        if (angle) {
            labelsSpec.angle = { value: angle };
        }
    }
    if (angle !== undefined) {
        var align = labelAlign(angle, orient);
        if (align) {
            labelsSpec.align = { value: align };
        }
        labelsSpec.baseline = labelBaseline(angle, orient);
    }
    labelsSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, labelsSpec, specifiedLabelsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(labelsSpec).length === 0 ? undefined : labelsSpec;
}
function labelBaseline(angle, orient) {
    if (orient === 'top' || orient === 'bottom') {
        if (angle <= 45 || 315 <= angle) {
            return { value: orient === 'top' ? 'bottom' : 'top' };
        }
        else if (135 <= angle && angle <= 225) {
            return { value: orient === 'top' ? 'top' : 'bottom' };
        }
        else {
            return { value: 'middle' };
        }
    }
    else {
        if ((angle <= 45 || 315 <= angle) || (135 <= angle && angle <= 225)) {
            return { value: 'middle' };
        }
        else if (45 <= angle && angle <= 135) {
            return { value: orient === 'left' ? 'top' : 'bottom' };
        }
        else {
            return { value: orient === 'left' ? 'bottom' : 'top' };
        }
    }
}
function labelAngle(axis, channel, fieldDef) {
    if (axis.labelAngle !== undefined) {
        // Make angle within [0,360)
        return ((axis.labelAngle % 360) + 360) % 360;
    }
    else {
        if (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] && Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([_type__WEBPACK_IMPORTED_MODULE_4__["NOMINAL"], _type__WEBPACK_IMPORTED_MODULE_4__["ORDINAL"]], fieldDef.type)) {
            return 270;
        }
    }
    return undefined;
}
function labelAlign(angle, orient) {
    angle = ((angle % 360) + 360) % 360;
    if (orient === 'top' || orient === 'bottom') {
        if (angle % 180 === 0) {
            return 'center';
        }
        else if (0 < angle && angle < 180) {
            return orient === 'top' ? 'right' : 'left';
        }
        else {
            return orient === 'top' ? 'left' : 'right';
        }
    }
    else {
        if ((angle + 90) % 180 === 0) {
            return 'center';
        }
        else if (90 <= angle && angle < 270) {
            return orient === 'left' ? 'left' : 'right';
        }
        else {
            return orient === 'left' ? 'right' : 'left';
        }
    }
}
//# sourceMappingURL=encode.js.map

/***/ }),

/***/ "LKYe":
/*!*******************************************************!*\
  !*** ./node_modules/topojson-client/src/neighbors.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "nBwP");


/* harmony default export */ __webpack_exports__["default"] = (function(objects) {
  var indexesByArc = {}, // arc index -> array of object indexes
      neighbors = objects.map(function() { return []; });

  function line(arcs, i) {
    arcs.forEach(function(a) {
      if (a < 0) a = ~a;
      var o = indexesByArc[a];
      if (o) o.push(i);
      else indexesByArc[a] = [i];
    });
  }

  function polygon(arcs, i) {
    arcs.forEach(function(arc) { line(arc, i); });
  }

  function geometry(o, i) {
    if (o.type === "GeometryCollection") o.geometries.forEach(function(o) { geometry(o, i); });
    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);
  }

  var geometryType = {
    LineString: line,
    MultiLineString: polygon,
    Polygon: polygon,
    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }
  };

  objects.forEach(geometry);

  for (var i in indexesByArc) {
    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {
      for (var k = j + 1; k < m; ++k) {
        var ij = indexes[j], ik = indexes[k], n;
        if ((n = neighbors[ij])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ik)] !== ik) n.splice(i, 0, ik);
        if ((n = neighbors[ik])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ij)] !== ij) n.splice(i, 0, ij);
      }
    }
  }

  return neighbors;
});


/***/ }),

/***/ "LOlD":
/*!**************************************************!*\
  !*** ./node_modules/vega-util/src/isFunction.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'function';
});


/***/ }),

/***/ "LQF4":
/*!*******************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-excel.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var markColor = '#4572a7';
var excelTheme = {
    background: '#fff',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor, strokeWidth: 2 },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, strokeWidth: 1.5, size: 50 },
    axis: {
        bandPosition: 0.5,
        grid: true,
        gridColor: '#000000',
        gridOpacity: 1,
        gridWidth: 0.5,
        labelPadding: 10,
        tickSize: 5,
        tickWidth: 0.5,
    },
    axisBand: {
        grid: false,
        tickExtra: true,
    },
    legend: {
        labelBaseline: 'middle',
        labelFontSize: 11,
        symbolSize: 50,
        symbolType: 'square',
    },
    range: {
        category: [
            '#4572a7',
            '#aa4643',
            '#8aa453',
            '#71598e',
            '#4598ae',
            '#d98445',
            '#94aace',
            '#d09393',
            '#b9cc98',
            '#a99cbc',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (excelTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZXhjZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdGhlbWUtZXhjZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsSUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBRTVCLElBQU0sVUFBVSxHQUFXO0lBQ3pCLFVBQVUsRUFBRSxNQUFNO0lBRWxCLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUU7SUFDM0MsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUMzQixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDNUIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUU7SUFFdkQsSUFBSSxFQUFFO1FBQ0osWUFBWSxFQUFFLEdBQUc7UUFDakIsSUFBSSxFQUFFLElBQUk7UUFDVixTQUFTLEVBQUUsU0FBUztRQUNwQixXQUFXLEVBQUUsQ0FBQztRQUNkLFNBQVMsRUFBRSxHQUFHO1FBQ2QsWUFBWSxFQUFFLEVBQUU7UUFDaEIsUUFBUSxFQUFFLENBQUM7UUFDWCxTQUFTLEVBQUUsR0FBRztLQUNmO0lBRUQsUUFBUSxFQUFFO1FBQ1IsSUFBSSxFQUFFLEtBQUs7UUFDWCxTQUFTLEVBQUUsSUFBSTtLQUNoQjtJQUVELE1BQU0sRUFBRTtRQUNOLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUU7WUFDUixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFVBQVUsQ0FBQyJ9

/***/ }),

/***/ "LW4m":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/view.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseView; });
/* harmony import */ var _autosize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autosize */ "ckWy");
/* harmony import */ var _padding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./padding */ "tMQJ");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal */ "v1SV");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec */ "zw9B");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encode/encode-util */ "PkT2");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./marks/roles */ "VX1o");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../DataScope */ "/BrR");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-util */ "J29t");












var defined = Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["toSet"])(['width', 'height', 'padding', 'autosize']);

function parseView(spec, scope) {
  var config = scope.config,
      op, input, encode, parent, root;

  scope.background = spec.background || config.background;
  scope.eventConfig = config.events;
  root = Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(scope.root = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_7__["operator"])()));
  scope.addSignal('width', spec.width || 0);
  scope.addSignal('height', spec.height || 0);
  scope.addSignal('padding', Object(_padding__WEBPACK_IMPORTED_MODULE_1__["default"])(spec.padding, config));
  scope.addSignal('autosize', Object(_autosize__WEBPACK_IMPORTED_MODULE_0__["default"])(spec.autosize, config));

  Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["array"])(spec.signals).forEach(function(_) {
    if (!defined[_.name]) Object(_signal__WEBPACK_IMPORTED_MODULE_2__["default"])(_, scope);
  });

  // Store root group item
  input = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Collect"])());

  // Encode root group item
  encode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["extendEncode"])({
    enter: { x: {value: 0}, y: {value: 0} },
    update: { width: {signal: 'width'}, height: {signal: 'height'} }
  }, spec.encode);

  encode = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Encode"])(
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["encoders"])(encode, _marks_marktypes__WEBPACK_IMPORTED_MODULE_5__["GroupMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_6__["FrameRole"], spec.style, scope, {pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(input)}))
  );

  // Perform view layout
  parent = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["ViewLayout"])({
    layout:       scope.objectProperty(spec.layout),
    legendMargin: config.legendMargin,
    autosize:     scope.signalRef('autosize'),
    mark:         root,
    pulse:        Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(encode)
  }));
  scope.operators.pop();

  // Parse remainder of specification
  scope.pushState(Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(encode), Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(parent), null);
  Object(_spec__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, scope, true);
  scope.operators.push(parent);

  // Bound / render / sieve root item
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Bound"])({mark: root, pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(parent)}));
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Render"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(op)}));
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(op)}));

  // Track metadata for root item
  scope.addData('root', new _DataScope__WEBPACK_IMPORTED_MODULE_8__["default"](scope, input, input, op));

  return scope;
}


/***/ }),

/***/ "LX4U":
/*!***********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/transform.js ***!
  \***********************************************************/
/*! exports provided: default, outerExpr, outerField, isData, isExpr, isField, isCompare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerExpr", function() { return outerExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerField", function() { return outerField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isData", function() { return isData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpr", function() { return isExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isField", function() { return isField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompare", function() { return isCompare; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






/**
 * Parse a data transform specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var def = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["definition"])(spec.type);
  if (!def) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized transform type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(spec.type));

  var t = Object(_util__WEBPACK_IMPORTED_MODULE_1__["entry"])(def.type.toLowerCase(), null, parseParameters(def, spec, scope));
  if (spec.signal) scope.addSignal(spec.signal, scope.proxy(t));
  t.metadata = def.metadata || {};

  return t;
});

/**
 * Parse all parameters of a data transform.
 */
function parseParameters(def, spec, scope) {
  var params = {}, pdef, i, n;
  for (i=0, n=def.params.length; i<n; ++i) {
    pdef = def.params[i];
    params[pdef.name] = parseParameter(pdef, spec, scope);
  }
  return params;
}

/**
 * Parse a data transform parameter.
 */
function parseParameter(def, spec, scope) {
  var type = def.type,
      value = spec[def.name];

  if (type === 'index') {
    return parseIndexParameter(def, spec, scope);
  } else if (value === undefined) {
    if (def.required) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Missing required ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(spec.type)
          + ' parameter: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(def.name));
    }
    return;
  } else if (type === 'param') {
    return parseSubParameters(def, spec, scope);
  } else if (type === 'projection') {
    return scope.projectionRef(spec[def.name]);
  }

  return def.array && !Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(value)
    ? value.map(function(v) { return parameterValue(def, v, scope); })
    : parameterValue(def, value, scope);
}

/**
 * Parse a single parameter value.
 */
function parameterValue(def, value, scope) {
  var type = def.type;

  if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(value)) {
    return isExpr(type) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Expression references can not be signals.')
         : isField(type) ? scope.fieldRef(value)
         : isCompare(type) ? scope.compareRef(value)
         : scope.signalRef(value.signal);
  } else {
    var expr = def.expr || isField(type);
    return expr && outerExpr(value) ? scope.exprRef(value.expr, value.as)
         : expr && outerField(value) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(value.field, value.as)
         : isExpr(type) ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(value, scope)
         : isData(type) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(value).values)
         : isField(type) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(value)
         : isCompare(type) ? scope.compareRef(value)
         : value;
  }
}

/**
 * Parse parameter for accessing an index of another data set.
 */
function parseIndexParameter(def, spec, scope) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(spec.from)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Lookup "from" parameter must be a string literal.');
  }
  return scope.getData(spec.from).lookupRef(scope, spec.key);
}

/**
 * Parse a parameter that contains one or more sub-parameter objects.
 */
function parseSubParameters(def, spec, scope) {
  var value = spec[def.name];

  if (def.array) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(value)) { // signals not allowed!
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Expected an array of sub-parameters. Instead: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
    }
    return value.map(function(v) {
      return parseSubParameter(def, v, scope);
    });
  } else {
    return parseSubParameter(def, value, scope);
  }
}

/**
 * Parse a sub-parameter object.
 */
function parseSubParameter(def, value, scope) {
  var params, pdef, k, i, n;

  // loop over defs to find matching key
  for (i=0, n=def.params.length; i<n; ++i) {
    pdef = def.params[i];
    for (k in pdef.key) {
      if (pdef.key[k] !== value[k]) { pdef = null; break; }
    }
    if (pdef) break;
  }
  // raise error if matching key not found
  if (!pdef) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unsupported parameter: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));

  // parse params, create Params transform, return ref
  params = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])(parseParameters(pdef, value, scope), pdef.key);
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_2__["Params"])(params)));
}

// -- Utilities -----

function outerExpr(_) {
  return _ && _.expr;
}

function outerField(_) {
  return _ && _.field;
}

function isData(_) {
  return _ === 'data';
}

function isExpr(_) {
  return _ === 'expr';
}

function isField(_) {
  return _ === 'field';
}

function isCompare(_) {
  return _ === 'compare'
}


/***/ }),

/***/ "LZFT":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/facet.js ***!
  \****************************************************************/
/*! exports provided: FacetNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FacetNode", function() { return FacetNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../scale/domain */ "2wP2");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./calculate */ "a40Z");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dataflow */ "LH2n");











/**
 * A node that helps us track what fields we are faceting by.
 */
var FacetNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FacetNode, _super);
    /**
     * @param model The facet model.
     * @param name The name that this facet source will have.
     * @param data The source data for this facet data.
     */
    function FacetNode(parent, model, name, data) {
        var _this = _super.call(this, parent) || this;
        _this.model = model;
        _this.name = name;
        _this.data = data;
        for (var _i = 0, _a = [_channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"], _channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]]; _i < _a.length; _i++) {
            var channel = _a[_i];
            var fieldDef = model.facet[channel];
            if (fieldDef) {
                var bin = fieldDef.bin, sort = fieldDef.sort;
                _this[channel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: model.getName(channel + "_domain"), fields: [
                        Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef)
                    ].concat((bin ? [Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'end' })] : [])) }, (Object(_sort__WEBPACK_IMPORTED_MODULE_6__["isSortField"])(sort) ? { sortField: sort } :
                    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sort) ? { sortIndexField: Object(_calculate__WEBPACK_IMPORTED_MODULE_9__["sortArrayIndexField"])(fieldDef, channel) } :
                        {}));
            }
        }
        _this.childModel = model.child;
        return _this;
    }
    Object.defineProperty(FacetNode.prototype, "fields", {
        get: function () {
            return ((this.column && this.column.fields) || []).concat((this.row && this.row.fields) || []);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The name to reference this source is its name.
     */
    FacetNode.prototype.getSource = function () {
        return this.name;
    };
    FacetNode.prototype.getChildIndependentFieldsWithStep = function () {
        var childIndependentFieldsWithStep = {};
        for (var _i = 0, _a = ['x', 'y']; _i < _a.length; _i++) {
            var channel = _a[_i];
            var childScaleComponent = this.childModel.component.scales[channel];
            if (childScaleComponent && !childScaleComponent.merged) {
                var type = childScaleComponent.get('type');
                var range = childScaleComponent.get('range');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isVgRangeStep"])(range)) {
                    var domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_8__["assembleDomain"])(this.childModel, channel);
                    var field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_8__["getFieldFromDomain"])(domain);
                    if (field) {
                        childIndependentFieldsWithStep[channel] = field;
                    }
                    else {
                        _log__WEBPACK_IMPORTED_MODULE_4__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                    }
                }
            }
        }
        return childIndependentFieldsWithStep;
    };
    FacetNode.prototype.assembleRowColumnData = function (channel, crossedDataName, childIndependentFieldsWithStep) {
        var childChannel = channel === 'row' ? 'y' : 'x';
        var fields = [];
        var ops = [];
        var as = [];
        if (childIndependentFieldsWithStep[childChannel]) {
            if (crossedDataName) {
                // If there is a crossed data, calculate max
                fields.push("distinct_" + childIndependentFieldsWithStep[childChannel]);
                ops.push('max');
            }
            else {
                // If there is no crossed data, just calculate distinct
                fields.push(childIndependentFieldsWithStep[childChannel]);
                ops.push('distinct');
            }
            // Although it is technically a max, just name it distinct so it's easier to refer to it
            as.push("distinct_" + childIndependentFieldsWithStep[childChannel]);
        }
        var _a = this[channel], sortField = _a.sortField, sortIndexField = _a.sortIndexField;
        if (sortField) {
            var op = sortField.op, field = sortField.field;
            fields.push(field);
            ops.push(op);
            as.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(sortField));
        }
        else if (sortIndexField) {
            fields.push(sortIndexField);
            ops.push('max');
            as.push(sortIndexField);
        }
        return {
            name: this[channel].name,
            // Use data from the crossed one if it exist
            source: crossedDataName || this.data,
            transform: [tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'aggregate', groupby: this[channel].fields }, (fields.length ? {
                    fields: fields, ops: ops, as: as
                } : {}))]
        };
    };
    FacetNode.prototype.assemble = function () {
        var data = [];
        var crossedDataName = null;
        var childIndependentFieldsWithStep = this.getChildIndependentFieldsWithStep();
        if (this.column && this.row && (childIndependentFieldsWithStep.x || childIndependentFieldsWithStep.y)) {
            // Need to create a cross dataset to correctly calculate cardinality
            crossedDataName = "cross_" + this.column.name + "_" + this.row.name;
            var fields = [].concat(childIndependentFieldsWithStep.x ? [childIndependentFieldsWithStep.x] : [], childIndependentFieldsWithStep.y ? [childIndependentFieldsWithStep.y] : []);
            var ops = fields.map(function () { return 'distinct'; });
            data.push({
                name: crossedDataName,
                source: this.data,
                transform: [{
                        type: 'aggregate',
                        groupby: this.column.fields.concat(this.row.fields),
                        fields: fields,
                        ops: ops
                    }]
            });
        }
        for (var _i = 0, _a = [_channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"], _channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]]; _i < _a.length; _i++) {
            var channel = _a[_i];
            if (this[channel]) {
                data.push(this.assembleRowColumnData(channel, crossedDataName, childIndependentFieldsWithStep));
            }
        }
        return data;
    };
    return FacetNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_10__["DataFlowNode"]));

//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "Lc2I":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundMark.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "wOpL");
/* harmony import */ var _boundItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundItem */ "eXek");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../marks/index */ "Mi2v");




var DUMMY = {mark: null};

/* harmony default export */ __webpack_exports__["default"] = (function(mark, bounds, opt) {
  var type  = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][mark.marktype],
      bound = type.bound,
      items = mark.items,
      hasItems = items && items.length,
      i, n, item, b;

  if (type.nested) {
    if (hasItems) {
      item = items[0];
    } else {
      // no items, fake it
      DUMMY.mark = mark;
      item = DUMMY;
    }
    b = Object(_boundItem__WEBPACK_IMPORTED_MODULE_1__["default"])(item, bound, opt);
    bounds = bounds && bounds.union(b) || b;
    return bounds;
  }

  bounds = bounds
    || mark.bounds && mark.bounds.clear()
    || new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

  if (hasItems) {
    for (i=0, n=items.length; i<n; ++i) {
      bounds.union(Object(_boundItem__WEBPACK_IMPORTED_MODULE_1__["default"])(items[i], bound, opt));
    }
  }

  return mark.bounds = bounds;
});


/***/ }),

/***/ "Ln7r":
/*!*******************************************!*\
  !*** ./node_modules/vega-loader/index.js ***!
  \*******************************************/
/*! exports provided: loader, read, inferType, inferTypes, typeParsers, formats */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/loader */ "y9RI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loader", function() { return _src_loader__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/read */ "FTaR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "read", function() { return _src_read__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/type */ "9WUu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["inferType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["inferTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["typeParsers"]; });

/* harmony import */ var _src_formats_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/formats/index */ "tbDw");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formats", function() { return _src_formats_index__WEBPACK_IMPORTED_MODULE_3__["default"]; });










/***/ }),

/***/ "M4Gl":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Collect.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Collect; });
/* harmony import */ var _util_SortedList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/SortedList */ "wg3X");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Collects all data tuples that pass through this operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for additionally sorting the collected tuples.
 */
function Collect(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, [], params);
}

Collect.Definition = {
  "type": "Collect",
  "metadata": {"source": true},
  "params": [
    { "name": "sort", "type": "compare" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Collect, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      list = Object(_util_SortedList__WEBPACK_IMPORTED_MODULE_0__["default"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"], this.value, out.materialize(out.ADD).add),
      sort = _.sort,
      mod = pulse.changed() || (sort &&
            (_.modified('sort') || pulse.modified(sort.fields)));

  out.visit(out.REM, list.remove);

  this.modified(mod);
  this.value = out.source = list.data(sort, mod);

  // propagate tree root if defined
  if (pulse.source && pulse.source.root) {
    this.value.root = pulse.source.root;
  }

  return out;
};


/***/ }),

/***/ "MDkm":
/*!*************************************************!*\
  !*** ./node_modules/vega-expression/src/ast.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ASTNode; });
function ASTNode(type) {
  this.type = type;
}

ASTNode.prototype.visit = function(visitor) {
  var node = this, c, i, n;

  if (visitor(node)) return 1;

  for (c=children(node), i=0, n=c.length; i<n; ++i) {
    if (c[i].visit(visitor)) return 1;
  }
};

function children(node) {
  switch (node.type) {
    case 'ArrayExpression':
      return node.elements;
    case 'BinaryExpression':
    case 'LogicalExpression':
      return [node.left, node.right];
    case 'CallExpression':
      var args = node.arguments.slice();
      args.unshift(node.callee);
      return args;
    case 'ConditionalExpression':
      return [node.test, node.consequent, node.alternate];
    case 'MemberExpression':
      return [node.object, node.property];
    case 'ObjectExpression':
      return node.properties;
    case 'Property':
      return [node.key, node.value];
    case 'UnaryExpression':
      return [node.argument];
    case 'Identifier':
    case 'Literal':
    case 'RawCode':
    default:
      return [];
  }
}


/***/ }),

/***/ "MHKK":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/bin.js ***!
  \**************************************************************/
/*! exports provided: BinNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinNode", function() { return BinNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../bin */ "4qum");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dataflow */ "LH2n");








function rangeFormula(model, fieldDef, channel, config) {
    if (Object(_common__WEBPACK_IMPORTED_MODULE_5__["binRequiresRange"])(fieldDef, channel)) {
        // read format from axis or legend, if there is no format then use config.numberFormat
        var guide = Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model) ? (model.axis(channel) || model.legend(channel) || {}) : {};
        var startField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: 'datum', });
        var endField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: 'datum', binSuffix: 'end' });
        return {
            formulaAs: Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'range' }),
            formula: Object(_common__WEBPACK_IMPORTED_MODULE_5__["binFormatExpression"])(startField, endField, guide.format, config)
        };
    }
    return {};
}
function binKey(bin, field) {
    return Object(_bin__WEBPACK_IMPORTED_MODULE_2__["binToString"])(bin) + "_" + field;
}
function getSignalsFromModel(model, key) {
    return {
        signal: model.getName(key + "_bins"),
        extentSignal: model.getName(key + "_extent")
    };
}
function isBinTransform(t) {
    return 'as' in t;
}
function createBinComponent(t, model) {
    var as;
    if (isBinTransform(t)) {
        as = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(t.as) ? [t.as, t.as + "_end"] : [t.as[0], t.as[1]];
    }
    else {
        as = [Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(t, {}), Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(t, { binSuffix: 'end' })];
    }
    var bin = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["normalizeBin"])(t.bin, undefined) || {};
    var key = binKey(bin, t.field);
    var _a = getSignalsFromModel(model, key), signal = _a.signal, extentSignal = _a.extentSignal;
    var binComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ bin: bin, field: t.field, as: as }, signal ? { signal: signal } : {}, extentSignal ? { extentSignal: extentSignal } : {});
    return { key: key, binComponent: binComponent };
}
var BinNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BinNode, _super);
    function BinNode(parent, bins) {
        var _this = _super.call(this, parent) || this;
        _this.bins = bins;
        return _this;
    }
    BinNode.prototype.clone = function () {
        return new BinNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_4__["duplicate"])(this.bins));
    };
    BinNode.makeFromEncoding = function (parent, model) {
        var bins = model.reduceFieldDef(function (binComponentIndex, fieldDef, channel) {
            if (fieldDef.bin) {
                var _a = createBinComponent(fieldDef, model), key = _a.key, binComponent = _a.binComponent;
                binComponentIndex[key] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, binComponent, binComponentIndex[key], rangeFormula(model, fieldDef, channel, model.config));
            }
            return binComponentIndex;
        }, {});
        if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(bins).length === 0) {
            return null;
        }
        return new BinNode(parent, bins);
    };
    /**
     * Creates a bin node from BinTransform.
     * The optional parameter should provide
     */
    BinNode.makeFromTransform = function (parent, t, model) {
        var _a;
        var _b = createBinComponent(t, model), key = _b.key, binComponent = _b.binComponent;
        return new BinNode(parent, (_a = {},
            _a[key] = binComponent,
            _a));
    };
    BinNode.prototype.merge = function (other) {
        this.bins = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.bins, other.bins);
        other.remove();
    };
    BinNode.prototype.producedFields = function () {
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["vals"])(this.bins).forEach(function (c) {
            c.as.forEach(function (f) { return out[f] = true; });
        });
        return out;
    };
    BinNode.prototype.dependentFields = function () {
        var out = {};
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["vals"])(this.bins).forEach(function (c) {
            out[c.field] = true;
        });
        return out;
    };
    BinNode.prototype.assemble = function () {
        return Object(_util__WEBPACK_IMPORTED_MODULE_4__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_4__["vals"])(this.bins).map(function (bin) {
            var transform = [];
            var binTrans = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'bin', field: bin.field, as: bin.as, signal: bin.signal }, bin.bin);
            if (!bin.bin.extent && bin.extentSignal) {
                transform.push({
                    type: 'extent',
                    field: bin.field,
                    signal: bin.extentSignal
                });
                binTrans.extent = { signal: bin.extentSignal };
            }
            transform.push(binTrans);
            if (bin.formula) {
                transform.push({
                    type: 'formula',
                    expr: bin.formula,
                    as: bin.formulaAs
                });
            }
            return transform;
        }));
    };
    return BinNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_7__["DataFlowNode"]));

//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "MOt7":
/*!*************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/compile.js ***!
  \*************************************************************/
/*! exports provided: compile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "zH0B");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spec */ "ySvk");
/* harmony import */ var _toplevelprops__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../toplevelprops */ "kJOv");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./buildmodel */ "zzEA");
/* harmony import */ var _data_assemble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./data/assemble */ "gxyW");
/* harmony import */ var _data_optimize__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./data/optimize */ "rSoo");










/**
 * Vega-Lite's main function, for compiling Vega-lite spec into Vega spec.
 *
 * At a high-level, we make the following transformations in different phases:
 *
 * Input spec
 *     |
 *     |  (Normalization)
 *     v
 * Normalized Spec (Row/Column channels in single-view specs becomes faceted specs, composite marks becomes layered specs.)
 *     |
 *     |  (Build Model)
 *     v
 * A model tree of the spec
 *     |
 *     |  (Parse)
 *     v
 * A model tree with parsed components (intermediate structure of visualization primitives in a format that can be easily merged)
 *     |
 *     | (Optimize)
 *     v
 * A model tree with parsed components with the data component optimized
 *     |
 *     | (Assemble)
 *     v
 * Vega spec
 */
function compile(inputSpec, opt) {
    if (opt === void 0) { opt = {}; }
    // 0. Augment opt with default opts
    if (opt.logger) {
        // set the singleton logger to the provided logger
        _log__WEBPACK_IMPORTED_MODULE_3__["set"](opt.logger);
    }
    if (opt.fieldTitle) {
        // set the singleton field title formatter
        _fielddef__WEBPACK_IMPORTED_MODULE_2__["setTitleFormatter"](opt.fieldTitle);
    }
    try {
        // 1. Initialize config by deep merging default config with the config provided via option and the input spec.
        var config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["initConfig"])(Object(_util__WEBPACK_IMPORTED_MODULE_6__["mergeDeep"])({}, opt.config, inputSpec.config));
        // 2. Normalize: Convert input spec -> normalized spec
        // - Decompose all extended unit specs into composition of unit spec.  For example, a box plot get expanded into multiple layers of bars, ticks, and rules. The shorthand row/column channel is also expanded to a facet spec.
        var spec = Object(_spec__WEBPACK_IMPORTED_MODULE_4__["normalize"])(inputSpec, config);
        // - Normalize autosize to be a autosize properties object.
        var autosize = Object(_toplevelprops__WEBPACK_IMPORTED_MODULE_5__["normalizeAutoSize"])(inputSpec.autosize, config.autosize, Object(_spec__WEBPACK_IMPORTED_MODULE_4__["isLayerSpec"])(spec) || Object(_spec__WEBPACK_IMPORTED_MODULE_4__["isUnitSpec"])(spec));
        // 3. Build Model: normalized spec -> Model (a tree structure)
        // This phases instantiates the models with default config by doing a top-down traversal. This allows us to pass properties that child models derive from their parents via their constructors.
        // See the abstract `Model` class and its children (UnitModel, LayerModel, FacetModel, RepeatModel, ConcatModel) for different types of models.
        var model = Object(_buildmodel__WEBPACK_IMPORTED_MODULE_7__["buildModel"])(spec, null, '', undefined, undefined, config, autosize.type === 'fit');
        // 4 Parse: Model --> Model with components
        // Note that components = intermediate representations that are equivalent to Vega specs.
        // We need these intermediate representation because we need to merge many visualizaiton "components" like projections, scales, axes, and legends.
        // We will later convert these components into actual Vega specs in the assemble phase.
        // In this phase, we do a bottom-up traversal over the whole tree to
        // parse for each type of components once (e.g., data, layout, mark, scale).
        // By doing bottom-up traversal, we start parsing components of unit specs and
        // then merge child components of parent composite specs.
        //
        // Please see inside model.parse() for order of different components parsed.
        model.parse();
        // 5. Optimize the dataflow.  This will modify the data component of the model.
        Object(_data_optimize__WEBPACK_IMPORTED_MODULE_9__["optimizeDataflow"])(model.component.data);
        // 6. Assemble: convert model components --> Vega Spec.
        return assembleTopLevelModel(model, getTopLevelProperties(inputSpec, config, autosize));
    }
    finally {
        // Reset the singleton logger if a logger is provided
        if (opt.logger) {
            _log__WEBPACK_IMPORTED_MODULE_3__["reset"]();
        }
        // Reset the singleton field title formatter if provided
        if (opt.fieldTitle) {
            _fielddef__WEBPACK_IMPORTED_MODULE_2__["resetTitleFormatter"]();
        }
    }
}
function getTopLevelProperties(topLevelSpec, config, autosize) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ autosize: Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(autosize).length === 1 && autosize.type ? autosize.type : autosize }, Object(_toplevelprops__WEBPACK_IMPORTED_MODULE_5__["extractTopLevelProperties"])(config), Object(_toplevelprops__WEBPACK_IMPORTED_MODULE_5__["extractTopLevelProperties"])(topLevelSpec));
}
/*
 * Assemble the top-level model.
 *
 * Note: this couldn't be `model.assemble()` since the top-level model
 * needs some special treatment to generate top-level properties.
 */
function assembleTopLevelModel(model, topLevelProperties) {
    // TODO: change type to become VgSpec
    // Config with Vega-Lite only config removed.
    var vgConfig = model.config ? Object(_config__WEBPACK_IMPORTED_MODULE_1__["stripAndRedirectConfig"])(model.config) : undefined;
    var data = [].concat(model.assembleSelectionData([]), 
    // only assemble data in the root
    Object(_data_assemble__WEBPACK_IMPORTED_MODULE_8__["assembleRootData"])(model.component.data, topLevelProperties.datasets || {}));
    delete topLevelProperties.datasets;
    var projections = model.assembleProjections();
    var title = model.assembleTitle();
    var style = model.assembleGroupStyle();
    var layoutSignals = model.assembleLayoutSignals();
    // move width and height signals with values to top level
    layoutSignals = layoutSignals.filter(function (signal) {
        if ((signal.name === 'width' || signal.name === 'height') && signal.value !== undefined) {
            topLevelProperties[signal.name] = +signal.value;
            return false;
        }
        return true;
    });
    var output = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ $schema: 'https://vega.github.io/schema/vega/v3.json' }, (model.description ? { description: model.description } : {}), topLevelProperties, (title ? { title: title } : {}), (style ? { style: style } : {}), { data: data }, (projections.length > 0 ? { projections: projections } : {}), model.assembleGroup(layoutSignals.concat(model.assembleSelectionTopLevelSignals([]))), (vgConfig ? { config: vgConfig } : {}));
    return {
        spec: output
        // TODO: add warning / errors here
    };
}
//# sourceMappingURL=compile.js.map

/***/ }),

/***/ "MQBj":
/*!*******************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/util.js ***!
  \*******************************************************/
/*! exports provided: fieldNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldNames", function() { return fieldNames; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


// use either provided alias or accessor field name
function fieldNames(fields, as) {
  if (!fields) return null;
  return fields.map(function(f, i) {
    return as[i] || Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorName"])(f);
  });
}


/***/ }),

/***/ "MSxZ":
/*!*********************************************************!*\
  !*** ./node_modules/vega-projection/src/projections.js ***!
  \*********************************************************/
/*! exports provided: projectionProperties, projection, getProjectionPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionProperties", function() { return projectionProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProjectionPath", function() { return getProjectionPath; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "n8A4");


var defaultPath = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoPath"])();

var projectionProperties = [
  // standard properties in d3-geo
  'clipAngle',
  'clipExtent',
  'scale',
  'translate',
  'center',
  'rotate',
  'parallels',
  'precision',
  'reflectX',
  'reflectY',

  // extended properties in d3-geo-projections
  'coefficient',
  'distance',
  'fraction',
  'lobes',
  'parallel',
  'radius',
  'ratio',
  'spacing',
  'tilt'
];

/**
 * Augment projections with their type and a copy method.
 */
function create(type, constructor) {
  return function projection() {
    var p = constructor();

    p.type = type;

    p.path = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoPath"])().projection(p);

    p.copy = p.copy || function() {
      var c = projection();
      projectionProperties.forEach(function(prop) {
        if (p.hasOwnProperty(prop)) c[prop](p[prop]());
      });
      c.path.pointRadius(p.path.pointRadius());
      return c;
    };

    return p;
  };
}

function projection(type, proj) {
  if (!type || typeof type !== 'string') {
    throw new Error('Projection type must be a name string.');
  }
  type = type.toLowerCase();
  if (arguments.length > 1) {
    projections[type] = create(type, proj);
    return this;
  } else {
    return projections.hasOwnProperty(type) ? projections[type] : null;
  }
}

function getProjectionPath(proj) {
  return (proj && proj.path) || defaultPath;
}

var projections = {
  // base d3-geo projection types
  albers:               d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAlbers"],
  albersusa:            d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAlbersUsa"],
  azimuthalequalarea:   d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEqualArea"],
  azimuthalequidistant: d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistant"],
  conicconformal:       d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicConformal"],
  conicequalarea:       d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicEqualArea"],
  conicequidistant:     d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicEquidistant"],
  equirectangular:      d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoEquirectangular"],
  gnomonic:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonic"],
  identity:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoIdentity"],
  mercator:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoMercator"],
  naturalEarth1:        d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoNaturalEarth1"],
  orthographic:         d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoOrthographic"],
  stereographic:        d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoStereographic"],
  transversemercator:   d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoTransverseMercator"]
};

for (var key in projections) {
  projection(key, projections[key]);
}


/***/ }),

/***/ "MbqW":
/*!**********************************************!*\
  !*** ./node_modules/vega-hierarchy/index.js ***!
  \**********************************************/
/*! exports provided: nest, pack, partition, stratify, tree, treelinks, treemap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Nest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Nest */ "3faL");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return _src_Nest__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Pack */ "g9aV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return _src_Pack__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Partition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Partition */ "sbHs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _src_Partition__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Stratify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Stratify */ "ygAO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return _src_Stratify__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Tree */ "hKDE");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return _src_Tree__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_TreeLinks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/TreeLinks */ "ExLr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treelinks", function() { return _src_TreeLinks__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Treemap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Treemap */ "wpFU");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return _src_Treemap__WEBPACK_IMPORTED_MODULE_6__["default"]; });










/***/ }),

/***/ "MeId":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isString.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'string';
});


/***/ }),

/***/ "Mi2v":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/index.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "/ld2");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "faBk");
/* harmony import */ var _group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group */ "djgw");
/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image */ "+L+q");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./line */ "Uooy");
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./path */ "nUsu");
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rect */ "Qcwi");
/* harmony import */ var _rule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rule */ "rXX8");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shape */ "vJ6+");
/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol */ "pcUx");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./text */ "tG+F");
/* harmony import */ var _trail__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trail */ "oH5S");













/* harmony default export */ __webpack_exports__["default"] = ({
  arc:     _arc__WEBPACK_IMPORTED_MODULE_0__["default"],
  area:    _area__WEBPACK_IMPORTED_MODULE_1__["default"],
  group:   _group__WEBPACK_IMPORTED_MODULE_2__["default"],
  image:   _image__WEBPACK_IMPORTED_MODULE_3__["default"],
  line:    _line__WEBPACK_IMPORTED_MODULE_4__["default"],
  path:    _path__WEBPACK_IMPORTED_MODULE_5__["default"],
  rect:    _rect__WEBPACK_IMPORTED_MODULE_6__["default"],
  rule:    _rule__WEBPACK_IMPORTED_MODULE_7__["default"],
  shape:   _shape__WEBPACK_IMPORTED_MODULE_8__["default"],
  symbol:  _symbol__WEBPACK_IMPORTED_MODULE_9__["default"],
  text:    _text__WEBPACK_IMPORTED_MODULE_10__["default"],
  trail:   _trail__WEBPACK_IMPORTED_MODULE_11__["default"]
});


/***/ }),

/***/ "Mjv8":
/*!**********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Overlap.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Overlap; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "HkXN");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Analyze items for overlap, changing opacity to hide items with
 * overlapping bounding boxes. This transform will preserve at least
 * two items (e.g., first and last) even if overlap persists.
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator
 *   function for sorting items.
 * @param {object} [params.method] - The overlap removal method to apply.
 *   One of 'parity' (default, hide every other item until there is no
 *   more overlap) or 'greedy' (sequentially scan and hide and items that
 *   overlap with the last visible item).
 * @param {object} [params.boundScale] - A scale whose range should be used
 *   to bound the items. Items exceeding the bounds of the scale range
 *   will be treated as overlapping. If null or undefined, no bounds check
 *   will be applied.
 * @param {object} [params.boundOrient] - The orientation of the scale
 *   (top, bottom, left, or right) used to bound items. This parameter is
 *   ignored if boundScale is null or undefined.
 * @param {object} [params.boundTolerance] - The tolerance in pixels for
 *   bound inclusion testing (default 1). This specifies by how many pixels
 *   an item's bounds may exceed the scale range bounds and not be culled.
 * @constructor
 */
function Overlap(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Overlap, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

var methods = {
  parity: function(items) {
    return items.filter(function(item, i) {
      return i % 2 ? (item.opacity = 0) : 1;
    });
  },
  greedy: function(items) {
    var a;
    return items.filter(function(b, i) {
      if (!i || !intersect(a.bounds, b.bounds)) {
        a = b;
        return 1;
      } else {
        return b.opacity = 0;
      }
    });
  }
};

// compute bounding box intersection
// allow 1 pixel of overlap tolerance
function intersect(a, b) {
  return !(
    a.x2 - 1 < b.x1 ||
    a.x1 + 1 > b.x2 ||
    a.y2 - 1 < b.y1 ||
    a.y1 + 1 > b.y2
  );
}

function hasOverlap(items) {
  for (var i=1, n=items.length, a=items[0].bounds, b; i<n; a=b, ++i) {
    if (intersect(a, b = items[i].bounds)) return true;
  }
}

function hasBounds(item) {
  var b = item.bounds;
  return b.width() > 1 && b.height() > 1;
}

function boundTest(scale, orient, tolerance) {
  var range = scale.range(),
      b = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Bounds"]();

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    b.set(range[0], -Infinity, range[1], +Infinity);
  } else {
    b.set(-Infinity, range[0], +Infinity, range[1]);
  }
  b.expand(tolerance || 1);

  return function(item) {
    return b.encloses(item.bounds);
  };
}

// reset all items to be fully opaque
function reset(source) {
  source.forEach(function(item) { item.opacity = 1; });
  return source;
}

// add all tuples to mod, fork pulse if parameters were modified
// fork prevents cross-stream tuple pollution (e.g., pulse from scale)
function reflow(pulse, _) {
  return pulse.reflow(_.modified()).modifies('opacity');
}

prototype.transform = function(_, pulse) {
  var reduce = methods[_.method] || methods.parity,
      source = pulse.materialize(pulse.SOURCE).source,
      items, test;

  if (!source) return;

  if (!_.method) {
    // early exit if method is falsy
    if (_.modified('method')) {
      reset(source);
      pulse = reflow(pulse, _);
    }
    return pulse;
  }

  if (_.sort) {
    source = source.slice().sort(_.sort);
  }

  if (_.method === 'greedy') {
    source = source.filter(hasBounds);
  }

  items = reset(source);
  pulse = reflow(pulse, _);

  if (items.length >= 3 && hasOverlap(items)) {
    do {
      items = reduce(items);
    } while (items.length >= 3 && hasOverlap(items));

    if (items.length < 3 && !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(source).opacity) {
      if (items.length > 1) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(items).opacity = 0;
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(source).opacity = 1;
    }
  }

  if (_.boundScale && _.boundTolerance >= 0) {
    test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);
    source.forEach(function(item) {
      if (!test(item)) item.opacity = 0;
    })
  }

  return pulse;
};


/***/ }),

/***/ "Mm2Z":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-config.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = scope.config,
      orient = spec.orient,
      xy = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) ? config.axisX : config.axisY,
      or = config['axis' + orient[0].toUpperCase() + orient.slice(1)],
      band = scope.scaleType(spec.scale) === 'band' && config.axisBand;

  return (xy || or || band)
    ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, config.axis, xy, or, band)
    : config.axis;
});

/***/ }),

/***/ "MqRG":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/model.js ***!
  \***********************************************************/
/*! exports provided: NameMap, isUnitModel, isFacetModel, isRepeatModel, isConcatModel, isLayerModel, Model, ModelWithField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NameMap", function() { return NameMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUnitModel", function() { return isUnitModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetModel", function() { return isFacetModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatModel", function() { return isRepeatModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConcatModel", function() { return isConcatModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLayerModel", function() { return isLayerModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return Model; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelWithField", function() { return ModelWithField; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "5g++");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scale */ "50Px");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../spec */ "ySvk");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../title */ "qRBp");
/* harmony import */ var _toplevelprops__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../toplevelprops */ "kJOv");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../transform */ "1mLV");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../vega.schema */ "P9ZJ");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./axis/assemble */ "lp5H");
/* harmony import */ var _header_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./header/index */ "k2RQ");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./layoutsize/assemble */ "Ds8r");
/* harmony import */ var _legend_assemble__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./legend/assemble */ "tcAQ");
/* harmony import */ var _legend_parse__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./legend/parse */ "2Qqt");
/* harmony import */ var _projection_assemble__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/assemble */ "/KLr");
/* harmony import */ var _projection_parse__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/parse */ "W0Rg");
/* harmony import */ var _scale_assemble__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scale/assemble */ "ipwT");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./scale/domain */ "2wP2");
/* harmony import */ var _scale_parse__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./scale/parse */ "kOmo");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./split */ "cq+n");
























var NameMap = /** @class */ (function () {
    function NameMap() {
        this.nameMap = {};
    }
    NameMap.prototype.rename = function (oldName, newName) {
        this.nameMap[oldName] = newName;
    };
    NameMap.prototype.has = function (name) {
        return this.nameMap[name] !== undefined;
    };
    NameMap.prototype.get = function (name) {
        // If the name appears in the _nameMap, we need to read its new name.
        // We have to loop over the dict just in case the new name also gets renamed.
        while (this.nameMap[name] && name !== this.nameMap[name]) {
            name = this.nameMap[name];
        }
        return name;
    };
    return NameMap;
}());

/*
  We use type guards instead of `instanceof` as `instanceof` makes
  different parts of the compiler depend on the actual implementation of
  the model classes, which in turn depend on different parts of the compiler.
  Thus, `instanceof` leads to circular dependency problems.

  On the other hand, type guards only make different parts of the compiler
  depend on the type of the model classes, but not the actual implementation.
*/
function isUnitModel(model) {
    return model && model.type === 'unit';
}
function isFacetModel(model) {
    return model && model.type === 'facet';
}
function isRepeatModel(model) {
    return model && model.type === 'repeat';
}
function isConcatModel(model) {
    return model && model.type === 'concat';
}
function isLayerModel(model) {
    return model && model.type === 'layer';
}
var Model = /** @class */ (function () {
    function Model(spec, parent, parentGivenName, config, repeater, resolve) {
        var _this = this;
        this.children = [];
        /**
         * Corrects the data references in marks after assemble.
         */
        this.correctDataNames = function (mark) {
            // TODO: make this correct
            // for normal data references
            if (mark.from && mark.from.data) {
                mark.from.data = _this.lookupDataSource(mark.from.data);
            }
            // for access to facet data
            if (mark.from && mark.from.facet && mark.from.facet.data) {
                mark.from.facet.data = _this.lookupDataSource(mark.from.facet.data);
            }
            return mark;
        };
        this.parent = parent;
        this.config = config;
        this.repeater = repeater;
        // If name is not provided, always use parent's givenName to avoid name conflicts.
        this.name = spec.name || parentGivenName;
        this.title = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(spec.title) ? { text: spec.title } : spec.title;
        // Shared name maps
        this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();
        this.projectionNameMap = parent ? parent.projectionNameMap : new NameMap();
        this.layoutSizeNameMap = parent ? parent.layoutSizeNameMap : new NameMap();
        this.data = spec.data;
        this.description = spec.description;
        this.transforms = Object(_transform__WEBPACK_IMPORTED_MODULE_10__["normalizeTransform"])(spec.transform || []);
        this.layout = Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isUnitSpec"])(spec) || Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isLayerSpec"])(spec) ? undefined : Object(_toplevelprops__WEBPACK_IMPORTED_MODULE_9__["extractCompositionLayout"])(spec);
        this.component = {
            data: {
                sources: parent ? parent.component.data.sources : {},
                outputNodes: parent ? parent.component.data.outputNodes : {},
                outputNodeRefCounts: parent ? parent.component.data.outputNodeRefCounts : {},
                // data is faceted if the spec is a facet spec or the parent has faceted data and no data is defined
                isFaceted: Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isFacetSpec"])(spec) || (parent && parent.component.data.isFaceted && !spec.data)
            },
            layoutSize: new _split__WEBPACK_IMPORTED_MODULE_23__["Split"](),
            layoutHeaders: { row: {}, column: {} },
            mark: null,
            resolve: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ scale: {}, axis: {}, legend: {} }, (resolve || {})),
            selection: null,
            scales: null,
            projection: null,
            axes: {},
            legends: {},
        };
    }
    Object.defineProperty(Model.prototype, "width", {
        get: function () {
            return this.getSizeSignalRef('width');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Model.prototype, "height", {
        get: function () {
            return this.getSizeSignalRef('height');
        },
        enumerable: true,
        configurable: true
    });
    Model.prototype.initSize = function (size) {
        var width = size.width, height = size.height;
        if (width) {
            this.component.layoutSize.set('width', width, true);
        }
        if (height) {
            this.component.layoutSize.set('height', height, true);
        }
    };
    Model.prototype.parse = function () {
        this.parseScale();
        this.parseLayoutSize(); // depends on scale
        this.renameTopLevelLayoutSize();
        this.parseSelection();
        this.parseProjection();
        this.parseData(); // (pathorder) depends on markDef; selection filters depend on parsed selections; depends on projection because some transforms require the finalized projection name.
        this.parseAxisAndHeader(); // depends on scale and layout size
        this.parseLegend(); // depends on scale, markDef
        this.parseMarkGroup(); // depends on data name, scale, layout size, axisGroup, and children's scale, axis, legend and mark.
    };
    Model.prototype.parseScale = function () {
        Object(_scale_parse__WEBPACK_IMPORTED_MODULE_22__["parseScale"])(this);
    };
    Model.prototype.parseProjection = function () {
        Object(_projection_parse__WEBPACK_IMPORTED_MODULE_19__["parseProjection"])(this);
    };
    /**
     * Rename top-level spec's size to be just width / height, ignoring model name.
     * This essentially merges the top-level spec's width/height signals with the width/height signals
     * to help us reduce redundant signals declaration.
     */
    Model.prototype.renameTopLevelLayoutSize = function () {
        if (this.getName('width') !== 'width') {
            this.renameLayoutSize(this.getName('width'), 'width');
        }
        if (this.getName('height') !== 'height') {
            this.renameLayoutSize(this.getName('height'), 'height');
        }
    };
    Model.prototype.parseLegend = function () {
        Object(_legend_parse__WEBPACK_IMPORTED_MODULE_17__["parseLegend"])(this);
    };
    Model.prototype.assembleGroupStyle = function () {
        if (this.type === 'unit' || this.type === 'layer') {
            return 'cell';
        }
        return undefined;
    };
    Model.prototype.assembleLayoutSize = function () {
        if (this.type === 'unit' || this.type === 'layer') {
            return {
                width: this.getSizeSignalRef('width'),
                height: this.getSizeSignalRef('height')
            };
        }
        return undefined;
    };
    Model.prototype.assembleLayout = function () {
        if (!this.layout) {
            return undefined;
        }
        var _a = this.layout, align = _a.align, bounds = _a.bounds, center = _a.center, _b = _a.spacing, spacing = _b === void 0 ? {} : _b;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ padding: Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(spacing) ? spacing : {
                row: spacing.row || 10,
                column: spacing.column || 10
            } }, this.assembleDefaultLayout(), (align ? { align: align } : {}), (bounds ? { bounds: bounds } : {}), (center ? { center: center } : {}));
    };
    Model.prototype.assembleDefaultLayout = function () {
        return {};
    };
    Model.prototype.assembleHeaderMarks = function () {
        var layoutHeaders = this.component.layoutHeaders;
        var headerMarks = [];
        for (var _i = 0, HEADER_CHANNELS_1 = _header_index__WEBPACK_IMPORTED_MODULE_14__["HEADER_CHANNELS"]; _i < HEADER_CHANNELS_1.length; _i++) {
            var channel = HEADER_CHANNELS_1[_i];
            if (layoutHeaders[channel].title) {
                headerMarks.push(Object(_header_index__WEBPACK_IMPORTED_MODULE_14__["getTitleGroup"])(this, channel));
            }
        }
        for (var _a = 0, HEADER_CHANNELS_2 = _header_index__WEBPACK_IMPORTED_MODULE_14__["HEADER_CHANNELS"]; _a < HEADER_CHANNELS_2.length; _a++) {
            var channel = HEADER_CHANNELS_2[_a];
            headerMarks = headerMarks.concat(Object(_header_index__WEBPACK_IMPORTED_MODULE_14__["getHeaderGroups"])(this, channel));
        }
        return headerMarks;
    };
    Model.prototype.assembleAxes = function () {
        return Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_13__["assembleAxes"])(this.component.axes, this.config);
    };
    Model.prototype.assembleLegends = function () {
        return Object(_legend_assemble__WEBPACK_IMPORTED_MODULE_16__["assembleLegends"])(this);
    };
    Model.prototype.assembleProjections = function () {
        return Object(_projection_assemble__WEBPACK_IMPORTED_MODULE_18__["assembleProjections"])(this);
    };
    Model.prototype.assembleTitle = function () {
        var title = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, Object(_title__WEBPACK_IMPORTED_MODULE_8__["extractTitleConfig"])(this.config.title).nonMark, this.title);
        if (title.text) {
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_11__["contains"])(['unit', 'layer'], this.type)) {
                // As described in https://github.com/vega/vega-lite/issues/2875:
                // Due to vega/vega#960 (comment), we only support title's anchor for unit and layered spec for now.
                if (title.anchor && title.anchor !== 'start') {
                    _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].cannotSetTitleAnchor(this.type));
                }
                title.anchor = 'start';
            }
            return Object(_util__WEBPACK_IMPORTED_MODULE_11__["keys"])(title).length > 0 ? title : undefined;
        }
        return undefined;
    };
    /**
     * Assemble the mark group for this model.  We accept optional `signals` so that we can include concat top-level signals with the top-level model's local signals.
     */
    Model.prototype.assembleGroup = function (signals) {
        if (signals === void 0) { signals = []; }
        var group = {};
        signals = signals.concat(this.assembleSelectionSignals());
        if (signals.length > 0) {
            group.signals = signals;
        }
        var layout = this.assembleLayout();
        if (layout) {
            group.layout = layout;
        }
        group.marks = [].concat(this.assembleHeaderMarks(), this.assembleMarks());
        // Only include scales if this spec is top-level or if parent is facet.
        // (Otherwise, it will be merged with upper-level's scope.)
        var scales = (!this.parent || isFacetModel(this.parent)) ? Object(_scale_assemble__WEBPACK_IMPORTED_MODULE_20__["assembleScales"])(this) : [];
        if (scales.length > 0) {
            group.scales = scales;
        }
        var axes = this.assembleAxes();
        if (axes.length > 0) {
            group.axes = axes;
        }
        var legends = this.assembleLegends();
        if (legends.length > 0) {
            group.legends = legends;
        }
        return group;
    };
    Model.prototype.hasDescendantWithFieldOnChannel = function (channel) {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            if (isUnitModel(child)) {
                if (child.channelHasField(channel)) {
                    return true;
                }
            }
            else {
                if (child.hasDescendantWithFieldOnChannel(channel)) {
                    return true;
                }
            }
        }
        return false;
    };
    Model.prototype.getName = function (text) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_11__["varName"])((this.name ? this.name + '_' : '') + text);
    };
    /**
     * Request a data source name for the given data source type and mark that data source as required. This method should be called in parse, so that all used data source can be correctly instantiated in assembleData().
     */
    Model.prototype.requestDataName = function (name) {
        var fullName = this.getName(name);
        // Increase ref count. This is critical because otherwise we won't create a data source.
        // We also increase the ref counts on OutputNode.getSource() calls.
        var refCounts = this.component.data.outputNodeRefCounts;
        refCounts[fullName] = (refCounts[fullName] || 0) + 1;
        return fullName;
    };
    Model.prototype.getSizeSignalRef = function (sizeType) {
        if (isFacetModel(this.parent)) {
            var channel = sizeType === 'width' ? 'x' : 'y';
            var scaleComponent = this.component.scales[channel];
            if (scaleComponent && !scaleComponent.merged) { // independent scale
                var type = scaleComponent.get('type');
                var range = scaleComponent.get('range');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_6__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_12__["isVgRangeStep"])(range)) {
                    var scaleName = scaleComponent.get('name');
                    var domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_21__["assembleDomain"])(this, channel);
                    var field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_21__["getFieldFromDomain"])(domain);
                    if (field) {
                        var fieldRef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])({ aggregate: 'distinct', field: field }, { expr: 'datum' });
                        return {
                            signal: Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_15__["sizeExpr"])(scaleName, scaleComponent, fieldRef)
                        };
                    }
                    else {
                        _log__WEBPACK_IMPORTED_MODULE_5__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                        return null;
                    }
                }
            }
        }
        return {
            signal: this.layoutSizeNameMap.get(this.getName(sizeType))
        };
    };
    /**
     * Lookup the name of the datasource for an output node. You probably want to call this in assemble.
     */
    Model.prototype.lookupDataSource = function (name) {
        var node = this.component.data.outputNodes[name];
        if (!node) {
            // Name not found in map so let's just return what we got.
            // This can happen if we already have the correct name.
            return name;
        }
        return node.getSource();
    };
    Model.prototype.getSizeName = function (oldSizeName) {
        return this.layoutSizeNameMap.get(oldSizeName);
    };
    Model.prototype.renameLayoutSize = function (oldName, newName) {
        this.layoutSizeNameMap.rename(oldName, newName);
    };
    Model.prototype.renameScale = function (oldName, newName) {
        this.scaleNameMap.rename(oldName, newName);
    };
    Model.prototype.renameProjection = function (oldName, newName) {
        this.projectionNameMap.rename(oldName, newName);
    };
    /**
     * @return scale name for a given channel after the scale has been parsed and named.
     */
    Model.prototype.scaleName = function (originalScaleName, parse) {
        if (parse) {
            // During the parse phase always return a value
            // No need to refer to rename map because a scale can't be renamed
            // before it has the original name.
            return this.getName(originalScaleName);
        }
        // If there is a scale for the channel, it should either
        // be in the scale component or exist in the name map
        if (
        // If there is a scale for the channel, there should be a local scale component for it
        (Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isChannel"])(originalScaleName) && Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isScaleChannel"])(originalScaleName) && this.component.scales[originalScaleName]) ||
            // in the scale name map (the scale get merged by its parent)
            this.scaleNameMap.has(this.getName(originalScaleName))) {
            return this.scaleNameMap.get(this.getName(originalScaleName));
        }
        return undefined;
    };
    /**
     * @return projection name after the projection has been parsed and named.
     */
    Model.prototype.projectionName = function (parse) {
        if (parse) {
            // During the parse phase always return a value
            // No need to refer to rename map because a projection can't be renamed
            // before it has the original name.
            return this.getName('projection');
        }
        if ((this.component.projection && !this.component.projection.merged) || this.projectionNameMap.has(this.getName('projection'))) {
            return this.projectionNameMap.get(this.getName('projection'));
        }
        return undefined;
    };
    /**
     * Traverse a model's hierarchy to get the scale component for a particular channel.
     */
    Model.prototype.getScaleComponent = function (channel) {
        /* istanbul ignore next: This is warning for debugging test */
        if (!this.component.scales) {
            throw new Error('getScaleComponent cannot be called before parseScale().  Make sure you have called parseScale or use parseUnitModelWithScale().');
        }
        var localScaleComponent = this.component.scales[channel];
        if (localScaleComponent && !localScaleComponent.merged) {
            return localScaleComponent;
        }
        return (this.parent ? this.parent.getScaleComponent(channel) : undefined);
    };
    /**
     * Traverse a model's hierarchy to get a particular selection component.
     */
    Model.prototype.getSelectionComponent = function (variableName, origName) {
        var sel = this.component.selection[variableName];
        if (!sel && this.parent) {
            sel = this.parent.getSelectionComponent(variableName, origName);
        }
        if (!sel) {
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_5__["message"].selectionNotFound(origName));
        }
        return sel;
    };
    return Model;
}());

/** Abstract class for UnitModel and FacetModel.  Both of which can contain fieldDefs as a part of its own specification. */
var ModelWithField = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ModelWithField, _super);
    function ModelWithField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** Get "field" reference for vega */
    ModelWithField.prototype.vgField = function (channel, opt) {
        if (opt === void 0) { opt = {}; }
        var fieldDef = this.fieldDef(channel);
        if (!fieldDef) {
            return undefined;
        }
        return Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, opt);
    };
    ModelWithField.prototype.reduceFieldDef = function (f, init, t) {
        return Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["reduce"])(this.getMapping(), function (acc, cd, c) {
            var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["getFieldDef"])(cd);
            if (fieldDef) {
                return f(acc, fieldDef, c);
            }
            return acc;
        }, init, t);
    };
    ModelWithField.prototype.forEachFieldDef = function (f, t) {
        Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["forEach"])(this.getMapping(), function (cd, c) {
            var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["getFieldDef"])(cd);
            if (fieldDef) {
                f(fieldDef, c);
            }
        }, t);
    };
    return ModelWithField;
}(Model));

//# sourceMappingURL=model.js.map

/***/ }),

/***/ "MsEM":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/window.js ***!
  \*****************************************************************/
/*! exports provided: WindowTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowTransformNode", function() { return WindowTransformNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../facet */ "6g/r");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dataflow */ "LH2n");






/**
 * A class for the window transform nodes
 */
var WindowTransformNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowTransformNode, _super);
    function WindowTransformNode(parent, transform) {
        var _this = _super.call(this, parent) || this;
        _this.transform = transform;
        return _this;
    }
    WindowTransformNode.makeFromFacet = function (parent, facet) {
        var row = facet.row, column = facet.column;
        if (row && column) {
            var newParent = null;
            // only need to make one for crossed facet
            for (var _i = 0, _a = [row, column]; _i < _a.length; _i++) {
                var fieldDef = _a[_i];
                if (Object(_sort__WEBPACK_IMPORTED_MODULE_2__["isSortField"])(fieldDef.sort)) {
                    var _b = fieldDef.sort, field = _b.field, op = _b.op;
                    parent = newParent = new WindowTransformNode(parent, {
                        window: [{
                                op: op,
                                field: field,
                                as: Object(_facet__WEBPACK_IMPORTED_MODULE_4__["facetSortFieldName"])(fieldDef, fieldDef.sort)
                            }],
                        groupby: [Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef)],
                        frame: [null, null]
                    });
                }
            }
            return newParent;
        }
        return null;
    };
    WindowTransformNode.prototype.clone = function () {
        return new WindowTransformNode(this.parent, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.transform));
    };
    WindowTransformNode.prototype.producedFields = function () {
        var _this = this;
        var out = {};
        this.transform.window.forEach(function (windowFieldDef) {
            out[_this.getDefaultName(windowFieldDef)] = true;
        });
        return out;
    };
    WindowTransformNode.prototype.getDefaultName = function (windowFieldDef) {
        return windowFieldDef.as || Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(windowFieldDef);
    };
    WindowTransformNode.prototype.assemble = function () {
        var fields = [];
        var ops = [];
        var as = [];
        var params = [];
        for (var _i = 0, _a = this.transform.window; _i < _a.length; _i++) {
            var window_1 = _a[_i];
            ops.push(window_1.op);
            as.push(this.getDefaultName(window_1));
            params.push(window_1.param === undefined ? null : window_1.param);
            fields.push(window_1.field === undefined ? null : window_1.field);
        }
        var frame = this.transform.frame;
        var groupby = this.transform.groupby;
        var sortFields = [];
        var sortOrder = [];
        if (this.transform.sort !== undefined) {
            for (var _b = 0, _c = this.transform.sort; _b < _c.length; _b++) {
                var sortField = _c[_b];
                sortFields.push(sortField.field);
                sortOrder.push(sortField.order || 'ascending');
            }
        }
        var sort = {
            field: sortFields,
            order: sortOrder,
        };
        var ignorePeers = this.transform.ignorePeers;
        var result = {
            type: 'window',
            params: params,
            as: as,
            ops: ops,
            fields: fields,
            sort: sort,
        };
        if (ignorePeers !== undefined) {
            result.ignorePeers = ignorePeers;
        }
        if (groupby !== undefined) {
            result.groupby = groupby;
        }
        if (frame !== undefined) {
            result.frame = frame;
        }
        return result;
    };
    return WindowTransformNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_5__["DataFlowNode"]));

//# sourceMappingURL=window.js.map

/***/ }),

/***/ "MtNf":
/*!**************************************************!*\
  !*** ./node_modules/vega-runtime/src/context.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ "fyS1");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "DQPB");



/**
 * Context objects store the current parse state.
 * Enables lookup of parsed operators, event streams, accessors, etc.
 * Provides a 'fork' method for creating child contexts for subflows.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(df, transforms, functions) {
  return new Context(df, transforms, functions);
});

function Context(df, transforms, functions) {
  this.dataflow = df;
  this.transforms = transforms;
  this.events = df.events.bind(df);
  this.signals = {};
  this.scales = {};
  this.nodes = {};
  this.data = {};
  this.fn = {};
  if (functions) {
    this.functions = Object.create(functions);
    this.functions.context = this;
  }
}

function ContextFork(ctx) {
  this.dataflow = ctx.dataflow;
  this.transforms = ctx.transforms;
  this.functions = ctx.functions;
  this.events = ctx.events;
  this.signals = Object.create(ctx.signals);
  this.scales = Object.create(ctx.scales);
  this.nodes = Object.create(ctx.nodes);
  this.data = Object.create(ctx.data);
  this.fn = Object.create(ctx.fn);
  if (ctx.functions) {
    this.functions = Object.create(ctx.functions);
    this.functions.context = this;
  }
}

Context.prototype = ContextFork.prototype = {
  fork: function() {
    var ctx = new ContextFork(this);
    (this.subcontext || (this.subcontext = [])).push(ctx);
    return ctx;
  },
  get: function(id) {
    return this.nodes[id];
  },
  set: function(id, node) {
    return this.nodes[id] = node;
  },
  add: function(spec, op) {
    var ctx = this,
        df = ctx.dataflow,
        data;

    ctx.set(spec.id, op);

    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isCollect"])(spec.type) && (data = spec.value)) {
      if (data.$ingest) {
        df.ingest(op, data.$ingest, data.$format);
      } else if (data.$load) {
        ctx.get(data.$load.$ref).target = op;
      } else if (data.$request) {
        df.request(op, data.$request, data.$format);
      } else {
        df.pulse(op, df.changeset().insert(data));
      }
    }

    if (spec.root) {
      ctx.root = op;
    }

    if (spec.parent) {
      var p = ctx.get(spec.parent.$ref);
      if (p) {
        df.connect(p, [op]);
        op.targets().add(p);
      } else {
        (ctx.unresolved = ctx.unresolved || []).push(function() {
          p = ctx.get(spec.parent.$ref);
          df.connect(p, [op]);
          op.targets().add(p);
        });
      }
    }

    if (spec.signal) {
      ctx.signals[spec.signal] = op;
    }

    if (spec.scale) {
      ctx.scales[spec.scale] = op;
    }

    if (spec.data) {
      for (var name in spec.data) {
        data = ctx.data[name] || (ctx.data[name] = {});
        spec.data[name].forEach(function(role) { data[role] = op; });
      }
    }
  },
  resolve: function() {
    (this.unresolved || []).forEach(function(fn) { fn(); });
    delete this.unresolved;
    return this;
  },
  operator: function(spec, update, params) {
    this.add(spec, this.dataflow.add(spec.value, update, params, spec.react));
  },
  transform: function(spec, type, params) {
    this.add(spec, this.dataflow.add(this.transforms[Object(_util__WEBPACK_IMPORTED_MODULE_1__["canonicalType"])(type)], params));
  },
  stream: function(spec, stream) {
    this.set(spec.id, stream);
  },
  update: function(spec, stream, target, update, params) {
    this.dataflow.on(stream, target, update, params, spec.options);
  },
  getState: _state__WEBPACK_IMPORTED_MODULE_0__["getState"],
  setState: _state__WEBPACK_IMPORTED_MODULE_0__["setState"]
};


/***/ }),

/***/ "N/Yc":
/*!***********************************************!*\
  !*** ./node_modules/vega-transforms/index.js ***!
  \***********************************************/
/*! exports provided: aggregate, bin, collect, compare, countpattern, cross, density, expression, extent, facet, field, filter, flatten, fold, formula, generate, impute, joinaggregate, key, load, lookup, multiextent, multivalues, params, pivot, prefacet, project, proxy, relay, sample, sequence, sieve, subflow, tupleindex, values, window */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Aggregate */ "S/FN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "aggregate", function() { return _src_Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Bin */ "D3Kc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _src_Bin__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Collect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Collect */ "M4Gl");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "collect", function() { return _src_Collect__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Compare__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Compare */ "JhVQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _src_Compare__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_CountPattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/CountPattern */ "PJvI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "countpattern", function() { return _src_CountPattern__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Cross__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Cross */ "4pH0");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _src_Cross__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Density__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Density */ "+ZXb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "density", function() { return _src_Density__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_Expression__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Expression */ "HRhJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return _src_Expression__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Extent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Extent */ "hIQG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _src_Extent__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_Facet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Facet */ "a0eD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "facet", function() { return _src_Facet__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_Field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/Field */ "5JQG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return _src_Field__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_Filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/Filter */ "5kG8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _src_Filter__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_Flatten__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/Flatten */ "ddlc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _src_Flatten__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_Fold__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/Fold */ "kNdx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fold", function() { return _src_Fold__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _src_Formula__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/Formula */ "JIox");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formula", function() { return _src_Formula__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_Generate__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/Generate */ "mL5n");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _src_Generate__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_Impute__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/Impute */ "hTHI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "impute", function() { return _src_Impute__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_JoinAggregate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/JoinAggregate */ "mQYq");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "joinaggregate", function() { return _src_JoinAggregate__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_Key__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/Key */ "QDuA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return _src_Key__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_Load__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/Load */ "WkDV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "load", function() { return _src_Load__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_Lookup__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/Lookup */ "1ITa");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lookup", function() { return _src_Lookup__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_MultiExtent__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/MultiExtent */ "9b3q");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiextent", function() { return _src_MultiExtent__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_MultiValues__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/MultiValues */ "+tA1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multivalues", function() { return _src_MultiValues__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_Params__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/Params */ "STnH");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "params", function() { return _src_Params__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_Pivot__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/Pivot */ "pcFI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pivot", function() { return _src_Pivot__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_PreFacet__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/PreFacet */ "0DWM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prefacet", function() { return _src_PreFacet__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_Project__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/Project */ "1kyy");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "project", function() { return _src_Project__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_Proxy__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/Proxy */ "1mRa");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "proxy", function() { return _src_Proxy__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _src_Relay__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/Relay */ "PSz4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "relay", function() { return _src_Relay__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _src_Sample__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/Sample */ "w3Jc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _src_Sample__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _src_Sequence__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/Sequence */ "wkcy");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequence", function() { return _src_Sequence__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _src_Sieve__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/Sieve */ "KWmr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sieve", function() { return _src_Sieve__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _src_Subflow__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/Subflow */ "zfIz");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subflow", function() { return _src_Subflow__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _src_TupleIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/TupleIndex */ "/+9G");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleindex", function() { return _src_TupleIndex__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _src_Values__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/Values */ "ezh/");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _src_Values__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _src_Window__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/Window */ "jucA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _src_Window__WEBPACK_IMPORTED_MODULE_35__["default"]; });







































/***/ }),

/***/ "N26P":
/*!***************************************************!*\
  !*** ./node_modules/vega-encode/src/SortItems.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SortItems; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Sorts scenegraph items in the pulse source array.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator
 *   function for sorting tuples.
 */
function SortItems(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(SortItems, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var mod = _.modified('sort')
         || pulse.changed(pulse.ADD)
         || pulse.modified(_.sort.fields)
         || pulse.modified('datum');

  if (mod) pulse.source.sort(_.sort);

  this.modified(mod);
  return pulse;
};


/***/ }),

/***/ "NCIN":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/data.js ***!
  \**************************************************/
/*! exports provided: isUrlData, isInlineData, isNamedData, MAIN, RAW */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUrlData", function() { return isUrlData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInlineData", function() { return isInlineData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNamedData", function() { return isNamedData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAIN", function() { return MAIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RAW", function() { return RAW; });
function isUrlData(data) {
    return !!data['url'];
}
function isInlineData(data) {
    return !!data['values'];
}
function isNamedData(data) {
    return !!data['name'] && !isUrlData(data) && !isInlineData(data);
}
var MAIN = 'main';
var RAW = 'raw';
//# sourceMappingURL=data.js.map

/***/ }),

/***/ "NEhT":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/range.js ***!
  \*****************************************************************/
/*! exports provided: RANGE_PROPERTIES, parseScaleRange, parseRangeForChannel, defaultRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RANGE_PROPERTIES", function() { return RANGE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleRange", function() { return parseScaleRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseRangeForChannel", function() { return parseRangeForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultRange", function() { return defaultRange; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./properties */ "21jt");










var RANGE_PROPERTIES = ['range', 'rangeStep', 'scheme'];
function parseScaleRange(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model)) {
        parseUnitScaleRange(model);
    }
    else {
        Object(_properties__WEBPACK_IMPORTED_MODULE_8__["parseNonUnitScaleProperty"])(model, 'range');
    }
}
function parseUnitScaleRange(model) {
    var localScaleComponents = model.component.scales;
    // use SCALE_CHANNELS instead of scales[channel] to ensure that x, y come first!
    _channel__WEBPACK_IMPORTED_MODULE_1__["SCALE_CHANNELS"].forEach(function (channel) {
        var localScaleCmpt = localScaleComponents[channel];
        if (!localScaleCmpt) {
            return;
        }
        var mergedScaleCmpt = model.getScaleComponent(channel);
        var specifiedScale = model.specifiedScales[channel];
        var fieldDef = model.fieldDef(channel);
        // Read if there is a specified width/height
        var sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
        var sizeSpecified = sizeType ? !!model.component.layoutSize.get(sizeType) : undefined;
        var scaleType = mergedScaleCmpt.get('type');
        // if autosize is fit, size cannot be data driven
        var rangeStep = _util__WEBPACK_IMPORTED_MODULE_4__["contains"](['point', 'band'], scaleType) || !!specifiedScale.rangeStep;
        if (sizeType && model.fit && !sizeSpecified && rangeStep) {
            _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].CANNOT_FIX_RANGE_STEP_WITH_FIT);
            sizeSpecified = true;
        }
        var xyRangeSteps = getXYRangeStep(model);
        var rangeWithExplicit = parseRangeForChannel(channel, scaleType, fieldDef.type, specifiedScale, model.config, localScaleCmpt.get('zero'), model.mark, sizeSpecified, model.getName(sizeType), xyRangeSteps);
        localScaleCmpt.setWithExplicit('range', rangeWithExplicit);
    });
}
function getXYRangeStep(model) {
    var xyRangeSteps = [];
    var xScale = model.getScaleComponent('x');
    var xRange = xScale && xScale.get('range');
    if (xRange && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_5__["isVgRangeStep"])(xRange) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(xRange.step)) {
        xyRangeSteps.push(xRange.step);
    }
    var yScale = model.getScaleComponent('y');
    var yRange = yScale && yScale.get('range');
    if (yRange && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_5__["isVgRangeStep"])(yRange) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(yRange.step)) {
        xyRangeSteps.push(yRange.step);
    }
    return xyRangeSteps;
}
/**
 * Return mixins that includes one of the range properties (range, rangeStep, scheme).
 */
function parseRangeForChannel(channel, scaleType, type, specifiedScale, config, zero, mark, sizeSpecified, sizeSignal, xyRangeSteps) {
    var noRangeStep = sizeSpecified || specifiedScale.rangeStep === null;
    // Check if any of the range properties is specified.
    // If so, check if it is compatible and make sure that we only output one of the properties
    for (var _i = 0, RANGE_PROPERTIES_1 = RANGE_PROPERTIES; _i < RANGE_PROPERTIES_1.length; _i++) {
        var property = RANGE_PROPERTIES_1[_i];
        if (specifiedScale[property] !== undefined) {
            var supportedByScaleType = Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypeSupportProperty"])(scaleType, property);
            var channelIncompatability = Object(_scale__WEBPACK_IMPORTED_MODULE_3__["channelScalePropertyIncompatability"])(channel, property);
            if (!supportedByScaleType) {
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].scalePropertyNotWorkWithScaleType(scaleType, property, channel));
            }
            else if (channelIncompatability) { // channel
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](channelIncompatability);
            }
            else {
                switch (property) {
                    case 'range':
                        return Object(_split__WEBPACK_IMPORTED_MODULE_7__["makeExplicit"])(specifiedScale[property]);
                    case 'scheme':
                        return Object(_split__WEBPACK_IMPORTED_MODULE_7__["makeExplicit"])(parseScheme(specifiedScale[property]));
                    case 'rangeStep':
                        var rangeStep = specifiedScale[property];
                        if (rangeStep !== null) {
                            if (!sizeSpecified) {
                                return Object(_split__WEBPACK_IMPORTED_MODULE_7__["makeExplicit"])({ step: rangeStep });
                            }
                            else {
                                // If top-level size is specified, we ignore specified rangeStep.
                                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].rangeStepDropped(channel));
                            }
                        }
                }
            }
        }
    }
    return Object(_split__WEBPACK_IMPORTED_MODULE_7__["makeImplicit"])(defaultRange(channel, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep));
}
function parseScheme(scheme) {
    if (Object(_scale__WEBPACK_IMPORTED_MODULE_3__["isExtendedScheme"])(scheme)) {
        var r = { scheme: scheme.name };
        if (scheme.count) {
            r.count = scheme.count;
        }
        if (scheme.extent) {
            r.extent = scheme.extent;
        }
        return r;
    }
    return { scheme: scheme };
}
function defaultRange(channel, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_1__["X"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]:
            if (_util__WEBPACK_IMPORTED_MODULE_4__["contains"](['point', 'band'], scaleType) && !noRangeStep) {
                if (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] && mark === 'text') {
                    if (config.scale.textXRangeStep) {
                        return { step: config.scale.textXRangeStep };
                    }
                }
                else {
                    if (config.scale.rangeStep) {
                        return { step: config.scale.rangeStep };
                    }
                }
            }
            // If range step is null, use zero to width or height.
            // Note that these range signals are temporary
            // as they can be merged and renamed.
            // (We do not have the right size signal here since parseLayoutSize() happens after parseScale().)
            // We will later replace these temporary names with
            // the final name in assembleScaleRange()
            if (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["Y"] && Object(_scale__WEBPACK_IMPORTED_MODULE_3__["hasContinuousDomain"])(scaleType)) {
                // For y continuous scale, we have to start from the height as the bottom part has the max value.
                return [{ signal: sizeSignal }, 0];
            }
            else {
                return [0, { signal: sizeSignal }];
            }
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SIZE"]:
            // TODO: support custom rangeMin, rangeMax
            var rangeMin = sizeRangeMin(mark, zero, config);
            var rangeMax = sizeRangeMax(mark, xyRangeSteps, config);
            return [rangeMin, rangeMax];
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]:
            return 'symbol';
        case _channel__WEBPACK_IMPORTED_MODULE_1__["COLOR"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["STROKE"]:
            if (scaleType === 'ordinal') {
                // Only nominal data uses ordinal scale by default
                return type === 'nominal' ? 'category' : 'ordinal';
            }
            return mark === 'rect' || mark === 'geoshape' ? 'heatmap' : 'ramp';
        case _channel__WEBPACK_IMPORTED_MODULE_1__["OPACITY"]:
            // TODO: support custom rangeMin, rangeMax
            return [config.scale.minOpacity, config.scale.maxOpacity];
    }
    /* istanbul ignore next: should never reach here */
    throw new Error("Scale range undefined for channel " + channel);
}
function sizeRangeMin(mark, zero, config) {
    if (zero) {
        return 0;
    }
    switch (mark) {
        case 'bar':
        case 'tick':
            return config.scale.minBandSize;
        case 'line':
        case 'trail':
        case 'rule':
            return config.scale.minStrokeWidth;
        case 'text':
            return config.scale.minFontSize;
        case 'point':
        case 'square':
        case 'circle':
            return config.scale.minSize;
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMin not implemented for the mark
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_2__["message"].incompatibleChannel('size', mark));
}
function sizeRangeMax(mark, xyRangeSteps, config) {
    var scaleConfig = config.scale;
    switch (mark) {
        case 'bar':
        case 'tick':
            if (config.scale.maxBandSize !== undefined) {
                return config.scale.maxBandSize;
            }
            return minXYRangeStep(xyRangeSteps, config.scale) - 1;
        case 'line':
        case 'trail':
        case 'rule':
            return config.scale.maxStrokeWidth;
        case 'text':
            return config.scale.maxFontSize;
        case 'point':
        case 'square':
        case 'circle':
            if (config.scale.maxSize) {
                return config.scale.maxSize;
            }
            // FIXME this case totally should be refactored
            var pointStep = minXYRangeStep(xyRangeSteps, scaleConfig);
            return (pointStep - 2) * (pointStep - 2);
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMax not implemented for the mark
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_2__["message"].incompatibleChannel('size', mark));
}
/**
 * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.
 */
function minXYRangeStep(xyRangeSteps, scaleConfig) {
    if (xyRangeSteps.length > 0) {
        return Math.min.apply(null, xyRangeSteps);
    }
    if (scaleConfig.rangeStep) {
        return scaleConfig.rangeStep;
    }
    return 21; // FIXME: re-evaluate the default value here.
}
//# sourceMappingURL=range.js.map

/***/ }),

/***/ "NITR":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/mixins.js ***!
  \*****************************************************************/
/*! exports provided: color, baseEncodeEntry, valueIfDefined, defined, nonPosition, wrapCondition, tooltip, text, bandPosition, centeredBandPosition, binnedPosition, pointPosition, pointPosition2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "baseEncodeEntry", function() { return baseEncodeEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueIfDefined", function() { return valueIfDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defined", function() { return defined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonPosition", function() { return nonPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapCondition", function() { return wrapCondition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltip", function() { return tooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandPosition", function() { return bandPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "centeredBandPosition", function() { return centeredBandPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binnedPosition", function() { return binnedPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointPosition", function() { return pointPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointPosition2", function() { return pointPosition2; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../predicate */ "WSy+");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../selection/selection */ "3eK9");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./valueref */ "vfFY");











function color(model, opt) {
    if (opt === void 0) { opt = { valueOnly: false }; }
    var _a, _b;
    var markDef = model.markDef, encoding = model.encoding, config = model.config;
    var filled = markDef.filled, markType = markDef.type;
    var configValue = {
        fill: Object(_common__WEBPACK_IMPORTED_MODULE_8__["getMarkConfig"])('fill', markDef, config),
        stroke: Object(_common__WEBPACK_IMPORTED_MODULE_8__["getMarkConfig"])('stroke', markDef, config),
        color: Object(_common__WEBPACK_IMPORTED_MODULE_8__["getMarkConfig"])('color', markDef, config)
    };
    var transparentIfNeeded = Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['bar', 'point', 'circle', 'square', 'geoshape'], markType) ? 'transparent' : undefined;
    var defaultValue = {
        fill: markDef.fill || configValue.fill ||
            // If there is no fill, always fill symbols, bar, geoshape
            // with transparent fills https://github.com/vega/vega-lite/issues/1316
            transparentIfNeeded,
        stroke: markDef.stroke || configValue.stroke
    };
    var colorVgChannel = filled ? 'fill' : 'stroke';
    var fillStrokeMarkDefAndConfig = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (defaultValue.fill ? {
        fill: { value: defaultValue.fill }
    } : {}), (defaultValue.stroke ? {
        stroke: { value: defaultValue.stroke }
    } : {}));
    if (encoding.fill || encoding.stroke) {
        // ignore encoding.color, markDef.color, config.color
        if (markDef.color) {
            // warn for markDef.color  (no need to warn encoding.color as it will be dropped in normalized already)
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].droppingColor('property', { fill: 'fill' in encoding, stroke: 'stroke' in encoding }));
        }
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, nonPosition('fill', model, { defaultValue: defaultValue.fill || transparentIfNeeded }), nonPosition('stroke', model, { defaultValue: defaultValue.stroke }));
    }
    else if (encoding.color) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fillStrokeMarkDefAndConfig, nonPosition('color', model, {
            vgChannel: colorVgChannel,
            // apply default fill/stroke first, then color config, then transparent if needed.
            defaultValue: markDef[colorVgChannel] || markDef.color || configValue[colorVgChannel] || configValue.color || (filled ? transparentIfNeeded : undefined)
        }));
    }
    else if (markDef.fill || markDef.stroke) {
        // Ignore markDef.color, config.color
        if (markDef.color) {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].droppingColor('property', { fill: 'fill' in markDef, stroke: 'stroke' in markDef }));
        }
        return fillStrokeMarkDefAndConfig;
    }
    else if (markDef.color) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fillStrokeMarkDefAndConfig, (_a = {}, _a[colorVgChannel] = { value: markDef.color }, _a));
    }
    else if (configValue.fill || configValue.stroke) {
        // ignore config.color
        return fillStrokeMarkDefAndConfig;
    }
    else if (configValue.color) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (transparentIfNeeded ? { fill: { value: 'transparent' } } : {}), (_b = {}, _b[colorVgChannel] = { value: configValue.color }, _b));
    }
    return {};
}
function baseEncodeEntry(model, ignore) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, markDefProperties(model.markDef, ignore), color(model), nonPosition('opacity', model), tooltip(model), text(model, 'href'));
}
function markDefProperties(mark, ignore) {
    return _vega_schema__WEBPACK_IMPORTED_MODULE_7__["VG_MARK_CONFIGS"].reduce(function (m, prop) {
        if (mark[prop] !== undefined && ignore[prop] !== 'ignore') {
            m[prop] = { value: mark[prop] };
        }
        return m;
    }, {});
}
function valueIfDefined(prop, value) {
    var _a;
    if (value !== undefined) {
        return _a = {}, _a[prop] = { value: value }, _a;
    }
    return undefined;
}
function validPredicate(vgRef) {
    return vgRef + " !== null && !isNaN(" + vgRef + ")";
}
function defined(model) {
    if (model.config.invalidValues === 'filter') {
        var fields = ['x', 'y'].map(function (channel) {
            var scaleComponent = model.getScaleComponent(channel);
            if (scaleComponent) {
                var scaleType = scaleComponent.get('type');
                // Discrete domain scales can handle invalid values, but continuous scales can't.
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType)) {
                    return model.vgField(channel, { expr: 'datum' });
                }
            }
            return undefined;
        })
            .filter(function (field) { return !!field; })
            .map(validPredicate);
        if (fields.length > 0) {
            return {
                defined: { signal: fields.join(' && ') }
            };
        }
    }
    return {};
}
/**
 * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)
 */
function nonPosition(channel, model, opt) {
    if (opt === void 0) { opt = {}; }
    var defaultValue = opt.defaultValue, vgChannel = opt.vgChannel;
    var defaultRef = opt.defaultRef || (defaultValue !== undefined ? { value: defaultValue } : undefined);
    var channelDef = model.encoding[channel];
    return wrapCondition(model, channelDef, vgChannel || channel, function (cDef) {
        return _valueref__WEBPACK_IMPORTED_MODULE_10__["midPoint"](channel, cDef, model.scaleName(channel), model.getScaleComponent(channel), null, // No need to provide stack for non-position as it does not affect mid point
        defaultRef);
    });
}
/**
 * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.
 * or a simple mixin if channel def has no condition.
 */
function wrapCondition(model, channelDef, vgChannel, refFn) {
    var _a, _b;
    var condition = channelDef && channelDef.condition;
    var valueRef = refFn(channelDef);
    if (condition) {
        var conditions = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(condition) ? condition : [condition];
        var vgConditions = conditions.map(function (c) {
            var conditionValueRef = refFn(c);
            var test = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isConditionalSelection"])(c) ? Object(_selection_selection__WEBPACK_IMPORTED_MODULE_9__["selectionPredicate"])(model, c.selection) : Object(_predicate__WEBPACK_IMPORTED_MODULE_4__["expression"])(model, c.test);
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ test: test }, conditionValueRef);
        });
        return _a = {},
            _a[vgChannel] = vgConditions.concat((valueRef !== undefined ? [valueRef] : [])),
            _a;
    }
    else {
        return valueRef !== undefined ? (_b = {}, _b[vgChannel] = valueRef, _b) : {};
    }
}
function tooltip(model) {
    var channel = 'tooltip';
    var channelDef = model.encoding[channel];
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
        var keyValues = channelDef.map(function (fieldDef) {
            var key = fieldDef.title !== undefined ? fieldDef.title : Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { binSuffix: 'range' });
            var value = _valueref__WEBPACK_IMPORTED_MODULE_10__["text"](fieldDef, model.config).signal;
            return "\"" + key + "\": " + value;
        });
        return { tooltip: { signal: "{" + keyValues.join(', ') + "}" } };
    }
    else {
        // if not an array, behave just like text
        return textCommon(model, channel, channelDef);
    }
}
function text(model, channel) {
    if (channel === void 0) { channel = 'text'; }
    var channelDef = model.encoding[channel];
    return textCommon(model, channel, channelDef);
}
function textCommon(model, channel, channelDef) {
    return wrapCondition(model, channelDef, channel, function (cDef) { return _valueref__WEBPACK_IMPORTED_MODULE_10__["text"](cDef, model.config); });
}
function bandPosition(fieldDef, channel, model) {
    var _a, _b, _c;
    var scaleName = model.scaleName(channel);
    var sizeChannel = channel === 'x' ? 'width' : 'height';
    if (model.encoding.size || model.markDef.size !== undefined) {
        var orient = model.markDef.orient;
        if (orient) {
            var centeredBandPositionMixins = (_a = {},
                // Use xc/yc and place the mark at the middle of the band
                // This way we never have to deal with size's condition for x/y position.
                _a[channel + 'c'] = _valueref__WEBPACK_IMPORTED_MODULE_10__["fieldRef"](fieldDef, scaleName, {}, { band: 0.5 }),
                _a);
            if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["getFieldDef"])(model.encoding.size)) {
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));
            }
            else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isValueDef"])(model.encoding.size)) {
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));
            }
            else if (model.markDef.size !== undefined) {
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, centeredBandPositionMixins, (_b = {}, _b[sizeChannel] = { value: model.markDef.size }, _b));
            }
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].cannotApplySizeToNonOrientedMark(model.markDef.type));
        }
    }
    return _c = {},
        _c[channel] = _valueref__WEBPACK_IMPORTED_MODULE_10__["fieldRef"](fieldDef, scaleName, { binSuffix: 'range' }),
        _c[sizeChannel] = _valueref__WEBPACK_IMPORTED_MODULE_10__["bandRef"](scaleName),
        _c;
}
function centeredBandPosition(channel, model, defaultPosRef, defaultSizeRef) {
    var centerChannel = channel === 'x' ? 'xc' : 'yc';
    var sizeChannel = channel === 'x' ? 'width' : 'height';
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, pointPosition(channel, model, defaultPosRef, centerChannel), nonPosition('size', model, { defaultRef: defaultSizeRef, vgChannel: sizeChannel }));
}
function binnedPosition(fieldDef, channel, scaleName, spacing, reverse) {
    if (channel === 'x') {
        return {
            x2: _valueref__WEBPACK_IMPORTED_MODULE_10__["bin"](fieldDef, scaleName, 'start', reverse ? 0 : spacing),
            x: _valueref__WEBPACK_IMPORTED_MODULE_10__["bin"](fieldDef, scaleName, 'end', reverse ? spacing : 0)
        };
    }
    else {
        return {
            y2: _valueref__WEBPACK_IMPORTED_MODULE_10__["bin"](fieldDef, scaleName, 'start', reverse ? spacing : 0),
            y: _valueref__WEBPACK_IMPORTED_MODULE_10__["bin"](fieldDef, scaleName, 'end', reverse ? 0 : spacing)
        };
    }
}
/**
 * Return mixins for point (non-band) position channels.
 */
function pointPosition(channel, model, defaultRef, vgChannel) {
    // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613
    var _a;
    var encoding = model.encoding, mark = model.mark, stack = model.stack;
    var channelDef = encoding[channel];
    var scaleName = model.scaleName(channel);
    var scale = model.getScaleComponent(channel);
    var offset = _valueref__WEBPACK_IMPORTED_MODULE_10__["getOffset"](channel, model.markDef);
    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?
        // use geopoint output if there are lat/long and there is no point position overriding lat/long.
        { field: model.getName(channel) } : tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _valueref__WEBPACK_IMPORTED_MODULE_10__["position"](channel, encoding[channel], scaleName, scale, stack, _valueref__WEBPACK_IMPORTED_MODULE_10__["getDefaultRef"](defaultRef, channel, scaleName, scale, mark)), (offset ? { offset: offset } : {}));
    return _a = {},
        _a[vgChannel || channel] = valueRef,
        _a;
}
/**
 * Return mixins for x2, y2.
 * If channel is not specified, return one channel based on orientation.
 */
function pointPosition2(model, defaultRef, channel) {
    var _a;
    var encoding = model.encoding, mark = model.mark, stack = model.stack;
    var baseChannel = channel === 'x2' ? 'x' : 'y';
    var channelDef = encoding[baseChannel];
    var scaleName = model.scaleName(baseChannel);
    var scale = model.getScaleComponent(baseChannel);
    var offset = _valueref__WEBPACK_IMPORTED_MODULE_10__["getOffset"](channel, model.markDef);
    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?
        // use geopoint output if there are lat2/long2 and there is no point position2 overriding lat2/long2.
        { field: model.getName(channel) } : tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _valueref__WEBPACK_IMPORTED_MODULE_10__["position2"](channel, channelDef, encoding[channel], scaleName, scale, stack, _valueref__WEBPACK_IMPORTED_MODULE_10__["getDefaultRef"](defaultRef, baseChannel, scaleName, scale, mark)), (offset ? { offset: offset } : {}));
    return _a = {}, _a[channel] = valueRef, _a;
}
//# sourceMappingURL=mixins.js.map

/***/ }),

/***/ "NNLh":
/*!***************************************************!*\
  !*** ./node_modules/vega-view/src/render-size.js ***!
  \***************************************************/
/*! exports provided: width, height, offset, resizeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "width", function() { return width; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "height", function() { return height; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "offset", function() { return offset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeRenderer", function() { return resizeRenderer; });
function width(view) {
  var padding = view.padding();
  return Math.max(0, view._viewWidth + padding.left + padding.right);
}

function height(view) {
  var padding = view.padding();
  return Math.max(0, view._viewHeight + padding.top + padding.bottom);
}

function offset(view) {
  var padding = view.padding(),
      origin = view._origin;
  return [
    padding.left + origin[0],
    padding.top + origin[1]
  ];
}

function resizeRenderer(view) {
  var origin = offset(view),
      w = width(view),
      h = height(view);

  view._renderer.background(view._background);
  view._renderer.resize(w, h, origin);
  view._handler.origin(origin);

  view._resizeListeners.forEach(function(handler) {
    try {
      handler(w, h);
    } catch (error) {
      view.error(error);
    }
  });
}


/***/ }),

/***/ "NPSd":
/*!*******************************************!*\
  !*** ./node_modules/vega-util/src/key.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "iMRA");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "PNfb");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./splitAccessPath */ "QGy5");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stringValue */ "2OXM");





/* harmony default export */ __webpack_exports__["default"] = (function(fields, flat) {
  if (fields) {
    fields = flat
      ? Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields).map(function(f) { return f.replace(/\\(.)/g, '$1'); })
      : Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields);
  }

  var fn = !(fields && fields.length)
    ? function() { return ''; }
    : Function('_', 'return \'\'+' +
        fields.map(function(f) {
          return '_[' + (flat
              ? Object(_stringValue__WEBPACK_IMPORTED_MODULE_3__["default"])(f)
              : Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_2__["default"])(f).map(_stringValue__WEBPACK_IMPORTED_MODULE_3__["default"]).join('][')
            ) + ']';
        }).join('+\'|\'+') + ';');

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(fn, fields, 'key');
});


/***/ }),

/***/ "NWkn":
/*!**********************************************************!*\
  !*** ./node_modules/vega-scale/src/invertRangeExtent.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(scale) {
  return function(_) {
    var range = scale.range(),
        lo = _[0],
        hi = _[1],
        min = -1, max, t, i, n;

    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }

    for (i=0, n=range.length; i<n; ++i) {
      if (range[i] >= lo && range[i] <= hi) {
        if (min < 0) min = i;
        max = i;
      }
    }

    if (min < 0) return undefined;

    lo = scale.invertExtent(range[min]);
    hi = scale.invertExtent(range[max]);

    return [
      lo[0] === undefined ? lo[1] : lo[0],
      hi[1] === undefined ? hi[0] : hi[1]
    ];
  }
});


/***/ }),

/***/ "NmNx":
/*!********************************************************!*\
  !*** ./node_modules/vega-scale/src/scaleSequential.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequential; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ "ziQ1");



function sequential(interpolator) {
  var linear = Object(d3_scale__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])(),
      x0 = 0,
      dx = 1,
      clamp = false;

  function update() {
    var domain = linear.domain();
    x0 = domain[0];
    dx = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["peek"])(domain) - x0;
  }

  function scale(x) {
    var t = (x - x0) / dx;
    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
  }

  scale.clamp = function(_) {
    if (arguments.length) {
      clamp = !!_;
      return scale;
    } else {
      return clamp;
    }
  };

  scale.domain = function(_) {
    return arguments.length ? (linear.domain(_), update(), scale) : linear.domain();
  };

  scale.interpolator = function(_) {
    if (arguments.length) {
      interpolator = _;
      return scale;
    } else {
      return interpolator;
    }
  };

  scale.copy = function() {
    return sequential().domain(linear.domain()).clamp(clamp).interpolator(interpolator);
  };

  scale.ticks = function(count) {
    return linear.ticks(count);
  };

  scale.tickFormat = function(count, specifier) {
    return linear.tickFormat(count, specifier);
  };

  scale.nice = function(count) {
    return linear.nice(count), update(), scale;
  };

  return scale;
}


/***/ }),

/***/ "OCqH":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/aggregate.js ***!
  \*******************************************************/
/*! exports provided: AGGREGATE_OPS, isAggregateOp, COUNTING_OPS, isCountingAggregateOp, SUM_OPS, SHARED_DOMAIN_OPS, SHARED_DOMAIN_OP_INDEX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AGGREGATE_OPS", function() { return AGGREGATE_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregateOp", function() { return isAggregateOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COUNTING_OPS", function() { return COUNTING_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCountingAggregateOp", function() { return isCountingAggregateOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SUM_OPS", function() { return SUM_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHARED_DOMAIN_OPS", function() { return SHARED_DOMAIN_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHARED_DOMAIN_OP_INDEX", function() { return SHARED_DOMAIN_OP_INDEX; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");


var AGGREGATE_OP_INDEX = {
    argmax: 1,
    argmin: 1,
    average: 1,
    count: 1,
    distinct: 1,
    max: 1,
    mean: 1,
    median: 1,
    min: 1,
    missing: 1,
    q1: 1,
    q3: 1,
    ci0: 1,
    ci1: 1,
    stderr: 1,
    stdev: 1,
    stdevp: 1,
    sum: 1,
    valid: 1,
    values: 1,
    variance: 1,
    variancep: 1,
};
var AGGREGATE_OPS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(AGGREGATE_OP_INDEX);
function isAggregateOp(a) {
    return !!AGGREGATE_OP_INDEX[a];
}
var COUNTING_OPS = ['count', 'valid', 'missing', 'distinct'];
function isCountingAggregateOp(aggregate) {
    return aggregate && Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(COUNTING_OPS, aggregate);
}
/** Additive-based aggregation operations.  These can be applied to stack. */
var SUM_OPS = [
    'count',
    'sum',
    'distinct',
    'valid',
    'missing'
];
/**
 * Aggregation operators that always produce values within the range [domainMin, domainMax].
 */
var SHARED_DOMAIN_OPS = [
    'mean',
    'average',
    'median',
    'q1',
    'q3',
    'min',
    'max',
];
var SHARED_DOMAIN_OP_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(SHARED_DOMAIN_OPS);
//# sourceMappingURL=aggregate.js.map

/***/ }),

/***/ "OZV6":
/*!******************************************************!*\
  !*** ./node_modules/topojson-client/src/identity.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "OfqV":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseEncode; });
/* harmony import */ var _encode_adjust_spatial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode/adjust-spatial */ "es2w");
/* harmony import */ var _encode_entry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode/entry */ "1/lU");
/* harmony import */ var _encode_rule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encode/rule */ "YEIR");
/* harmony import */ var _encode_set__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encode/set */ "Fqei");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






function parseEncode(encode, marktype, params, scope) {
  var fields = {},
      code = 'var o=item,datum=o.datum,$;',
      channel, enc, value;

  for (channel in encode) {
    enc = encode[channel];
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(enc)) { // rule
      code += Object(_encode_rule__WEBPACK_IMPORTED_MODULE_2__["default"])(channel, enc, scope, params, fields);
    } else {
      value = Object(_encode_entry__WEBPACK_IMPORTED_MODULE_1__["default"])(channel, enc, scope, params, fields);
      code += Object(_encode_set__WEBPACK_IMPORTED_MODULE_3__["default"])('o', channel, value);
    }
  }

  code += Object(_encode_adjust_spatial__WEBPACK_IMPORTED_MODULE_0__["default"])(encode, marktype);
  code += 'return 1;';

  return {
    $expr:   code,
    $fields: Object.keys(fields),
    $output: Object.keys(encode)
  };
}


/***/ }),

/***/ "Oysb":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/isDate.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object.prototype.toString.call(_) === '[object Date]';
});


/***/ }),

/***/ "P+cg":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/multi.js ***!
  \*********************************************************************/
/*! exports provided: signals, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signals", function() { return signals; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selection */ "3eK9");
/* harmony import */ var _transforms_nearest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transforms/nearest */ "ikrb");




function signals(model, selCmpt) {
    var proj = selCmpt.project;
    var datum = _transforms_nearest__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt) ?
        '(item().isVoronoi ? datum.datum : datum)' : 'datum';
    var bins = [];
    var encodings = proj.map(function (p) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(p.channel); }).filter(function (e) { return e; }).join(', ');
    var fields = proj.map(function (p) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(p.field); }).join(', ');
    var values = proj.map(function (p) {
        var channel = p.channel;
        var fieldDef = model.fieldDef(channel);
        // Binned fields should capture extents, for a range test against the raw field.
        return (fieldDef && fieldDef.bin) ? (bins.push(p.field),
            "[" + Object(_util__WEBPACK_IMPORTED_MODULE_1__["accessPathWithDatum"])(model.vgField(channel, {}), datum) + ", " +
                (Object(_util__WEBPACK_IMPORTED_MODULE_1__["accessPathWithDatum"])(model.vgField(channel, { binSuffix: 'end' }), datum) + "]")) :
            "" + Object(_util__WEBPACK_IMPORTED_MODULE_1__["accessPathWithDatum"])(p.field, datum);
    }).join(', ');
    // Only add a discrete selection to the store if a datum is present _and_
    // the interaction isn't occurring on a group mark. This guards against
    // polluting interactive state with invalid values in faceted displays
    // as the group marks are also data-driven. We force the update to account
    // for constant null states but varying toggles (e.g., shift-click in
    // whitespace followed by a click in whitespace; the store should only
    // be cleared on the second click).
    return [{
            name: selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_2__["TUPLE"],
            value: {},
            on: [{
                    events: selCmpt.events,
                    update: "datum && item().mark.marktype !== 'group' ? " +
                        ("{unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_2__["unitName"])(model) + ", encodings: [" + encodings + "], ") +
                        ("fields: [" + fields + "], values: [" + values + "]") +
                        (bins.length ? ', ' + bins.map(function (b) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])('bin_' + b) + ": 1"; }).join(', ') : '') +
                        '} : null',
                    force: true
                }]
        }];
}
var multi = {
    predicate: 'vlMulti',
    scaleDomain: 'vlMultiDomain',
    signals: signals,
    modifyExpr: function (model, selCmpt) {
        var tpl = selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_2__["TUPLE"];
        return tpl + ', ' +
            (selCmpt.resolve === 'global' ? 'null' : "{unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_2__["unitName"])(model) + "}");
    }
};
/* harmony default export */ __webpack_exports__["default"] = (multi);
//# sourceMappingURL=multi.js.map

/***/ }),

/***/ "P9ZJ":
/*!*********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/vega.schema.js ***!
  \*********************************************************/
/*! exports provided: isVgSignalRef, isVgRangeStep, isDataRefUnionedDomain, isFieldRefUnionDomain, isDataRefDomain, isSignalRefDomain, VG_MARK_CONFIGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVgSignalRef", function() { return isVgSignalRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVgRangeStep", function() { return isVgRangeStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataRefUnionedDomain", function() { return isDataRefUnionedDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldRefUnionDomain", function() { return isFieldRefUnionDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataRefDomain", function() { return isDataRefDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSignalRefDomain", function() { return isSignalRefDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_MARK_CONFIGS", function() { return VG_MARK_CONFIGS; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");


function isVgSignalRef(o) {
    return !!o['signal'];
}
function isVgRangeStep(range) {
    return !!range['step'];
}
function isDataRefUnionedDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'fields' in domain && !('data' in domain);
    }
    return false;
}
function isFieldRefUnionDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'fields' in domain && 'data' in domain;
    }
    return false;
}
function isDataRefDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'field' in domain && 'data' in domain;
    }
    return false;
}
function isSignalRefDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'signal' in domain;
    }
    return false;
}
var VG_MARK_CONFIG_INDEX = {
    opacity: 1,
    fill: 1,
    fillOpacity: 1,
    stroke: 1,
    strokeCap: 1,
    strokeWidth: 1,
    strokeOpacity: 1,
    strokeDash: 1,
    strokeDashOffset: 1,
    strokeJoin: 1,
    strokeMiterLimit: 1,
    size: 1,
    shape: 1,
    interpolate: 1,
    tension: 1,
    orient: 1,
    align: 1,
    baseline: 1,
    text: 1,
    dir: 1,
    dx: 1,
    dy: 1,
    ellipsis: 1,
    limit: 1,
    radius: 1,
    theta: 1,
    angle: 1,
    font: 1,
    fontSize: 1,
    fontWeight: 1,
    fontStyle: 1,
    cursor: 1,
    href: 1,
    tooltip: 1,
    cornerRadius: 1,
};
var VG_MARK_CONFIGS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(VG_MARK_CONFIG_INDEX);
//# sourceMappingURL=vega.schema.js.map

/***/ }),

/***/ "PJcO":
/*!************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "J29t");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, scale, config, userEncode) {
  var zero = {value: 0},
      vertical = Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["isVertical"])(spec, config.gradientDirection),
      thickness = Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["gradientThickness"])(spec, config),
      length = Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["gradientLength"])(spec, config),
      encode, enter, start, stop, width, height;

  if (vertical) {
    start = [0, 1];
    stop = [0, 0];
    width = thickness;
    height = length;
  } else {
    start = [0, 0];
    stop = [1, 0];
    width = length;
    height = thickness;
  }

  encode = {
    enter: enter = {
      opacity: zero,
      x: zero,
      y: zero,
      width: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["encoder"])(width),
      height: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["encoder"])(height)
    },
    update: Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["extend"])({}, enter, {
      opacity: {value: 1},
      fill: {gradient: scale, start: start, stop: stop}
    }),
    exit: {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["addEncode"])(encode, 'stroke',      Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["lookup"])('gradientStrokeColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["addEncode"])(encode, 'strokeWidth', Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["lookup"])('gradientStrokeWidth', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["addEncode"])(encode, 'opacity',     Object(_guide_util__WEBPACK_IMPORTED_MODULE_1__["lookup"])('gradientOpacity', spec, config), 'update');

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_0__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_2__["RectMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_3__["LegendGradientRole"], null, undefined, undefined, encode, userEncode);
});


/***/ }),

/***/ "PJvI":
/*!**********************************************************!*\
  !*** ./node_modules/vega-transforms/src/CountPattern.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CountPattern; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Count regexp-defined pattern occurrences in a text field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - An accessor for the text field.
 * @param {string} [params.pattern] - RegExp string defining the text pattern.
 * @param {string} [params.case] - One of 'lower', 'upper' or null (mixed) case.
 * @param {string} [params.stopwords] - RegExp string of words to ignore.
 */
function CountPattern(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

CountPattern.Definition = {
  "type": "CountPattern",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "case", "type": "enum", "values": ["upper", "lower", "mixed"], "default": "mixed" },
    { "name": "pattern", "type": "string", "default": "[\\w\"]+" },
    { "name": "stopwords", "type": "string", "default": "" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["text", "count"] }
  ]
};

function tokenize(text, tcase, match) {
  switch (tcase) {
    case 'upper': text = text.toUpperCase(); break;
    case 'lower': text = text.toLowerCase(); break;
  }
  return text.match(match);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(CountPattern, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  function process(update) {
    return function(tuple) {
      var tokens = tokenize(get(tuple), _.case, match) || [], t;
      for (var i=0, n=tokens.length; i<n; ++i) {
        if (!stop.test(t = tokens[i])) update(t);
      }
    };
  }

  var init = this._parameterCheck(_, pulse),
      counts = this._counts,
      match = this._match,
      stop = this._stop,
      get = _.field,
      as = _.as || ['text', 'count'],
      add = process(function(t) { counts[t] = 1 + (counts[t] || 0); }),
      rem = process(function(t) { counts[t] -= 1; });

  if (init) {
    pulse.visit(pulse.SOURCE, add);
  } else {
    pulse.visit(pulse.ADD, add);
    pulse.visit(pulse.REM, rem);
  }

  return this._finish(pulse, as); // generate output tuples
};

prototype._parameterCheck = function(_, pulse) {
  var init = false;

  if (_.modified('stopwords') || !this._stop) {
    this._stop = new RegExp('^' + (_.stopwords || '') + '$', 'i');
    init = true;
  }

  if (_.modified('pattern') || !this._match) {
    this._match = new RegExp((_.pattern || '[\\w\']+'), 'g');
    init = true;
  }

  if (_.modified('field') || pulse.modified(_.field.fields)) {
    init = true;
  }

  if (init) this._counts = {};
  return init;
};

prototype._finish = function(pulse, as) {
  var counts = this._counts,
      tuples = this._tuples || (this._tuples = {}),
      text = as[0],
      count = as[1],
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      w, t, c;

  for (w in counts) {
    t = tuples[w];
    c = counts[w] || 0;
    if (!t && c) {
      tuples[w] = (t = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({}));
      t[text] = w;
      t[count] = c;
      out.add.push(t);
    } else if (c === 0) {
      if (t) out.rem.push(t);
      counts[w] = null;
      tuples[w] = null;
    } else if (t[count] !== c) {
      t[count] = c;
      out.mod.push(t);
    }
  }

  return out.modifies(as);
};


/***/ }),

/***/ "PNfb":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/array.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "W2Gv");


/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ != null ? (Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : [_]) : [];
});


/***/ }),

/***/ "PNr2":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-group.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");


/* harmony default export */ __webpack_exports__["default"] = (function(role, style, name, dataRef, interactive, encode, marks, layout) {
  return {
    type: _marks_marktypes__WEBPACK_IMPORTED_MODULE_0__["GroupMark"],
    name: name,
    role: role,
    style: style,
    from: dataRef,
    interactive: interactive || false,
    encode: encode,
    marks: marks,
    layout: layout
  };
});


/***/ }),

/***/ "PQn1":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/metadata.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  'version': '1.1',
  'xmlns': 'http://www.w3.org/2000/svg',
  'xmlns:xlink': 'http://www.w3.org/1999/xlink'
});

/***/ }),

/***/ "PSz4":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Relay.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Relay; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Relays a data stream between data processing pipelines.
 * If the derive parameter is set, this transform will create derived
 * copies of observed tuples. This provides derived data streams in which
 * modifications to the tuples do not pollute an upstream data source.
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.derive=false] - Boolean flag indicating if
 *   the transform should make derived copies of incoming tuples.
 * @constructor
 */
function Relay(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Relay, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out, lut;

  if (this.value) {
    lut = this.value;
  } else {
    out = pulse = pulse.addAll();
    lut = this.value = {};
  }

  if (_.derive) {
    out = pulse.fork(pulse.NO_SOURCE);

    pulse.visit(pulse.REM, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
      out.rem.push(lut[id]);
      lut[id] = null;
    });

    pulse.visit(pulse.ADD, function(t) {
      var dt = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["derive"])(t);
      lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = dt;
      out.add.push(dt);
    });

    pulse.visit(pulse.MOD, function(t) {
      out.mod.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["rederive"])(t, lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]));
    });
  }

  return out;
};


/***/ }),

/***/ "PkT2":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/encode-util.js ***!
  \********************************************************************/
/*! exports provided: encoder, addEncode, extendEncode, encoders, has */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encoder", function() { return encoder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEncode", function() { return addEncode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendEncode", function() { return extendEncode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encoders", function() { return encoders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encode */ "OfqV");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




function encoder(_) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(_) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, _) : {value: _};
}

function addEncode(object, name, value, set) {
  if (value != null) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
      object.update[name] = value;
    } else {
      object[set || 'enter'][name] = {value: value};
    }
    // object[name] = isObject(value) && !isArray(value) ? value : {value: value};
    return 1;
  } else {
    return 0;
  }
}

function extendEncode(encode, extra, skip) {
  for (var name in extra) {
    if (skip && skip.hasOwnProperty(name)) continue;
    encode[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(encode[name] || {}, extra[name]);
  }
  return encode;
}

function encoders(encode, type, role, style, scope, params) {
  var enc, key;
  params = params || {};
  params.encoders = {$encode: (enc = {})};

  encode = applyDefaults(encode, type, role, style, scope.config);

  for (key in encode) {
    enc[key] = Object(_encode__WEBPACK_IMPORTED_MODULE_0__["default"])(encode[key], type, params, scope);
  }

  return params;
}

function applyDefaults(encode, type, role, style, config) {
  var enter = {}, key, skip, props;

  // ignore legend and axis
  if (role == 'legend' || String(role).indexOf('axis') === 0) {
    role = null;
  }

  // resolve mark config
  props = role === _marks_roles__WEBPACK_IMPORTED_MODULE_1__["FrameRole"] ? config.group
    : (role === _marks_roles__WEBPACK_IMPORTED_MODULE_1__["MarkRole"]) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, config.mark, config[type])
    : null;

  for (key in props) {
    // do not apply defaults if relevant fields are defined
    skip = has(key, encode)
      || (key === 'fill' || key === 'stroke')
      && (has('fill', encode) || has('stroke', encode));

    if (!skip) enter[key] = defaultEncode(props[key]);
  }

  // resolve styles, apply with increasing precedence
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(style).forEach(function(name) {
    var props = config.style && config.style[name];
    for (var key in props) {
      if (!has(key, encode)) {
        enter[key] = defaultEncode(props[key]);
      }
    }
  });

  encode = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, encode); // defensive copy
  encode.enter = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(enter, encode.enter);

  return encode;
}

function defaultEncode(value) {
  return value && value.signal
    ? {signal: value.signal}
    : {value: value};
}

function has(key, encode) {
  return encode && (
    (encode.enter && encode.enter[key]) ||
    (encode.update && encode.update[key])
  );
}


/***/ }),

/***/ "Px89":
/*!*******************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient-labels.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "+JJI");








var alignExpr = 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"] + '<=0?"left"'
  + ':datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"] + '>=1?"right":"center"';

var baselineExpr = 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"] + '<=0?"bottom"'
  + ':datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"] + '>=1?"top":"middle"';

/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var zero = {value: 0},
      vertical = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["isVertical"])(spec, config.gradientDirection),
      thickness = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["gradientThickness"])(spec, config)),
      length = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["gradientLength"])(spec, config),
      overlap = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelOverlap', spec, config),
      encode, enter, update, u, v, adjust = '';

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1},
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]}
    },
    exit: {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'font',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFont', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontSize',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontWeight',  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fillOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelOpacity', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'limit',       Object(_util__WEBPACK_IMPORTED_MODULE_6__["value"])(spec.labelLimit, config.gradientLabelLimit));

  if (vertical) {
    enter.align = {value: 'left'};
    enter.baseline = update.baseline = {signal: baselineExpr};
    u = 'y'; v = 'x'; adjust = '1-';
  } else {
    enter.align = update.align = {signal: alignExpr};
    enter.baseline = {value: 'top'};
    u = 'x'; v = 'y';
  }

  enter[u] = update[u] = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"], mult: length};

  enter[v] = update[v] = thickness;
  thickness.offset = Object(_util__WEBPACK_IMPORTED_MODULE_6__["value"])(spec.labelOffset, config.gradientLabelOffset) || 0;

  spec = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"], _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
  if (overlap) spec.overlap = {method: overlap, order:  'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Index"]};
  return spec;
});


/***/ }),

/***/ "Q5ZR":
/*!*************************************************!*\
  !*** ./node_modules/vega-scale/src/palettes.js ***!
  \*************************************************/
/*! exports provided: category20, category20b, category20c, tableau10, tableau20, blueOrange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "category20", function() { return category20; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "category20b", function() { return category20b; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "category20c", function() { return category20c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tableau10", function() { return tableau10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tableau20", function() { return tableau20; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blueOrange", function() { return blueOrange; });
function colors(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
}

var category20 = colors(
  '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5'
);

var category20b = colors(
  '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6'
);

var category20c = colors(
  '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9'
);

var tableau10 = colors(
  '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac'
);

var tableau20 = colors(
  '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5'
);

var blueOrange = new Array(3).concat(
  "67a9cff7f7f7f1a340",
  "0571b092c5defdb863e66101",
  "0571b092c5def7f7f7fdb863e66101",
  "2166ac67a9cfd1e5f0fee0b6f1a340b35806",
  "2166ac67a9cfd1e5f0f7f7f7fee0b6f1a340b35806",
  "2166ac4393c392c5ded1e5f0fee0b6fdb863e08214b35806",
  "2166ac4393c392c5ded1e5f0f7f7f7fee0b6fdb863e08214b35806",
  "0530612166ac4393c392c5ded1e5f0fee0b6fdb863e08214b358067f3b08",
  "0530612166ac4393c392c5ded1e5f0f7f7f7fee0b6fdb863e08214b358067f3b08"
).map(colors);


/***/ }),

/***/ "Q7hp":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/bar.js ***!
  \**************************************************************/
/*! exports provided: bar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bar", function() { return bar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./valueref */ "vfFY");









var bar = {
    vgMark: 'rect',
    encodeEntry: function (model) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_7__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), x(model), y(model));
    }
};
function x(model) {
    var config = model.config, encoding = model.encoding, markDef = model.markDef, width = model.width;
    var orient = markDef.orient;
    var sizeDef = encoding.size;
    var xDef = encoding.x;
    var x2Def = encoding.x2;
    var xScaleName = model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["X"]);
    var xScale = model.getScaleComponent(_channel__WEBPACK_IMPORTED_MODULE_2__["X"]);
    // x, x2, and width -- we must specify two of these in all conditions
    if (orient === 'horizontal' || x2Def) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_7__["pointPosition"]('x', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_7__["pointPosition2"](model, 'zeroOrMin', 'x2'));
    }
    else { // vertical
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(xDef)) {
            var xScaleType = xScale.get('type');
            if (xDef.bin && !sizeDef && !Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(xScaleType)) {
                return _mixins__WEBPACK_IMPORTED_MODULE_7__["binnedPosition"](xDef, 'x', model.scaleName('x'), markDef.binSpacing === undefined ? config.bar.binSpacing : markDef.binSpacing, xScale.get('reverse'));
            }
            else {
                if (xScaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
                    return _mixins__WEBPACK_IMPORTED_MODULE_7__["bandPosition"](xDef, 'x', model);
                }
            }
        }
        // sized bin, normal point-ordinal axis, quantitative x-axis, or no x
        return _mixins__WEBPACK_IMPORTED_MODULE_7__["centeredBandPosition"]('x', model, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _valueref__WEBPACK_IMPORTED_MODULE_8__["mid"](width)), defaultSizeRef(markDef, xScaleName, xScale, config));
    }
}
function y(model) {
    var config = model.config, encoding = model.encoding, height = model.height, markDef = model.markDef;
    var orient = markDef.orient;
    var sizeDef = encoding.size;
    var yDef = encoding.y;
    var y2Def = encoding.y2;
    var yScaleName = model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["Y"]);
    var yScale = model.getScaleComponent(_channel__WEBPACK_IMPORTED_MODULE_2__["Y"]);
    // y, y2 & height -- we must specify two of these in all conditions
    if (orient === 'vertical' || y2Def) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_7__["pointPosition"]('y', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_7__["pointPosition2"](model, 'zeroOrMin', 'y2'));
    }
    else {
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(yDef)) {
            var yScaleType = yScale.get('type');
            if (yDef.bin && !sizeDef && !Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(yScaleType)) {
                return _mixins__WEBPACK_IMPORTED_MODULE_7__["binnedPosition"](yDef, 'y', model.scaleName('y'), markDef.binSpacing === undefined ? config.bar.binSpacing : markDef.binSpacing, yScale.get('reverse'));
            }
            else if (yScaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
                return _mixins__WEBPACK_IMPORTED_MODULE_7__["bandPosition"](yDef, 'y', model);
            }
        }
        return _mixins__WEBPACK_IMPORTED_MODULE_7__["centeredBandPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_8__["mid"](height), defaultSizeRef(markDef, yScaleName, yScale, config));
    }
}
function defaultSizeRef(markDef, scaleName, scale, config) {
    if (markDef.size !== undefined) {
        return { value: markDef.size };
    }
    else if (config.bar.discreteBandSize) {
        return { value: config.bar.discreteBandSize };
    }
    else if (scale) {
        var scaleType = scale.get('type');
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].POINT) {
            var scaleRange = scale.get('range');
            if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_6__["isVgRangeStep"])(scaleRange) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(scaleRange.step)) {
                return { value: scaleRange.step - 1 };
            }
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL);
        }
        else if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
            return _valueref__WEBPACK_IMPORTED_MODULE_8__["bandRef"](scaleName);
        }
        else { // non-ordinal scale
            return { value: config.bar.continuousBandSize };
        }
    }
    else if (config.scale.rangeStep && config.scale.rangeStep !== null) {
        return { value: config.scale.rangeStep - 1 };
    }
    return { value: 20 };
}
//# sourceMappingURL=bar.js.map

/***/ }),

/***/ "QDuA":
/*!*************************************************!*\
  !*** ./node_modules/vega-transforms/src/Key.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Key; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Generates a key function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string>} params.fields - The field name(s) for the key function.
 * @param {boolean} params.flat - A boolean flag indicating if the field names
 *  should be treated as flat property names, side-stepping nested field
 *  lookups normally indicated by dot or bracket notation.
 */
function Key(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Key, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified()) ? this.value : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["key"])(_.fields, _.flat);
}


/***/ }),

/***/ "QGy5":
/*!*******************************************************!*\
  !*** ./node_modules/vega-util/src/splitAccessPath.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "3dAl");


/* harmony default export */ __webpack_exports__["default"] = (function(p) {
  var path = [],
      q = null,
      b = 0,
      n = p.length,
      s = '',
      i, j, c;

  p = p + '';

  function push() {
    path.push(s + p.substring(i, j));
    s = '';
    i = j + 1;
  }

  for (i=j=0; j<n; ++j) {
    c = p[j];
    if (c === '\\') {
      s += p.substring(i, j);
      i = ++j;
    } else if (c === q) {
      push();
      q = null;
      b = -1;
    } else if (q) {
      continue;
    } else if (i === b && c === '"') {
      i = j + 1;
      q = c;
    } else if (i === b && c === "'") {
      i = j + 1;
      q = c;
    } else if (c === '.' && !b) {
      if (j > i) {
        push();
      } else {
        i = j + 1;
      }
    } else if (c === '[') {
      if (j > i) push();
      b = i = j + 1;
    } else if (c === ']') {
      if (!b) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing open bracket: ' + p);
      if (b > 0) push();
      b = 0;
      i = j + 1;
    }
  }

  if (b) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing closing bracket: ' + p);
  if (q) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing closing quote: ' + p);

  if (j > i) {
    j++;
    push();
  }

  return path;
});


/***/ }),

/***/ "QOGX":
/*!*******************************************************!*\
  !*** ./node_modules/vega-expression/src/constants.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  NaN:       'NaN',
  E:         'Math.E',
  LN2:       'Math.LN2',
  LN10:      'Math.LN10',
  LOG2E:     'Math.LOG2E',
  LOG10E:    'Math.LOG10E',
  PI:        'Math.PI',
  SQRT1_2:   'Math.SQRT1_2',
  SQRT2:     'Math.SQRT2',
  MIN_VALUE: 'Number.MIN_VALUE',
  MAX_VALUE: 'Number.MAX_VALUE'
});


/***/ }),

/***/ "QXae":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/stroke.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "TVcu");


var Empty = [];

/* harmony default export */ __webpack_exports__["default"] = (function(context, item, opacity) {
  var lw = (lw = item.strokeWidth) != null ? lw : 1;

  if (lw <= 0) return false;

  opacity *= (item.strokeOpacity==null ? 1 : item.strokeOpacity);
  if (opacity > 0) {
    context.globalAlpha = opacity;
    context.strokeStyle = Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, item.stroke);

    context.lineWidth = lw;
    context.lineCap = item.strokeCap || 'butt';
    context.lineJoin = item.strokeJoin || 'miter';
    context.miterLimit = item.strokeMiterLimit || 10;

    if (context.setLineDash) {
      context.setLineDash(item.strokeDash || Empty);
      context.lineDashOffset = item.strokeDashOffset || 0;
    }
    return true;
  } else {
    return false;
  }
});


/***/ }),

/***/ "QXll":
/*!**************************************************!*\
  !*** ./node_modules/vega-view/src/initialize.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bind */ "fv2O");
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ "ImxY");
/* harmony import */ var _initialize_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initialize-renderer */ "3tdj");
/* harmony import */ var _initialize_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initialize-handler */ "R+8+");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");






/* harmony default export */ __webpack_exports__["default"] = (function(el, elBind) {
  var view = this,
      type = view._renderType,
      module = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__["renderModule"])(type),
      Handler, Renderer;

  // containing dom element
  el = view._el = el ? lookup(view, el) : null;

  // select appropriate renderer & handler
  if (!module) view.error('Unrecognized renderer type: ' + type);
  Handler = module.handler || vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__["CanvasHandler"];
  Renderer = (el ? module.renderer : module.headless);

  // initialize renderer and input handler
  view._renderer = !Renderer ? null
    : Object(_initialize_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])(view, view._renderer, el, Renderer);
  view._handler = Object(_initialize_handler__WEBPACK_IMPORTED_MODULE_3__["default"])(view, view._handler, el, Handler);
  view._redraw = true;

  // initialize signal bindings
  if (el) {
    elBind = elBind ? lookup(view, elBind)
      : el.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_1__["default"])('div', {'class': 'vega-bindings'}));

    view._bind.forEach(function(_) {
      if (_.param.element) {
        _.element = lookup(view, _.param.element);
      }
    });

    view._bind.forEach(function(_) {
      Object(_bind__WEBPACK_IMPORTED_MODULE_0__["default"])(view, _.element || elBind, _);
    });
  }

  return view;
});

function lookup(view, el) {
  if (typeof el === 'string') {
    if (typeof document !== 'undefined') {
      el = document.querySelector(el);
      if (!el) {
        view.error('Signal bind element not found: ' + el);
        return null;
      }
    } else {
      view.error('DOM document instance not found.');
      return null;
    }
  }
  if (el) {
    try {
      el.innerHTML = '';
    } catch (e) {
      el = null;
      view.error(e);
    }
  }
  return el;
}


/***/ }),

/***/ "Qcwi":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/rect.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/canvas/draw */ "mwYA");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");





function attr(emit, item) {
  emit('d', Object(_path_shapes__WEBPACK_IMPORTED_MODULE_1__["rectangle"])(null, item));
}

function bound(bounds, item) {
  var x, y;
  return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds.set(
    x = item.x || 0,
    y = item.y || 0,
    (x + item.width) || 0,
    (y + item.height) || 0
  ), item);
}

function draw(context, item) {
  context.beginPath();
  Object(_path_shapes__WEBPACK_IMPORTED_MODULE_1__["rectangle"])(context, item);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'rect',
  tag:    'path',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_2__["drawAll"])(draw),
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__["pickPath"])(draw)
});


/***/ }),

/***/ "QgY1":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/data.js ***!
  \*****************************************************************/
/*! exports provided: data, dataVisitor, indata, indataVisitor, setdata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataVisitor", function() { return dataVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indata", function() { return indata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indataVisitor", function() { return indataVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setdata", function() { return setdata; });
/* harmony import */ var _ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast */ "bcOo");
/* harmony import */ var _prefixes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prefixes */ "bnRp");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




function data(name) {
  var data = this.context.data[name];
  return data ? data.values.value : [];
}

function dataVisitor(name, args, scope, params) {
  if (args[0].type !== _ast__WEBPACK_IMPORTED_MODULE_0__["Literal"]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('First argument to data functions must be a string literal.');
  }

  var data = args[0].value,
      dataName = _prefixes__WEBPACK_IMPORTED_MODULE_1__["dataPrefix"] + data;

  if (!params.hasOwnProperty(dataName)) {
    params[dataName] = scope.getData(data).tuplesRef();
  }
}

function indata(name, field, value) {
  var index = this.context.data[name]['index:' + field],
      entry = index ? index.value.get(value) : undefined;
  return entry ? entry.count : entry;
}

function indataVisitor(name, args, scope, params) {
  if (args[0].type !== _ast__WEBPACK_IMPORTED_MODULE_0__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('First argument to indata must be a string literal.');
  if (args[1].type !== _ast__WEBPACK_IMPORTED_MODULE_0__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Second argument to indata must be a string literal.');

  var data = args[0].value,
      field = args[1].value,
      indexName = _prefixes__WEBPACK_IMPORTED_MODULE_1__["indexPrefix"] + field;

  if (!params.hasOwnProperty(indexName)) {
    params[indexName] = scope.getData(data).indataRef(scope, field);
  }
}

function setdata(name, tuples) {
  var df = this.context.dataflow,
      data = this.context.data[name],
      input = data.input;

  df.pulse(input, df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_2__["truthy"]).insert(tuples));
  return 1;
}


/***/ }),

/***/ "QzCd":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/datetime.js ***!
  \******************************************************/
/*! exports provided: isDateTime, MONTHS, SHORT_MONTHS, DAYS, SHORT_DAYS, dateTimeExpr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDateTime", function() { return isDateTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONTHS", function() { return MONTHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHORT_MONTHS", function() { return SHORT_MONTHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DAYS", function() { return DAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHORT_DAYS", function() { return SHORT_DAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateTimeExpr", function() { return dateTimeExpr; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "Hc3/");
// DateTime definition object



/*
 * A designated year that starts on Sunday.
 */
var SUNDAY_YEAR = 2006;
function isDateTime(o) {
    return !!o && (!!o.year || !!o.quarter || !!o.month || !!o.date || !!o.day ||
        !!o.hours || !!o.minutes || !!o.seconds || !!o.milliseconds);
}
var MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];
var SHORT_MONTHS = MONTHS.map(function (m) { return m.substr(0, 3); });
var DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
var SHORT_DAYS = DAYS.map(function (d) { return d.substr(0, 3); });
function normalizeQuarter(q) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(q)) {
        if (q > 4) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('quarter', q));
        }
        // We accept 1-based quarter, so need to readjust to 0-based quarter
        return (q - 1) + '';
    }
    else {
        // Invalid quarter
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('quarter', q));
    }
}
function normalizeMonth(m) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(m)) {
        // We accept 1-based month, so need to readjust to 0-based month
        return (m - 1) + '';
    }
    else {
        var lowerM = m.toLowerCase();
        var monthIndex = MONTHS.indexOf(lowerM);
        if (monthIndex !== -1) {
            return monthIndex + ''; // 0 for january, ...
        }
        var shortM = lowerM.substr(0, 3);
        var shortMonthIndex = SHORT_MONTHS.indexOf(shortM);
        if (shortMonthIndex !== -1) {
            return shortMonthIndex + '';
        }
        // Invalid month
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('month', m));
    }
}
function normalizeDay(d) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(d)) {
        // mod so that this can be both 0-based where 0 = sunday
        // and 1-based where 7=sunday
        return (d % 7) + '';
    }
    else {
        var lowerD = d.toLowerCase();
        var dayIndex = DAYS.indexOf(lowerD);
        if (dayIndex !== -1) {
            return dayIndex + ''; // 0 for january, ...
        }
        var shortD = lowerD.substr(0, 3);
        var shortDayIndex = SHORT_DAYS.indexOf(shortD);
        if (shortDayIndex !== -1) {
            return shortDayIndex + '';
        }
        // Invalid day
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('day', d));
    }
}
/**
 * Return Vega Expression for a particular date time.
 * @param d
 * @param normalize whether to normalize quarter, month, day.
 */
function dateTimeExpr(d, normalize) {
    if (normalize === void 0) { normalize = false; }
    var units = [];
    if (normalize && d.day !== undefined) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(d).length > 1) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].droppedDay(d));
            d = Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(d);
            delete d.day;
        }
    }
    if (d.year !== undefined) {
        units.push(d.year);
    }
    else if (d.day !== undefined) {
        // Set year to 2006 for working with day since January 1 2006 is a Sunday
        units.push(SUNDAY_YEAR);
    }
    else {
        units.push(0);
    }
    if (d.month !== undefined) {
        var month = normalize ? normalizeMonth(d.month) : d.month;
        units.push(month);
    }
    else if (d.quarter !== undefined) {
        var quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;
        units.push(quarter + '*3');
    }
    else {
        units.push(0); // months start at zero in JS
    }
    if (d.date !== undefined) {
        units.push(d.date);
    }
    else if (d.day !== undefined) {
        // HACK: Day only works as a standalone unit
        // This is only correct because we always set year to 2006 for day
        var day = normalize ? normalizeDay(d.day) : d.day;
        units.push(day + '+1');
    }
    else {
        units.push(1); // Date starts at 1 in JS
    }
    // Note: can't use TimeUnit enum here as importing it will create
    // circular dependency problem!
    for (var _i = 0, _a = ['hours', 'minutes', 'seconds', 'milliseconds']; _i < _a.length; _i++) {
        var timeUnit = _a[_i];
        if (d[timeUnit] !== undefined) {
            units.push(d[timeUnit]);
        }
        else {
            units.push(0);
        }
    }
    if (d.utc) {
        return "utc(" + units.join(', ') + ")";
    }
    else {
        return "datetime(" + units.join(', ') + ")";
    }
}
//# sourceMappingURL=datetime.js.map

/***/ }),

/***/ "R+8+":
/*!**********************************************************!*\
  !*** ./node_modules/vega-view/src/initialize-handler.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "NNLh");
/* harmony import */ var _trap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trap */ "v+OT");



/* harmony default export */ __webpack_exports__["default"] = (function(view, prevHandler, el, constructor) {
  // instantiate scenegraph handler
  var handler = new constructor(view.loader(), Object(_trap__WEBPACK_IMPORTED_MODULE_1__["default"])(view, view.tooltip()))
    .scene(view.scenegraph().root)
    .initialize(el, Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view), view);

  // transfer event handlers
  if (prevHandler) {
    prevHandler.handlers().forEach(function(h) {
      handler.on(h.type, h.handler);
    });
  }

  return handler;
});


/***/ }),

/***/ "R+vW":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/clip.js ***!
  \***********************************************************/
/*! exports provided: resetSVGClipId, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return resetSVGClipId; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var clip_id = 1;

function resetSVGClipId() {
  clip_id = 1;
}

/* harmony default export */ __webpack_exports__["default"] = (function(renderer, item, size) {
  var clip = item.clip,
      defs = renderer._defs,
      id = item.clip_id || (item.clip_id = 'clip' + clip_id++),
      c = defs.clipping[id] || (defs.clipping[id] = {id: id});

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(clip)) {
    c.path = clip(null);
  } else {
    c.width = size.width || 0;
    c.height = size.height || 0;
  }

  return 'url(#' + id + ')';
});


/***/ }),

/***/ "R6hj":
/*!****************************************************!*\
  !*** ./node_modules/vega-scale/src/interpolate.js ***!
  \****************************************************/
/*! exports provided: interpolateRange, scaleFraction, interpolate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return interpolateRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleFraction", function() { return scaleFraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return interpolate; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "pD2Y");



function interpolateRange(interpolator, range) {
  var start = range[0],
      span = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["peek"])(range) - start;
  return function(i) { return interpolator(start + i * span); };
}

function scaleFraction(scale, min, max) {
  var delta = max - min;
  return !delta ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["constant"])(0)
    : scale.type === 'linear' || scale.type === 'sequential'
      ? function(_) { return (_ - min) / delta; }
      : scale.copy().domain([min, max]).range([0, 1]).interpolate(lerp);
}

function lerp(a, b) {
  var span = b - a;
  return function(i) { return a + i * span; }
}

function interpolate(type, gamma) {
  var interp = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[method(type)];
  return (gamma != null && interp && interp.gamma)
    ? interp.gamma(gamma)
    : interp;
}

function method(type) {
  return 'interpolate' + type.toLowerCase()
    .split('-')
    .map(function(s) { return s[0].toUpperCase() + s.slice(1); })
    .join('');
}


/***/ }),

/***/ "RT9J":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/rect.js ***!
  \***************************************************************/
/*! exports provided: rect, x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rect", function() { return rect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mixins */ "NITR");







var rect = {
    vgMark: 'rect',
    encodeEntry: function (model) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_6__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), x(model), y(model));
    }
};
function x(model) {
    var xDef = model.encoding.x;
    var x2Def = model.encoding.x2;
    var xScale = model.getScaleComponent(_channel__WEBPACK_IMPORTED_MODULE_1__["X"]);
    var xScaleType = xScale ? xScale.get('type') : undefined;
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(xDef) && xDef.bin && !x2Def) {
        return _mixins__WEBPACK_IMPORTED_MODULE_6__["binnedPosition"](xDef, 'x', model.scaleName('x'), 0, xScale.get('reverse'));
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(xDef) && xScale && Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(xScaleType)) {
        /* istanbul ignore else */
        if (xScaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
            return _mixins__WEBPACK_IMPORTED_MODULE_6__["bandPosition"](xDef, 'x', model);
        }
        else {
            // We don't support rect mark with point/ordinal scale
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_3__["message"].scaleTypeNotWorkWithMark(_mark__WEBPACK_IMPORTED_MODULE_4__["RECT"], xScaleType));
        }
    }
    else { // continuous scale or no scale
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_6__["pointPosition"]('x', model, 'zeroOrMax'), _mixins__WEBPACK_IMPORTED_MODULE_6__["pointPosition2"](model, 'zeroOrMin', 'x2'));
    }
}
function y(model) {
    var yDef = model.encoding.y;
    var y2Def = model.encoding.y2;
    var yScale = model.getScaleComponent(_channel__WEBPACK_IMPORTED_MODULE_1__["Y"]);
    var yScaleType = yScale ? yScale.get('type') : undefined;
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(yDef) && yDef.bin && !y2Def) {
        return _mixins__WEBPACK_IMPORTED_MODULE_6__["binnedPosition"](yDef, 'y', model.scaleName('y'), 0, yScale.get('reverse'));
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(yDef) && yScale && Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(yScaleType)) {
        /* istanbul ignore else */
        if (yScaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
            return _mixins__WEBPACK_IMPORTED_MODULE_6__["bandPosition"](yDef, 'y', model);
        }
        else {
            // We don't support rect mark with point/ordinal scale
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_3__["message"].scaleTypeNotWorkWithMark(_mark__WEBPACK_IMPORTED_MODULE_4__["RECT"], yScaleType));
        }
    }
    else { // continuous scale or no scale
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_6__["pointPosition"]('y', model, 'zeroOrMax'), _mixins__WEBPACK_IMPORTED_MODULE_6__["pointPosition2"](model, 'zeroOrMin', 'y2'));
    }
}
//# sourceMappingURL=rect.js.map

/***/ }),

/***/ "RiFC":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/transform.js ***!
  \*************************************************/
/*! exports provided: panLinear, panLog, panPow, zoomLinear, zoomLog, zoomPow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return panLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return panLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return panPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return zoomLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return zoomLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return zoomPow; });
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessors */ "C2wT");
/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peek */ "3pby");
/* harmony import */ var _toNumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toNumber */ "2dk+");




function exp(sign) {
  return function(x) { return sign * Math.exp(x); };
}

function log(sign) {
  return function(x) { return Math.log(sign * x); };
}

function pow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function pan(domain, delta, lift, ground) {
  var d0 = lift(domain[0]),
      d1 = lift(Object(_peek__WEBPACK_IMPORTED_MODULE_1__["default"])(domain)),
      dd = (d1 - d0) * delta;

  return [
    ground(d0 - dd),
    ground(d1 - dd)
  ];
}

function panLinear(domain, delta) {
  return pan(domain, delta, _toNumber__WEBPACK_IMPORTED_MODULE_2__["default"], _accessors__WEBPACK_IMPORTED_MODULE_0__["identity"]);
}

function panLog(domain, delta) {
  var sign = Math.sign(domain[0]);
  return pan(domain, delta, log(sign), exp(sign));
}

function panPow(domain, delta, exponent) {
  return pan(domain, delta, pow(exponent), pow(1/exponent));
}

function zoom(domain, anchor, scale, lift, ground) {
  var d0 = lift(domain[0]),
      d1 = lift(Object(_peek__WEBPACK_IMPORTED_MODULE_1__["default"])(domain)),
      da = anchor != null ? lift(anchor) : (d0 + d1) / 2;

  return [
    ground(da + (d0 - da) * scale),
    ground(da + (d1 - da) * scale)
  ];
}

function zoomLinear(domain, anchor, scale) {
  return zoom(domain, anchor, scale, _toNumber__WEBPACK_IMPORTED_MODULE_2__["default"], _accessors__WEBPACK_IMPORTED_MODULE_0__["identity"]);
}

function zoomLog(domain, anchor, scale) {
  var sign = Math.sign(domain[0]);
  return zoom(domain, anchor, scale, log(sign), exp(sign));
}

function zoomPow(domain, anchor, scale, exponent) {
  return zoom(domain, anchor, scale, pow(exponent), pow(1/exponent));
}


/***/ }),

/***/ "S/FN":
/*!*******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Aggregate.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Aggregate; });
/* harmony import */ var _util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/AggregateKeys */ "+cNY");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "pOXG");
/* harmony import */ var _util_TupleStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/TupleStore */ "ZqFd");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






/**
 * Group-by aggregation operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors to aggregate.
 * @param {Array<string>} [params.ops] - An array of strings indicating aggregation operations.
 * @param {Array<string>} [params.as] - An array of output field names for aggregated values.
 * @param {boolean} [params.cross=false] - A flag indicating that the full
 *   cross-product of groupby values should be generated, including empty cells.
 *   If true, the drop parameter is ignored and empty cells are retained.
 * @param {boolean} [params.drop=true] - A flag indicating if empty cells should be removed.
 */
function Aggregate(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, null, params);

  this._adds = []; // array of added output tuples
  this._mods = []; // array of modified output tuples
  this._alen = 0;  // number of active added tuples
  this._mlen = 0;  // number of active modified tuples
  this._drop = true;   // should empty aggregation cells be removed
  this._cross = false; // produce full cross-product of group-by values

  this._dims = [];   // group-by dimension accessors
  this._dnames = []; // group-by dimension names

  this._measures = []; // collection of aggregation monoids
  this._countOnly = false; // flag indicating only count aggregation
  this._counts = null; // collection of count fields
  this._prev = null;   // previous aggregation cells

  this._inputs = null;  // array of dependent input tuple field names
  this._outputs = null; // array of output tuple field names
}

Aggregate.Definition = {
  "type": "Aggregate",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"] },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "drop", "type": "boolean", "default": true },
    { "name": "cross", "type": "boolean", "default": false },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["inherits"])(Aggregate, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  var aggr = this,
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      mod;

  this.stamp = out.stamp;

  if (this.value && ((mod = _.modified()) || pulse.modified(this._inputs))) {
    this._prev = this.value;
    this.value = mod ? this.init(_) : {};
    pulse.visit(pulse.SOURCE, function(t) { aggr.add(t); });
  } else {
    this.value = this.value || this.init(_);
    pulse.visit(pulse.REM, function(t) { aggr.rem(t); });
    pulse.visit(pulse.ADD, function(t) { aggr.add(t); });
  }

  // Indicate output fields and return aggregate tuples.
  out.modifies(this._outputs);

  // Should empty cells be dropped?
  aggr._drop = _.drop !== false;

  // If domain cross-product requested, generate empty cells as needed
  // and ensure that empty cells are not dropped
  if (_.cross && aggr._dims.length > 1) {
    aggr._drop = false;
    this.cross();
  }

  return aggr.changes(out);
};

prototype.cross = function() {
  var aggr = this,
      curr = aggr.value,
      dims = aggr._dnames,
      vals = dims.map(function() { return {}; }),
      n = dims.length;

  // collect all group-by domain values
  function collect(cells) {
    var key, i, t, v;
    for (key in cells) {
      t = cells[key].tuple;
      for (i=0; i<n; ++i) {
        vals[i][(v = t[dims[i]])] = v;
      }
    }
  }
  collect(aggr._prev);
  collect(curr);

  // iterate over key cross-product, create cells as needed
  function generate(base, tuple, index) {
    var name = dims[index],
        v = vals[index++],
        k, key;

    for (k in v) {
      tuple[name] = v[k];
      key = base ? base + '|' + k : k;
      if (index < n) generate(key, tuple, index);
      else if (!curr[key]) aggr.cell(key, tuple);
    }
  }
  generate('', {}, 0);
};

prototype.init = function(_) {
  // initialize input and output fields
  var inputs = (this._inputs = []),
      outputs = (this._outputs = []),
      inputMap = {};

  function inputVisit(get) {
    var fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorFields"])(get)),
        i = 0, n = fields.length, f;
    for (; i<n; ++i) {
      if (!inputMap[f=fields[i]]) {
        inputMap[f] = 1;
        inputs.push(f);
      }
    }
  }

  // initialize group-by dimensions
  this._dims = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(_.groupby);
  this._dnames = this._dims.map(function(d) {
    var dname = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorName"])(d);
    inputVisit(d);
    outputs.push(dname);
    return dname;
  });
  this.cellkey = _.key ? _.key : Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])(this._dims);

  // initialize aggregate measures
  this._countOnly = true;
  this._counts = [];
  this._measures = [];

  var fields = _.fields || [null],
      ops = _.ops || ['count'],
      as = _.as || [],
      n = fields.length,
      map = {},
      field, op, m, mname, outname, i;

  if (n !== ops.length) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unmatched number of fields and aggregate ops.');
  }

  for (i=0; i<n; ++i) {
    field = fields[i];
    op = ops[i];

    if (field == null && op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Null aggregate field specified.');
    }
    mname = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorName"])(field);
    outname = Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["measureName"])(op, mname, as[i]);
    outputs.push(outname);

    if (op === 'count') {
      this._counts.push(outname);
      continue;
    }

    m = map[mname];
    if (!m) {
      inputVisit(field);
      m = (map[mname] = []);
      m.field = field;
      this._measures.push(m);
    }

    if (op !== 'count') this._countOnly = false;
    m.push(Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["createMeasure"])(op, outname));
  }

  this._measures = this._measures.map(function(m) {
    return Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["compileMeasures"])(m, m.field);
  });

  return {}; // aggregation cells (this.value)
};

// -- Cell Management -----

prototype.cellkey = Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])();

prototype.cell = function(key, t) {
  var cell = this.value[key];
  if (!cell) {
    cell = this.value[key] = this.newcell(key, t);
    this._adds[this._alen++] = cell;
  } else if (cell.num === 0 && this._drop && cell.stamp < this.stamp) {
    cell.stamp = this.stamp;
    this._adds[this._alen++] = cell;
  } else if (cell.stamp < this.stamp) {
    cell.stamp = this.stamp;
    this._mods[this._mlen++] = cell;
  }
  return cell;
};

prototype.newcell = function(key, t) {
  var cell = {
    key:   key,
    num:   0,
    agg:   null,
    tuple: this.newtuple(t, this._prev && this._prev[key]),
    stamp: this.stamp,
    store: false
  };

  if (!this._countOnly) {
    var measures = this._measures,
        n = measures.length, i;

    cell.agg = Array(n);
    for (i=0; i<n; ++i) {
      cell.agg[i] = new measures[i](cell);
    }
  }

  if (cell.store) {
    cell.data = new _util_TupleStore__WEBPACK_IMPORTED_MODULE_2__["default"]();
  }

  return cell;
};

prototype.newtuple = function(t, p) {
  var names = this._dnames,
      dims = this._dims,
      x = {}, i, n;

  for (i=0, n=dims.length; i<n; ++i) {
    x[names[i]] = dims[i](t);
  }

  return p ? Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["replace"])(p.tuple, x) : Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])(x);
};

// -- Process Tuples -----

prototype.add = function(t) {
  var key = this.cellkey(t),
      cell = this.cell(key, t),
      agg, i, n;

  cell.num += 1;
  if (this._countOnly) return;

  if (cell.store) cell.data.add(t);

  agg = cell.agg;
  for (i=0, n=agg.length; i<n; ++i) {
    agg[i].add(agg[i].get(t), t);
  }
};

prototype.rem = function(t) {
  var key = this.cellkey(t),
      cell = this.cell(key, t),
      agg, i, n;

  cell.num -= 1;
  if (this._countOnly) return;

  if (cell.store) cell.data.rem(t);

  agg = cell.agg;
  for (i=0, n=agg.length; i<n; ++i) {
    agg[i].rem(agg[i].get(t), t);
  }
};

prototype.celltuple = function(cell) {
  var tuple = cell.tuple,
      counts = this._counts,
      agg, i, n;

  // consolidate stored values
  if (cell.store) {
    cell.data.values();
  }

  // update tuple properties
  for (i=0, n=counts.length; i<n; ++i) {
    tuple[counts[i]] = cell.num;
  }
  if (!this._countOnly) {
    agg = cell.agg;
    for (i=0, n=agg.length; i<n; ++i) {
      agg[i].set(tuple);
    }
  }

  return tuple;
};

prototype.changes = function(out) {
  var adds = this._adds,
      mods = this._mods,
      prev = this._prev,
      drop = this._drop,
      add = out.add,
      rem = out.rem,
      mod = out.mod,
      cell, key, i, n;

  if (prev) for (key in prev) {
    cell = prev[key];
    if (!drop || cell.num) rem.push(cell.tuple);
  }

  for (i=0, n=this._alen; i<n; ++i) {
    add.push(this.celltuple(adds[i]));
    adds[i] = null; // for garbage collection
  }

  for (i=0, n=this._mlen; i<n; ++i) {
    cell = mods[i];
    (cell.num === 0 && drop ? rem : mod).push(this.celltuple(cell));
    mods[i] = null; // for garbage collection
  }

  this._alen = this._mlen = 0; // reset list of active cells
  this._prev = null;
  return out;
};


/***/ }),

/***/ "S7P/":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/parse.js ***!
  \****************************************************************/
/*! exports provided: parseTransformArray, parseData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseTransformArray", function() { return parseTransformArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseData", function() { return parseData; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../transform */ "1mLV");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../selection/selection */ "3eK9");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./aggregate */ "JbBH");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bin */ "MHKK");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./calculate */ "a40Z");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dataflow */ "LH2n");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./facet */ "LZFT");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./filter */ "sGpF");
/* harmony import */ var _filterinvalid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./filterinvalid */ "dJ5h");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./formatparse */ "5CN0");
/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./geojson */ "xYZI");
/* harmony import */ var _geopoint__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./geopoint */ "vVSx");
/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./identifier */ "1CMI");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./index */ "HumB");
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lookup */ "ZeRq");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./source */ "6g+2");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./stack */ "oiGR");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./timeunit */ "2toQ");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./window */ "MsEM");
























function parseRoot(model, sources) {
    if (model.data || !model.parent) {
        // if the model defines a data source or is the root, create a source node
        var source = new _source__WEBPACK_IMPORTED_MODULE_20__["SourceNode"](model.data);
        var hash = source.hash();
        if (hash in sources) {
            // use a reference if we already have a source
            return sources[hash];
        }
        else {
            // otherwise add a new one
            sources[hash] = source;
            return source;
        }
    }
    else {
        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.
        return model.parent.component.data.facetRoot ? model.parent.component.data.facetRoot : model.parent.component.data.main;
    }
}
/**
 * Parses a transforms array into a chain of connected dataflow nodes.
 */
function parseTransformArray(head, model, ancestorParse) {
    var lookupCounter = 0;
    model.transforms.forEach(function (t) {
        if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isCalculate"])(t)) {
            head = new _calculate__WEBPACK_IMPORTED_MODULE_9__["CalculateNode"](head, t);
            ancestorParse.set(t.as, 'derived', false);
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isFilter"])(t)) {
            head = _formatparse__WEBPACK_IMPORTED_MODULE_14__["ParseNode"].makeImplicitFromFilterTransform(head, t, ancestorParse) || head;
            head = new _filter__WEBPACK_IMPORTED_MODULE_12__["FilterNode"](head, model, t.filter);
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isBin"])(t)) {
            var bin = head = _bin__WEBPACK_IMPORTED_MODULE_8__["BinNode"].makeFromTransform(head, t, model);
            for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(bin.producedFields()); _i < _a.length; _i++) {
                var field = _a[_i];
                ancestorParse.set(field, 'number', false);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isTimeUnit"])(t)) {
            head = _timeunit__WEBPACK_IMPORTED_MODULE_22__["TimeUnitNode"].makeFromTransform(head, t);
            ancestorParse.set(t.as, 'date', false);
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isAggregate"])(t)) {
            var agg = head = _aggregate__WEBPACK_IMPORTED_MODULE_7__["AggregateNode"].makeFromTransform(head, t);
            if (Object(_selection_selection__WEBPACK_IMPORTED_MODULE_6__["requiresSelectionId"])(model)) {
                head = new _identifier__WEBPACK_IMPORTED_MODULE_17__["IdentifierNode"](head);
            }
            for (var _b = 0, _c = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(agg.producedFields()); _b < _c.length; _b++) {
                var field = _c[_b];
                ancestorParse.set(field, 'derived', false);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isLookup"])(t)) {
            var lookup = head = _lookup__WEBPACK_IMPORTED_MODULE_19__["LookupNode"].make(head, model, t, lookupCounter++);
            for (var _d = 0, _e = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(lookup.producedFields()); _d < _e.length; _d++) {
                var field = _e[_d];
                ancestorParse.set(field, 'derived', false);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isWindow"])(t)) {
            var window_1 = head = new _window__WEBPACK_IMPORTED_MODULE_23__["WindowTransformNode"](head, t);
            for (var _f = 0, _g = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(window_1.producedFields()); _f < _g.length; _f++) {
                var field = _g[_f];
                ancestorParse.set(field, 'derived', false);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_3__["isStack"])(t)) {
            var stack = head = _stack__WEBPACK_IMPORTED_MODULE_21__["StackNode"].makeFromTransform(head, t);
            for (var _h = 0, _j = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(stack.producedFields()); _h < _j.length; _h++) {
                var field = _j[_h];
                ancestorParse.set(field, 'derived', false);
            }
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].invalidTransformIgnored(t));
            return;
        }
    });
    return head;
}
/*
Description of the dataflow (http://asciiflow.com/):
     +--------+
     | Source |
     +---+----+
         |
         v
     FormatParse
     (explicit)
         |
         v
     Transforms
(Filter, Calculate, Binning, TimeUnit, Aggregate, Window, ...)
         |
         v
     FormatParse
     (implicit)
         |
         v
 Binning (in `encoding`)
         |
         v
 Timeunit (in `encoding`)
         |
         v
Formula From Sort Array
         |
         v
      +--+--+
      | Raw |
      +-----+
         |
         v
  Aggregate (in `encoding`)
         |
         v
  Stack (in `encoding`)
         |
         v
  Invalid Filter
         |
         v
   +----------+
   |   Main   |
   +----------+
         |
         v
     +-------+
     | Facet |----> "column", "column-layout", and "row"
     +-------+
         |
         v
  ...Child data...
*/
function parseData(model) {
    var head = parseRoot(model, model.component.data.sources);
    var _a = model.component.data, outputNodes = _a.outputNodes, outputNodeRefCounts = _a.outputNodeRefCounts;
    var ancestorParse = model.parent ? model.parent.component.data.ancestorParse.clone() : new _index__WEBPACK_IMPORTED_MODULE_18__["AncestorParse"]();
    // format.parse: null means disable parsing
    if (model.data && model.data.format && model.data.format.parse === null) {
        ancestorParse.parseNothing = true;
    }
    head = _formatparse__WEBPACK_IMPORTED_MODULE_14__["ParseNode"].makeExplicit(head, model, ancestorParse) || head;
    // Default discrete selections require an identifier transform to
    // uniquely identify data points as the _id field is volatile. Add
    // this transform at the head of our pipeline such that the identifier
    // field is available for all subsequent datasets. Additional identifier
    // transforms will be necessary when new tuples are constructed
    // (e.g., post-aggregation).
    if (Object(_selection_selection__WEBPACK_IMPORTED_MODULE_6__["requiresSelectionId"])(model) && (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_5__["isLayerModel"])(model))) {
        head = new _identifier__WEBPACK_IMPORTED_MODULE_17__["IdentifierNode"](head);
    }
    // HACK: This is equivalent for merging bin extent for union scale.
    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale
    var parentIsLayer = model.parent && Object(_model__WEBPACK_IMPORTED_MODULE_5__["isLayerModel"])(model.parent);
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_5__["isFacetModel"])(model)) {
        if (parentIsLayer) {
            head = _bin__WEBPACK_IMPORTED_MODULE_8__["BinNode"].makeFromEncoding(head, model) || head;
        }
    }
    if (model.transforms.length > 0) {
        head = parseTransformArray(head, model, ancestorParse);
    }
    head = _formatparse__WEBPACK_IMPORTED_MODULE_14__["ParseNode"].makeImplicitFromEncoding(head, model, ancestorParse) || head;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model)) {
        head = _geojson__WEBPACK_IMPORTED_MODULE_15__["GeoJSONNode"].parseAll(head, model);
        head = _geopoint__WEBPACK_IMPORTED_MODULE_16__["GeoPointNode"].parseAll(head, model);
    }
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_5__["isFacetModel"])(model)) {
        if (!parentIsLayer) {
            head = _bin__WEBPACK_IMPORTED_MODULE_8__["BinNode"].makeFromEncoding(head, model) || head;
        }
        head = _timeunit__WEBPACK_IMPORTED_MODULE_22__["TimeUnitNode"].makeFromEncoding(head, model) || head;
        head = _calculate__WEBPACK_IMPORTED_MODULE_9__["CalculateNode"].parseAllForSortIndex(head, model);
    }
    // add an output node pre aggregation
    var rawName = model.getName(_data__WEBPACK_IMPORTED_MODULE_1__["RAW"]);
    var raw = new _dataflow__WEBPACK_IMPORTED_MODULE_10__["OutputNode"](head, rawName, _data__WEBPACK_IMPORTED_MODULE_1__["RAW"], outputNodeRefCounts);
    outputNodes[rawName] = raw;
    head = raw;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model)) {
        var agg = _aggregate__WEBPACK_IMPORTED_MODULE_7__["AggregateNode"].makeFromEncoding(head, model);
        if (agg) {
            head = agg;
            if (Object(_selection_selection__WEBPACK_IMPORTED_MODULE_6__["requiresSelectionId"])(model)) {
                head = new _identifier__WEBPACK_IMPORTED_MODULE_17__["IdentifierNode"](head);
            }
        }
        head = _stack__WEBPACK_IMPORTED_MODULE_21__["StackNode"].makeFromEncoding(head, model) || head;
    }
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model)) {
        head = _filterinvalid__WEBPACK_IMPORTED_MODULE_13__["FilterInvalidNode"].make(head, model) || head;
    }
    // output node for marks
    var mainName = model.getName(_data__WEBPACK_IMPORTED_MODULE_1__["MAIN"]);
    var main = new _dataflow__WEBPACK_IMPORTED_MODULE_10__["OutputNode"](head, mainName, _data__WEBPACK_IMPORTED_MODULE_1__["MAIN"], outputNodeRefCounts);
    outputNodes[mainName] = main;
    head = main;
    // add facet marker
    var facetRoot = null;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_5__["isFacetModel"])(model)) {
        var facetName = model.getName('facet');
        // Derive new sort index field for facet's sort array
        head = _calculate__WEBPACK_IMPORTED_MODULE_9__["CalculateNode"].parseAllForSortIndex(head, model);
        // Derive new aggregate (via window) for facet's sort field
        // TODO: use JoinAggregate once we have it
        // augment data source with new fields for crossed facet
        head = _window__WEBPACK_IMPORTED_MODULE_23__["WindowTransformNode"].makeFromFacet(head, model.facet) || head;
        facetRoot = new _facet__WEBPACK_IMPORTED_MODULE_11__["FacetNode"](head, model, facetName, main.getSource());
        outputNodes[facetName] = facetRoot;
        head = facetRoot;
    }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, model.component.data, { outputNodes: outputNodes,
        outputNodeRefCounts: outputNodeRefCounts,
        raw: raw,
        main: main,
        facetRoot: facetRoot,
        ancestorParse: ancestorParse });
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "SGqD":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/View.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return View; });
/* harmony import */ var _cursor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cursor */ "w6H4");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ "AVVR");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ "Jx0O");
/* harmony import */ var _hover__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hover */ "hzKX");
/* harmony import */ var _finalize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./finalize */ "URFm");
/* harmony import */ var _initialize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initialize */ "QXll");
/* harmony import */ var _render_to_image_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./render-to-image-url */ "9UmT");
/* harmony import */ var _render_to_canvas__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./render-to-canvas */ "4t7u");
/* harmony import */ var _render_to_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./render-to-svg */ "Scn/");
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./render-size */ "NNLh");
/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./runtime */ "CtAy");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./scale */ "doME");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./size */ "BGsV");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./state */ "UXf/");
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./timer */ "fwYv");
/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tooltip */ "s8zn");
/* harmony import */ var _trap__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./trap */ "v+OT");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");






















/**
 * Create a new View instance from a Vega dataflow runtime specification.
 * The generated View will not immediately be ready for display. Callers
 * should also invoke the initialize method (e.g., to set the parent
 * DOM element in browser-based deployment) and then invoke the run
 * method to evaluate the dataflow graph. Rendering will automatically
 * be peformed upon dataflow runs.
 * @constructor
 * @param {object} spec - The Vega dataflow runtime specification.
 */
function View(spec, options) {
  var view = this;
  options = options || {};

  vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].call(view);
  view.loader(options.loader || view._loader);
  view.logLevel(options.logLevel || 0);

  view._el = null;
  view._renderType = options.renderer || vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["RenderType"].Canvas;
  view._scenegraph = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["Scenegraph"]();
  var root = view._scenegraph.root;

  // initialize renderer, handler and event management
  view._renderer = null;
  view._tooltip = options.tooltip || _tooltip__WEBPACK_IMPORTED_MODULE_15__["default"],
  view._redraw = true;
  view._handler = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["CanvasHandler"]().scene(root);
  view._preventDefault = false;
  view._timers = [];
  view._eventListeners = [];
  view._resizeListeners = [];

  // initialize dataflow graph
  var ctx = Object(_runtime__WEBPACK_IMPORTED_MODULE_10__["default"])(view, spec, options.functions);
  view._runtime = ctx;
  view._signals = ctx.signals;
  view._bind = (spec.bindings || []).map(function(_) {
    return {
      state: null,
      param: Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["extend"])({}, _)
    };
  });

  // initialize scenegraph
  if (ctx.root) ctx.root.set(root);
  root.source = ctx.data.root.input;
  view.pulse(
    ctx.data.root.input,
    view.changeset().insert(root.items)
  );

  // initialize background color
  view._background = ctx.background || null;

  // initialize event configuration
  view._eventConfig = Object(_events__WEBPACK_IMPORTED_MODULE_2__["initializeEventConfig"])(ctx.eventConfig);

  // initialize view size
  view._width = view.width();
  view._height = view.height();
  view._viewWidth = Object(_size__WEBPACK_IMPORTED_MODULE_12__["viewWidth"])(view, view._width);
  view._viewHeight = Object(_size__WEBPACK_IMPORTED_MODULE_12__["viewHeight"])(view, view._height);
  view._origin = [0, 0];
  view._resize = 0;
  view._autosize = 1;
  Object(_size__WEBPACK_IMPORTED_MODULE_12__["initializeResize"])(view);

  // initialize cursor
  Object(_cursor__WEBPACK_IMPORTED_MODULE_0__["default"])(view);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["inherits"])(View, vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"]);

// -- DATAFLOW / RENDERING ----

prototype.run = function(encode) {
  // evaluate dataflow
  vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].prototype.run.call(this, encode);

  if (this._pending) {
    // resize next cycle if loading data sets
    this.resize();
  } else if (this._redraw || this._resize) {
    // render as needed
    try {
      this.render();
    } catch (e) {
      this.error(e);
    }
  }

  return this;
};

prototype.render = function() {
  if (this._renderer) {
    if (this._resize) {
      this._resize = 0;
      Object(_render_size__WEBPACK_IMPORTED_MODULE_9__["resizeRenderer"])(this);
    }
    this._renderer.render(this._scenegraph.root);
  }
  this._redraw = false;
  return this;
};

prototype.dirty = function(item) {
  this._redraw = true;
  this._renderer && this._renderer.dirty(item);
};

// -- GET / SET ----

prototype.container = function() {
  return this._el;
};

prototype.scenegraph = function() {
  return this._scenegraph;
};

prototype.origin = function() {
  return this._origin.slice();
};

function lookupSignal(view, name) {
  return view._signals.hasOwnProperty(name)
    ? view._signals[name]
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["error"])('Unrecognized signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["stringValue"])(name));
}

prototype.signal = function(name, value, options) {
  var op = lookupSignal(this, name);
  return arguments.length === 1
    ? op.value
    : this.update(op, value, options);
};

prototype.background = function(_) {
  if (arguments.length) {
    this._background = _;
    this._resize = 1;
    return this;
  } else {
    return this._background;
  }
};

prototype.width = function(_) {
  return arguments.length ? this.signal('width', _) : this.signal('width');
};

prototype.height = function(_) {
  return arguments.length ? this.signal('height', _) : this.signal('height');
};

prototype.padding = function(_) {
  return arguments.length ? this.signal('padding', _) : this.signal('padding');
};

prototype.autosize = function(_) {
  return arguments.length ? this.signal('autosize', _) : this.signal('autosize');
};

prototype.renderer = function(type) {
  if (!arguments.length) return this._renderType;
  if (!Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["renderModule"])(type)) Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["error"])('Unrecognized renderer type: ' + type);
  if (type !== this._renderType) {
    this._renderType = type;
    this._resetRenderer();
  }
  return this;
};

prototype.tooltip = function(handler) {
  if (!arguments.length) return this._tooltip;
  if (handler !== this._tooltip) {
    this._tooltip = handler;
    this._resetRenderer();
  }
  return this;
};

prototype.loader = function(loader) {
  if (!arguments.length) return this._loader;
  if (loader !== this._loader) {
    vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].prototype.loader.call(this, loader);
    this._resetRenderer();
  }
  return this;
};

prototype.resize = function() {
  // set flag to perform autosize
  this._autosize = 1;
  // touch autosize signal to ensure top-level ViewLayout runs
  return this.touch(lookupSignal(this, 'autosize'));
};

prototype._resetRenderer = function() {
  if (this._renderer) {
    this._renderer = null;
    this.initialize(this._el);
  }
};

// -- SIZING ----
prototype._resizeView = _size__WEBPACK_IMPORTED_MODULE_12__["resizeView"];

// -- EVENT HANDLING ----

prototype.addEventListener = function(type, handler, options) {
  var callback = handler;
  if (!(options && options.trap === false)) {
    // wrap callback in error handler
    callback = Object(_trap__WEBPACK_IMPORTED_MODULE_16__["default"])(this, handler);
    callback.raw = handler;
  }
  this._handler.on(type, callback);
  return this;
};

prototype.removeEventListener = function(type, handler) {
  var handlers = this._handler.handlers(type),
      i = handlers.length, h, t;

  // search registered handlers, remove if match found
  while (--i >= 0) {
    t = handlers[i].type;
    h = handlers[i].handler;
    if (type === t && (handler === h || handler === h.raw)) {
      this._handler.off(t, h);
      break;
    }
  }
  return this;
};

prototype.addResizeListener = function(handler) {
  var l = this._resizeListeners;
  if (l.indexOf(handler) < 0) {
    // add handler if it isn't already registered
    // note: error trapping handled elsewhere, so
    // no need to wrap handlers here
    l.push(handler);
  }
  return this;
};

prototype.removeResizeListener = function(handler) {
  var l = this._resizeListeners,
      i = l.indexOf(handler);
  if (i >= 0) {
    l.splice(i, 1);
  }
  return this;
};

function findSignalHandler(signal, handler) {
  var t = signal._targets || [],
      h = t.filter(function(op) {
            var u = op._update;
            return u && u.handler === handler;
          });
  return h.length ? h[0] : null;
}

prototype.addSignalListener = function(name, handler) {
  var s = lookupSignal(this, name),
      h = findSignalHandler(s, handler);

  if (!h) {
    h = Object(_trap__WEBPACK_IMPORTED_MODULE_16__["default"])(this, function() { handler(name, s.value); });
    h.handler = handler;
    this.on(s, null, h);
  }
  return this;
};

prototype.removeSignalListener = function(name, handler) {
  var s = lookupSignal(this, name),
      h = findSignalHandler(s, handler);

  if (h) s._targets.remove(h);
  return this;
};

prototype.preventDefault = function(_) {
  if (arguments.length) {
    this._preventDefault = _;
    return this;
  } else {
    return this._preventDefault;
  }
};

prototype.timer = _timer__WEBPACK_IMPORTED_MODULE_14__["default"];
prototype.events = _events__WEBPACK_IMPORTED_MODULE_2__["events"];
prototype.finalize = _finalize__WEBPACK_IMPORTED_MODULE_4__["default"];
prototype.hover = _hover__WEBPACK_IMPORTED_MODULE_3__["default"];

// -- DATA ----
prototype.data = _data__WEBPACK_IMPORTED_MODULE_1__["data"];
prototype.change = _data__WEBPACK_IMPORTED_MODULE_1__["change"];
prototype.insert = _data__WEBPACK_IMPORTED_MODULE_1__["insert"];
prototype.remove = _data__WEBPACK_IMPORTED_MODULE_1__["remove"];

// -- SCALES --
prototype.scale = _scale__WEBPACK_IMPORTED_MODULE_11__["scale"];

// -- INITIALIZATION ----
prototype.initialize = _initialize__WEBPACK_IMPORTED_MODULE_5__["default"];

// -- HEADLESS RENDERING ----
prototype.toImageURL = _render_to_image_url__WEBPACK_IMPORTED_MODULE_6__["default"];
prototype.toCanvas = _render_to_canvas__WEBPACK_IMPORTED_MODULE_7__["default"];
prototype.toSVG = _render_to_svg__WEBPACK_IMPORTED_MODULE_8__["default"];

// -- SAVE / RESTORE STATE ----
prototype.getState = _state__WEBPACK_IMPORTED_MODULE_13__["getState"];
prototype.setState = _state__WEBPACK_IMPORTED_MODULE_13__["setState"];


/***/ }),

/***/ "SRKn":
/*!***********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoPoint.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoPoint; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Geo-code a longitude/latitude point to an x/y coordinate.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {Array<function(object): *>} params.fields - A two-element array of
 *   field accessors for the longitude and latitude values.
 * @param {Array<string>} [params.as] - A two-element array of field names
 *   under which to store the result. Defaults to ['x','y'].
 */
function GeoPoint(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoPoint.Definition = {
  "type": "GeoPoint",
  "metadata": {"modifies": true},
  "params": [
    { "name": "projection", "type": "projection", "required": true },
    { "name": "fields", "type": "field", "array": true, "required": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["x", "y"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(GeoPoint, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var proj = _.projection,
      lon = _.fields[0],
      lat = _.fields[1],
      as = _.as || ['x', 'y'],
      x = as[0],
      y = as[1],
      mod;

  function set(t) {
    var xy = proj([lon(t), lat(t)]);
    if (xy) {
      t[x] = xy[0];
      t[y] = xy[1];
    } else {
      t[x] = undefined;
      t[y] = undefined;
    }
  }

  if (_.modified()) {
    // parameters updated, reflow
    pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);
  } else {
    mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);
    pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);
  }

  return pulse.modifies(as);
};


/***/ }),

/***/ "STnH":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Params.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Params; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Operator whose value is simply its parameter hash. This operator is
 * useful for enabling reactive updates to values of nested objects.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Params(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Params, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

Params.prototype.transform = function(_, pulse) {
  this.modified(_.modified());
  this.value = _;
  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS); // do not pass tuples
};


/***/ }),

/***/ "Scn/":
/*!*****************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-svg.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "zugC");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");



/**
 * Produce a rendered SVG string of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to an SVG string.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(scaleFactor) {
  return Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG, scaleFactor)
    .then(function(renderer) { return renderer.svg(); });
});


/***/ }),

/***/ "SlBs":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/property.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "1/lU");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/* harmony default export */ __webpack_exports__["default"] = (function(property, scope, params, fields) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(property)
      ? '(' + Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, property, scope, params, fields) + ')'
      : property;
});


/***/ }),

/***/ "T+G6":
/*!********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Bound.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bound; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "HkXN");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Calculate bounding boxes for scenegraph items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - The scenegraph mark instance to bound.
 */
function Bound(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Bound, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var view = pulse.dataflow,
      mark = _.mark,
      type = mark.marktype,
      entry = vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Marks"][type],
      bound = entry.bound,
      markBounds = mark.bounds, rebound;

  if (entry.nested) {
    // multi-item marks have a single bounds instance
    if (mark.items.length) view.dirty(mark.items[0]);
    markBounds = boundItem(mark, bound);
    mark.items.forEach(function(item) {
      item.bounds.clear().union(markBounds);
    });
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"] || _.modified()) {
    // operator parameters modified -> re-bound all items
    // updates group bounds in response to modified group content
    pulse.visit(pulse.MOD, function(item) { view.dirty(item); });
    markBounds.clear();
    mark.items.forEach(function(item) {
      markBounds.union(boundItem(item, bound));
    });

    // force reflow for legends to propagate any layout changes
    // suppress other types to prevent overall layout jumpiness
    if (mark.role === _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]) pulse.reflow();
  }

  else {
    // incrementally update bounds, re-bound mark as needed
    rebound = pulse.changed(pulse.REM);

    pulse.visit(pulse.ADD, function(item) {
      markBounds.union(boundItem(item, bound));
    });

    pulse.visit(pulse.MOD, function(item) {
      rebound = rebound || markBounds.alignsWith(item.bounds);
      view.dirty(item);
      markBounds.union(boundItem(item, bound));
    });

    if (rebound) {
      markBounds.clear();
      mark.items.forEach(function(item) { markBounds.union(item.bounds); });
    }
  }

  // ensure mark bounds do not exceed any clipping region
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["boundClip"])(mark);

  return pulse.modifies('bounds');
};

function boundItem(item, bound, opt) {
  return bound(item.bounds.clear(), item, opt);
}


/***/ }),

/***/ "T/Dk":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-util.js ***!
  \*******************************************************************/
/*! exports provided: lookup, isVertical, gradientLength, gradientThickness, entryColumns, getEncoding, getStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookup", function() { return lookup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVertical", function() { return isVertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gradientLength", function() { return gradientLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gradientThickness", function() { return gradientThickness; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entryColumns", function() { return entryColumns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEncoding", function() { return getEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyle", function() { return getStyle; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "+JJI");



function lookup(name, spec, config) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(spec[name], config[name]);
}

function isVertical(spec, configVal) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(spec.direction, configVal) === _constants__WEBPACK_IMPORTED_MODULE_0__["Vertical"];
}

function gradientLength(spec, config) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.gradientLength,
    config.gradientLength || config.gradientWidth
  );
}

function gradientThickness(spec, config) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.gradientThickness,
    config.gradientThickness || config.gradientHeight
  );
}

function entryColumns(spec, config) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.columns,
    Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(config.columns, +isVertical(spec, config.symbolDirection))
  );
}

function getEncoding(name, encode) {
  var v = encode && (
    (encode.update && encode.update[name]) ||
    (encode.enter && encode.enter[name])
  );
  return v && v.signal ? v : v ? v.value : null;
}

function getStyle(name, scope, style) {
  var s = scope.config.style[style];
  return s && s[name];
}


/***/ }),

/***/ "T4Tz":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/tree.js ***!
  \*****************************************************************/
/*! exports provided: treePath, treeAncestors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "treePath", function() { return treePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "treeAncestors", function() { return treeAncestors; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ "QgY1");


var EMPTY = {};

function datum(d) { return d.data; }

function treeNodes(name, context) {
  var tree = _data__WEBPACK_IMPORTED_MODULE_0__["data"].call(context, name);
  return tree.root && tree.root.lookup || EMPTY;
}

function treePath(name, source, target) {
  var nodes = treeNodes(name, this),
      s = nodes[source],
      t = nodes[target];
  return s && t ? s.path(t).map(datum) : undefined;
}

function treeAncestors(name, node) {
  var n = treeNodes(name, this)[node];
  return n ? n.ancestors().map(datum) : undefined;
}


/***/ }),

/***/ "T8/Q":
/*!**************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Item.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Item; });
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bounds */ "wOpL");


function Item(mark) {
  this.mark = mark;
  this.bounds = (this.bounds || new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]());
}


/***/ }),

/***/ "TMLr":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/visit.js ***!
  \********************************************************/
/*! exports provided: zorder, visit, pickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zorder", function() { return zorder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visit", function() { return visit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickVisit", function() { return pickVisit; });
function compare(a, b) {
  return a.zindex - b.zindex || a.index - b.index;
}

function zorder(scene) {
  if (!scene.zdirty) return scene.zitems;

  var items = scene.items,
      output = [], item, i, n;

  for (i=0, n=items.length; i<n; ++i) {
    item = items[i];
    item.index = i;
    if (item.zindex) output.push(item);
  }

  scene.zdirty = false;
  return scene.zitems = output.sort(compare);
}

function visit(scene, visitor) {
  var items = scene.items, i, n;
  if (!items || !items.length) return;

  var zitems = zorder(scene);

  if (zitems && zitems.length) {
    for (i=0, n=items.length; i<n; ++i) {
      if (!items[i].zindex) visitor(items[i]);
    }
    items = zitems;
  }

  for (i=0, n=items.length; i<n; ++i) {
    visitor(items[i]);
  }
}

function pickVisit(scene, visitor) {
  var items = scene.items, hit, i;
  if (!items || !items.length) return null;

  var zitems = zorder(scene);
  if (zitems && zitems.length) items = zitems;

  for (i=items.length; --i >= 0;) {
    if (hit = visitor(items[i])) return hit;
  }

  if (items === zitems) {
    for (items=scene.items, i=items.length; --i >= 0;) {
      if (!items[i].zindex) {
        if (hit = visitor(items[i])) return hit;
      }
    }
  }

  return null;
}


/***/ }),

/***/ "TUx5":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/merge.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(compare, array0, array1, output) {
  var n0 = array0.length,
      n1 = array1.length;

  if (!n1) return array0;
  if (!n0) return array1;

  var merged = output || new array0.constructor(n0 + n1),
      i0 = 0, i1 = 0, i = 0;

  for (; i0<n0 && i1<n1; ++i) {
    merged[i] = compare(array0[i0], array1[i1]) > 0
       ? array1[i1++]
       : array0[i0++];
  }

  for (; i0<n0; ++i0, ++i) {
    merged[i] = array0[i0];
  }

  for (; i1<n1; ++i1, ++i) {
    merged[i] = array1[i1];
  }

  return merged;
});


/***/ }),

/***/ "TVcu":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/color.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gradient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gradient */ "t1ED");


/* harmony default export */ __webpack_exports__["default"] = (function(context, item, value) {
  return (value.id) ?
    Object(_gradient__WEBPACK_IMPORTED_MODULE_0__["default"])(context, value, item.bounds) :
    value;
});


/***/ }),

/***/ "Tpvd":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/selection.js ***!
  \**********************************************************************/
/*! exports provided: vlPoint, vlInterval, vlMultiVisitor, vlPointDomain, vlIntervalDomain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vlPoint", function() { return vlPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vlInterval", function() { return vlInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vlMultiVisitor", function() { return vlMultiVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vlPointDomain", function() { return vlPointDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vlIntervalDomain", function() { return vlIntervalDomain; });
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ "lXap");
/* harmony import */ var _ast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ast */ "bcOo");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ "QgY1");
/* harmony import */ var _prefixes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prefixes */ "bnRp");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






var BIN = 'bin_',
    INTERSECT = 'intersect',
    UNION = 'union',
    UNIT_INDEX = 'index:unit';

function testPoint(datum, entry) {
  var fields = entry.fields,
      values = entry.values,
      getter = entry.getter || (entry.getter = []),
      n = fields.length,
      i = 0, dval;

  for (; i<n; ++i) {
    getter[i] = getter[i] || Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["field"])(fields[i]);
    dval = getter[i](datum);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(dval)) dval = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"])(dval);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(values[i])) values[i] = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"])(values[i]);
    if (entry[BIN + fields[i]]) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(values[i][0])) values[i] = values[i].map(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"]);
      if (!Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["inrange"])(dval, values[i], true, false)) return false;
    } else if (dval !== values[i]) {
      return false;
    }
  }

  return true;
}

// TODO: revisit date coercion?
// have selections populate with consistent types upon write?

function testInterval(datum, entry) {
  var ivals = entry.intervals,
      n = ivals.length,
      i = 0,
      getter, extent, value;

  for (; i<n; ++i) {
    extent = ivals[i].extent;
    getter = ivals[i].getter || (ivals[i].getter = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["field"])(ivals[i].field));
    value = getter(datum);
    if (!extent || extent[0] === extent[1]) return false;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(value)) value = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"])(value);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(extent[0])) extent = ivals[i].extent = extent.map(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"]);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isNumber"])(extent[0]) && !Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["inrange"])(value, extent)) return false;
    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(extent[0]) && extent.indexOf(value) < 0) return false;
  }

  return true;
}

/**
 * Tests if a tuple is contained within an interactive selection.
 * @param {string} name - The name of the data set representing the selection.
 * @param {object} datum - The tuple to test for inclusion.
 * @param {string} op - The set operation for combining selections.
 *   One of 'intersect' or 'union' (default).
 * @param {function(object,object):boolean} test - A boolean-valued test
 *   predicate for determining selection status within a single unit chart.
 * @return {boolean} - True if the datum is in the selection, false otherwise.
 */
function vlSelection(name, datum, op, test) {
  var data = this.context.data[name],
      entries = data ? data.values.value : [],
      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,
      intersect = op === INTERSECT,
      n = entries.length,
      i = 0,
      entry, miss, count, unit, b;

  for (; i<n; ++i) {
    entry = entries[i];

    if (unitIdx && intersect) {
      // multi selections union within the same unit and intersect across units.
      miss = miss || {};
      count = miss[unit=entry.unit] || 0;

      // if we've already matched this unit, skip.
      if (count === -1) continue;

      b = test(datum, entry);
      miss[unit] = b ? -1 : ++count;

      // if we match and there are no other units return true
      // if we've missed against all tuples in this unit return false
      if (b && unitIdx.size === 1) return true;
      if (!b && count === unitIdx.get(unit).count) return false;
    } else {
      b = test(datum, entry);

      // if we find a miss and we do require intersection return false
      // if we find a match and we don't require intersection return true
      if (intersect ^ b) return b;
    }
  }

  // if intersecting and we made it here, then we saw no misses
  // if not intersecting, then we saw no matches
  // if no active selections, return false
  return n && intersect;
}

// Assumes point selection tuples are of the form:
// {unit: string, encodings: array<string>, fields: array<string>, values: array<*>, bins: object}
function vlPoint(name, datum, op) {
  return vlSelection.call(this, name, datum, op, testPoint);
}

// Assumes interval selection typles are of the form:
// {unit: string, intervals: array<{encoding: string, field:string, extent:array<number>}>}
function vlInterval(name, datum, op) {
  return vlSelection.call(this, name, datum, op, testInterval);
}

function vlMultiVisitor(name, args, scope, params) {
  if (args[0].type !== _ast__WEBPACK_IMPORTED_MODULE_1__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('First argument to indata must be a string literal.');

  var data = args[0].value,
      // vlMulti, vlMultiDomain have different # of params, but op is always last.
      op = args.length >= 2 && args[args.length-1].value,
      field = 'unit',
      indexName = _prefixes__WEBPACK_IMPORTED_MODULE_3__["indexPrefix"] + field;

  if (op === INTERSECT && !params.hasOwnProperty(indexName)) {
    params[indexName] = scope.getData(data).indataRef(scope, field);
  }

  Object(_data__WEBPACK_IMPORTED_MODULE_2__["dataVisitor"])(name, args, scope, params);
}

/**
 * Materializes a point selection as a scale domain.
 * @param {string} name - The name of the dataset representing the selection.
 * @param {string} [encoding] - A particular encoding channel to materialize.
 * @param {string} [field] - A particular field to materialize.
 * @param {string} [op='intersect'] - The set operation for combining selections.
 * One of 'intersect' (default) or 'union'.
 * @returns {array} An array of values to serve as a scale domain.
 */
function vlPointDomain(name, encoding, field, op) {
  var data = this.context.data[name],
      entries = data ? data.values.value : [],
      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,
      entry = entries[0],
      i = 0, n, index, values, continuous, units;

  if (!entry) return undefined;

  for (n = encoding ? entry.encodings.length : entry.fields.length; i<n; ++i) {
    if ((encoding && entry.encodings[i] === encoding) ||
        (field && entry.fields[i] === field)) {
      index = i;
      continuous = entry[BIN + entry.fields[i]];
      break;
    }
  }

  // multi selections union within the same unit and intersect across units.
  // if we've got only one unit, enforce union for more efficient materialization.
  if (unitIdx && unitIdx.size === 1) {
    op = UNION;
  }

  if (unitIdx && op === INTERSECT) {
    units = entries.reduce(function(acc, entry) {
      var u = acc[entry.unit] || (acc[entry.unit] = []);
      u.push({unit: entry.unit, value: entry.values[index]});
      return acc;
    }, {});

    values = Object.keys(units).map(function(unit) {
      return {
        unit: unit,
        value: continuous
          ? continuousDomain(units[unit], UNION)
          : discreteDomain(units[unit], UNION)
      };
    });
  } else {
    values = entries.map(function(entry) {
      return {unit: entry.unit, value: entry.values[index]};
    });
  }

  return continuous ? continuousDomain(values, op) : discreteDomain(values, op);
}

/**
 * Materializes an interval selection as a scale domain.
 * @param {string} name - The name of the dataset representing the selection.
 * @param {string} [encoding] - A particular encoding channel to materialize.
 * @param {string} [field] - A particular field to materialize.
 * @param {string} [op='union'] - The set operation for combining selections.
 * One of 'intersect' or 'union' (default).
 * @returns {array} An array of values to serve as a scale domain.
 */
function vlIntervalDomain(name, encoding, field, op) {
  var data = this.context.data[name],
      entries = data ? data.values.value : [],
      entry = entries[0],
      i = 0, n, interval, index, values, discrete;

  if (!entry) return undefined;

  for (n = entry.intervals.length; i<n; ++i) {
    interval = entry.intervals[i];
    if ((encoding && interval.encoding === encoding) ||
        (field && interval.field === field)) {
      if (!interval.extent) return undefined;
      index = i;
      discrete = interval.extent.length > 2;
      break;
    }
  }

  values = entries.reduce(function(acc, entry) {
    var extent = entry.intervals[index].extent,
        value = discrete
           ? extent.map(function (d) { return {unit: entry.unit, value: d}; })
           : {unit: entry.unit, value: extent};

    if (discrete) {
      acc.push.apply(acc, value);
    } else {
      acc.push(value);
    }
    return acc;
  }, []);


  return discrete ? discreteDomain(values, op) : continuousDomain(values, op);
}

function discreteDomain(entries, op) {
  var units = {}, count = 0,
      values = {}, domain = [],
      i = 0, n = entries.length,
      entry, unit, v, key;

  for (; i<n; ++i) {
    entry = entries[i];
    unit  = entry.unit;
    key   = entry.value;

    if (!units[unit]) units[unit] = ++count;
    if (!(v = values[key])) {
      values[key] = v = {value: key, units: {}, count: 0};
    }
    if (!v.units[unit]) v.units[unit] = ++v.count;
  }

  for (key in values) {
    v = values[key];
    if (op === INTERSECT && v.count !== count) continue;
    domain.push(v.value);
  }

  return domain.length ? domain : undefined;
}

function continuousDomain(entries, op) {
  var merge = op === INTERSECT ? intersectInterval : unionInterval,
      i = 0, n = entries.length,
      extent, domain, lo, hi;

  for (; i<n; ++i) {
    extent = entries[i].value;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"])(extent[0])) extent = extent.map(vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"]);
    lo = extent[0];
    hi = extent[1];
    if (lo > hi) {
      hi = extent[0];
      lo = extent[1];
    }
    domain = domain ? merge(domain, lo, hi) : [lo, hi];
  }

  return domain && domain.length && (+domain[0] !== +domain[1])
    ? domain
    : undefined;
}

function unionInterval(domain, lo, hi) {
  if (domain[0] > lo) domain[0] = lo;
  if (domain[1] < hi) domain[1] = hi;
  return domain;
}

function intersectInterval(domain, lo, hi) {
  if (hi < domain[0] || domain[1] < lo) {
    return [];
  } else {
    if (domain[0] < lo) domain[0] = lo;
    if (domain[1] > hi) domain[1] = hi;
  }
  return domain;
}


/***/ }),

/***/ "Ts4c":
/*!************************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/ResolveFilter.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ResolveFilter; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Selectively filters tuples by resolving against a filter bitmap.
 * Useful for processing the output of a cross-filter transform.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.ignore - A bit mask indicating which filters to ignore.
 * @param {object} params.filter - The per-tuple filter bitmaps. Typically this
 *   parameter value is a reference to a {@link CrossFilter} transform.
 */
function ResolveFilter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

ResolveFilter.Definition = {
  "type": "ResolveFilter",
  "metadata": {},
  "params": [
    { "name": "ignore", "type": "number", "required": true,
      "description": "A bit mask indicating which filters to ignore." },
    { "name": "filter", "type": "object", "required": true,
      "description": "Per-tuple filter bitmaps from a CrossFilter transform." }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(ResolveFilter, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var ignore = ~(_.ignore || 0), // bit mask where zeros -> dims to ignore
      bitmap = _.filter,
      mask = bitmap.mask;

  // exit early if no relevant filter changes
  if ((mask & ignore) === 0) return pulse.StopPropagation;

  var output = pulse.fork(pulse.ALL),
      data = bitmap.data(),
      curr = bitmap.curr(),
      prev = bitmap.prev(),
      pass = function(k) {
        return !(curr[k] & ignore) ? data[k] : null;
      };

  // propagate all mod tuples that pass the filter
  output.filter(output.MOD, pass);

  // determine add & rem tuples via filter functions
  // for efficiency, we do *not* populate new arrays,
  // instead we add filter functions applied downstream

  if (!(mask & (mask-1))) { // only one filter changed
    output.filter(output.ADD, pass);
    output.filter(output.REM, function(k) {
      return (curr[k] & ignore) === mask ? data[k] : null;
    });

  } else { // multiple filters changed
    output.filter(output.ADD, function(k) {
      var c = curr[k] & ignore,
          f = !c && (c ^ (prev[k] & ignore));
      return f ? data[k] : null;
    });
    output.filter(output.REM, function(k) {
      var c = curr[k] & ignore,
          f = c && !(c ^ (c ^ (prev[k] & ignore)));
      return f ? data[k] : null;
    });
  }

  // add filter to source data in case of reflow...
  return output.filter(output.SOURCE, function(t) { return pass(t._index); });
};


/***/ }),

/***/ "TtRW":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoPath.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoPath; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-projection */ "HD69");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Map GeoJSON data to an SVG path string.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='path'] - The output field in which to store
 *   the generated path data (default 'path').
 */
function GeoPath(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoPath.Definition = {
  "type": "GeoPath",
  "metadata": {"modifies": true},
  "params": [
    { "name": "projection", "type": "projection" },
    { "name": "field", "type": "field" },
    { "name": "pointRadius", "type": "number", "expr": true },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoPath, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      path = this.value,
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_2__["identity"],
      as = _.as || 'path',
      flag = out.SOURCE;

  function set(t) { t[as] = path(field(t)); }

  if (!path || _.modified()) {
    // parameters updated, reset and reflow
    this.value = path = Object(vega_projection__WEBPACK_IMPORTED_MODULE_1__["getProjectionPath"])(_.projection);
    out.materialize().reflow();
  } else {
    flag = field === vega_util__WEBPACK_IMPORTED_MODULE_2__["identity"] || pulse.modified(field.fields)
      ? out.ADD_MOD
      : out.ADD;
  }

  var prev = initPath(path, _.pointRadius);
  out.visit(flag, set);
  path.pointRadius(prev);

  return out.modifies(as);
};

function initPath(path, pointRadius) {
  var prev = path.pointRadius();
  path.context(null);
  if (pointRadius != null) {
    path.pointRadius(pointRadius);
  }
  return prev;
}


/***/ }),

/***/ "Ttxx":
/*!************************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/connect.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Connect a target operator as a dependent of source operators.
 * If necessary, this method will rerank the target operator and its
 * dependents to ensure propagation proceeds in a topologically sorted order.
 * @param {Operator} target - The target operator.
 * @param {Array<Operator>} - The source operators that should propagate
 *   to the target operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(target, sources) {
  var targetRank = target.rank, i, n;

  for (i=0, n=sources.length; i<n; ++i) {
    if (targetRank < sources[i].rank) {
      this.rerank(target);
      return;
    }
  }
});


/***/ }),

/***/ "U3M5":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/resize.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function devicePixelRatio() {
  return typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1;
}

var pixelRatio = devicePixelRatio();

/* harmony default export */ __webpack_exports__["default"] = (function(canvas, width, height, origin, scaleFactor) {
  var inDOM = typeof HTMLElement !== 'undefined'
    && canvas instanceof HTMLElement
    && canvas.parentNode != null;

  var context = canvas.getContext('2d'),
      ratio = inDOM ? pixelRatio : scaleFactor;

  canvas.width = width * ratio;
  canvas.height = height * ratio;

  if (inDOM && ratio !== 1) {
    canvas.style.width = width + 'px';
    canvas.style.height = height + 'px';
  }

  context.pixelRatio = ratio;
  context.setTransform(
    ratio, 0, 0, ratio,
    ratio * origin[0],
    ratio * origin[1]
  );

  return canvas;
});


/***/ }),

/***/ "U3SC":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/Stack.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Stack; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



var Center = 'center',
    Normalize = 'normalize';

/**
 * Stack layout for visualization elements.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to stack.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.
 * @param {string} [offset='zero'] - One of 'zero', 'center', 'normalize'.
 */
function Stack(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Stack.Definition = {
  "type": "Stack",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "sort", "type": "compare" },
    { "name": "offset", "type": "enum", "default": "zero", "values": ["zero", "center", "normalize"] },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["y0", "y1"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Stack, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var as = _.as || ['y0', 'y1'],
      y0 = as[0],
      y1 = as[1],
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_1__["one"],
      stack = _.offset === Center ? stackCenter
            : _.offset === Normalize ? stackNormalize
            : stackZero,
      groups, i, n, max;

  // partition, sum, and sort the stack groups
  groups = partition(pulse.source, _.groupby, _.sort, field);

  // compute stack layouts per group
  for (i=0, n=groups.length, max=groups.max; i<n; ++i) {
    stack(groups[i], max, field, y0, y1);
  }

  return pulse.reflow(_.modified()).modifies(as);
};

function stackCenter(group, max, field, y0, y1) {
  var last = (max - group.sum) / 2,
      m = group.length,
      j = 0, t;

  for (; j<m; ++j) {
    t = group[j];
    t[y0] = last;
    t[y1] = (last += Math.abs(field(t)));
  }
}

function stackNormalize(group, max, field, y0, y1) {
  var scale = 1 / group.sum,
      last = 0,
      m = group.length,
      j = 0, v = 0, t;

  for (; j<m; ++j) {
    t = group[j];
    t[y0] = last;
    t[y1] = last = scale * (v += Math.abs(field(t)));
  }
}

function stackZero(group, max, field, y0, y1) {
  var lastPos = 0,
      lastNeg = 0,
      m = group.length,
      j = 0, v, t;

  for (; j<m; ++j) {
    t = group[j];
    v = field(t);
    if (v < 0) {
      t[y0] = lastNeg;
      t[y1] = (lastNeg += v);
    } else {
      t[y0] = lastPos;
      t[y1] = (lastPos += v);
    }
  }
}

function partition(data, groupby, sort, field) {
  var groups = [],
      get = function(f) { return f(t); },
      map, i, n, m, t, k, g, s, max;

  // partition data points into stack groups
  if (groupby == null) {
    groups.push(data.slice());
  } else {
    for (map={}, i=0, n=data.length; i<n; ++i) {
      t = data[i];
      k = groupby.map(get);
      g = map[k];
      if (!g) {
        map[k] = (g = []);
        groups.push(g);
      }
      g.push(t);
    }
  }

  // compute sums of groups, sort groups as needed
  for (k=0, max=0, m=groups.length; k<m; ++k) {
    g = groups[k];
    for (i=0, s=0, n=g.length; i<n; ++i) {
      s += Math.abs(field(g[i]));
    }
    g.sum = s;
    if (s > max) max = s;
    if (sort) g.sort(sort);
  }
  groups.max = max;

  return groups;
}


/***/ }),

/***/ "UMkc":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/clip.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(clip, scope) {
  var expr;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(clip)) {
    if (clip.signal) {
      expr = clip.signal;
    } else if (clip.path) {
      expr = 'pathShape(' + param(clip.path) + ')';
    } else if (clip.sphere) {
      expr = 'geoShape(' + param(clip.sphere) + ', {type: "Sphere"})';
    }
  }

  return expr
    ? scope.signalRef(expr)
    : !!clip;
});

function param(value) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && value.signal
    ? value.signal
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(value);
}

/***/ }),

/***/ "URFm":
/*!************************************************!*\
  !*** ./node_modules/vega-view/src/finalize.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Finalize a View instance that is being removed.
 * Cancel any running timers.
 * Remove all external event listeners.
 * Remove any currently displayed tooltip.
 */
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var tooltip = this._tooltip,
      timers = this._timers,
      listeners = this._eventListeners,
      n, m, e;

  n = timers.length;
  while (--n >= 0) {
    timers[n].stop();
  }

  n = listeners.length;
  while (--n >= 0) {
    e = listeners[n];
    m = e.sources.length;
    while (--m >= 0) {
      e.sources[m].removeEventListener(e.type, e.handler);
    }
  }

  if (tooltip) {
    tooltip.call(this, this._handler, null, null, null);
  }

  return this;
});


/***/ }),

/***/ "UVlX":
/*!****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/geo.js ***!
  \****************************************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return geoArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return geoBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return geoCentroid; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "n8A4");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scale */ "gngp");



function geoMethod(methodName, globalMethod) {
  return function(projection, geojson, group) {
    if (projection) {
      // projection defined, use it
      var p = Object(_scale__WEBPACK_IMPORTED_MODULE_1__["getScale"])(projection, (group || this).context);
      return p && p.path[methodName](geojson);
    } else {
      // projection undefined, use global method
      return globalMethod(geojson);
    }
  };
}

var geoArea = geoMethod('area', d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoArea"]);
var geoBounds = geoMethod('bounds', d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoBounds"]);
var geoCentroid = geoMethod('centroid', d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"]);


/***/ }),

/***/ "UXf/":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/state.js ***!
  \*********************************************/
/*! exports provided: getState, setState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getState", function() { return getState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setState", function() { return setState; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Get the current view state, consisting of signal values and/or data sets.
 * @param {object} [options] - Options flags indicating which state to export.
 *   If unspecified, all signals and data sets will be exported.
 * @param {function(string, Operator):boolean} [options.signals] - Optional
 *   predicate function for testing if a signal should be included in the
 *   exported state. If unspecified, all signals will be included, except for
 *   those named 'parent' or those which refer to a Transform value.
 * @param {function(string, object):boolean} [options.data] - Optional
 *   predicate function for testing if a data set's input should be included
 *   in the exported state. If unspecified, all data sets that have been
 *   explicitly modified will be included.
 * @param {boolean} [options.recurse=true] - Flag indicating if the exported
 *   state should recursively include state from group mark sub-contexts.
 * @return {object} - An object containing the exported state values.
 */
function getState(options) {
  return this._runtime.getState(options || {
    data:    dataTest,
    signals: signalTest,
    recurse: true
  });
}

function dataTest(name, data) {
  return data.modified
      && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(data.input.value)
      && name.indexOf('_:vega:_');
}

function signalTest(name, op) {
  return !(name === 'parent' || op instanceof vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["transforms"].proxy);
}

/**
 * Sets the current view state and updates the view by invoking run.
 * @param {object} state - A state object containing signal and/or
 *   data set values, following the format used by the getState method.
 * @return {View} - This view instance.
 */
function setState(state) {
  var view = this;
  view.runAfter(function() {
    view._trigger = false;
    view._runtime.setState(state);
    view.run().runAfter(function() { view._trigger = true; });
  });
  return this;
}


/***/ }),

/***/ "Uooy":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/line.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "eIYp");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "IsBD");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('line', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["line"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickLine"]));


/***/ }),

/***/ "UrvT":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/ResourceLoader.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ResourceLoader; });
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "4Usi");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-loader */ "Ln7r");



function ResourceLoader(customLoader) {
  this._pending = 0;
  this._loader = customLoader || Object(vega_loader__WEBPACK_IMPORTED_MODULE_1__["loader"])();
}

var prototype = ResourceLoader.prototype;

prototype.pending = function() {
  return this._pending;
};

function increment(loader) {
  loader._pending += 1;
}

function decrement(loader) {
  loader._pending -= 1;
}

prototype.sanitizeURL = function(uri) {
  var loader = this;
  increment(loader);

  return loader._loader.sanitize(uri, {context:'href'})
    .then(function(opt) {
      decrement(loader);
      return opt;
    })
    .catch(function() {
      decrement(loader);
      return null;
    });
};

prototype.loadImage = function(uri) {
  var loader = this,
      Image = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["image"])();
  increment(loader);

  return loader._loader
    .sanitize(uri, {context: 'image'})
    .then(function(opt) {
      var url = opt.href;
      if (!url || !Image) throw {url: url};

      var img = new Image();

      img.onload = function() {
        decrement(loader);
        img.loaded = true;
      };

      img.onerror = function() {
        decrement(loader);
        img.loaded = false;
      }

      img.src = url;
      return img;
    })
    .catch(function(e) {
      decrement(loader);
      return {loaded: false, width: 0, height: 0, src: e && e.url || ''};
    });
};

prototype.ready = function() {
  var loader = this;
  return new Promise(function(accept) {
    function poll(value) {
      if (!loader.pending()) accept(value);
      else setTimeout(function() { poll(true); }, 10);
    }
    poll(false);
  });
};


/***/ }),

/***/ "Ut0u":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression.js ***!
  \************************************************************/
/*! exports provided: signalPrefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signalPrefix", function() { return signalPrefix; });
/* harmony import */ var _expression_codegen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression/codegen */ "7y5G");
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-expression */ "jjHi");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var signalPrefix = '$';

/* harmony default export */ __webpack_exports__["default"] = (function(expr, scope, preamble) {
  var params = {}, ast, gen;

  // parse the expression to an abstract syntax tree (ast)
  try {
    expr = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(expr) ? expr : (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(expr) + '');
    ast = Object(vega_expression__WEBPACK_IMPORTED_MODULE_1__["parse"])(expr);
  } catch (err) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Expression parse error: ' + expr);
  }

  // analyze ast function calls for dependencies
  ast.visit(function visitor(node) {
    if (node.type !== 'CallExpression') return;
    var name = node.callee.name,
        visit = _expression_codegen__WEBPACK_IMPORTED_MODULE_0__["codegenParams"].visitors[name];
    if (visit) visit(name, node.arguments, scope, params);
  });

  // perform code generation
  gen = Object(_expression_codegen__WEBPACK_IMPORTED_MODULE_0__["codeGenerator"])(ast);

  // collect signal dependencies
  gen.globals.forEach(function(name) {
    var signalName = signalPrefix + name;
    if (!params.hasOwnProperty(signalName) && scope.getSignal(name)) {
      params[signalName] = scope.signalRef(name);
    }
  });

  // return generated expression code and dependencies
  return {
    $expr:   preamble ? preamble + 'return(' + gen.code + ');' : gen.code,
    $fields: gen.fields,
    $params: params
  };
});


/***/ }),

/***/ "Uu5a":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/inherits.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(child, parent) {
  var proto = (child.prototype = Object.create(parent.prototype));
  proto.constructor = child;
  return proto;
});


/***/ }),

/***/ "Uy6m":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/definition.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _role__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./role */ "d/v9");


/* harmony default export */ __webpack_exports__["default"] = (function(spec) {
  return {
    marktype:    spec.type,
    name:        spec.name || undefined,
    role:        spec.role || Object(_role__WEBPACK_IMPORTED_MODULE_0__["default"])(spec),
    zindex:      +spec.zindex || undefined
  };
});


/***/ }),

/***/ "VKuZ":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/validate.js ***!
  \******************************************************/
/*! exports provided: DEFAULT_REQUIRED_CHANNEL_MAP, DEFAULT_SUPPORTED_CHANNEL_TYPE, getEncodingMappingError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_REQUIRED_CHANNEL_MAP", function() { return DEFAULT_REQUIRED_CHANNEL_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_SUPPORTED_CHANNEL_TYPE", function() { return DEFAULT_SUPPORTED_CHANNEL_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEncodingMappingError", function() { return getEncodingMappingError; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mark */ "fKXb");



/**
 * Required Encoding Channels for each mark type
 */
var DEFAULT_REQUIRED_CHANNEL_MAP = {
    text: ['text'],
    line: ['x', 'y'],
    trail: ['x', 'y'],
    area: ['x', 'y']
};
/**
 * Supported Encoding Channel for each mark type
 */
var DEFAULT_SUPPORTED_CHANNEL_TYPE = {
    bar: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'size', 'color', 'fill', 'stroke', 'detail']),
    line: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'color', 'detail']),
    trail: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'color', 'detail', 'size']),
    area: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'detail']),
    tick: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'detail']),
    circle: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'size', 'detail']),
    square: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'size', 'detail']),
    point: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'x', 'y', 'color', 'fill', 'stroke', 'size', 'detail', 'shape']),
    geoshape: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'color', 'fill', 'stroke', 'detail', 'shape']),
    text: Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['row', 'column', 'size', 'color', 'fill', 'stroke', 'text']) // TODO(#724) revise
};
// TODO: consider if we should add validate method and
// requires ZSchema in the main vega-lite repo
/**
 * Further check if encoding mapping of a spec is invalid and
 * return error if it is invalid.
 *
 * This checks if
 * (1) all the required encoding channels for the mark type are specified
 * (2) all the specified encoding channels are supported by the mark type
 * @param  {[type]} spec [description]
 * @param  {RequiredChannelMap = DefaultRequiredChannelMap}  requiredChannelMap
 * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap
 * @return {String} Return one reason why the encoding is invalid,
 *                  or null if the encoding is valid.
 */
function getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {
    if (requiredChannelMap === void 0) { requiredChannelMap = DEFAULT_REQUIRED_CHANNEL_MAP; }
    if (supportedChannelMap === void 0) { supportedChannelMap = DEFAULT_SUPPORTED_CHANNEL_TYPE; }
    var mark = Object(_mark__WEBPACK_IMPORTED_MODULE_1__["isMarkDef"])(spec.mark) ? spec.mark.type : spec.mark;
    var encoding = spec.encoding;
    var requiredChannels = requiredChannelMap[mark];
    var supportedChannels = supportedChannelMap[mark];
    for (var i in requiredChannels) { // all required channels are in encoding`
        if (!(requiredChannels[i] in encoding)) {
            return 'Missing encoding channel \"' + requiredChannels[i] +
                '\" for mark \"' + mark + '\"';
        }
    }
    for (var channel in encoding) { // all channels in encoding are supported
        if (!supportedChannels[channel]) {
            return 'Encoding channel \"' + channel +
                '\" is not supported by mark type \"' + mark + '\"';
        }
    }
    if (mark === _mark__WEBPACK_IMPORTED_MODULE_1__["BAR"] && !encoding.x && !encoding.y) {
        return 'Missing both x and y for bar';
    }
    return null;
}
//# sourceMappingURL=validate.js.map

/***/ }),

/***/ "VX1o":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/roles.js ***!
  \*************************************************************/
/*! exports provided: MarkRole, FrameRole, ScopeRole, AxisRole, AxisDomainRole, AxisGridRole, AxisLabelRole, AxisTickRole, AxisTitleRole, LegendRole, LegendBandRole, LegendEntryRole, LegendGradientRole, LegendLabelRole, LegendSymbolRole, LegendTitleRole, TitleRole */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkRole", function() { return MarkRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return FrameRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return ScopeRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return AxisRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisDomainRole", function() { return AxisDomainRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisGridRole", function() { return AxisGridRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLabelRole", function() { return AxisLabelRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTickRole", function() { return AxisTickRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTitleRole", function() { return AxisTitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return LegendRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendBandRole", function() { return LegendBandRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendEntryRole", function() { return LegendEntryRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendGradientRole", function() { return LegendGradientRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendLabelRole", function() { return LegendLabelRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSymbolRole", function() { return LegendSymbolRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendTitleRole", function() { return LegendTitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleRole", function() { return TitleRole; });
var MarkRole = 'mark';
var FrameRole = 'frame';
var ScopeRole = 'scope';

var AxisRole = 'axis';
var AxisDomainRole = 'axis-domain';
var AxisGridRole = 'axis-grid';
var AxisLabelRole = 'axis-label';
var AxisTickRole = 'axis-tick';
var AxisTitleRole = 'axis-title';

var LegendRole = 'legend';
var LegendBandRole = 'legend-band';
var LegendEntryRole = 'legend-entry';
var LegendGradientRole = 'legend-gradient';
var LegendLabelRole = 'legend-label';
var LegendSymbolRole = 'legend-symbol';
var LegendTitleRole = 'legend-title';

var TitleRole = 'title';


/***/ }),

/***/ "VZYI":
/*!***********************************************!*\
  !*** ./node_modules/vega-statistics/index.js ***!
  \***********************************************/
/*! exports provided: bin, bootstrapCI, quartiles, random, setRandom, randomInteger, randomKDE, randomMixture, randomNormal, randomUniform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bin */ "Zt/L");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _src_bin__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_bootstrapCI__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/bootstrapCI */ "J2W8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bootstrapCI", function() { return _src_bootstrapCI__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_quartiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/quartiles */ "dg/A");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartiles", function() { return _src_quartiles__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_random__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/random */ "yD9f");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _src_random__WEBPACK_IMPORTED_MODULE_3__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return _src_random__WEBPACK_IMPORTED_MODULE_3__["setRandom"]; });

/* harmony import */ var _src_integer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/integer */ "6tJH");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInteger", function() { return _src_integer__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_kde__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/kde */ "4IJS");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomKDE", function() { return _src_kde__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_mixture__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/mixture */ "hp6z");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomMixture", function() { return _src_mixture__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_normal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/normal */ "Z0rA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return _src_normal__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_uniform__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/uniform */ "Z1hK");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return _src_uniform__WEBPACK_IMPORTED_MODULE_8__["default"]; });












/***/ }),

/***/ "Vpq7":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/events.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EventStream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventStream */ "yiO1");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor. The input must
 *  support the addEventListener method.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @param {function(object): *} [apply] - Event application function.
 *   If provided, this function will be invoked and the result will be
 *   used as the downstream event value.
 * @return {EventStream}
 */
/* harmony default export */ __webpack_exports__["default"] = (function(source, type, filter, apply) {
  var df = this,
      s = Object(_EventStream__WEBPACK_IMPORTED_MODULE_0__["stream"])(filter, apply),
      send = function(e) {
        e.dataflow = df;
        try {
          s.receive(e);
        } catch (error) {
          df.error(error);
        } finally {
          df.run();
        }
      },
      sources;

  if (typeof source === 'string' && typeof document !== 'undefined') {
    sources = document.querySelectorAll(source);
  } else {
    sources = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(source);
  }

  for (var i=0, n=sources.length; i<n; ++i) {
    sources[i].addEventListener(type, send);
  }

  return s;
});


/***/ }),

/***/ "VuCQ":
/*!**************************************************!*\
  !*** ./node_modules/vega-util/src/visitArray.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, filter, visitor) {
  if (array) {
    var i = 0, n = array.length, t;
    if (filter) {
      for (; i<n; ++i) {
        if (t = filter(array[i])) visitor(t, i, array);
      }
    } else {
      array.forEach(visitor);
    }
  }
});


/***/ }),

/***/ "W0Rg":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/parse.js ***!
  \**********************************************************************/
/*! exports provided: parseProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseProjection", function() { return parseProjection; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _projection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../projection */ "fCHC");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./component */ "J06u");








function parseProjection(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model)) {
        model.component.projection = parseUnitProjection(model);
    }
    else {
        // because parse happens from leaves up (unit specs before layer spec),
        // we can be sure that the above if statement has already occurred
        // and therefore we have access to child.component.projection
        // for each of model's children
        model.component.projection = parseNonUnitProjections(model);
    }
}
function parseUnitProjection(model) {
    var specifiedProjection = model.specifiedProjection, config = model.config, hasProjection = model.hasProjection;
    if (hasProjection) {
        var data_1 = [];
        [[_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE2"]]].forEach(function (posssiblePair) {
            if (model.channelHasField(posssiblePair[0]) || model.channelHasField(posssiblePair[1])) {
                data_1.push({
                    signal: model.getName("geojson_" + data_1.length)
                });
            }
        });
        if (model.channelHasField(_channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]) && model.fieldDef(_channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]).type === _type__WEBPACK_IMPORTED_MODULE_4__["GEOJSON"]) {
            data_1.push({
                signal: model.getName("geojson_" + data_1.length)
            });
        }
        if (data_1.length === 0) {
            // main source is geojson, so we can just use that
            data_1.push(model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]));
        }
        return new _component__WEBPACK_IMPORTED_MODULE_7__["ProjectionComponent"](model.projectionName(true), tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (config.projection || {}), (specifiedProjection || {})), [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')], data_1);
    }
    return undefined;
}
function mergeIfNoConflict(first, second) {
    var allPropertiesShared = Object(_util__WEBPACK_IMPORTED_MODULE_5__["every"])(_projection__WEBPACK_IMPORTED_MODULE_3__["PROJECTION_PROPERTIES"], function (prop) {
        // neither has the poperty
        if (!first.explicit.hasOwnProperty(prop) &&
            !second.explicit.hasOwnProperty(prop)) {
            return true;
        }
        // both have property and an equal value for property
        if (first.explicit.hasOwnProperty(prop) &&
            second.explicit.hasOwnProperty(prop) &&
            // some properties might be signals or objects and require hashing for comparison
            Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(first.get(prop)) === Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(second.get(prop))) {
            return true;
        }
        return false;
    });
    var size = Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(first.size) === Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(second.size);
    if (size) {
        if (allPropertiesShared) {
            return first;
        }
        else if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(first.explicit) === Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])({})) {
            return second;
        }
        else if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])(second.explicit) === Object(_util__WEBPACK_IMPORTED_MODULE_5__["stringify"])({})) {
            return first;
        }
    }
    // if all properties don't match, let each unit spec have its own projection
    return null;
}
function parseNonUnitProjections(model) {
    if (model.children.length === 0) {
        return undefined;
    }
    var nonUnitProjection;
    var mergable = Object(_util__WEBPACK_IMPORTED_MODULE_5__["every"])(model.children, function (child) {
        parseProjection(child);
        var projection = child.component.projection;
        if (!projection) {
            // child layer does not use a projection
            return true;
        }
        else if (!nonUnitProjection) {
            // cached 'projection' is null, cache this one
            nonUnitProjection = projection;
            return true;
        }
        else {
            var merge = mergeIfNoConflict(nonUnitProjection, projection);
            if (merge) {
                nonUnitProjection = merge;
            }
            return !!merge;
        }
    });
    // it cached one and all other children share the same projection,
    if (nonUnitProjection && mergable) {
        // so we can elevate it to the layer level
        var name_1 = model.projectionName(true);
        var modelProjection_1 = new _component__WEBPACK_IMPORTED_MODULE_7__["ProjectionComponent"](name_1, nonUnitProjection.specifiedProjection, nonUnitProjection.size, Object(_util__WEBPACK_IMPORTED_MODULE_5__["duplicate"])(nonUnitProjection.data));
        // rename and assign all others as merged
        model.children.forEach(function (child) {
            if (child.component.projection) {
                modelProjection_1.data = modelProjection_1.data.concat(child.component.projection.data);
                child.renameProjection(child.component.projection.get('name'), name_1);
                child.component.projection.merged = true;
            }
        });
        return modelProjection_1;
    }
    return undefined;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "W2Gv":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/isArray.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (Array.isArray);


/***/ }),

/***/ "W7Xn":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isRegExp.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object.prototype.toString.call(_) === '[object RegExp]';
});


/***/ }),

/***/ "W9vD":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/gradient.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "sXDa");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/* harmony default export */ __webpack_exports__["default"] = (function(enc, scope, params, fields) {
  return 'this.gradient('
    + Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(enc.gradient, scope, params, fields)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.start)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.stop)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.count)
    + ')';
});


/***/ }),

/***/ "WSy+":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/predicate.js ***!
  \*******************************************************/
/*! exports provided: isSelectionPredicate, isFieldEqualPredicate, isFieldLTPredicate, isFieldLTEPredicate, isFieldGTPredicate, isFieldGTEPredicate, isFieldRangePredicate, isFieldOneOfPredicate, isFieldPredicate, expression, fieldFilterExpression, normalizePredicate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionPredicate", function() { return isSelectionPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldEqualPredicate", function() { return isFieldEqualPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldLTPredicate", function() { return isFieldLTPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldLTEPredicate", function() { return isFieldLTEPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldGTPredicate", function() { return isFieldGTPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldGTEPredicate", function() { return isFieldGTEPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldRangePredicate", function() { return isFieldRangePredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldOneOfPredicate", function() { return isFieldOneOfPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldPredicate", function() { return isFieldPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldFilterExpression", function() { return fieldFilterExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePredicate", function() { return normalizePredicate; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _compile_selection_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compile/selection/selection */ "3eK9");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fielddef */ "d61h");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timeunit */ "f7J+");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "Hc3/");






function isSelectionPredicate(predicate) {
    return predicate && predicate['selection'];
}
function isFieldEqualPredicate(predicate) {
    return predicate && !!predicate.field && predicate.equal !== undefined;
}
function isFieldLTPredicate(predicate) {
    return predicate && !!predicate.field && predicate.lt !== undefined;
}
function isFieldLTEPredicate(predicate) {
    return predicate && !!predicate.field && predicate.lte !== undefined;
}
function isFieldGTPredicate(predicate) {
    return predicate && !!predicate.field && predicate.gt !== undefined;
}
function isFieldGTEPredicate(predicate) {
    return predicate && !!predicate.field && predicate.gte !== undefined;
}
function isFieldRangePredicate(predicate) {
    if (predicate && predicate.field) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(predicate.range) && predicate.range.length === 2) {
            return true;
        }
    }
    return false;
}
function isFieldOneOfPredicate(predicate) {
    return predicate && !!predicate.field && (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(predicate.oneOf) ||
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(predicate.in) // backward compatibility
    );
}
function isFieldPredicate(predicate) {
    return isFieldOneOfPredicate(predicate) || isFieldEqualPredicate(predicate) || isFieldRangePredicate(predicate) || isFieldLTPredicate(predicate) || isFieldGTPredicate(predicate) || isFieldLTEPredicate(predicate) || isFieldGTEPredicate(predicate);
}
/**
 * Converts a predicate into an expression.
 */
// model is only used for selection filters.
function expression(model, filterOp, node) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["logicalExpr"])(filterOp, function (predicate) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(predicate)) {
            return predicate;
        }
        else if (isSelectionPredicate(predicate)) {
            return Object(_compile_selection_selection__WEBPACK_IMPORTED_MODULE_2__["selectionPredicate"])(model, predicate.selection, node);
        }
        else { // Filter Object
            return fieldFilterExpression(predicate);
        }
    });
}
function predicateValueExpr(v, timeUnit) {
    return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["valueExpr"])(v, { timeUnit: timeUnit, time: true });
}
function predicateValuesExpr(vals, timeUnit) {
    return vals.map(function (v) { return predicateValueExpr(v, timeUnit); });
}
// This method is used by Voyager.  Do not change its behavior without changing Voyager.
function fieldFilterExpression(predicate, useInRange) {
    if (useInRange === void 0) { useInRange = true; }
    var field = predicate.field, timeUnit = predicate.timeUnit;
    var fieldExpr = timeUnit ?
        // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.
        // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline
        // TODO: support utc
        ('time(' + Object(_timeunit__WEBPACK_IMPORTED_MODULE_4__["fieldExpr"])(timeUnit, field) + ')') :
        Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(predicate, { expr: 'datum' });
    if (isFieldEqualPredicate(predicate)) {
        return fieldExpr + '===' + predicateValueExpr(predicate.equal, timeUnit);
    }
    else if (isFieldLTPredicate(predicate)) {
        var upper = predicate.lt;
        return fieldExpr + "<" + predicateValueExpr(upper, timeUnit);
    }
    else if (isFieldGTPredicate(predicate)) {
        var lower = predicate.gt;
        return fieldExpr + ">" + predicateValueExpr(lower, timeUnit);
    }
    else if (isFieldLTEPredicate(predicate)) {
        var upper = predicate.lte;
        return fieldExpr + "<=" + predicateValueExpr(upper, timeUnit);
    }
    else if (isFieldGTEPredicate(predicate)) {
        var lower = predicate.gte;
        return fieldExpr + ">=" + predicateValueExpr(lower, timeUnit);
    }
    else if (isFieldOneOfPredicate(predicate)) {
        // "oneOf" was formerly "in" -- so we need to add backward compatibility
        var oneOf = predicate.oneOf;
        oneOf = oneOf || predicate['in'];
        return 'indexof([' +
            predicateValuesExpr(oneOf, timeUnit).join(',') +
            '], ' + fieldExpr + ') !== -1';
    }
    else if (isFieldRangePredicate(predicate)) {
        var lower = predicate.range[0];
        var upper = predicate.range[1];
        if (lower !== null && upper !== null && useInRange) {
            return 'inrange(' + fieldExpr + ', [' +
                predicateValueExpr(lower, timeUnit) + ', ' +
                predicateValueExpr(upper, timeUnit) + '])';
        }
        var exprs = [];
        if (lower !== null) {
            exprs.push(fieldExpr + " >= " + predicateValueExpr(lower, timeUnit));
        }
        if (upper !== null) {
            exprs.push(fieldExpr + " <= " + predicateValueExpr(upper, timeUnit));
        }
        return exprs.length > 0 ? exprs.join(' && ') : 'true';
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error("Invalid field predicate: " + JSON.stringify(predicate));
}
function normalizePredicate(f) {
    if (isFieldPredicate(f) && f.timeUnit) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, f, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_4__["normalizeTimeUnit"])(f.timeUnit) });
    }
    return f;
}
//# sourceMappingURL=predicate.js.map

/***/ }),

/***/ "WWKD":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util */ "Hc3/");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../selection */ "3eK9");
/* harmony import */ var _nearest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nearest */ "ikrb");




var inputBindings = {
    has: function (selCmpt) {
        return selCmpt.type === 'single' && selCmpt.resolve === 'global' &&
            selCmpt.bind && selCmpt.bind !== 'scales';
    },
    topLevelSignals: function (model, selCmpt, signals) {
        var name = selCmpt.name;
        var proj = selCmpt.project;
        var bind = selCmpt.bind;
        var datum = _nearest__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt) ?
            '(item().isVoronoi ? datum.datum : datum)' : 'datum';
        proj.forEach(function (p) {
            var sgname = Object(_util__WEBPACK_IMPORTED_MODULE_1__["varName"])(name + "_" + p.field);
            var hasSignal = signals.filter(function (s) { return s.name === sgname; });
            if (!hasSignal.length) {
                signals.unshift({
                    name: sgname,
                    value: '',
                    on: [{
                            events: selCmpt.events,
                            update: "datum && item().mark.marktype !== 'group' ? " + Object(_util__WEBPACK_IMPORTED_MODULE_1__["accessPathWithDatum"])(p.field, datum) + " : null"
                        }],
                    bind: bind[p.field] || bind[p.channel] || bind
                });
            }
        });
        return signals;
    },
    signals: function (model, selCmpt, signals) {
        var name = selCmpt.name;
        var proj = selCmpt.project;
        var signal = signals.filter(function (s) { return s.name === name + _selection__WEBPACK_IMPORTED_MODULE_2__["TUPLE"]; })[0];
        var fields = proj.map(function (p) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(p.field); }).join(', ');
        var values = proj.map(function (p) { return Object(_util__WEBPACK_IMPORTED_MODULE_1__["varName"])(name + "_" + p.field); });
        if (values.length) {
            signal.update = values.join(' && ') + " ? {fields: [" + fields + "], values: [" + values.join(', ') + "]} : null";
        }
        delete signal.value;
        delete signal.on;
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (inputBindings);
//# sourceMappingURL=inputs.js.map

/***/ }),

/***/ "WaVQ":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/constant.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isFunction */ "LOlD");


/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object(_isFunction__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : function() { return _; };
});


/***/ }),

/***/ "Wap9":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/GroupItem.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GroupItem; });
/* harmony import */ var _Item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Item */ "T8/Q");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



function GroupItem(mark) {
  _Item__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, mark);
  this.items = (this.items || []);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(GroupItem, _Item__WEBPACK_IMPORTED_MODULE_0__["default"]);


/***/ }),

/***/ "WgpX":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/expression.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../expression */ "Ut0u");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/* harmony default export */ __webpack_exports__["default"] = (function(code, scope, params, fields) {
  var expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(code, scope);
  expr.$fields.forEach(function(name) { fields[name] = 1; });
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(params, expr.$params);
  return expr.$expr;
});


/***/ }),

/***/ "WhBC":
/*!*******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/on.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Operator */ "7/cf");
/* harmony import */ var _ChangeSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ChangeSet */ "1h1d");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var SKIP = {skip: true};

/**
 * Perform operator updates in response to events. Applies an
 * update function to compute a new operator value. If the update function
 * returns a {@link ChangeSet}, the operator will be pulsed with those tuple
 * changes. Otherwise, the operator value will be updated to the return value.
 * @param {EventStream|Operator} source - The event source to react to.
 *   This argument can be either an EventStream or an Operator.
 * @param {Operator|function(object):Operator} target - The operator to update.
 *   This argument can either be an Operator instance or (if the source
 *   argument is an EventStream), a function that accepts an event object as
 *   input and returns an Operator to target.
 * @param {function(Parameters,Event): *} [update] - Optional update function
 *   to compute the new operator value, or a literal value to set. Update
 *   functions expect to receive a parameter object and event as arguments.
 *   This function can either return a new operator value or (if the source
 *   argument is an EventStream) a {@link ChangeSet} instance to pulse
 *   the target operator with tuple changes.
 * @param {object} [params] - The update function parameters.
 * @param {object} [options] - Additional options hash. If not overridden,
 *   updated operators will be skipped by default.
 * @param {boolean} [options.skip] - If true, the operator will
 *  be skipped: it will not be evaluated, but its dependents will be.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @return {Dataflow}
 */
/* harmony default export */ __webpack_exports__["default"] = (function(source, target, update, params, options) {
  var fn = source instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"] ? onOperator : onStream;
  fn(this, source, target, update, params, options);
  return this;
});

function onStream(df, stream, target, update, params, options) {
  var opt = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, options, SKIP), func, op;

  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(target)) target = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(target);

  if (update === undefined) {
    func = function(e) {
      df.touch(target(e));
    };
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(update)) {
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, update, params, false);
    func = function(e) {
      var v, t = target(e);
      op.evaluate(e);
      Object(_ChangeSet__WEBPACK_IMPORTED_MODULE_1__["isChangeSet"])(v = op.value) ? df.pulse(t, v, options) : df.update(t, v, opt);
    };
  } else {
    func = function(e) {
      df.update(target(e), update, opt);
    };
  }

  stream.apply(func);
}

function onOperator(df, source, target, update, params, options) {
  var func, op;

  if (update === undefined) {
    op = target;
  } else {
    func = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(update) ? update : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(update);
    update = !target ? func : function(_, pulse) {
      var value = func(_, pulse);
      if (!target.skip()) {
        target.skip(value !== this.value).value = value;
      }
      return value;
    };

    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, update, params, false);
    op.modified(options && options.force);
    op.rank = 0;

    if (target) {
      op.skip(true); // skip first invocation
      op.value = target.value;
      op.targets().add(target);
    }
  }

  source.targets().add(op);
}


/***/ }),

/***/ "Wi11":
/*!**********************************************!*\
  !*** ./node_modules/vega-wordcloud/index.js ***!
  \**********************************************/
/*! exports provided: wordcloud */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Wordcloud__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Wordcloud */ "2+m4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wordcloud", function() { return _src_Wordcloud__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "Wj/T":
/*!*********************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-ggplot2.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var markColor = '#000';
var ggplot2Theme = {
    group: {
        fill: '#e5e5e5',
    },
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, size: 40 },
    axis: {
        domain: false,
        grid: true,
        gridColor: '#FFFFFF',
        gridOpacity: 1,
        labelColor: '#7F7F7F',
        labelPadding: 4,
        tickColor: '#7F7F7F',
        tickSize: 5.67,
        titleFontSize: 16,
        titleFontWeight: 'normal',
    },
    legend: {
        labelBaseline: 'middle',
        labelFontSize: 11,
        symbolSize: 40,
    },
    range: {
        category: [
            '#000000',
            '#7F7F7F',
            '#1A1A1A',
            '#999999',
            '#333333',
            '#B0B0B0',
            '#4D4D4D',
            '#C9C9C9',
            '#666666',
            '#DCDCDC',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (ggplot2Theme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZ2dwbG90Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90aGVtZS1nZ3Bsb3QyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQztBQUV6QixJQUFNLFlBQVksR0FBVztJQUMzQixLQUFLLEVBQUU7UUFDTCxJQUFJLEVBQUUsU0FBUztLQUNoQjtJQUVELEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzNCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzVCLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtJQUVyQyxJQUFJLEVBQUU7UUFDSixNQUFNLEVBQUUsS0FBSztRQUNiLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsV0FBVyxFQUFFLENBQUM7UUFDZCxVQUFVLEVBQUUsU0FBUztRQUNyQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsYUFBYSxFQUFFLEVBQUU7UUFDakIsZUFBZSxFQUFFLFFBQVE7S0FDMUI7SUFFRCxNQUFNLEVBQUU7UUFDTixhQUFhLEVBQUUsUUFBUTtRQUN2QixhQUFhLEVBQUUsRUFBRTtRQUNqQixVQUFVLEVBQUUsRUFBRTtLQUNmO0lBRUQsS0FBSyxFQUFFO1FBQ0wsUUFBUSxFQUFFO1lBQ1IsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztTQUNWO0tBQ0Y7Q0FDRixDQUFDO0FBRUYsZUFBZSxZQUFZLENBQUMifQ==

/***/ }),

/***/ "Wj74":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/ticks.js ***!
  \***********************************************/
/*! exports provided: tickCount, validTicks, tickValues, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickCount", function() { return tickCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validTicks", function() { return validTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickValues", function() { return tickValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return tickFormat; });
/* harmony import */ var _scale_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale-types */ "BM/x");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-format */ "rWgG");





/**
 * Determine the tick count or interval function.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} count - The desired tick count or interval specifier.
 * @return {*} - The tick count or interval function.
 */
function tickCount(scale, count) {
  var step;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(count)) {
    step = count.step;
    count = count.interval;
  }

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(count)) {
    count = scale.type === 'time' ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_1__["timeInterval"])(count)
      : scale.type === 'utc' ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_1__["utcInterval"])(count)
      : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Only time and utc scales accept interval strings.');
    if (step) count = count.every(step);
  }

  return count;
}

/**
 * Filter a set of candidate tick values, ensuring that only tick values
 * that lie within the scale range are included.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {Array<*>} ticks - The candidate tick values.
 * @param {*} count - The tick count or interval function.
 * @return {Array<*>} - The filtered tick values.
 */
function validTicks(scale, ticks, count) {
  var range = scale.range(),
      lo = range[0],
      hi = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(range);
  if (lo > hi) {
    range = hi;
    hi = lo;
    lo = range;
  }

  ticks = ticks.filter(function(v) {
    v = scale(v);
    return !(v < lo || v > hi)
  });

  if (count > 0 && ticks.length > 1) {
    var endpoints = [ticks[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(ticks)];
    while (ticks.length > count && ticks.length >= 3) {
      ticks = ticks.filter(function(_, i) { return !(i % 2); });
    }
    if (ticks.length < 3) {
      ticks = endpoints;
    }
  }

  return ticks;
}

/**
 * Generate tick values for the given scale and approximate tick count or
 * interval value. If the scale has a 'ticks' method, it will be used to
 * generate the ticks, with the count argument passed as a parameter. If the
 * scale lacks a 'ticks' method, the full scale domain will be returned.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} [count] - The approximate number of desired ticks.
 * @return {Array<*>} - The generated tick values.
 */
function tickValues(scale, count) {
  return scale.ticks ? scale.ticks(count) : scale.domain();
}

/**
 * Generate a label format function for a scale. If the scale has a
 * 'tickFormat' method, it will be used to generate the formatter, with the
 * count and specifier arguments passed as parameters. If the scale lacks a
 * 'tickFormat' method, the returned formatter performs simple string coercion.
 * If the input scale is a logarithmic scale and the format specifier does not
 * indicate a desired decimal precision, a special variable precision formatter
 * that automatically trims trailing zeroes will be generated.
 * @param {Scale} scale - The scale for which to generate the label formatter.
 * @param {*} [count] - The approximate number of desired ticks.
 * @param {string} [specifier] - The format specifier. Must be a legal d3 4.0
 *   specifier string (see https://github.com/d3/d3-format#formatSpecifier).
 * @return {function(*):string} - The generated label formatter.
 */
function tickFormat(scale, count, specifier) {
  var format = scale.tickFormat ? scale.tickFormat(count, specifier)
    : specifier ? Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(specifier)
    : String;

  return (scale.type === _scale_types__WEBPACK_IMPORTED_MODULE_0__["Log"])
    ? filter(format, variablePrecision(specifier))
    : format;
}

function filter(sourceFormat, targetFormat) {
  return function(_) {
    return sourceFormat(_) ? targetFormat(_) : '';
  };
}

function variablePrecision(specifier) {
  var s = Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["formatSpecifier"])(specifier || ',');

  if (s.precision == null) {
    s.precision = 12;
    switch (s.type) {
      case '%': s.precision -= 2; break;
      case 'e': s.precision -= 1; break;
    }
    return trimZeroes(
      Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(s),          // number format
      Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])('.1f')(1)[1] // decimal point character
    );
  } else {
    return Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(s);
  }
}

function trimZeroes(format, decimalChar) {
  return function(x) {
    var str = format(x),
        dec = str.indexOf(decimalChar),
        idx, end;

    if (dec < 0) return str;

    idx = rightmostDigit(str, dec);
    end = idx < str.length ? str.slice(idx) : '';
    while (--idx > dec) if (str[idx] !== '0') { ++idx; break; }

    return str.slice(0, idx) + end;
  };
}

function rightmostDigit(str, dec) {
  var i = str.lastIndexOf('e'), c;
  if (i > 0) return i;
  for (i=str.length; --i > dec;) {
    c = str.charCodeAt(i);
    if (c >= 48 && c <= 57) return i + 1; // is digit
  }
}


/***/ }),

/***/ "WkDV":
/*!**************************************************!*\
  !*** ./node_modules/vega-transforms/src/Load.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Load; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Load and parse data from an external source. Marshalls parameter
 * values and then invokes the Dataflow request method.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.url - The URL to load from.
 * @param {object} params.format - The data format options.
 */
function Load(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Load, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  pulse.dataflow.request(this.target, _.url, _.format);
};


/***/ }),

/***/ "Wz0R":
/*!*********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Render.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Render; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Queue modified scenegraph items for rendering.
 * @constructor
 */
function Render(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Render, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var view = pulse.dataflow;

  pulse.visit(pulse.ALL, function(item) { view.dirty(item); });

  // set z-index dirty flag as needed
  if (pulse.fields && pulse.fields['zindex']) {
    var item = pulse.source && pulse.source[0];
    if (item) item.mark.zdirty = true;
  }
};


/***/ }),

/***/ "XGZ2":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/CanvasHandler.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CanvasHandler; });
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "kAsH");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/index */ "Mi2v");
/* harmony import */ var _util_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/events */ "zP17");
/* harmony import */ var _util_point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/point */ "4ci8");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "J29t");







function CanvasHandler(loader, tooltip) {
  _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader, tooltip);
  this._down = null;
  this._touch = null;
  this._first = true;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["inherits"])(CanvasHandler, _Handler__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.initialize = function(el, origin, obj) {
  // add event listeners
  var canvas = this._canvas = el && Object(_util_dom__WEBPACK_IMPORTED_MODULE_4__["domFind"])(el, 'canvas');
  if (canvas) {
    var that = this;
    this.events.forEach(function(type) {
      canvas.addEventListener(type, function(evt) {
        if (prototype[type]) {
          prototype[type].call(that, evt);
        } else {
          that.fire(type, evt);
        }
      });
    });
  }

  return _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.initialize.call(this, el, origin, obj);
};

// return the backing canvas instance
prototype.canvas = function() {
  return this._canvas;
};

// retrieve the current canvas context
prototype.context = function() {
  return this._canvas.getContext('2d');
};

// supported events
prototype.events = _util_events__WEBPACK_IMPORTED_MODULE_2__["Events"];

// to keep old versions of firefox happy
prototype.DOMMouseScroll = function(evt) {
  this.fire('mousewheel', evt);
};

function move(moveEvent, overEvent, outEvent) {
  return function(evt) {
    var a = this._active,
        p = this.pickEvent(evt);

    if (p === a) {
      // active item and picked item are the same
      this.fire(moveEvent, evt); // fire move
    } else {
      // active item and picked item are different
      if (!a || !a.exit) {
        // fire out for prior active item
        // suppress if active item was removed from scene
        this.fire(outEvent, evt);
      }
      this._active = p;          // set new active item
      this.fire(overEvent, evt); // fire over for new active item
      this.fire(moveEvent, evt); // fire move for new active item
    }
  };
}

function inactive(type) {
  return function(evt) {
    this.fire(type, evt);
    this._active = null;
  };
}

prototype.mousemove = move('mousemove', 'mouseover', 'mouseout');
prototype.dragover  = move('dragover', 'dragenter', 'dragleave');

prototype.mouseout  = inactive('mouseout');
prototype.dragleave = inactive('dragleave');

prototype.mousedown = function(evt) {
  this._down = this._active;
  this.fire('mousedown', evt);
};

prototype.click = function(evt) {
  if (this._down === this._active) {
    this.fire('click', evt);
    this._down = null;
  }
};

prototype.touchstart = function(evt) {
  this._touch = this.pickEvent(evt.changedTouches[0]);

  if (this._first) {
    this._active = this._touch;
    this._first = false;
  }

  this.fire('touchstart', evt, true);
};

prototype.touchmove = function(evt) {
  this.fire('touchmove', evt, true);
};

prototype.touchend = function(evt) {
  this.fire('touchend', evt, true);
  this._touch = null;
};

// fire an event
prototype.fire = function(type, evt, touch) {
  var a = touch ? this._touch : this._active,
      h = this._handlers[type], i, len;

  // set event type relative to scenegraph items
  evt.vegaType = type;

  // handle hyperlinks and tooltips first
  if (type === _util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"] && a && a.href) {
    this.handleHref(evt, a, a.href);
  } else if (type === _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"] || type === _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]) {
    this.handleTooltip(evt, a, type !== _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]);
  }

  // invoke all registered handlers
  if (h) {
    for (i=0, len=h.length; i<len; ++i) {
      h[i].handler.call(this._obj, evt, a);
    }
  }
};

// add an event handler
prototype.on = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers,
      i = this._handlerIndex(h[name], type, handler);

  if (i < 0) {
    (h[name] || (h[name] = [])).push({
      type:    type,
      handler: handler
    });
  }

  return this;
};

// remove an event handler
prototype.off = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers[name],
      i = this._handlerIndex(h, type, handler);

  if (i >= 0) {
    h.splice(i, 1);
  }

  return this;
};

prototype.pickEvent = function(evt) {
  var p = Object(_util_point__WEBPACK_IMPORTED_MODULE_3__["default"])(evt, this._canvas),
      o = this._origin;
  return this.pick(this._scene, p[0], p[1], p[0] - o[0], p[1] - o[1]);
};

// find the scenegraph item at the current mouse position
// x, y -- the absolute x, y mouse coordinates on the canvas element
// gx, gy -- the relative coordinates within the current group
prototype.pick = function(scene, x, y, gx, gy) {
  var g = this.context(),
      mark = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][scene.marktype];
  return mark.pick.call(this, g, scene, x, y, gx, gy);
};


/***/ }),

/***/ "YCOJ":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/util/UniqueList.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return UniqueList; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function UniqueList(idFunc) {
  var $ = idFunc || vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"],
      list = [],
      ids = {};

  list.add = function(_) {
    var id = $(_);
    if (!ids[id]) {
      ids[id] = 1;
      list.push(_);
    }
    return list;
  };

  list.remove = function(_) {
    var id = $(_), idx;
    if (ids[id]) {
      ids[id] = 0;
      if ((idx = list.indexOf(_)) >= 0) {
        list.splice(idx, 1);
      }
    }
    return list;
  };

  return list;
}


/***/ }),

/***/ "YEIR":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/rule.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "1/lU");
/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set */ "Fqei");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expression */ "WgpX");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/* harmony default export */ __webpack_exports__["default"] = (function(channel, rules, scope, params, fields) {
  var code = '';

  rules.forEach(function(rule) {
    var value = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(channel, rule, scope, params, fields);
    code += rule.test
      ? Object(_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(rule.test, scope, params, fields) + '?' + value + ':'
      : value;
  });

  // if no else clause, terminate with null (vega/vega#1366)
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(code) === ':') {
    code += 'null';
  }

  return Object(_set__WEBPACK_IMPORTED_MODULE_1__["default"])('o', channel, code);
});


/***/ }),

/***/ "YKfW":
/*!*****************************************************!*\
  !*** ./node_modules/topojson-client/src/reverse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, n) {
  var t, j = array.length, i = j - n;
  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
});


/***/ }),

/***/ "YL/A":
/*!********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/run.js ***!
  \********************************************************/
/*! exports provided: run, runAsync, runAfter, enqueue, getPulse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "run", function() { return run; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runAsync", function() { return runAsync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runAfter", function() { return runAfter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enqueue", function() { return enqueue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPulse", function() { return getPulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Pulse */ "8gyZ");
/* harmony import */ var _MultiPulse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MultiPulse */ "ilY1");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/UniqueList */ "YCOJ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Runs the dataflow. This method will increment the current timestamp
 * and process all updated, pulsed and touched operators. When run for
 * the first time, all registered operators will be processed. If there
 * are pending data loading operations, this method will return immediately
 * without evaluating the dataflow. Instead, the dataflow will be
 * asynchronously invoked when data loading completes. To track when dataflow
 * evaluation completes, use the {@link runAsync} method instead.
 * @param {string} [encode] - The name of an encoding set to invoke during
 *   propagation. This value is added to generated Pulse instances;
 *   operators can then respond to (or ignore) this setting as appropriate.
 *   This parameter can be used in conjunction with the Encode transform in
 *   the vega-encode module.
 */
function run(encode) {
  var df = this,
      count = 0,
      level = df.logLevel(),
      op, next, dt, error;

  if (df._pending) {
    df.info('Awaiting requests, delaying dataflow run.');
    return 0;
  }

  if (df._pulse) {
    df.error('Dataflow invoked recursively. Use the runAfter method to queue invocation.');
    return 0;
  }

  if (!df._touched.length) {
    df.info('Dataflow invoked, but nothing to do.');
    return 0;
  }

  df._pulse = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](df, ++df._clock, encode);

  if (level >= vega_util__WEBPACK_IMPORTED_MODULE_3__["Info"]) {
    dt = Date.now();
    df.debug('-- START PROPAGATION (' + df._clock + ') -----');
  }

  // initialize queue, reset touched operators
  df._touched.forEach(function(op) { df._enqueue(op, true); });
  df._touched = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_2__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_3__["id"]);

  try {
    while (df._heap.size() > 0) {
      op = df._heap.pop();

      // re-queue if rank changes
      if (op.rank !== op.qrank) { df._enqueue(op, true); continue; }

      // otherwise, evaluate the operator
      next = op.run(df._getPulse(op, encode));

      if (level >= vega_util__WEBPACK_IMPORTED_MODULE_3__["Debug"]) {
        df.debug(op.id, next === _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"] ? 'STOP' : next, op);
      }

      // propagate the pulse
      if (next !== _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"]) {
        df._pulse = next;
        if (op._targets) op._targets.forEach(function(op) { df._enqueue(op); });
      }

      // increment visit counter
      ++count;
    }
  } catch (err) {
    error = err;
  }

  // reset pulse map
  df._pulses = {};
  df._pulse = null;

  if (level >= vega_util__WEBPACK_IMPORTED_MODULE_3__["Info"]) {
    dt = Date.now() - dt;
    df.info('> Pulse ' + df._clock + ': ' + count + ' operators; ' + dt + 'ms');
  }

  if (error) {
    df._postrun = [];
    df.error(error);
  }

  if (df._onrun) {
    try { df._onrun(df, count, error); } catch (err) { df.error(err); }
  }

  // invoke callbacks queued via runAfter
  if (df._postrun.length) {
    var postrun = df._postrun;
    df._postrun = [];
    postrun
      .sort(function(a, b) { return b.priority - a.priority; })
      .forEach(function(_) { invokeCallback(df, _.callback); });
  }

  return this;
}

function invokeCallback(df, callback) {
  try { callback(df); } catch (err) { df.error(err); }
}

/**
 * Runs the dataflow and returns a Promise that resolves when the
 * propagation cycle completes. The standard run method may exit early
 * if there are pending data loading operations. In contrast, this
 * method returns a Promise to allow callers to receive notification
 * when dataflow evaluation completes.
 * @return {Promise} - A promise that resolves to this dataflow.
 */
function runAsync() {
  // return this._pending || Promise.resolve(this.run());
  return this._pending
    || (this.run() && this._pending)
    || Promise.resolve(this);
}

/**
 * Schedules a callback function to be invoked after the current pulse
 * propagation completes. If no propagation is currently occurring,
 * the function is invoked immediately.
 * @param {function(Dataflow)} callback - The callback function to run.
 *   The callback will be invoked with this Dataflow instance as its
 *   sole argument.
 * @param {boolean} enqueue - A boolean flag indicating that the
 *   callback should be queued up to run after the next propagation
 *   cycle, suppressing immediate invocation when propagation is not
 *   currently occurring.
 */
function runAfter(callback, enqueue, priority) {
  if (this._pulse || enqueue) {
    // pulse propagation is currently running, queue to run after
    this._postrun.push({
      priority: priority || 0,
      callback: callback
    });
  } else {
    // pulse propagation already complete, invoke immediately
    invokeCallback(this, callback);
  }
}

/**
 * Enqueue an operator into the priority queue for evaluation. The operator
 * will be enqueued if it has no registered pulse for the current cycle, or if
 * the force argument is true. Upon enqueue, this method also sets the
 * operator's qrank to the current rank value.
 * @param {Operator} op - The operator to enqueue.
 * @param {boolean} [force] - A flag indicating if the operator should be
 *   forceably added to the queue, even if it has already been previously
 *   enqueued during the current pulse propagation. This is useful when the
 *   dataflow graph is dynamically modified and the operator rank changes.
 */
function enqueue(op, force) {
  var p = !this._pulses[op.id];
  if (p) this._pulses[op.id] = this._pulse;
  if (p || force) {
    op.qrank = op.rank;
    this._heap.push(op);
  }
}

/**
 * Provide a correct pulse for evaluating an operator. If the operator has an
 * explicit source operator, we will try to pull the pulse(s) from it.
 * If there is an array of source operators, we build a multi-pulse.
 * Otherwise, we return a current pulse with correct source data.
 * If the pulse is the pulse map has an explicit target set, we use that.
 * Else if the pulse on the upstream source operator is current, we use that.
 * Else we use the pulse from the pulse map, but copy the source tuple array.
 * @param {Operator} op - The operator for which to get an input pulse.
 * @param {string} [encode] - An (optional) encoding set name with which to
 *   annotate the returned pulse. See {@link run} for more information.
 */
function getPulse(op, encode) {
  var s = op.source,
      stamp = this._clock,
      p;

  if (s && Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(s)) {
    p = s.map(function(_) { return _.pulse; });
    return new _MultiPulse__WEBPACK_IMPORTED_MODULE_1__["default"](this, stamp, p, encode);
  }

  p = this._pulses[op.id];
  if (s) {
    s = s.pulse;
    if (!s || s === _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"]) {
      p.source = [];
    } else if (s.stamp === stamp && p.target !== op) {
      p = s;
    } else {
      p.source = s.source;
    }
  }

  return p;
}


/***/ }),

/***/ "Yhs0":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/resolveItem.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../marks/index */ "Mi2v");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "4ci8");



/* harmony default export */ __webpack_exports__["default"] = (function(item, event, el, origin) {
  var mark = item && item.mark,
      mdef, p;

  if (mark && (mdef = _marks_index__WEBPACK_IMPORTED_MODULE_0__["default"][mark.marktype]).tip) {
    p = Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(event, el);
    p[0] -= origin[0];
    p[1] -= origin[1];
    while (item = item.mark.group) {
      p[0] -= item.x || 0;
      p[1] -= item.y || 0;
    }
    item = mdef.tip(mark.items, p);
  }

  return item;
});


/***/ }),

/***/ "YuFh":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGStringRenderer.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGStringRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "KHmK");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/index */ "Mi2v");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/tags */ "LBcO");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/text */ "/fEO");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/visit */ "TMLr");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/svg/clip */ "R+vW");
/* harmony import */ var _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/svg/metadata */ "PQn1");
/* harmony import */ var _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/svg/styles */ "4nT4");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "J29t");











function SVGStringRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);

  this._text = {
    head: '',
    bg:   '',
    root: '',
    foot: '',
    defs: '',
    body: ''
  };

  this._defs = {
    gradient: {},
    clipping: {}
  };
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["inherits"])(SVGStringRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]);
var base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);
  var o = this._origin,
      t = this._text;

  var attr = {
    class:   'marks',
    width:   this._width * this._scale,
    height:  this._height * this._scale,
    viewBox: '0 0 ' + this._width + ' ' + this._height
  };
  for (var key in _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__["default"]) {
    attr[key] = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_7__["default"][key];
  }

  t.head = Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('svg', attr);

  var bg = this._bgcolor;
  if (bg === 'transparent' || bg === 'none') bg = null;

  if (bg) {
    t.bg = Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('rect', {
      width:  this._width,
      height: this._height,
      style:  'fill: ' + bg + ';'
    }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('rect');
  } else {
    t.bg = '';
  }

  t.root = Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('g', {
    transform: 'translate(' + o + ')'
  });

  t.foot = Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('g') + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('svg');

  return this;
};

prototype.background = function() {
  var rv = base.background.apply(this, arguments);
  if (arguments.length && this._text.head) {
    this.resize(this._width, this._height, this._origin, this._scale);
  }
  return rv;
};

prototype.svg = function() {
  var t = this._text;
  return t.head + t.bg + t.defs + t.root + t.body + t.foot;
};

prototype._render = function(scene) {
  this._text.body = this.mark(scene);
  this._text.defs = this.buildDefs();
  return this;
};

prototype.buildDefs = function() {
  var all = this._defs,
      defs = '',
      i, id, def, stops;

  for (id in all.gradient) {
    def = all.gradient[id];
    stops = def.stops;

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('linearGradient', {
      id: id,
      x1: def.x1,
      x2: def.x2,
      y1: def.y1,
      y2: def.y2
    });

    for (i=0; i<stops.length; ++i) {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('stop', {
        offset: stops[i].offset,
        'stop-color': stops[i].color
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('stop');
    }

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('linearGradient');
  }

  for (id in all.clipping) {
    def = all.clipping[id];

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('clipPath', {id: id});

    if (def.path) {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('path', {
        d: def.path
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('path');
    } else {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('rect', {
        x: 0,
        y: 0,
        width: def.width,
        height: def.height
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('rect');
    }

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('clipPath');
  }

  return (defs.length > 0) ? Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('defs') + defs + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('defs') : '';
};

var object;

function emit(name, value, ns, prefixed) {
  object[prefixed || name] = value;
}

prototype.attributes = function(attr, item) {
  object = {};
  attr(emit, item, this);
  return object;
};

prototype.href = function(item) {
  var that = this,
      href = item.href,
      attr;

  if (href) {
    if (attr = that._hrefs && that._hrefs[href]) {
      return attr;
    } else {
      that.sanitizeURL(href).then(function(attr) {
        // rewrite to use xlink namespace
        // note that this will be deprecated in SVG 2.0
        attr['xlink:href'] = attr.href;
        attr.href = null;
        (that._hrefs || (that._hrefs = {}))[href] = attr;
      });
    }
  }
  return null;
};

prototype.mark = function(scene) {
  var renderer = this,
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][scene.marktype],
      tag  = mdef.tag,
      defs = this._defs,
      str = '',
      style;

  if (tag !== 'g' && scene.interactive === false) {
    style = 'style="pointer-events: none;"';
  }

  // render opening group tag
  str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('g', {
    'class': Object(_util_dom__WEBPACK_IMPORTED_MODULE_2__["cssClass"])(scene),
    'clip-path': scene.clip ? Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_6__["default"])(renderer, scene, scene.group) : null
  }, style);

  // render contained elements
  function process(item) {
    var href = renderer.href(item);
    if (href) str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('a', href);

    style = (tag !== 'g') ? applyStyles(item, scene, tag, defs) : null;
    str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])(tag, renderer.attributes(mdef.attr, item), style);

    if (tag === 'text') {
      str += escape_text(Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["textValue"])(item));
    } else if (tag === 'g') {
      str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('path', renderer.attributes(mdef.background, item),
        applyStyles(item, scene, 'bgrect', defs)) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('path');

      str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["openTag"])('g', renderer.attributes(mdef.foreground, item))
        + renderer.markGroup(item)
        + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('g');
    }

    str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])(tag);
    if (href) str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('a');
  }

  if (mdef.nested) {
    if (scene.items && scene.items.length) process(scene.items[0]);
  } else {
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_5__["visit"])(scene, process);
  }

  // render closing group tag
  return str + Object(_util_tags__WEBPACK_IMPORTED_MODULE_3__["closeTag"])('g');
};

prototype.markGroup = function(scene) {
  var renderer = this,
      str = '';

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_5__["visit"])(scene, function(item) {
    str += renderer.mark(item);
  });

  return str;
};

function applyStyles(o, mark, tag, defs) {
  if (o == null) return '';
  var i, n, prop, name, value, s = '';

  if (tag === 'bgrect' && mark.interactive === false) {
    s += 'pointer-events: none; ';
  }

  if (tag === 'text') {
    s += 'font-family: ' + Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["fontFamily"])(o) + '; ';
    s += 'font-size: ' + Object(_util_text__WEBPACK_IMPORTED_MODULE_4__["fontSize"])(o) + 'px; ';
    if (o.fontStyle) s += 'font-style: ' + o.fontStyle + '; ';
    if (o.fontVariant) s += 'font-variant: ' + o.fontVariant + '; ';
    if (o.fontWeight) s += 'font-weight: ' + o.fontWeight + '; ';
  }

  for (i=0, n=_util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styleProperties"].length; i<n; ++i) {
    prop = _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styleProperties"][i];
    name = _util_svg_styles__WEBPACK_IMPORTED_MODULE_8__["styles"][prop];
    value = o[prop];

    if (value == null) {
      if (name === 'fill') {
        s += 'fill: none; ';
      }
    } else if (value === 'transparent' && (name === 'fill' || name === 'stroke')) {
      // transparent is not a legal SVG value, so map to none instead
      s += name + ': none; ';
    } else {
      if (value.id) {
        // ensure definition is included
        defs.gradient[value.id] = value;
        value = 'url(#' + value.id + ')';
      }
      s += name + ': ' + value + '; ';
    }
  }

  return s ? 'style="' + s.trim() + '"' : null;
}

function escape_text(s) {
  return s.replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
}


/***/ }),

/***/ "YvCE":
/*!*************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/gridLayout.js ***!
  \*************************************************************/
/*! exports provided: gridLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gridLayout", function() { return gridLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "HkXN");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");




function extractGroups(group) {
  var groups = group.items,
      n = groups.length,
      i = 0, mark, items;

  var views = {
    marks:      [],
    rowheaders: [],
    rowfooters: [],
    colheaders: [],
    colfooters: [],
    rowtitle: null,
    coltitle: null
  };

  // layout axes, gather legends, collect bounds
  for (; i<n; ++i) {
    mark = groups[i];
    items = mark.items;
    if (mark.marktype === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"]) {
      switch (mark.role) {
        case _constants__WEBPACK_IMPORTED_MODULE_0__["AxisRole"]:
        case _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]:
          break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowHeader"]: addAll(items, views.rowheaders); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowFooter"]: addAll(items, views.rowfooters); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColHeader"]: addAll(items, views.colheaders); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColFooter"]: addAll(items, views.colfooters); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowTitle"]:  views.rowtitle = items[0]; break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColTitle"]:  views.coltitle = items[0]; break;
        default:        addAll(items, views.marks);
      }
    }
  }

  return views;
}

function addAll(items, array) {
  for (var i=0, n=items.length; i<n; ++i) {
    array.push(items[i]);
  }
}

function bboxFlush(item) {
  return {x1: 0, y1: 0, x2: item.width || 0, y2: item.height || 0};
}

function bboxFull(item) {
  var b = item.bounds.clone();
  return b.empty()
    ? b.set(0, 0, 0, 0)
    : b.translate(-(item.x||0), -(item.y||0));
}

function boundFlush(item, field) {
  return field === 'x1' ? (item.x || 0)
    : field === 'y1' ? (item.y || 0)
    : field === 'x2' ? (item.x || 0) + (item.width || 0)
    : field === 'y2' ? (item.y || 0) + (item.height || 0)
    : undefined;
}

function boundFull(item, field) {
  return item.bounds[field];
}

function get(opt, key, d) {
  var v = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(opt) ? opt[key] : opt;
  return v != null ? v : (d !== undefined ? d : 0);
}

function offsetValue(v) {
  return v < 0 ? Math.ceil(-v) : 0;
}

function gridLayout(view, group, opt) {
  var views = extractGroups(group, opt),
      groups = views.marks,
      flush = opt.bounds === _constants__WEBPACK_IMPORTED_MODULE_0__["Flush"],
      bbox = flush ? bboxFlush : bboxFull,
      bounds = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Bounds"](0, 0, 0, 0),
      alignCol = get(opt.align, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]),
      alignRow = get(opt.align, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]),
      padCol = get(opt.padding, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]),
      padRow = get(opt.padding, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]),
      off = opt.offset,
      ncols = group.columns || opt.columns || groups.length,
      nrows = ncols < 0 ? 1 : Math.ceil(groups.length / ncols),
      cells = nrows * ncols,
      xOffset = [], xExtent = [], xMax = 0, xInit = 0,
      yOffset = [], yExtent = [], yMax = 0, yInit = 0,
      n = groups.length,
      m, i, c, r, b, g, px, py, x, y, band, offset;

  for (i=0; i<ncols; ++i) {
    xExtent[i] = 0;
  }
  for (i=0; i<nrows; ++i) {
    yExtent[i] = 0;
  }

  // determine offsets for each group
  for (i=0; i<n; ++i) {
    b = bbox(groups[i]);
    c = i % ncols;
    r = ~~(i / ncols);
    px = Math.ceil(bbox(groups[i]).x2);
    py = Math.ceil(bbox(groups[i]).y2);
    xMax = Math.max(xMax, px);
    yMax = Math.max(yMax, py);
    xExtent[c] = Math.max(xExtent[c], px);
    yExtent[r] = Math.max(yExtent[r], py);
    xOffset.push(padCol + offsetValue(b.x1));
    yOffset.push(padRow + offsetValue(b.y1));
    view.dirty(groups[i]);
  }

  // set initial alignment offsets
  for (i=0; i<n; ++i) {
    if (i % ncols === 0) xOffset[i] = xInit;
    if (i < ncols) yOffset[i] = yInit;
  }

  // enforce column alignment constraints
  if (alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["Each"]) {
    for (c=1; c<ncols; ++c) {
      for (offset=0, i=c; i<n; i += ncols) {
        if (offset < xOffset[i]) offset = xOffset[i];
      }
      for (i=c; i<n; i += ncols) {
        xOffset[i] = offset + xExtent[c-1];
      }
    }
  } else if (alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["All"]) {
    for (offset=0, i=0; i<n; ++i) {
      if (i % ncols && offset < xOffset[i]) offset = xOffset[i];
    }
    for (i=0; i<n; ++i) {
      if (i % ncols) xOffset[i] = offset + xMax;
    }
  } else {
    for (alignCol=false, c=1; c<ncols; ++c) {
      for (i=c; i<n; i += ncols) {
        xOffset[i] += xExtent[c-1];
      }
    }
  }

  // enforce row alignment constraints
  if (alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["Each"]) {
    for (r=1; r<nrows; ++r) {
      for (offset=0, i=r*ncols, m=i+ncols; i<m; ++i) {
        if (offset < yOffset[i]) offset = yOffset[i];
      }
      for (i=r*ncols; i<m; ++i) {
        yOffset[i] = offset + yExtent[r-1];
      }
    }
  } else if (alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["All"]) {
    for (offset=0, i=ncols; i<n; ++i) {
      if (offset < yOffset[i]) offset = yOffset[i];
    }
    for (i=ncols; i<n; ++i) {
      yOffset[i] = offset + yMax;
    }
  } else {
    for (alignRow=false, r=1; r<nrows; ++r) {
      for (i=r*ncols, m=i+ncols; i<m; ++i) {
        yOffset[i] += yExtent[r-1];
      }
    }
  }

  // perform horizontal grid layout
  for (x=0, i=0; i<n; ++i) {
    g = groups[i];
    px = g.x || 0;
    g.x = (x = xOffset[i] + (i % ncols ? x : 0));
    g.bounds.translate(x - px, 0);
  }

  // perform vertical grid layout
  for (c=0; c<ncols; ++c) {
    for (y=0, i=c; i<n; i += ncols) {
      g = groups[i];
      py = g.y || 0;
      g.y = (y += yOffset[i]);
      g.bounds.translate(0, y - py);
    }
  }

  // perform horizontal centering
  if (get(opt.center, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]) && nrows > 1 && alignCol) {
    for (i=0; i<n; ++i) {
      g = groups[i];
      b = alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["All"] ? xMax : xExtent[i % ncols];
      x = b - bbox(g).x2;
      if (x > 0) {
        g.x += (px = x / 2);
        g.bounds.translate(px, 0);
      }
    }
  }

  // perform vertical centering
  if (get(opt.center, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]) && ncols !== 1 && alignRow) {
    for (i=0; i<n; ++i) {
      g = groups[i];
      b = alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["All"] ? yMax : yExtent[~~(i / ncols)];
      y = b - bbox(g).y2;
      if (y > 0) {
        g.y += (py = y / 2);
        g.bounds.translate(0, py);
      }
    }
  }

  // update mark bounds, mark dirty
  for (i=0; i<n; ++i) groups[i].mark.bounds.clear();
  for (i=0; i<n; ++i) {
    g = groups[i];
    view.dirty(g);
    bounds.union(g.mark.bounds.union(g.bounds));
  }

  // -- layout grid headers and footers --

  // aggregation functions for grid margin determination
  function min(a, b) { return Math.floor(Math.min(a, b)); }
  function max(a, b) { return Math.ceil(Math.max(a, b)); }

  // bounding box calculation methods
  bbox = flush ? boundFlush : boundFull;

  // perform row header layout
  band = get(opt.headerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], null);
  x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'),    min, 0, bbox, 'x1', 0, ncols, 1, band);

  // perform column header layout
  band = get(opt.headerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], null);
  y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);

  // perform row footer layout
  band = get(opt.footerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], null);
  layoutHeaders(    view, views.rowfooters, groups, ncols, nrows,  get(off, 'rowFooter'),    max, 0, bbox, 'x2', ncols-1, ncols, 1, band);

  // perform column footer layout
  band = get(opt.footerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], null);
  layoutHeaders(    view, views.colfooters, groups, ncols, ncols,  get(off, 'columnFooter'), max, 1, bbox, 'y2', cells-ncols, 1, ncols, band);

  // perform row title layout
  if (views.rowtitle) {
    offset = x - get(off, 'rowTitle');
    band = get(opt.titleBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], 0.5);
    layoutTitle(view, views.rowtitle, offset, 0, bounds, band);
  }

  // perform column title layout
  if (views.coltitle) {
    offset = y - get(off, 'columnTitle');
    band = get(opt.titleBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], 0.5);
    layoutTitle(view, views.coltitle, offset, 1, bounds, band);
  }
}

function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {
  var n = groups.length,
      init = 0,
      edge = 0,
      i, j, k, m, b, h, g, x, y;

  // if no groups, early exit and return 0
  if (!n) return init;

  // compute margin
  for (i=start; i<n; i+=stride) {
    if (groups[i]) init = agg(init, bound(groups[i], bf));
  }

  // if no headers, return margin calculation
  if (!headers.length) return init;

  // check if number of headers exceeds number of rows or columns
  if (headers.length > limit) {
    view.warn('Grid headers exceed limit: ' + limit);
    headers = headers.slice(0, limit);
  }

  // apply offset
  init += offset;

  // clear mark bounds for all headers
  for (j=0, m=headers.length; j<m; ++j) {
    view.dirty(headers[j]);
    headers[j].mark.bounds.clear();
  }

  // layout each header
  for (i=start, j=0, m=headers.length; j<m; ++j, i+=stride) {
    h = headers[j];
    b = h.mark.bounds;

    // search for nearest group to align to
    // necessary if table has empty cells
    for (k=i; k >= 0 && (g = groups[k]) == null; k-=back);

    // assign coordinates and update bounds
    if (isX) {
      x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());
      y = init;
    } else {
      x = init;
      y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());
    }
    b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));
    h.x = x;
    h.y = y;
    view.dirty(h);

    // update current edge of layout bounds
    edge = agg(edge, b[bf]);
  }

  return edge;
}

function layoutTitle(view, g, offset, isX, bounds, band) {
  if (!g) return;
  view.dirty(g);

  // compute title coordinates
  var x = offset, y = offset;
  isX
    ? (x = Math.round(bounds.x1 + band * bounds.width()))
    : (y = Math.round(bounds.y1 + band * bounds.height()));

  // assign coordinates and update bounds
  g.bounds.translate(x - (g.x || 0), y - (g.y || 0));
  g.mark.bounds.clear().union(g.bounds);
  g.x = x;
  g.y = y;

  // queue title for redraw
  view.dirty(g);
}


/***/ }),

/***/ "Z0rA":
/*!****************************************************!*\
  !*** ./node_modules/vega-statistics/src/normal.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "yD9f");


/* harmony default export */ __webpack_exports__["default"] = (function(mean, stdev) {
  var mu,
      sigma,
      next = NaN,
      dist = {};

  dist.mean = function(_) {
    if (arguments.length) {
      mu = _ || 0;
      next = NaN;
      return dist;
    } else {
      return mu;
    }
  };

  dist.stdev = function(_) {
    if (arguments.length) {
      sigma = _ == null ? 1 : _;
      next = NaN;
      return dist;
    } else {
      return sigma;
    }
  };

  dist.sample = function() {
    var x = 0, y = 0, rds, c;
    if (next === next) {
      x = next;
      next = NaN;
      return x;
    }
    do {
      x = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])() * 2 - 1;
      y = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])() * 2 - 1;
      rds = x * x + y * y;
    } while (rds === 0 || rds > 1);
    c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform
    next = mu + y * c * sigma;
    return mu + x * c * sigma;
  };

  dist.pdf = function(x) {
    var exp = Math.exp(Math.pow(x-mu, 2) / (-2 * Math.pow(sigma, 2)));
    return (1 / (sigma * Math.sqrt(2*Math.PI))) * exp;
  };

  // Approximation from West (2009)
  // Better Approximations to Cumulative Normal Functions
  dist.cdf = function(x) {
    var cd,
        z = (x - mu) / sigma,
        Z = Math.abs(z);
    if (Z > 37) {
      cd = 0;
    } else {
      var sum, exp = Math.exp(-Z*Z/2);
      if (Z < 7.07106781186547) {
        sum = 3.52624965998911e-02 * Z + 0.700383064443688;
        sum = sum * Z + 6.37396220353165;
        sum = sum * Z + 33.912866078383;
        sum = sum * Z + 112.079291497871;
        sum = sum * Z + 221.213596169931;
        sum = sum * Z + 220.206867912376;
        cd = exp * sum;
        sum = 8.83883476483184e-02 * Z + 1.75566716318264;
        sum = sum * Z + 16.064177579207;
        sum = sum * Z + 86.7807322029461;
        sum = sum * Z + 296.564248779674;
        sum = sum * Z + 637.333633378831;
        sum = sum * Z + 793.826512519948;
        sum = sum * Z + 440.413735824752;
        cd = cd / sum;
      } else {
        sum = Z + 0.65;
        sum = Z + 4 / sum;
        sum = Z + 3 / sum;
        sum = Z + 2 / sum;
        sum = Z + 1 / sum;
        cd = exp / sum / 2.506628274631;
      }
    }
    return z > 0 ? 1 - cd : cd;
  };

  // Approximation of Probit function using inverse error function.
  dist.icdf = function(p) {
    if (p <= 0 || p >= 1) return NaN;
    var x = 2*p - 1,
        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),
        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),
        b = Math.log(1 - (x*x)) / v,
        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);
    return mu + sigma * Math.SQRT2 * s;
  };

  return dist.mean(mean).stdev(stdev);
});


/***/ }),

/***/ "Z1hK":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/uniform.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "yD9f");


/* harmony default export */ __webpack_exports__["default"] = (function(min, max) {
  if (max == null) {
    max = (min == null ? 1 : min);
    min = 0;
  }

  var dist = {},
      a, b, d;

  dist.min = function(_) {
    if (arguments.length) {
      a = _ || 0;
      d = b - a;
      return dist;
    } else {
      return a;
    }
  };

  dist.max = function(_) {
    if (arguments.length) {
      b = _ || 0;
      d = b - a;
      return dist;
    } else {
      return b;
    }
  };

  dist.sample = function() {
    return a + d * Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])();
  };

  dist.pdf = function(x) {
    return (x >= a && x <= b) ? 1 / d : 0;
  };

  dist.cdf = function(x) {
    return x < a ? 0 : x > b ? 1 : (x - a) / d;
  };

  dist.icdf = function(p) {
    return (p >= 0 && p <= 1) ? a + p * d : NaN;
  };

  return dist.min(min).max(max);
});


/***/ }),

/***/ "Z42V":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/constants.js ***!
  \******************************************************************/
/*! exports provided: Top, Left, Right, Bottom, Center, Vertical, Start, Middle, End, Index, Label, Offset, Perc, Perc2, Size, Value, GuideLabelStyle, GuideTitleStyle, GroupTitleStyle, Symbols, Gradient, Discrete, LegendScales, Skip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Top", function() { return Top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Left", function() { return Left; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Right", function() { return Right; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bottom", function() { return Bottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Center", function() { return Center; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vertical", function() { return Vertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Start", function() { return Start; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Middle", function() { return Middle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "End", function() { return End; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return Index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Offset", function() { return Offset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Perc", function() { return Perc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Perc2", function() { return Perc2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Value", function() { return Value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuideLabelStyle", function() { return GuideLabelStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuideTitleStyle", function() { return GuideTitleStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupTitleStyle", function() { return GroupTitleStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return Gradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Discrete", function() { return Discrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendScales", function() { return LegendScales; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Skip", function() { return Skip; });
var Top = 'top';
var Left = 'left';
var Right = 'right';
var Bottom = 'bottom';
var Center = 'center';

var Vertical = 'vertical';

var Start = 'start';
var Middle = 'middle';
var End = 'end';

var Index  = 'index';
var Label  = 'label';
var Offset = 'offset';
var Perc   = 'perc';
var Perc2  = 'perc2';
var Size   = 'size';
var Value  = 'value';

var GuideLabelStyle = 'guide-label';
var GuideTitleStyle = 'guide-title';
var GroupTitleStyle = 'group-title';

var Symbols = 'symbol';
var Gradient = 'gradient';
var Discrete = 'discrete';

// Encoding channels supported by legends
// In priority order of 'canonical' scale
var LegendScales = [
  'size',
  'shape',
  'fill',
  'stroke',
  'strokeDash',
  'opacity'
];

var Skip = {
  name: 1,
  interactive: 1
};


/***/ }),

/***/ "ZLKQ":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/toSet.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  for (var s={}, i=0, n=_.length; i<n; ++i) s[_[i]] = true;
  return s;
});


/***/ }),

/***/ "ZQwF":
/*!****************************************************!*\
  !*** ./node_modules/vega-parser/src/transforms.js ***!
  \****************************************************/
/*! exports provided: Aggregate, AxisTicks, Bound, Collect, Compare, DataJoin, Encode, Expression, Extent, Facet, Field, Key, LegendEntries, Load, Mark, MultiExtent, MultiValues, Overlap, Params, PreFacet, Projection, Proxy, Relay, Render, Scale, Sieve, SortItems, ViewLayout, Values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Aggregate", function() { return Aggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTicks", function() { return AxisTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bound", function() { return Bound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collect", function() { return Collect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Compare", function() { return Compare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataJoin", function() { return DataJoin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Encode", function() { return Encode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expression", function() { return Expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extent", function() { return Extent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Facet", function() { return Facet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Field", function() { return Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Key", function() { return Key; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendEntries", function() { return LegendEntries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Load", function() { return Load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mark", function() { return Mark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiExtent", function() { return MultiExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiValues", function() { return MultiValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Overlap", function() { return Overlap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Params", function() { return Params; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreFacet", function() { return PreFacet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return Projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Proxy", function() { return Proxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Relay", function() { return Relay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Render", function() { return Render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sieve", function() { return Sieve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortItems", function() { return SortItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewLayout", function() { return ViewLayout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Values", function() { return Values; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "+JJI");


function transform(name) {
  return function(params, value, parent) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["entry"])(name, value, params || undefined, parent);
  };
}

var Aggregate = transform('aggregate');
var AxisTicks = transform('axisticks');
var Bound = transform('bound');
var Collect = transform('collect');
var Compare = transform('compare');
var DataJoin = transform('datajoin');
var Encode = transform('encode');
var Expression = transform('expression');
var Extent = transform('extent');
var Facet = transform('facet');
var Field = transform('field');
var Key = transform('key');
var LegendEntries = transform('legendentries');
var Load = transform('load');
var Mark = transform('mark');
var MultiExtent = transform('multiextent');
var MultiValues = transform('multivalues');
var Overlap = transform('overlap');
var Params = transform('params');
var PreFacet = transform('prefacet');
var Projection = transform('projection');
var Proxy = transform('proxy');
var Relay = transform('relay');
var Render = transform('render');
var Scale = transform('scale');
var Sieve = transform('sieve');
var SortItems = transform('sortitems');
var ViewLayout = transform('viewlayout');
var Values = transform('values');


/***/ }),

/***/ "ZWlw":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-title.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../marks/roles */ "VX1o");








/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      horizontal = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]),
      zero = {value: 0},
      encode, enter, update, titlePos;

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1},
      text: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["encoder"])(spec.title)
    },
    exit: {
      opacity: zero
    }
  };

  titlePos = {
    scale: spec.scale,
    range: 0.5
  };

  if (horizontal) {
    update.x = titlePos;
    enter.angle = {value: 0};
    enter.baseline = {value: orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] ? 'bottom' : 'top'};
  } else {
    update.y = titlePos;
    enter.angle = {value: sign * 90};
    enter.baseline = {value: 'bottom'};
  }

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'align',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleAlign', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'angle',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleAngle', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'baseline',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleBaseline', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'font',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFont', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'fontSize',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'fontWeight',  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'limit',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleLimit', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'fillOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleOpacity', spec, config));

  !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'x', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleX', spec, config), 'update')
    && horizontal && !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["has"])('x', userEncode)
    && (encode.enter.auto = {value: true});

  !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'y', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleY', spec, config), 'update')
    && !horizontal && !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["has"])('y', userEncode)
    && (encode.enter.auto = {value: true});

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisTitleRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideTitleStyle"], null, dataRef, encode, userEncode);
});


/***/ }),

/***/ "ZYJ9":
/*!*************************************************************!*\
  !*** ./node_modules/json-stringify-pretty-compact/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function stringify (obj, options) {
  options = options || {}
  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3)
  var addMargin = get(options, 'margins', false)
  var maxLength = (indent === '' ? Infinity : get(options, 'maxLength', 80))

  return (function _stringify (obj, currentIndent, reserved) {
    if (obj && typeof obj.toJSON === 'function') {
      obj = obj.toJSON()
    }

    var string = JSON.stringify(obj)

    if (string === undefined) {
      return string
    }

    var length = maxLength - currentIndent.length - reserved

    if (string.length <= length) {
      var prettified = prettify(string, addMargin)
      if (prettified.length <= length) {
        return prettified
      }
    }

    if (typeof obj === 'object' && obj !== null) {
      var nextIndent = currentIndent + indent
      var items = []
      var delimiters
      var comma = function (array, index) {
        return (index === array.length - 1 ? 0 : 1)
      }

      if (Array.isArray(obj)) {
        for (var index = 0; index < obj.length; index++) {
          items.push(
            _stringify(obj[index], nextIndent, comma(obj, index)) || 'null'
          )
        }
        delimiters = '[]'
      } else {
        Object.keys(obj).forEach(function (key, index, array) {
          var keyPart = JSON.stringify(key) + ': '
          var value = _stringify(obj[key], nextIndent,
                                 keyPart.length + comma(array, index))
          if (value !== undefined) {
            items.push(keyPart + value)
          }
        })
        delimiters = '{}'
      }

      if (items.length > 0) {
        return [
          delimiters[0],
          indent + items.join(',\n' + nextIndent),
          delimiters[1]
        ].join('\n' + currentIndent)
      }
    }

    return string
  }(obj, '', 0))
}

// Note: This regex matches even invalid JSON strings, but since we’re
// working on the output of `JSON.stringify` we know that only valid strings
// are present (unless the user supplied a weird `options.indent` but in
// that case we don’t care since the output would be invalid anyway).
var stringOrChar = /("(?:[^\\"]|\\.)*")|[:,\][}{]/g

function prettify (string, addMargin) {
  var m = addMargin ? ' ' : ''
  var tokens = {
    '{': '{' + m,
    '[': '[' + m,
    '}': m + '}',
    ']': m + ']',
    ',': ', ',
    ':': ': '
  }
  return string.replace(stringOrChar, function (match, string) {
    return string ? match : tokens[match]
  })
}

function get (options, name, defaultValue) {
  return (name in options ? options[name] : defaultValue)
}

module.exports = stringify


/***/ }),

/***/ "ZeRq":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/lookup.js ***!
  \*****************************************************************/
/*! exports provided: LookupNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LookupNode", function() { return LookupNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "LH2n");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./source */ "6g+2");





var LookupNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LookupNode, _super);
    function LookupNode(parent, transform, secondary) {
        var _this = _super.call(this, parent) || this;
        _this.transform = transform;
        _this.secondary = secondary;
        return _this;
    }
    LookupNode.make = function (parent, model, transform, counter) {
        var sources = model.component.data.sources;
        var s = new _source__WEBPACK_IMPORTED_MODULE_4__["SourceNode"](transform.from.data);
        var fromSource = sources[s.hash()];
        if (!fromSource) {
            sources[s.hash()] = s;
            fromSource = s;
        }
        var fromOutputName = model.getName("lookup_" + counter);
        var fromOutputNode = new _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"](fromSource, fromOutputName, 'lookup', model.component.data.outputNodeRefCounts);
        model.component.data.outputNodes[fromOutputName] = fromOutputNode;
        return new LookupNode(parent, transform, fromOutputNode.getSource());
    };
    LookupNode.prototype.producedFields = function () {
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(this.transform.from.fields || ((this.transform.as instanceof Array) ? this.transform.as : [this.transform.as]));
    };
    LookupNode.prototype.assemble = function () {
        var foreign;
        if (this.transform.from.fields) {
            // lookup a few fields and add create a flat output
            foreign = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ values: this.transform.from.fields }, this.transform.as ? { as: ((this.transform.as instanceof Array) ? this.transform.as : [this.transform.as]) } : {});
        }
        else {
            // lookup full record and nest it
            var asName = this.transform.as;
            if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(asName)) {
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].NO_FIELDS_NEEDS_AS);
                asName = '_lookup';
            }
            foreign = {
                as: [asName]
            };
        }
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'lookup', from: this.secondary, key: this.transform.from.key, fields: [this.transform.lookup] }, foreign, (this.transform.default ? { default: this.transform.default } : {}));
    };
    return LookupNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"]));

//# sourceMappingURL=lookup.js.map

/***/ }),

/***/ "ZqFd":
/*!*************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/TupleStore.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TupleStore; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




function TupleStore(key) {
  this._key = key ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["field"])(key) : vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"];
  this.reset();
}

var prototype = TupleStore.prototype;

prototype.reset = function() {
  this._add = [];
  this._rem = [];
  this._ext = null;
  this._get = null;
  this._q = null;
};

prototype.add = function(v) {
  this._add.push(v);
};

prototype.rem = function(v) {
  this._rem.push(v);
};

prototype.values = function() {
  this._get = null;
  if (this._rem.length === 0) return this._add;

  var a = this._add,
      r = this._rem,
      k = this._key,
      n = a.length,
      m = r.length,
      x = Array(n - m),
      map = {}, i, j, v;

  // use unique key field to clear removed values
  for (i=0; i<m; ++i) {
    map[k(r[i])] = 1;
  }
  for (i=0, j=0; i<n; ++i) {
    if (map[k(v = a[i])]) {
      map[k(v)] = 0;
    } else {
      x[j++] = v;
    }
  }

  this._rem = [];
  return (this._add = x);
};

// memoizing statistics methods

prototype.distinct = function(get) {
  var v = this.values(),
      n = v.length,
      map = {},
      count = 0, s;

  while (--n >= 0) {
    s = get(v[n]) + '';
    if (!map.hasOwnProperty(s)) {
      map[s] = 1;
      ++count;
    }
  }

  return count;
};

prototype.extent = function(get) {
  if (this._get !== get || !this._ext) {
    var v = this.values(),
        i = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extentIndex"])(v, get);
    this._ext = [v[i[0]], v[i[1]]];
    this._get = get;
  }
  return this._ext;
};

prototype.argmin = function(get) {
  return this.extent(get)[0] || {};
};

prototype.argmax = function(get) {
  return this.extent(get)[1] || {};
};

prototype.min = function(get) {
  var m = this.extent(get)[0];
  return m != null ? get(m) : +Infinity;
};

prototype.max = function(get) {
  var m = this.extent(get)[1];
  return m != null ? get(m) : -Infinity;
};

prototype.quartile = function(get) {
  if (this._get !== get || !this._q) {
    this._q = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["quartiles"])(this.values(), get);
    this._get = get;
  }
  return this._q;
};

prototype.q1 = function(get) {
  return this.quartile(get)[0];
};

prototype.q2 = function(get) {
  return this.quartile(get)[1];
};

prototype.q3 = function(get) {
  return this.quartile(get)[2];
};

prototype.ci = function(get) {
  if (this._get !== get || !this._ci) {
    this._ci = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["bootstrapCI"])(this.values(), 1000, 0.05, get);
    this._get = get;
  }
  return this._ci;
};

prototype.ci0 = function(get) {
  return this.ci(get)[0];
};

prototype.ci1 = function(get) {
  return this.ci(get)[1];
};


/***/ }),

/***/ "ZsOb":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/inscope.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(item) {
  var group = this.context.group,
      value = false;

  if (group) while (item) {
    if (item === group) { value = true; break; }
    item = item.mark.group;
  }
  return value;
});


/***/ }),

/***/ "Zt/L":
/*!*************************************************!*\
  !*** ./node_modules/vega-statistics/src/bin.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  // determine range
  var maxb = _.maxbins || 20,
      base = _.base || 10,
      logb = Math.log(base),
      div  = _.divide || [5, 2],
      min  = _.extent[0],
      max  = _.extent[1],
      span = max - min,
      step, level, minstep, precision, v, i, n, eps;

  if (_.step) {
    // if step size is explicitly given, use that
    step = _.step;
  } else if (_.steps) {
    // if provided, limit choice to acceptable step sizes
    v = span / maxb;
    for (i=0, n=_.steps.length; i < n && _.steps[i] < v; ++i);
    step = _.steps[Math.max(0, i-1)];
  } else {
    // else use span to determine step size
    level = Math.ceil(Math.log(maxb) / logb);
    minstep = _.minstep || 0;
    step = Math.max(
      minstep,
      Math.pow(base, Math.round(Math.log(span) / logb) - level)
    );

    // increase step size if too many bins
    while (Math.ceil(span/step) > maxb) { step *= base; }

    // decrease step size if allowed
    for (i=0, n=div.length; i<n; ++i) {
      v = step / div[i];
      if (v >= minstep && span / v <= maxb) step = v;
    }
  }

  // update precision, min and max
  v = Math.log(step);
  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;
  eps = Math.pow(base, -precision - 1);
  if (_.nice || _.nice === undefined) {
    v = Math.floor(min / step + eps) * step;
    min = min < v ? v - step : v;
    max = Math.ceil(max / step) * step;
  }

  return {
    start: min,
    stop:  max,
    step:  step
  };
});


/***/ }),

/***/ "a0eD":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Facet.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Facet; });
/* harmony import */ var _Subflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Subflow */ "zfIz");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Facets a dataflow into a set of subflows based on a key.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): *} params.key - The key field to facet by.
 */
function Facet(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, {}, params);
  this._keys = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["fastmap"])(); // cache previously calculated key values

  // keep track of active subflows, use as targets array for listeners
  // this allows us to limit propagation to only updated subflows
  var a = this._targets = [];
  a.active = 0;
  a.forEach = function(f) {
    for (var i=0, n=a.active; i<n; ++i) f(a[i], i, a);
  };
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Facet, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.activate = function(flow) {
  this._targets[this._targets.active++] = flow;
};

prototype.subflow = function(key, flow, pulse, parent) {
  var flows = this.value,
      sf = flows.hasOwnProperty(key) && flows[key],
      df, p;

  if (!sf) {
    p = parent || (p = this._group[key]) && p.tuple;
    df = pulse.dataflow;
    sf = df.add(new _Subflow__WEBPACK_IMPORTED_MODULE_0__["default"](pulse.fork(pulse.NO_SOURCE), this))
      .connect(flow(df, key, p));
    flows[key] = sf;
    this.activate(sf);
  } else if (sf.value.stamp < pulse.stamp) {
    sf.init(pulse);
    this.activate(sf);
  }

  return sf;
};

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      self = this,
      key = _.key,
      flow = _.subflow,
      cache = this._keys,
      rekey = _.modified('key');

  function subflow(key) {
    return self.subflow(key, flow, pulse);
  }

  this._group = _.group || {};
  this._targets.active = 0; // reset list of active subflows

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
        k = cache.get(id);
    if (k !== undefined) {
      cache.delete(id);
      subflow(k).rem(t);
    }
  });

  pulse.visit(pulse.ADD, function(t) {
    var k = key(t);
    cache.set(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), k);
    subflow(k).add(t);
  });

  if (rekey || pulse.modified(key.fields)) {
    pulse.visit(pulse.MOD, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
          k0 = cache.get(id),
          k1 = key(t);
      if (k0 === k1) {
        subflow(k1).mod(t);
      } else {
        cache.set(id, k1);
        subflow(k0).rem(t);
        subflow(k1).add(t);
      }
    });
  } else if (pulse.changed(pulse.MOD)) {
    pulse.visit(pulse.MOD, function(t) {
      subflow(cache.get(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t))).mod(t);
    });
  }

  if (rekey) {
    pulse.visit(pulse.REFLOW, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
          k0 = cache.get(id),
          k1 = key(t);
      if (k0 !== k1) {
        cache.set(id, k1);
        subflow(k0).rem(t);
        subflow(k1).add(t);
      }
    });
  }

  if (cache.empty > df.cleanThreshold) df.runAfter(cache.clean);
  return pulse;
};


/***/ }),

/***/ "a3zm":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/marktypes.js ***!
  \*****************************************************************/
/*! exports provided: GroupMark, RectMark, RuleMark, SymbolMark, TextMark */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupMark", function() { return GroupMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectMark", function() { return RectMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleMark", function() { return RuleMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SymbolMark", function() { return SymbolMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextMark", function() { return TextMark; });
var GroupMark = 'group';
var RectMark = 'rect';
var RuleMark = 'rule';
var SymbolMark = 'symbol';
var TextMark = 'text';


/***/ }),

/***/ "a40Z":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/calculate.js ***!
  \********************************************************************/
/*! exports provided: CalculateNode, sortArrayIndexField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalculateNode", function() { return CalculateNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortArrayIndexField", function() { return sortArrayIndexField; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../predicate */ "WSy+");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dataflow */ "LH2n");






/**
 * We don't know what a calculate node depends on so we should never move it beyond anything that produces fields.
 */
var CalculateNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CalculateNode, _super);
    function CalculateNode(parent, transform) {
        var _this = _super.call(this, parent) || this;
        _this.transform = transform;
        return _this;
    }
    CalculateNode.prototype.clone = function () {
        return new CalculateNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_4__["duplicate"])(this.transform));
    };
    CalculateNode.parseAllForSortIndex = function (parent, model) {
        // get all the encoding with sort fields from model
        model.forEachFieldDef(function (fieldDef, channel) {
            if (!Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["isScaleFieldDef"])(fieldDef)) {
                return;
            }
            if (Object(_sort__WEBPACK_IMPORTED_MODULE_3__["isSortArray"])(fieldDef.sort)) {
                var field_1 = fieldDef.field, timeUnit_1 = fieldDef.timeUnit;
                var sort = fieldDef.sort;
                // generate `datum["a"] === val0 ? 0 : datum["a"] === val1 ? 1 : ... : n` via FieldEqualPredicate
                var calculate = sort.map(function (sortValue, i) {
                    return Object(_predicate__WEBPACK_IMPORTED_MODULE_2__["fieldFilterExpression"])({ field: field_1, timeUnit: timeUnit_1, equal: sortValue }) + " ? " + i + " : ";
                }).join('') + sort.length;
                parent = new CalculateNode(parent, {
                    calculate: calculate,
                    as: sortArrayIndexField(fieldDef, channel)
                });
            }
        });
        return parent;
    };
    CalculateNode.prototype.producedFields = function () {
        var out = {};
        out[this.transform.as] = true;
        return out;
    };
    CalculateNode.prototype.assemble = function () {
        return {
            type: 'formula',
            expr: this.transform.calculate,
            as: this.transform.as
        };
    };
    return CalculateNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_5__["DataFlowNode"]));

function sortArrayIndexField(fieldDef, channel, expr) {
    return Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef, { prefix: channel, suffix: 'sort_index', expr: expr });
}
//# sourceMappingURL=calculate.js.map

/***/ }),

/***/ "aHhC":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/interval.js ***!
  \************************************************************************/
/*! exports provided: BRUSH, SCALE_TRIGGER, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BRUSH", function() { return BRUSH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TRIGGER", function() { return SCALE_TRIGGER; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./selection */ "3eK9");
/* harmony import */ var _transforms_scales__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transforms/scales */ "7xeG");








var BRUSH = '_brush';
var SCALE_TRIGGER = '_scale_trigger';
var interval = {
    predicate: 'vlInterval',
    scaleDomain: 'vlIntervalDomain',
    signals: function (model, selCmpt) {
        var name = selCmpt.name;
        var hasScales = _transforms_scales__WEBPACK_IMPORTED_MODULE_7__["default"].has(selCmpt);
        var signals = [];
        var intervals = [];
        var tupleTriggers = [];
        var scaleTriggers = [];
        if (selCmpt.translate && !hasScales) {
            var filterExpr_1 = "!event.item || event.item.mark.name !== " + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(name + BRUSH);
            events(selCmpt, function (_, evt) {
                var filters = evt.between[0].filter || (evt.between[0].filter = []);
                if (filters.indexOf(filterExpr_1) < 0) {
                    filters.push(filterExpr_1);
                }
            });
        }
        selCmpt.project.forEach(function (p) {
            var channel = p.channel;
            if (channel !== _channel__WEBPACK_IMPORTED_MODULE_2__["X"] && channel !== _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]) {
                Object(_log__WEBPACK_IMPORTED_MODULE_3__["warn"])('Interval selections only support x and y encoding channels.');
                return;
            }
            var cs = channelSignals(model, selCmpt, channel);
            var dname = Object(_selection__WEBPACK_IMPORTED_MODULE_6__["channelSignalName"])(selCmpt, channel, 'data');
            var vname = Object(_selection__WEBPACK_IMPORTED_MODULE_6__["channelSignalName"])(selCmpt, channel, 'visual');
            var scaleStr = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(channel));
            var scaleType = model.getScaleComponent(channel).get('type');
            var toNum = Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasContinuousDomain"])(scaleType) ? '+' : '';
            signals.push.apply(signals, cs);
            tupleTriggers.push(dname);
            intervals.push("{encoding: " + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(channel) + ", " +
                ("field: " + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(p.field) + ", extent: " + dname + "}"));
            scaleTriggers.push({
                scaleName: model.scaleName(channel),
                expr: "(!isArray(" + dname + ") || " +
                    ("(" + toNum + "invert(" + scaleStr + ", " + vname + ")[0] === " + toNum + dname + "[0] && ") +
                    (toNum + "invert(" + scaleStr + ", " + vname + ")[1] === " + toNum + dname + "[1]))")
            });
        });
        // Proxy scale reactions to ensure that an infinite loop doesn't occur
        // when an interval selection filter touches the scale.
        if (!hasScales) {
            signals.push({
                name: name + SCALE_TRIGGER,
                update: scaleTriggers.map(function (t) { return t.expr; }).join(' && ') +
                    (" ? " + (name + SCALE_TRIGGER) + " : {}")
            });
        }
        // Only add an interval to the store if it has valid data extents. Data extents
        // are set to null if pixel extents are equal to account for intervals over
        // ordinal/nominal domains which, when inverted, will still produce a valid datum.
        return signals.concat({
            name: name + _selection__WEBPACK_IMPORTED_MODULE_6__["TUPLE"],
            on: [{
                    events: tupleTriggers.map(function (t) { return ({ signal: t }); }),
                    update: tupleTriggers.join(' && ') +
                        (" ? {unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_6__["unitName"])(model) + ", intervals: [" + intervals.join(', ') + "]} : null")
                }]
        });
    },
    modifyExpr: function (model, selCmpt) {
        var tpl = selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_6__["TUPLE"];
        return tpl + ', ' +
            (selCmpt.resolve === 'global' ? 'true' : "{unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_6__["unitName"])(model) + "}");
    },
    marks: function (model, selCmpt, marks) {
        var name = selCmpt.name;
        var _a = Object(_selection__WEBPACK_IMPORTED_MODULE_6__["positionalProjections"])(selCmpt), xi = _a.xi, yi = _a.yi;
        var store = "data(" + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_6__["STORE"]) + ")";
        // Do not add a brush if we're binding to scales.
        if (_transforms_scales__WEBPACK_IMPORTED_MODULE_7__["default"].has(selCmpt)) {
            return marks;
        }
        var update = {
            x: xi !== null ? { signal: name + "_x[0]" } : { value: 0 },
            y: yi !== null ? { signal: name + "_y[0]" } : { value: 0 },
            x2: xi !== null ? { signal: name + "_x[1]" } : { field: { group: 'width' } },
            y2: yi !== null ? { signal: name + "_y[1]" } : { field: { group: 'height' } }
        };
        // If the selection is resolved to global, only a single interval is in
        // the store. Wrap brush mark's encodings with a production rule to test
        // this based on the `unit` property. Hide the brush mark if it corresponds
        // to a unit different from the one in the store.
        if (selCmpt.resolve === 'global') {
            for (var _i = 0, _b = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(update); _i < _b.length; _i++) {
                var key = _b[_i];
                update[key] = [tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ test: store + ".length && " + store + "[0].unit === " + Object(_selection__WEBPACK_IMPORTED_MODULE_6__["unitName"])(model) }, update[key]), { value: 0 }];
            }
        }
        // Two brush marks ensure that fill colors and other aesthetic choices do
        // not interefere with the core marks, but that the brushed region can still
        // be interacted with (e.g., dragging it around).
        var _c = selCmpt.mark, fill = _c.fill, fillOpacity = _c.fillOpacity, stroke = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_c, ["fill", "fillOpacity"]);
        var vgStroke = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(stroke).reduce(function (def, k) {
            def[k] = [{
                    test: [
                        xi !== null && name + "_x[0] !== " + name + "_x[1]",
                        yi != null && name + "_y[0] !== " + name + "_y[1]",
                    ].filter(function (x) { return x; }).join(' && '),
                    value: stroke[k]
                }, { value: null }];
            return def;
        }, {});
        return [{
                name: name + BRUSH + '_bg',
                type: 'rect',
                clip: true,
                encode: {
                    enter: {
                        fill: { value: fill },
                        fillOpacity: { value: fillOpacity }
                    },
                    update: update
                }
            }].concat(marks, {
            name: name + BRUSH,
            type: 'rect',
            clip: true,
            encode: {
                enter: {
                    fill: { value: 'transparent' }
                },
                update: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, update, vgStroke)
            }
        });
    }
};
/* harmony default export */ __webpack_exports__["default"] = (interval);
/**
 * Returns the visual and data signals for an interval selection.
 */
function channelSignals(model, selCmpt, channel) {
    var vname = Object(_selection__WEBPACK_IMPORTED_MODULE_6__["channelSignalName"])(selCmpt, channel, 'visual');
    var dname = Object(_selection__WEBPACK_IMPORTED_MODULE_6__["channelSignalName"])(selCmpt, channel, 'data');
    var hasScales = _transforms_scales__WEBPACK_IMPORTED_MODULE_7__["default"].has(selCmpt);
    var scaleName = model.scaleName(channel);
    var scaleStr = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(scaleName);
    var scale = model.getScaleComponent(channel);
    var scaleType = scale ? scale.get('type') : undefined;
    var size = model.getSizeSignalRef(channel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? 'width' : 'height').signal;
    var coord = channel + "(unit)";
    var on = events(selCmpt, function (def, evt) {
        return def.concat({ events: evt.between[0], update: "[" + coord + ", " + coord + "]" }, // Brush Start
        { events: evt, update: "[" + vname + "[0], clamp(" + coord + ", 0, " + size + ")]" } // Brush End
        );
    });
    // React to pan/zooms of continuous scales. Non-continuous scales
    // (bin-linear, band, point) cannot be pan/zoomed and any other changes
    // to their domains (e.g., filtering) should clear the brushes.
    on.push({
        events: { signal: selCmpt.name + SCALE_TRIGGER },
        update: Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasContinuousDomain"])(scaleType) && !Object(_scale__WEBPACK_IMPORTED_MODULE_4__["isBinScale"])(scaleType) ?
            "[scale(" + scaleStr + ", " + dname + "[0]), scale(" + scaleStr + ", " + dname + "[1])]" : "[0, 0]"
    });
    return hasScales ? [{ name: dname, on: [] }] : [{
            name: vname, value: [], on: on
        }, {
            name: dname,
            on: [{ events: { signal: vname }, update: vname + "[0] === " + vname + "[1] ? null : invert(" + scaleStr + ", " + vname + ")" }]
        }];
}
function events(selCmpt, cb) {
    return selCmpt.events.reduce(function (on, evt) {
        if (!evt.between) {
            Object(_log__WEBPACK_IMPORTED_MODULE_3__["warn"])(evt + " is not an ordered event stream for interval selections");
            return on;
        }
        return cb(on, evt);
    }, []);
}
//# sourceMappingURL=interval.js.map

/***/ }),

/***/ "aICm":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/single.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _multi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multi */ "P+cg");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selection */ "3eK9");



var single = {
    predicate: 'vlSingle',
    scaleDomain: 'vlSingleDomain',
    signals: _multi__WEBPACK_IMPORTED_MODULE_1__["signals"],
    topLevelSignals: function (model, selCmpt, signals) {
        var hasSignal = signals.filter(function (s) { return s.name === selCmpt.name; });
        var data = "data(" + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_2__["STORE"]) + ")";
        var values = data + "[0].values";
        return hasSignal.length ? signals : signals.concat({
            name: selCmpt.name,
            update: data + ".length && {" +
                selCmpt.project.map(function (p, i) { return p.field + ": " + values + "[" + i + "]"; }).join(', ') + '}'
        });
    },
    modifyExpr: function (model, selCmpt) {
        var tpl = selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_2__["TUPLE"];
        return tpl + ', ' +
            (selCmpt.resolve === 'global' ? 'true' : "{unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_2__["unitName"])(model) + "}");
    }
};
/* harmony default export */ __webpack_exports__["default"] = (single);
//# sourceMappingURL=single.js.map

/***/ }),

/***/ "aOVj":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/shapes.js ***!
  \*********************************************************/
/*! exports provided: arc, area, line, rectangle, shape, symbol, trail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return arc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "line", function() { return line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangle", function() { return rectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shape", function() { return shape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return symbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trail", function() { return trail; });
/* harmony import */ var _curves__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curves */ "KhyV");
/* harmony import */ var _symbols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols */ "dp2b");
/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rectangle */ "3J2f");
/* harmony import */ var _trail__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./trail */ "gfSE");
/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-shape */ "8d86");








function x(item)    { return item.x || 0; }
function y(item)    { return item.y || 0; }
function w(item)    { return item.width || 0; }
function ts(item)   { return item.size || 1; }
function h(item)    { return item.height || 0; }
function xw(item)   { return (item.x || 0) + (item.width || 0); }
function yh(item)   { return (item.y || 0) + (item.height || 0); }
function sa(item)   { return item.startAngle || 0; }
function ea(item)   { return item.endAngle || 0; }
function pa(item)   { return item.padAngle || 0; }
function ir(item)   { return item.innerRadius || 0; }
function or(item)   { return item.outerRadius || 0; }
function cr(item)   { return item.cornerRadius || 0; }
function def(item)  { return !(item.defined === false); }
function size(item) { return item.size == null ? 64 : item.size; }
function type(item) { return Object(_symbols__WEBPACK_IMPORTED_MODULE_1__["default"])(item.shape || 'circle'); }

var arcShape    = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["arc"])().startAngle(sa).endAngle(ea).padAngle(pa)
                          .innerRadius(ir).outerRadius(or).cornerRadius(cr),
    areavShape  = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["area"])().x(x).y1(y).y0(yh).defined(def),
    areahShape  = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["area"])().y(y).x1(x).x0(xw).defined(def),
    lineShape   = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["line"])().x(x).y(y).defined(def),
    rectShape   = Object(_rectangle__WEBPACK_IMPORTED_MODULE_2__["default"])().x(x).y(y).width(w).height(h).cornerRadius(cr),
    symbolShape = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["symbol"])().type(type).size(size),
    trailShape  = Object(_trail__WEBPACK_IMPORTED_MODULE_3__["default"])().x(x).y(y).defined(def).size(ts);

function arc(context, item) {
  return arcShape.context(context)(item);
}

function area(context, items) {
  var item = items[0],
      interp = item.interpolate || 'linear';
  return (item.orient === 'horizontal' ? areahShape : areavShape)
    .curve(Object(_curves__WEBPACK_IMPORTED_MODULE_0__["default"])(interp, item.orient, item.tension))
    .context(context)(items);
}

function line(context, items) {
  var item = items[0],
      interp = item.interpolate || 'linear';
  return lineShape.curve(Object(_curves__WEBPACK_IMPORTED_MODULE_0__["default"])(interp, item.orient, item.tension))
    .context(context)(items);
}

function rectangle(context, item, x, y) {
  return rectShape.context(context)(item, x, y);
}

function shape(context, item) {
  return (item.mark.shape || item.shape)
    .context(context)(item);
}

function symbol(context, item) {
  return symbolShape.context(context)(item);
}

function trail(context, items) {
  return trailShape.context(context)(items);
}


/***/ }),

/***/ "aV2Y":
/*!****************************************!*\
  !*** ./node_modules/vega-lib/index.js ***!
  \****************************************/
/*! exports provided: version, Dataflow, EventStream, Parameters, Pulse, MultiPulse, Operator, Transform, changeset, ingest, isTuple, definition, transform, transforms, tupleid, scale, scheme, schemeDiscretized, interpolate, interpolateRange, timeInterval, utcInterval, projection, View, parse, expressionFunction, formatLocale, timeFormatLocale, runtime, runtimeContext, bin, bootstrapCI, quartiles, random, setRandom, randomInteger, randomKDE, randomMixture, randomNormal, randomUniform, accessor, accessorName, accessorFields, id, identity, zero, one, truthy, falsy, logger, None, Error, Warn, Info, Debug, panLinear, panLog, panPow, zoomLinear, zoomLog, zoomPow, array, compare, constant, debounce, error, extend, extentIndex, fastmap, field, inherits, isArray, isBoolean, isDate, isFunction, isNumber, isObject, isRegExp, isString, key, merge, pad, peek, repeat, splitAccessPath, stringValue, toBoolean, toDate, toNumber, toString, toSet, truncate, visitArray, loader, read, inferType, inferTypes, typeParsers, formats, Bounds, Gradient, GroupItem, ResourceLoader, Item, Scenegraph, Handler, Renderer, CanvasHandler, CanvasRenderer, SVGHandler, SVGRenderer, SVGStringRenderer, RenderType, renderModule, Marks, boundClip, boundContext, boundStroke, boundItem, boundMark, pathCurves, pathSymbols, pathRectangle, pathTrail, pathParse, pathRender, point, domCreate, domFind, domChild, domClear, openTag, closeTag, font, fontFamily, fontSize, textMetrics, resetSVGClipId, sceneEqual, pathEqual, sceneToJSON, sceneFromJSON, sceneZOrder, sceneVisit, scenePickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-transforms */ "N/Yc");
/* harmony import */ var vega_view_transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-view-transforms */ "bhoL");
/* harmony import */ var vega_encode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-encode */ "0JWn");
/* harmony import */ var vega_geo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-geo */ "4U4r");
/* harmony import */ var vega_force__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-force */ "uLgU");
/* harmony import */ var vega_hierarchy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-hierarchy */ "MbqW");
/* harmony import */ var vega_voronoi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vega-voronoi */ "8L0m");
/* harmony import */ var vega_wordcloud__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-wordcloud */ "Wi11");
/* harmony import */ var vega_crossfilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-crossfilter */ "xxEL");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./package.json */ "HIPa");
var _package_json__WEBPACK_IMPORTED_MODULE_11___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./package.json */ "HIPa", 1);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _package_json__WEBPACK_IMPORTED_MODULE_11__["version"]; });

/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["bin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bootstrapCI", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["bootstrapCI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartiles", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["quartiles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["setRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInteger", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomKDE", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomKDE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomMixture", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomMixture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomUniform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessor", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorFields"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "id", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["id"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "one", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["one"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["truthy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["falsy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logger", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["logger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "None", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["None"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Warn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Debug"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "array", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["array"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["compare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["constant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["debounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "error", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extentIndex", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["extentIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fastmap", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["fastmap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["field"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inherits", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["inherits"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["pad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "peek", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["peek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["repeat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitAccessPath", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["splitAccessPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringValue", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toBoolean", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSet", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["truncate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visitArray", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["visitArray"]; });

/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vega-loader */ "Ln7r");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loader", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["loader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "read", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["read"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["inferType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["inferTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["typeParsers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formats", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["formats"]; });

/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bounds", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Bounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Gradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupItem", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["GroupItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResourceLoader", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["ResourceLoader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Item", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Item"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scenegraph", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Scenegraph"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Handler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Renderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Renderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasHandler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["CanvasHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["CanvasRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGHandler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGStringRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGStringRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["RenderType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["renderModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Marks", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Marks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundClip", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundClip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundContext", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundStroke", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundStroke"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundItem", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundMark", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundMark"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathCurves", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathCurves"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathSymbols", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathSymbols"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRectangle", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathRectangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathTrail", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathTrail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathParse", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRender", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "point", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["point"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domCreate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domFind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domClear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["openTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["closeTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "font", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["fontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["fontSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["textMetrics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["resetSVGClipId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneToJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneFromJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneZOrder", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneZOrder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneVisit", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneVisit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scenePickVisit", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["scenePickVisit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dataflow", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Dataflow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventStream", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["EventStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parameters", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Parameters"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pulse", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Pulse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiPulse", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["MultiPulse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operator", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Operator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeset", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["changeset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["isTuple"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["definition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transforms"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"]; });

/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["scale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["scheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDiscretized", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["schemeDiscretized"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["interpolateRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["timeInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcInterval", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["utcInterval"]; });

/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! vega-projection */ "HD69");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return vega_projection__WEBPACK_IMPORTED_MODULE_16__["projection"]; });

/* harmony import */ var vega_view__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! vega-view */ "0Iqw");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "View", function() { return vega_view__WEBPACK_IMPORTED_MODULE_17__["View"]; });

/* harmony import */ var vega_parser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! vega-parser */ "Je5T");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return vega_parser__WEBPACK_IMPORTED_MODULE_18__["parse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return vega_parser__WEBPACK_IMPORTED_MODULE_18__["expressionFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return vega_parser__WEBPACK_IMPORTED_MODULE_18__["formatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return vega_parser__WEBPACK_IMPORTED_MODULE_18__["timeFormatLocale"]; });

/* harmony import */ var vega_runtime__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vega-runtime */ "7U5j");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runtime", function() { return vega_runtime__WEBPACK_IMPORTED_MODULE_19__["parse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runtimeContext", function() { return vega_runtime__WEBPACK_IMPORTED_MODULE_19__["context"]; });

// -- Transforms -----












Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transforms"], vega_transforms__WEBPACK_IMPORTED_MODULE_2__, vega_view_transforms__WEBPACK_IMPORTED_MODULE_3__, vega_encode__WEBPACK_IMPORTED_MODULE_4__, vega_geo__WEBPACK_IMPORTED_MODULE_5__, vega_force__WEBPACK_IMPORTED_MODULE_6__, vega_hierarchy__WEBPACK_IMPORTED_MODULE_7__, vega_voronoi__WEBPACK_IMPORTED_MODULE_8__, vega_wordcloud__WEBPACK_IMPORTED_MODULE_9__, vega_crossfilter__WEBPACK_IMPORTED_MODULE_10__);


// -- Exports -----
























/***/ }),

/***/ "aZSk":
/*!*************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/resolve.js ***!
  \*************************************************************/
/*! exports provided: defaultScaleResolve, parseGuideResolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultScaleResolve", function() { return defaultScaleResolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseGuideResolve", function() { return parseGuideResolve; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model */ "MqRG");




function defaultScaleResolve(channel, model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isFacetModel"])(model)) {
        return 'shared';
    }
    else if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isRepeatModel"])(model)) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(_channel__WEBPACK_IMPORTED_MODULE_0__["POSITION_SCALE_CHANNELS"], channel) ? 'independent' : 'shared';
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('invalid model type for resolve');
}
function parseGuideResolve(resolve, channel) {
    var channelScaleResolve = resolve.scale[channel];
    var guide = Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(_channel__WEBPACK_IMPORTED_MODULE_0__["POSITION_SCALE_CHANNELS"], channel) ? 'axis' : 'legend';
    if (channelScaleResolve === 'independent') {
        if (resolve[guide][channel] === 'shared') {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].independentScaleMeansIndependentGuide(channel));
        }
        return 'independent';
    }
    return resolve[guide][channel] || 'shared';
}
//# sourceMappingURL=resolve.js.map

/***/ }),

/***/ "aabZ":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/type.js ***!
  \****************************************************************/
/*! exports provided: scaleType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleType", function() { return scaleType; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");




/**
 * Determine if there is a specified scale type and if it is appropriate,
 * or determine default type if type is unspecified or inappropriate.
 */
// NOTE: CompassQL uses this method.
function scaleType(specifiedType, channel, fieldDef, mark, scaleConfig) {
    var defaultScaleType = defaultType(channel, fieldDef, mark, scaleConfig);
    if (!Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isScaleChannel"])(channel)) {
        // There is no scale for these channels
        return null;
    }
    if (specifiedType !== undefined) {
        // Check if explicitly specified scale type is supported by the channel
        if (!Object(_scale__WEBPACK_IMPORTED_MODULE_2__["channelSupportScaleType"])(channel, specifiedType)) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].scaleTypeNotWorkWithChannel(channel, specifiedType, defaultScaleType));
            return defaultScaleType;
        }
        // Check if explicitly specified scale type is supported by the data type
        if (!Object(_scale__WEBPACK_IMPORTED_MODULE_2__["scaleTypeSupportDataType"])(specifiedType, fieldDef.type, fieldDef.bin)) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].scaleTypeNotWorkWithFieldDef(specifiedType, defaultScaleType));
            return defaultScaleType;
        }
        return specifiedType;
    }
    return defaultScaleType;
}
/**
 * Determine appropriate default scale type.
 */
// NOTE: Voyager uses this method.
function defaultType(channel, fieldDef, mark, scaleConfig) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isColorChannel"])(channel) || Object(_channel__WEBPACK_IMPORTED_MODULE_0__["rangeType"])(channel) === 'discrete') {
                if (channel === 'shape' && fieldDef.type === 'ordinal') {
                    _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].discreteChannelCannotEncode(channel, 'ordinal'));
                }
                return 'ordinal';
            }
            if (_util__WEBPACK_IMPORTED_MODULE_3__["contains"](['x', 'y'], channel)) {
                if (_util__WEBPACK_IMPORTED_MODULE_3__["contains"](['rect', 'bar', 'rule'], mark)) {
                    // The rect/bar mark should fit into a band.
                    // For rule, using band scale to make rule align with axis ticks better https://github.com/vega/vega-lite/issues/3429
                    return 'band';
                }
                if (mark === 'bar') {
                    return 'band';
                }
            }
            // Otherwise, use ordinal point scale so we can easily get center positions of the marks.
            return 'point';
        case 'temporal':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isColorChannel"])(channel)) {
                return 'sequential';
            }
            else if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["rangeType"])(channel) === 'discrete') {
                _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].discreteChannelCannotEncode(channel, 'temporal'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            return 'time';
        case 'quantitative':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isColorChannel"])(channel)) {
                if (fieldDef.bin) {
                    return 'bin-ordinal';
                }
                // Use `sequential` as the default color scale for continuous data
                // since it supports both array range and scheme range.
                return 'sequential';
            }
            else if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["rangeType"])(channel) === 'discrete') {
                _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].discreteChannelCannotEncode(channel, 'quantitative'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            // x and y use a linear scale because selections don't work with bin scales.
            // Binned scales apply discretization but pan/zoom apply transformations to a [min, max] extent domain.
            if (fieldDef.bin && channel !== 'x' && channel !== 'y') {
                return 'bin-linear';
            }
            return 'linear';
        case 'latitude':
        case 'longitude':
        case 'geojson':
            return undefined;
    }
    /* istanbul ignore next: should never reach this */
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidFieldType(fieldDef.type));
}
//# sourceMappingURL=type.js.map

/***/ }),

/***/ "aehT":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../selection */ "3eK9");

var TOGGLE = '_toggle';
var toggle = {
    has: function (selCmpt) {
        return selCmpt.type === 'multi' && selCmpt.toggle;
    },
    signals: function (model, selCmpt, signals) {
        return signals.concat({
            name: selCmpt.name + TOGGLE,
            value: false,
            on: [{ events: selCmpt.events, update: selCmpt.toggle }]
        });
    },
    modifyExpr: function (model, selCmpt, expr) {
        var tpl = selCmpt.name + _selection__WEBPACK_IMPORTED_MODULE_0__["TUPLE"];
        var signal = selCmpt.name + TOGGLE;
        return signal + " ? null : " + tpl + ", " +
            (selCmpt.resolve === 'global' ?
                signal + " ? null : true, " :
                signal + " ? null : {unit: " + Object(_selection__WEBPACK_IMPORTED_MODULE_0__["unitName"])(model) + "}, ") +
            (signal + " ? " + tpl + " : null");
    }
};
/* harmony default export */ __webpack_exports__["default"] = (toggle);
//# sourceMappingURL=toggle.js.map

/***/ }),

/***/ "b9FA":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundClip.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "wOpL");
/* harmony import */ var _boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundContext */ "lW0u");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var clipBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

/* harmony default export */ __webpack_exports__["default"] = (function(mark) {
  var clip = mark.clip;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(clip)) {
    clip(Object(_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(clipBounds.clear()));
  } else if (clip) {
    clipBounds.set(0, 0, mark.group.width, mark.group.height);
  } else return;

  mark.bounds.intersect(clipBounds);
});


/***/ }),

/***/ "bA7m":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/init.js ***!
  \***************************************************************/
/*! exports provided: normalizeMarkDef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeMarkDef", function() { return normalizeMarkDef; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ "ll1p");








function normalizeMarkDef(mark, encoding, config) {
    var markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isMarkDef"])(mark) ? tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, mark) : { type: mark };
    // set orient, which can be overridden by rules as sometimes the specified orient is invalid.
    var specifiedOrient = markDef.orient || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('orient', markDef, config);
    markDef.orient = orient(markDef.type, encoding, specifiedOrient);
    if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {
        _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].orientOverridden(markDef.orient, specifiedOrient));
    }
    // set opacity and filled if not specified in mark config
    var specifiedOpacity = markDef.opacity !== undefined ? markDef.opacity : Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('opacity', markDef, config);
    if (specifiedOpacity === undefined) {
        markDef.opacity = opacity(markDef.type, encoding);
    }
    var specifiedFilled = markDef.filled;
    if (specifiedFilled === undefined) {
        markDef.filled = filled(markDef, config);
    }
    // set cursor, which should be pointer if href channel is present unless otherwise specified
    var specifiedCursor = markDef.cursor || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('cursor', markDef, config);
    if (specifiedCursor === undefined) {
        markDef.cursor = cursor(markDef, encoding, config);
    }
    return markDef;
}
function cursor(markDef, encoding, config) {
    if (encoding.href || markDef.href || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('href', markDef, config)) {
        return 'pointer';
    }
    return markDef.cursor;
}
function opacity(mark, encoding) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_mark__WEBPACK_IMPORTED_MODULE_4__["POINT"], _mark__WEBPACK_IMPORTED_MODULE_4__["TICK"], _mark__WEBPACK_IMPORTED_MODULE_4__["CIRCLE"], _mark__WEBPACK_IMPORTED_MODULE_4__["SQUARE"]], mark)) {
        // point-based marks
        if (!Object(_encoding__WEBPACK_IMPORTED_MODULE_1__["isAggregate"])(encoding)) {
            return 0.7;
        }
    }
    return undefined;
}
function filled(markDef, config) {
    var filledConfig = Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('filled', markDef, config);
    var mark = markDef.type;
    return filledConfig !== undefined ? filledConfig : mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["POINT"] && mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["LINE"] && mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"];
}
function orient(mark, encoding, specifiedOrient) {
    switch (mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_4__["POINT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["CIRCLE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["SQUARE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TEXT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["RECT"]:
            // orient is meaningless for these marks.
            return undefined;
    }
    var yIsRange = encoding.y2;
    var xIsRange = encoding.x2;
    switch (mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_4__["BAR"]:
            if (yIsRange || xIsRange) {
                // Ranged bar does not always have clear orientation, so we allow overriding
                if (specifiedOrient) {
                    return specifiedOrient;
                }
                // If y is range and x is non-range, non-bin Q, y is likely a prebinned field
                var xDef = encoding.x;
                if (!xIsRange && Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(xDef) && xDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["QUANTITATIVE"] && !xDef.bin) {
                    return 'horizontal';
                }
                // If x is range and y is non-range, non-bin Q, x is likely a prebinned field
                var yDef = encoding.y;
                if (!yIsRange && Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(yDef) && yDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["QUANTITATIVE"] && !yDef.bin) {
                    return 'vertical';
                }
            }
        /* tslint:disable */
        case _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"]: // intentionally fall through
            // return undefined for line segment rule and bar with both axis ranged
            if (xIsRange && yIsRange) {
                return undefined;
            }
        case _mark__WEBPACK_IMPORTED_MODULE_4__["AREA"]: // intentionally fall through
            // If there are range for both x and y, y (vertical) has higher precedence.
            if (yIsRange) {
                return 'vertical';
            }
            else if (xIsRange) {
                return 'horizontal';
            }
            else if (mark === _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"]) {
                if (encoding.x && !encoding.y) {
                    return 'vertical';
                }
                else if (encoding.y && !encoding.x) {
                    return 'horizontal';
                }
            }
        case _mark__WEBPACK_IMPORTED_MODULE_4__["LINE"]: // intentional fall through
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TICK"]: // Tick is opposite to bar, line, area and never have ranged mark.
            /* tslint:enable */
            var xIsContinuous = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(encoding.x) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isContinuous"])(encoding.x);
            var yIsContinuous = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(encoding.y) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isContinuous"])(encoding.y);
            if (xIsContinuous && !yIsContinuous) {
                return mark !== 'tick' ? 'horizontal' : 'vertical';
            }
            else if (!xIsContinuous && yIsContinuous) {
                return mark !== 'tick' ? 'vertical' : 'horizontal';
            }
            else if (xIsContinuous && yIsContinuous) {
                var xDef = encoding.x; // we can cast here since they are surely fieldDef
                var yDef = encoding.y;
                var xIsTemporal = xDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["TEMPORAL"];
                var yIsTemporal = yDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["TEMPORAL"];
                // temporal without timeUnit is considered continuous, but better serves as dimension
                if (xIsTemporal && !yIsTemporal) {
                    return mark !== 'tick' ? 'vertical' : 'horizontal';
                }
                else if (!xIsTemporal && yIsTemporal) {
                    return mark !== 'tick' ? 'horizontal' : 'vertical';
                }
                if (!xDef.aggregate && yDef.aggregate) {
                    return mark !== 'tick' ? 'vertical' : 'horizontal';
                }
                else if (xDef.aggregate && !yDef.aggregate) {
                    return mark !== 'tick' ? 'horizontal' : 'vertical';
                }
                if (specifiedOrient) {
                    // When ambiguous, use user specified one.
                    return specifiedOrient;
                }
                return 'vertical';
            }
            else {
                // Discrete x Discrete case
                if (specifiedOrient) {
                    // When ambiguous, use user specified one.
                    return specifiedOrient;
                }
                return undefined;
            }
    }
    return 'vertical';
}
//# sourceMappingURL=init.js.map

/***/ }),

/***/ "bJLr":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/geoshape.js ***!
  \*******************************************************************/
/*! exports provided: geoshape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoshape", function() { return geoshape; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type */ "fFaC");




var geoshape = {
    vgMark: 'shape',
    encodeEntry: function (model) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }));
    },
    postEncodingTransform: function (model) {
        var encoding = model.encoding;
        var shapeDef = encoding.shape;
        var transform = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'geoshape', projection: model.projectionName() }, (shapeDef && Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(shapeDef) && shapeDef.type === _type__WEBPACK_IMPORTED_MODULE_3__["GEOJSON"] ? { field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(shapeDef, { expr: 'datum' }) } : {}));
        return [transform];
    }
};
//# sourceMappingURL=geoshape.js.map

/***/ }),

/***/ "bazI":
/*!**********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/project.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util */ "Hc3/");
/* harmony import */ var _data_timeunit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/timeunit */ "2toQ");



var project = {
    has: function (selDef) {
        var def = selDef;
        return def.fields !== undefined || def.encodings !== undefined;
    },
    parse: function (model, selDef, selCmpt) {
        var channels = {};
        var timeUnits = {};
        // TODO: find a possible channel mapping for these fields.
        (selDef.fields || []).forEach(function (field) { return channels[field] = null; });
        (selDef.encodings || []).forEach(function (channel) {
            var fieldDef = model.fieldDef(channel);
            if (fieldDef) {
                if (fieldDef.timeUnit) {
                    var tuField = model.vgField(channel);
                    channels[tuField] = channel;
                    // Construct TimeUnitComponents which will be combined into a
                    // TimeUnitNode. This node may need to be inserted into the
                    // dataflow if the selection is used across views that do not
                    // have these time units defined.
                    timeUnits[tuField] = {
                        as: tuField,
                        field: fieldDef.field,
                        timeUnit: fieldDef.timeUnit
                    };
                }
                else {
                    channels[fieldDef.field] = channel;
                }
            }
            else {
                _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].cannotProjectOnChannelWithoutField(channel));
            }
        });
        var projection = selCmpt.project || (selCmpt.project = []);
        for (var field in channels) {
            if (channels.hasOwnProperty(field)) {
                projection.push({ field: field, channel: channels[field] });
            }
        }
        var fields = selCmpt.fields || (selCmpt.fields = {});
        projection.filter(function (p) { return p.channel; }).forEach(function (p) { return fields[p.channel] = p.field; });
        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(timeUnits).length) {
            selCmpt.timeUnit = new _data_timeunit__WEBPACK_IMPORTED_MODULE_2__["TimeUnitNode"](null, timeUnits);
        }
    }
};
/* harmony default export */ __webpack_exports__["default"] = (project);
//# sourceMappingURL=project.js.map

/***/ }),

/***/ "bcOo":
/*!****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/ast.js ***!
  \****************************************************************/
/*! exports provided: Literal, Identifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Literal", function() { return Literal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Identifier", function() { return Identifier; });
var Literal = 'Literal';
var Identifier = 'Identifier';


/***/ }),

/***/ "bd+s":
/*!***************************************************!*\
  !*** ./node_modules/vega-runtime/src/dataflow.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operator */ "rrAK");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream */ "kUw3");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./update */ "2TC1");




/**
 * Parse a serialized dataflow specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var operators = spec.operators || [];

  // parse background
  if (spec.background) {
    ctx.background = spec.background;
  }

  // parse event configuration
  if (spec.eventConfig) {
    ctx.eventConfig = spec.eventConfig;
  }

  // parse operators
  operators.forEach(function(entry) {
    Object(_operator__WEBPACK_IMPORTED_MODULE_0__["default"])(entry, ctx);
  });

  // parse operator parameters
  operators.forEach(function(entry) {
    Object(_operator__WEBPACK_IMPORTED_MODULE_0__["parseOperatorParameters"])(entry, ctx);
  });

  // parse streams
  (spec.streams || []).forEach(function(entry) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(entry, ctx);
  });

  // parse updates
  (spec.updates || []).forEach(function(entry) {
    Object(_update__WEBPACK_IMPORTED_MODULE_2__["default"])(entry, ctx);
  });

  return ctx.resolve();
});


/***/ }),

/***/ "bglh":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Gradient.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var gradient_id = 0;

/* harmony default export */ __webpack_exports__["default"] = (function(p0, p1) {
  var stops = [], gradient;
  return gradient = {
    id: 'gradient_' + (gradient_id++),
    x1: p0 ? p0[0] : 0,
    y1: p0 ? p0[1] : 0,
    x2: p1 ? p1[0] : 1,
    y2: p1 ? p1[1] : 0,
    stops: stops,
    stop: function(offset, color) {
      stops.push({offset: offset, color: color});
      return gradient;
    }
  };
});


/***/ }),

/***/ "bhoL":
/*!****************************************************!*\
  !*** ./node_modules/vega-view-transforms/index.js ***!
  \****************************************************/
/*! exports provided: bound, identifier, mark, overlap, render, viewlayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Bound__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Bound */ "T+G6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bound", function() { return _src_Bound__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Identifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Identifier */ "CcjM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identifier", function() { return _src_Identifier__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Mark */ "8/Ji");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mark", function() { return _src_Mark__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Overlap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Overlap */ "Mjv8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overlap", function() { return _src_Overlap__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Render */ "Wz0R");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _src_Render__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_ViewLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/ViewLayout */ "LJ1n");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "viewlayout", function() { return _src_ViewLayout__WEBPACK_IMPORTED_MODULE_5__["default"]; });









/***/ }),

/***/ "bi7s":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/mark.js ***!
  \***************************************************************/
/*! exports provided: parseMarkGroup, getSort, pathGroupingFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseMarkGroup", function() { return parseMarkGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSort", function() { return getSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathGroupingFields", function() { return pathGroupingFields; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./area */ "iFFr");
/* harmony import */ var _bar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bar */ "Q7hp");
/* harmony import */ var _geoshape__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geoshape */ "bJLr");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./line */ "wF5L");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./point */ "ACir");
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rect */ "RT9J");
/* harmony import */ var _rule__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./rule */ "/1EK");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./text */ "nyvx");
/* harmony import */ var _tick__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tick */ "KKBd");


















var markCompiler = {
    area: _area__WEBPACK_IMPORTED_MODULE_9__["area"],
    bar: _bar__WEBPACK_IMPORTED_MODULE_10__["bar"],
    circle: _point__WEBPACK_IMPORTED_MODULE_13__["circle"],
    geoshape: _geoshape__WEBPACK_IMPORTED_MODULE_11__["geoshape"],
    line: _line__WEBPACK_IMPORTED_MODULE_12__["line"],
    point: _point__WEBPACK_IMPORTED_MODULE_13__["point"],
    rect: _rect__WEBPACK_IMPORTED_MODULE_14__["rect"],
    rule: _rule__WEBPACK_IMPORTED_MODULE_15__["rule"],
    square: _point__WEBPACK_IMPORTED_MODULE_13__["square"],
    text: _text__WEBPACK_IMPORTED_MODULE_16__["text"],
    tick: _tick__WEBPACK_IMPORTED_MODULE_17__["tick"],
    trail: _line__WEBPACK_IMPORTED_MODULE_12__["trail"]
};
function parseMarkGroup(model) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])([_mark__WEBPACK_IMPORTED_MODULE_5__["LINE"], _mark__WEBPACK_IMPORTED_MODULE_5__["AREA"], _mark__WEBPACK_IMPORTED_MODULE_5__["TRAIL"]], model.mark)) {
        return parsePathMark(model);
    }
    else {
        return getMarkGroups(model);
    }
}
var FACETED_PATH_PREFIX = 'faceted_path_';
function parsePathMark(model) {
    var details = pathGroupingFields(model.mark, model.encoding);
    var pathMarks = getMarkGroups(model, {
        // If has subfacet for line/area group, need to use faceted data from below.
        fromPrefix: (details.length > 0 ? FACETED_PATH_PREFIX : '')
    });
    if (details.length > 0) { // have level of details - need to facet line into subgroups
        // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)
        return [{
                name: model.getName('pathgroup'),
                type: 'group',
                from: {
                    facet: {
                        name: FACETED_PATH_PREFIX + model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]),
                        data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]),
                        groupby: details,
                    }
                },
                encode: {
                    update: {
                        width: { field: { group: 'width' } },
                        height: { field: { group: 'height' } }
                    }
                },
                marks: pathMarks
            }];
    }
    else {
        return pathMarks;
    }
}
function getSort(model) {
    var encoding = model.encoding, stack = model.stack, mark = model.mark, markDef = model.markDef;
    var order = encoding.order;
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(order) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isValueDef"])(order)) {
        return undefined;
    }
    else if ((Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(order) || Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(order)) && !stack) {
        // Sort by the order field if it is specified and the field is not stacked. (For stacked field, order specify stack order.)
        return Object(_common__WEBPACK_IMPORTED_MODULE_8__["sortParams"])(order, { expr: 'datum' });
    }
    else if (Object(_mark__WEBPACK_IMPORTED_MODULE_5__["isPathMark"])(mark)) {
        // For both line and area, we sort values based on dimension by default
        var dimensionChannelDef = encoding[markDef.orient === 'horizontal' ? 'y' : 'x'];
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(dimensionChannelDef)) {
            var s = dimensionChannelDef.sort;
            var sortField = Object(_sort__WEBPACK_IMPORTED_MODULE_6__["isSortField"])(s) ?
                Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])({
                    // FIXME: this op might not already exist?
                    // FIXME: what if dimensionChannel (x or y) contains custom domain?
                    aggregate: Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["isAggregate"])(model.encoding) ? s.op : undefined,
                    field: s.field
                }, { expr: 'datum' }) :
                Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(dimensionChannelDef, {
                    // For stack with imputation, we only have bin_mid
                    binSuffix: model.stack && model.stack.impute ? 'mid' : undefined,
                    expr: 'datum'
                });
            return {
                field: sortField,
                order: 'descending'
            };
        }
        return undefined;
    }
    return undefined;
}
function getMarkGroups(model, opt) {
    if (opt === void 0) { opt = { fromPrefix: '' }; }
    var mark = model.mark;
    var clip = model.markDef.clip !== undefined ?
        !!model.markDef.clip : scaleClip(model);
    var style = Object(_common__WEBPACK_IMPORTED_MODULE_8__["getStyles"])(model.markDef);
    var key = model.encoding.key;
    var sort = getSort(model);
    var postEncodingTransform = markCompiler[mark].postEncodingTransform ? markCompiler[mark].postEncodingTransform(model) : null;
    return [tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: model.getName('marks'), type: markCompiler[mark].vgMark }, (clip ? { clip: true } : {}), (style ? { style: style } : {}), (key ? { key: { field: key.field } } : {}), (sort ? { sort: sort } : {}), { from: { data: opt.fromPrefix + model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]) }, encode: {
                update: markCompiler[mark].encodeEntry(model)
            } }, (postEncodingTransform ? {
            transform: postEncodingTransform
        } : {}))];
}
/**
 * Returns list of path grouping fields
 * that the model's spec contains.
 */
function pathGroupingFields(mark, encoding) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_7__["keys"])(encoding).reduce(function (details, channel) {
        switch (channel) {
            // x, y, x2, y2, lat, long, lat1, long2, order, tooltip, href, cursor should not cause lines to group
            case 'x':
            case 'y':
            case 'order':
            case 'tooltip':
            case 'href':
            case 'x2':
            case 'y2':
            case 'latitude':
            case 'longitude':
            case 'latitude2':
            case 'longitude2':
            // TODO: case 'cursor':
            // text, shape, shouldn't be a part of line/trail/area
            case 'text':
            case 'shape':
                return details;
            case 'detail':
            case 'key':
                var channelDef = encoding[channel];
                if (channelDef) {
                    (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(function (fieldDef) {
                        if (!fieldDef.aggregate) {
                            details.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, {}));
                        }
                    });
                }
                return details;
            case 'size':
                if (mark === 'trail') {
                    // For trail, size should not group trail lines.
                    return details;
                }
            // For line, it should group lines.
            /* tslint:disable */
            // intentional fall through
            case 'color':
            case 'fill':
            case 'stroke':
            case 'opacity':
                // TODO strokeDashOffset:
                /* tslint:enable */
                var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["getFieldDef"])(encoding[channel]);
                if (fieldDef && !fieldDef.aggregate) {
                    details.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, {}));
                }
                return details;
            default:
                throw new Error("Bug: Channel " + channel + " unimplemented for line mark");
        }
    }, []);
}
/**
 * If scales are bound to interval selections, we want to automatically clip
 * marks to account for panning/zooming interactions. We identify bound scales
 * by the domainRaw property, which gets added during scale parsing.
 */
function scaleClip(model) {
    var xScale = model.getScaleComponent('x');
    var yScale = model.getScaleComponent('y');
    return (xScale && xScale.get('domainRaw')) ||
        (yScale && yScale.get('domainRaw')) ? true : false;
}
//# sourceMappingURL=mark.js.map

/***/ }),

/***/ "bnRp":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/prefixes.js ***!
  \*********************************************************************/
/*! exports provided: indexPrefix, scalePrefix, dataPrefix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexPrefix", function() { return indexPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scalePrefix", function() { return scalePrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataPrefix", function() { return dataPrefix; });
var indexPrefix  = '@';
var scalePrefix  = '%';
var dataPrefix   = ':';


/***/ }),

/***/ "cGI2":
/*!**********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/SortedIndex.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SortedIndex; });
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ "s8Kw");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "vBe5");



/**
 * Maintains a list of values, sorted by key.
 */
function SortedIndex() {
  var index = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(0),
      value = [],
      size = 0;

  function insert(key, data, base) {
    if (!data.length) return [];

    var n0 = size,
        n1 = data.length,
        addv = Array(n1),
        addi = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n1),
        oldv, oldi, i;

    for (i=0; i<n1; ++i) {
      addv[i] = key(data[i]);
      addi[i] = i;
    }
    addv = sort(addv, addi);

    if (n0) {
      oldv = value;
      oldi = index;
      value = Array(n0 + n1);
      index = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n0 + n1);
      merge(base, oldv, oldi, n0, addv, addi, n1, value, index);
    } else {
      if (base > 0) for (i=0; i<n1; ++i) {
        addi[i] += base;
      }
      value = addv;
      index = addi;
    }
    size = n0 + n1;

    return {index: addi, value: addv};
  }

  function remove(num, map) {
    // map: index -> remove
    var n = size,
        idx, i, j;

    // seek forward to first removal
    for (i=0; !map[index[i]] && i<n; ++i);

    // condense index and value arrays
    for (j=i; i<n; ++i) {
      if (!map[idx=index[i]]) {
        index[j] = idx;
        value[j] = value[i];
        ++j;
      }
    }

    size = n - num;
  }

  function reindex(map) {
    for (var i=0, n=size; i<n; ++i) {
      index[i] = map[index[i]];
    }
  }

  function bisect(range, array) {
    var n;
    if (array) {
      n = array.length;
    } else {
      array = value;
      n = size;
    }
    return [
      Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectLeft"])(array, range[0], 0, n),
      Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(array, range[1], 0, n)
    ];
  }

  return {
    insert:  insert,
    remove:  remove,
    bisect:  bisect,
    reindex: reindex,
    index:   function() { return index; },
    size:    function() { return size; }
  };
}

function sort(values, index) {
  values.sort.call(index, function(a, b) {
    var x = values[a],
        y = values[b];
    return x < y ? -1 : x > y ? 1 : 0;
  });
  return Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["permute"])(values, index);
}

function merge(base, value0, index0, n0, value1, index1, n1, value, index) {
  var i0 = 0, i1 = 0, i;

  for (i=0; i0 < n0 && i1 < n1; ++i) {
    if (value0[i0] < value1[i1]) {
      value[i] = value0[i0];
      index[i] = index0[i0++];
    } else {
      value[i] = value1[i1];
      index[i] = index1[i1++] + base;
    }
  }

  for (; i0 < n0; ++i0, ++i) {
    value[i] = value0[i0];
    index[i] = index0[i0];
  }

  for (; i1 < n1; ++i1, ++i) {
    value[i] = value1[i1];
    index[i] = index1[i1] + base;
  }
}


/***/ }),

/***/ "cKzl":
/*!*****************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/dsv.js ***!
  \*****************************************************/
/*! exports provided: delimitedFormat, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delimitedFormat", function() { return delimitedFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dsv; });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dsv */ "Ri0D");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



function delimitedFormat(delimiter) {
  return function(data, format) {
    var delim = {delimiter: delimiter};
    return dsv(data, format ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(format, delim) : delim);
  };
}

function dsv(data, format) {
  if (format.header) {
    data = format.header
      .map(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])
      .join(format.delimiter) + '\n' + data;
  }
  return Object(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["dsvFormat"])(format.delimiter).parse(data+'');
}


/***/ }),

/***/ "cLaD":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/util/Heap.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Heap; });
function Heap(comparator) {
  this.cmp = comparator;
  this.nodes = [];
}

var prototype = Heap.prototype;

prototype.size = function() {
  return this.nodes.length;
};

prototype.clear = function() {
  this.nodes = [];
  return this;
};

prototype.peek = function() {
  return this.nodes[0];
};

prototype.push = function(x) {
  var array = this.nodes;
  array.push(x);
  return siftdown(array, 0, array.length-1, this.cmp);
};

prototype.pop = function() {
  var array = this.nodes,
      last = array.pop(),
      item;

  if (array.length) {
    item = array[0];
    array[0] = last;
    siftup(array, 0, this.cmp);
  } else {
    item = last;
  }
  return item;
};

prototype.replace = function(item) {
  var array = this.nodes,
      retval = array[0];
  array[0] = item;
  siftup(array, 0, this.cmp);
  return retval;
};

prototype.pushpop = function(item) {
  var array = this.nodes, ref = array[0];
  if (array.length && this.cmp(ref, item) < 0) {
    array[0] = item;
    item = ref;
    siftup(array, 0, this.cmp);
  }
  return item;
};

function siftdown(array, start, idx, cmp) {
  var item, parent, pidx;

  item = array[idx];
  while (idx > start) {
    pidx = (idx - 1) >> 1;
    parent = array[pidx];
    if (cmp(item, parent) < 0) {
      array[idx] = parent;
      idx = pidx;
      continue;
    }
    break;
  }
  return (array[idx] = item);
}

function siftup(array, idx, cmp) {
  var start = idx,
      end = array.length,
      item = array[idx],
      cidx = 2 * idx + 1, ridx;

  while (cidx < end) {
    ridx = cidx + 1;
    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {
      cidx = ridx;
    }
    array[idx] = array[cidx];
    idx = cidx;
    cidx = 2 * idx + 1;
  }
  array[idx] = item;
  return siftdown(array, start, idx, cmp);
}


/***/ }),

/***/ "cXyK":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/axis.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_axis_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/axis-config */ "Mm2Z");
/* harmony import */ var _guides_axis_domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/axis-domain */ "gzSB");
/* harmony import */ var _guides_axis_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/axis-grid */ "DMgY");
/* harmony import */ var _guides_axis_ticks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guides/axis-ticks */ "73y2");
/* harmony import */ var _guides_axis_labels__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./guides/axis-labels */ "ySof");
/* harmony import */ var _guides_axis_title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guides/axis-title */ "ZWlw");
/* harmony import */ var _guides_guide_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guides/guide-group */ "PNr2");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guides/guide-util */ "T/Dk");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./marks/roles */ "VX1o");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mark */ "dkbZ");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./encode/encode-util */ "PkT2");
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./guides/constants */ "Z42V");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../transforms */ "ZQwF");















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = Object(_guides_axis_config__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, scope),
      encode = spec.encode || {},
      axisEncode = encode.axis || {},
      name = axisEncode.name || undefined,
      interactive = axisEncode.interactive,
      style = axisEncode.style,
      datum, dataRef, ticksRef, size, group, children;

  // single-element data source for axis group
  datum = {
    orient: spec.orient,
    ticks:  !!Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('ticks',  spec, config),
    labels: !!Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('labels', spec, config),
    grid:   !!Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('grid',   spec, config),
    domain: !!Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('domain', spec, config),
    title:  !!Object(_util__WEBPACK_IMPORTED_MODULE_12__["value"])(spec.title, false)
  };
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["Collect"])({}, [datum])));

  // encoding properties for axis group item
  axisEncode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["extendEncode"])({
    update: {
      range:        {signal: 'abs(span(range("' + spec.scale + '")))'},
      offset:       Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_util__WEBPACK_IMPORTED_MODULE_12__["value"])(spec.offset, 0)),
      position:     Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_util__WEBPACK_IMPORTED_MODULE_12__["value"])(spec.position, 0)),
      titlePadding: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('titlePadding', spec, config)),
      minExtent:    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('minExtent', spec, config)),
      maxExtent:    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('maxExtent', spec, config))
    }
  }, encode.axis, _guides_constants__WEBPACK_IMPORTED_MODULE_11__["Skip"]);

  // data source for axis ticks
  ticksRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["AxisTicks"])({
    scale:  scope.scaleRef(spec.scale),
    extra:  scope.property(Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('tickExtra', spec, config)),
    count:  scope.objectProperty(spec.tickCount),
    values: scope.objectProperty(spec.values),
    formatSpecifier: scope.property(spec.format)
  })));

  // generate axis marks
  children = [];

  // include axis gridlines if requested
  if (datum.grid) {
    children.push(Object(_guides_axis_grid__WEBPACK_IMPORTED_MODULE_2__["default"])(spec, config, encode.grid, ticksRef));
  }

  // include axis ticks if requested
  if (datum.ticks) {
    size = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('tickSize', spec, config);
    children.push(Object(_guides_axis_ticks__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.ticks, ticksRef, size));
  }

  // include axis labels if requested
  if (datum.labels) {
    size = datum.ticks ? size : 0;
    children.push(Object(_guides_axis_labels__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, config, encode.labels, ticksRef, size));
  }

  // include axis domain path if requested
  if (datum.domain) {
    children.push(Object(_guides_axis_domain__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, config, encode.domain, dataRef));
  }

  // include axis title if defined
  if (datum.title) {
    children.push(Object(_guides_axis_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, config, encode.title, dataRef));
  }

  // build axis specification
  group = Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_8__["AxisRole"], style, name, dataRef, interactive, axisEncode, children);
  if (spec.zindex) group.zindex = spec.zindex;

  // parse axis specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_9__["default"])(group, scope);
});


/***/ }),

/***/ "cf9k":
/*!*****************************************************!*\
  !*** ./node_modules/vega-runtime/src/expression.js ***!
  \*****************************************************/
/*! exports provided: default, operatorExpression, parameterExpression, eventExpression, handlerExpression, encodeExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "operatorExpression", function() { return operatorExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parameterExpression", function() { return parameterExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eventExpression", function() { return eventExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handlerExpression", function() { return handlerExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeExpression", function() { return encodeExpression; });
/**
 * Parse an expression given the argument signature and body code.
 */
function expression(args, code, ctx) {
  // wrap code in return statement if expression does not terminate
  if (code[code.length-1] !== ';') {
    code = 'return(' + code + ');';
  }
  var fn = Function.apply(null, args.concat(code));
  return ctx && ctx.functions ? fn.bind(ctx.functions) : fn;
}

/**
 * Parse an expression used to update an operator value.
 */
function operatorExpression(code, ctx) {
  return expression(['_'], code, ctx);
}

/**
 * Parse an expression provided as an operator parameter value.
 */
function parameterExpression(code, ctx) {
  return expression(['datum', '_'], code, ctx);
}

/**
 * Parse an expression applied to an event stream.
 */
function eventExpression(code, ctx) {
  return expression(['event'], code, ctx);
}

/**
 * Parse an expression used to handle an event-driven operator update.
 */
function handlerExpression(code, ctx) {
  return expression(['_', 'event'], code, ctx);
}

/**
 * Parse an expression that performs visual encoding.
 */
function encodeExpression(code, ctx) {
  return expression(['item', '_'], code, ctx);
}


/***/ }),

/***/ "cjdR":
/*!************************************************!*\
  !*** ./node_modules/vega-scale/src/schemes.js ***!
  \************************************************/
/*! exports provided: scheme, schemeDiscretized */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schemeDiscretized", function() { return schemeDiscretized; });
/* harmony import */ var _palettes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./palettes */ "Q5ZR");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale-chromatic */ "oetV");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "pD2Y");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





var discretized = {
  blueorange:  _palettes__WEBPACK_IMPORTED_MODULE_0__["blueOrange"]
};

var schemes = {
  // d3 categorical palettes
  category10:  d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeCategory10"],
  accent:      d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeAccent"],
  dark2:       d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeDark2"],
  paired:      d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemePaired"],
  pastel1:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemePastel1"],
  pastel2:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemePastel2"],
  set1:        d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeSet1"],
  set2:        d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeSet2"],
  set3:        d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["schemeSet3"],

  // additional categorical palettes
  category20:  _palettes__WEBPACK_IMPORTED_MODULE_0__["category20"],
  category20b: _palettes__WEBPACK_IMPORTED_MODULE_0__["category20b"],
  category20c: _palettes__WEBPACK_IMPORTED_MODULE_0__["category20c"],
  tableau10:   _palettes__WEBPACK_IMPORTED_MODULE_0__["tableau10"],
  tableau20:   _palettes__WEBPACK_IMPORTED_MODULE_0__["tableau20"],

  // sequential multi-hue interpolators
  viridis:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolateViridis"],
  magma:       d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolateMagma"],
  inferno:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolateInferno"],
  plasma:      d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolatePlasma"],

  // cyclic interpolators
  rainbow:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolateRainbow"],
  sinebow:     d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__["interpolateSinebow"],

  // extended interpolators
  blueorange:  Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolateRgbBasis"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(_palettes__WEBPACK_IMPORTED_MODULE_0__["blueOrange"]))
};

function add(name, suffix) {
  schemes[name] = d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__['interpolate' + suffix];
  discretized[name] = d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__['scheme' + suffix];
}

// sequential single-hue
add('blues',    'Blues');
add('greens',   'Greens');
add('greys',    'Greys');
add('purples',  'Purples');
add('reds',     'Reds');
add('oranges',  'Oranges');

// diverging
add('brownbluegreen',    'BrBG');
add('purplegreen',       'PRGn');
add('pinkyellowgreen',   'PiYG');
add('purpleorange',      'PuOr');
add('redblue',           'RdBu');
add('redgrey',           'RdGy');
add('redyellowblue',     'RdYlBu');
add('redyellowgreen',    'RdYlGn');
add('spectral',          'Spectral');

// sequential multi-hue
add('bluegreen',         'BuGn');
add('bluepurple',        'BuPu');
add('greenblue',         'GnBu');
add('orangered',         'OrRd');
add('purplebluegreen',   'PuBuGn');
add('purpleblue',        'PuBu');
add('purplered',         'PuRd');
add('redpurple',         'RdPu');
add('yellowgreenblue',   'YlGnBu');
add('yellowgreen',       'YlGn');
add('yelloworangebrown', 'YlOrBr');
add('yelloworangered',   'YlOrRd');

function scheme(name, scheme) {
  if (arguments.length > 1) {
    schemes[name] = scheme;
    return this;
  }

  var part = name.split('-');
  name = part[0];
  part = +part[1] + 1;

  return part && discretized.hasOwnProperty(name) ? discretized[name][part-1]
    : !part && schemes.hasOwnProperty(name) ? schemes[name]
    : undefined;
}

function schemeDiscretized(name, schemeArray, interpolator) {
  if (arguments.length > 1) {
    discretized[name] = schemeArray;
    schemes[name] = interpolator || Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolateRgbBasis"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(schemeArray));
    return this;
  }

  return discretized.hasOwnProperty(name)
    ? discretized[name]
    : undefined;
}


/***/ }),

/***/ "ckWy":
/*!**********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/autosize.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  spec = spec || config.autosize;
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(spec)) {
    return spec;
  } else {
    spec = spec || 'pad';
    return {type: spec};
  }
});


/***/ }),

/***/ "cq+n":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/split.js ***!
  \***********************************************************/
/*! exports provided: Split, makeExplicit, makeImplicit, tieBreakByComparing, defaultTieBreaker, mergeValuesWithExplicit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return Split; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeExplicit", function() { return makeExplicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeImplicit", function() { return makeImplicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tieBreakByComparing", function() { return tieBreakByComparing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTieBreaker", function() { return defaultTieBreaker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeValuesWithExplicit", function() { return mergeValuesWithExplicit; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "Hc3/");



/**
 * Generic class for storing properties that are explicitly specified
 * and implicitly determined by the compiler.
 * This is important for scale/axis/legend merging as
 * we want to prioritize properties that users explicitly specified.
 */
var Split = /** @class */ (function () {
    function Split(explicit, implicit) {
        if (explicit === void 0) { explicit = {}; }
        if (implicit === void 0) { implicit = {}; }
        this.explicit = explicit;
        this.implicit = implicit;
    }
    Split.prototype.clone = function () {
        return new Split(Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.explicit), Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.implicit));
    };
    Split.prototype.combine = function () {
        // FIXME remove "as any".
        // Add "as any" to avoid an error "Spread types may only be created from object types".
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.explicit, this.implicit);
    };
    Split.prototype.get = function (key) {
        // Explicit has higher precedence
        return this.explicit[key] !== undefined ? this.explicit[key] : this.implicit[key];
    };
    Split.prototype.getWithExplicit = function (key) {
        // Explicit has higher precedence
        if (this.explicit[key] !== undefined) {
            return { explicit: true, value: this.explicit[key] };
        }
        else if (this.implicit[key] !== undefined) {
            return { explicit: false, value: this.implicit[key] };
        }
        return { explicit: false, value: undefined };
    };
    Split.prototype.setWithExplicit = function (key, value) {
        if (value.value !== undefined) {
            this.set(key, value.value, value.explicit);
        }
    };
    Split.prototype.set = function (key, value, explicit) {
        delete this[explicit ? 'implicit' : 'explicit'][key];
        this[explicit ? 'explicit' : 'implicit'][key] = value;
        return this;
    };
    Split.prototype.copyKeyFromSplit = function (key, s) {
        // Explicit has higher precedence
        if (s.explicit[key] !== undefined) {
            this.set(key, s.explicit[key], true);
        }
        else if (s.implicit[key] !== undefined) {
            this.set(key, s.implicit[key], false);
        }
    };
    Split.prototype.copyKeyFromObject = function (key, s) {
        // Explicit has higher precedence
        if (s[key] !== undefined) {
            this.set(key, s[key], true);
        }
    };
    /**
     * Merge split object into this split object. Properties from the other split
     * overwrite properties from this split.
     */
    Split.prototype.copyAll = function (other) {
        for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(other.combine()); _i < _a.length; _i++) {
            var key = _a[_i];
            var val = other.getWithExplicit(key);
            this.setWithExplicit(key, val);
        }
    };
    return Split;
}());

function makeExplicit(value) {
    return {
        explicit: true,
        value: value
    };
}
function makeImplicit(value) {
    return {
        explicit: false,
        value: value
    };
}
function tieBreakByComparing(compare) {
    return function (v1, v2, property, propertyOf) {
        var diff = compare(v1.value, v2.value);
        if (diff > 0) {
            return v1;
        }
        else if (diff < 0) {
            return v2;
        }
        return defaultTieBreaker(v1, v2, property, propertyOf);
    };
}
function defaultTieBreaker(v1, v2, property, propertyOf) {
    if (v1.explicit && v2.explicit) {
        _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].mergeConflictingProperty(property, propertyOf, v1.value, v2.value));
    }
    // If equal score, prefer v1.
    return v1;
}
function mergeValuesWithExplicit(v1, v2, property, propertyOf, tieBreaker) {
    if (tieBreaker === void 0) { tieBreaker = defaultTieBreaker; }
    if (v1 === undefined || v1.value === undefined) {
        // For first run
        return v2;
    }
    if (v1.explicit && !v2.explicit) {
        return v1;
    }
    else if (v2.explicit && !v1.explicit) {
        return v2;
    }
    else if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["stringify"])(v1.value) === Object(_util__WEBPACK_IMPORTED_MODULE_2__["stringify"])(v2.value)) {
        return v1;
    }
    else {
        return tieBreaker(v1, v2, property, propertyOf);
    }
}
//# sourceMappingURL=split.js.map

/***/ }),

/***/ "crAc":
/*!***********************************************!*\
  !*** ./node_modules/vega-parser/src/Scope.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scope; });
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataScope */ "/BrR");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "+JJI");
/* harmony import */ var _parsers_expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers/expression */ "Ut0u");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






function Scope(config) {
  this.config = config;

  this.bindings = [];
  this.field = {};
  this.signals = {};
  this.lambdas = {};
  this.scales = {};
  this.events = {};
  this.data = {};

  this.streams = [];
  this.updates = [];
  this.operators = [];
  this.background = null;
  this.eventConfig = null;

  this._id = 0;
  this._subid = 0;
  this._nextsub = [0];

  this._parent = [];
  this._encode = [];
  this._lookup = [];
  this._markpath = [];
}

function Subscope(scope) {
  this.config = scope.config;

  this.field = Object.create(scope.field);
  this.signals = Object.create(scope.signals);
  this.lambdas = Object.create(scope.lambdas);
  this.scales = Object.create(scope.scales);
  this.events = Object.create(scope.events);
  this.data = Object.create(scope.data);

  this.streams = [];
  this.updates = [];
  this.operators = [];

  this._id = 0;
  this._subid = ++scope._nextsub[0];
  this._nextsub = scope._nextsub;

  this._parent = scope._parent.slice();
  this._encode = scope._encode.slice();
  this._lookup = scope._lookup.slice();
  this._markpath = scope._markpath;
}

var prototype = Scope.prototype = Subscope.prototype;

// ----

prototype.fork = function() {
  return new Subscope(this);
};

prototype.isSubscope = function() {
  return this._subid > 0;
};

prototype.toRuntime = function() {
  this.finish();
  return {
    background:  this.background,
    operators:   this.operators,
    streams:     this.streams,
    updates:     this.updates,
    bindings:    this.bindings,
    eventConfig: this.eventConfig
  };
};

prototype.id = function() {
  return (this._subid ? this._subid + ':' : 0) + this._id++;
};

prototype.add = function(op) {
  this.operators.push(op);
  op.id = this.id();
  // if pre-registration references exist, resolve them now
  if (op.refs) {
    op.refs.forEach(function(ref) { ref.$ref = op.id; });
    op.refs = null;
  }
  return op;
};

prototype.proxy = function(op) {
  var vref = op instanceof _util__WEBPACK_IMPORTED_MODULE_1__["Entry"] ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(op) : op;
  return this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Proxy"])({value: vref}));
};

prototype.addStream = function(stream) {
  this.streams.push(stream);
  stream.id = this.id();
  return stream;
};

prototype.addUpdate = function(update) {
  this.updates.push(update);
  return update;
};

// Apply metadata
prototype.finish = function() {
  var name, ds;

  // annotate root
  if (this.root) this.root.root = true;

  // annotate signals
  for (name in this.signals) {
    this.signals[name].signal = name;
  }

  // annotate scales
  for (name in this.scales) {
    this.scales[name].scale = name;
  }

  // annotate data sets
  function annotate(op, name, type) {
    var data, list;
    if (op) {
      data = op.data || (op.data = {});
      list = data[name] || (data[name] = []);
      list.push(type);
    }
  }
  for (name in this.data) {
    ds = this.data[name];
    annotate(ds.input,  name, 'input');
    annotate(ds.output, name, 'output');
    annotate(ds.values, name, 'values');
    for (var field in ds.index) {
      annotate(ds.index[field], name, 'index:' + field);
    }
  }

  return this;
};

// ----

prototype.pushState = function(encode, parent, lookup) {
  this._encode.push(Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Sieve"])({pulse: encode}))));
  this._parent.push(parent);
  this._lookup.push(lookup ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.proxy(lookup)) : null);
  this._markpath.push(-1);
};

prototype.popState = function() {
  this._encode.pop();
  this._parent.pop();
  this._lookup.pop();
  this._markpath.pop();
};

prototype.parent = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._parent);
};

prototype.encode = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._encode);
};

prototype.lookup = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._lookup);
};

prototype.markpath = function() {
  var p = this._markpath;
  return ++p[p.length-1];
};

// ----

prototype.fieldRef = function(field, name) {
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(field)) return Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(field, name);
  if (!field.signal) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unsupported field reference: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(field));
  }

  var s = field.signal,
      f = this.field[s],
      params;

  if (!f) {
    params = {name: this.signalRef(s)};
    if (name) params.as = name;
    this.field[s] = f = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Field"])(params)));
  }
  return f;
};

prototype.compareRef = function(cmp, stable) {
  function check(_) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(_)) {
      signal = true;
      return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(sig[_.signal]);
    } else {
      return _;
    }
  }

  var sig = this.signals,
      signal = false,
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(cmp.field).map(check),
      orders = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(cmp.order).map(check);

  if (stable) {
    fields.push(_util__WEBPACK_IMPORTED_MODULE_1__["tupleidRef"]);
  }

  return signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Compare"])({fields: fields, orders: orders})))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["compareRef"])(fields, orders);
};

prototype.keyRef = function(fields, flat) {
  function check(_) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(_)) {
      signal = true;
      return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(sig[_.signal]);
    } else {
      return _;
    }
  }

  var sig = this.signals,
      signal = false;
  fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(fields).map(check);

  return signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Key"])({fields: fields, flat: flat})))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["keyRef"])(fields, flat);
};

prototype.sortRef = function(sort) {
  if (!sort) return sort;

  // including id ensures stable sorting
  var a = [Object(_util__WEBPACK_IMPORTED_MODULE_1__["aggrField"])(sort.op, sort.field), _util__WEBPACK_IMPORTED_MODULE_1__["tupleidRef"]],
      o = sort.order || _util__WEBPACK_IMPORTED_MODULE_1__["Ascending"];

  return o.signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Compare"])({
        fields: a,
        orders: [o = this.signalRef(o.signal), o]
      })))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["compareRef"])(a, [o, o]);
};

// ----

prototype.event = function(source, type) {
  var key = source + ':' + type;
  if (!this.events[key]) {
    var id = this.id();
    this.streams.push({
      id: id,
      source: source,
      type: type
    });
    this.events[key] = id;
  }
  return this.events[key];
};

// ----

prototype.addSignal = function(name, value) {
  if (this.signals.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  var op = value instanceof _util__WEBPACK_IMPORTED_MODULE_1__["Entry"] ? value : this.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])(value));
  return this.signals[name] = op;
};

prototype.getSignal = function(name) {
  if (!this.signals[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.signals[name];
};

prototype.signalRef = function(s) {
  if (this.signals[s]) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.signals[s]);
  } else if (!this.lambdas.hasOwnProperty(s)) {
    this.lambdas[s] = this.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])(null));
  }
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.lambdas[s]);
};

prototype.parseLambdas = function() {
  var code = Object.keys(this.lambdas);
  for (var i=0, n=code.length; i<n; ++i) {
    var s = code[i],
        e = Object(_parsers_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(s, this),
        op = this.lambdas[s];
    op.params = e.$params;
    op.update = e.$expr;
  }
};

prototype.property = function(spec) {
  return spec && spec.signal ? this.signalRef(spec.signal) : spec;
};

prototype.objectProperty = function(spec) {
  return (!spec || !Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(spec)) ? spec
    : this.signalRef(spec.signal || propertyLambda(spec));
};

function propertyLambda(spec) {
  return (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(spec) ? arrayLambda : objectLambda)(spec);
}

function arrayLambda(array) {
  var code = '[',
      i = 0,
      n = array.length,
      value;

  for (; i<n; ++i) {
    value = array[i];
    code += (i > 0 ? ',' : '')
      + (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(value)
        ? (value.signal || propertyLambda(value))
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
  }
  return code + ']';
}

function objectLambda(obj) {
  var code = '{',
      i = 0,
      key, value;

  for (key in obj) {
    value = obj[key];
    code += (++i > 1 ? ',' : '')
      + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(key) + ':'
      + (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(value)
        ? (value.signal || propertyLambda(value))
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
  }
  return code + '}';
}

prototype.exprRef = function(code, name) {
  var params = {expr: Object(_parsers_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(code, this)};
  if (name) params.expr.$name = name;
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Expression"])(params)));
}

prototype.addBinding = function(name, bind) {
  if (!this.bindings) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Nested signals do not support binding: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  this.bindings.push(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])({signal: name}, bind));
};

// ----

prototype.addScaleProj = function(name, transform) {
  if (this.scales.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate scale or projection name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  this.scales[name] = this.add(transform);
};

prototype.addScale = function(name, params) {
  this.addScaleProj(name, Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Scale"])(params));
};

prototype.addProjection = function(name, params) {
  this.addScaleProj(name, Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Projection"])(params));
};

prototype.getScale = function(name) {
  if (!this.scales[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized scale name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.scales[name];
};

prototype.projectionRef =
prototype.scaleRef = function(name) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.getScale(name));
};

prototype.projectionType =
prototype.scaleType = function(name) {
  return this.getScale(name).params.type;
};

// ----

prototype.addData = function(name, dataScope) {
  if (this.data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return (this.data[name] = dataScope);
};

prototype.getData = function(name) {
  if (!this.data[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Undefined data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.data[name];
};

prototype.addDataPipeline = function(name, entries) {
  if (this.data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.addData(name, _DataScope__WEBPACK_IMPORTED_MODULE_0__["default"].fromEntries(this, entries));
};


/***/ }),

/***/ "cwcZ":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layer.js ***!
  \***********************************************************/
/*! exports provided: LayerModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayerModel", function() { return LayerModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spec */ "ySvk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _axis_parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./axis/parse */ "8fNt");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data/parse */ "S7P/");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layoutsize/assemble */ "Ds8r");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./layoutsize/parse */ "drwQ");
/* harmony import */ var _legend_assemble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./legend/assemble */ "tcAQ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./model */ "MqRG");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/selection */ "3eK9");
/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./unit */ "yn0s");












var LayerModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](LayerModel, _super);
    function LayerModel(spec, parent, parentGivenName, parentGivenSize, repeater, config, fit) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, repeater, spec.resolve) || this;
        _this.type = 'layer';
        var layoutSize = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, parentGivenSize, (spec.width ? { width: spec.width } : {}), (spec.height ? { height: spec.height } : {}));
        _this.initSize(layoutSize);
        _this.children = spec.layer.map(function (layer, i) {
            if (Object(_spec__WEBPACK_IMPORTED_MODULE_2__["isLayerSpec"])(layer)) {
                return new LayerModel(layer, _this, _this.getName('layer_' + i), layoutSize, repeater, config, fit);
            }
            if (Object(_spec__WEBPACK_IMPORTED_MODULE_2__["isUnitSpec"])(layer)) {
                return new _unit__WEBPACK_IMPORTED_MODULE_11__["UnitModel"](layer, _this, _this.getName('layer_' + i), layoutSize, repeater, config, fit);
            }
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].INVALID_SPEC);
        });
        return _this;
    }
    LayerModel.prototype.parseData = function () {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_5__["parseData"])(this);
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseData();
        }
    };
    LayerModel.prototype.parseLayoutSize = function () {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_7__["parseLayerLayoutSize"])(this);
    };
    LayerModel.prototype.parseSelection = function () {
        var _this = this;
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        var _loop_1 = function (child) {
            child.parseSelection();
            Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(child.component.selection).forEach(function (key) {
                _this.component.selection[key] = child.component.selection[key];
            });
        };
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            _loop_1(child);
        }
    };
    LayerModel.prototype.parseMarkGroup = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseMarkGroup();
        }
    };
    LayerModel.prototype.parseAxisAndHeader = function () {
        Object(_axis_parse__WEBPACK_IMPORTED_MODULE_4__["parseLayerAxis"])(this);
    };
    LayerModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.children.reduce(function (sg, child) { return child.assembleSelectionTopLevelSignals(sg); }, signals);
    };
    // TODO: Support same named selections across children.
    LayerModel.prototype.assembleSelectionSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleSelectionSignals());
        }, []);
    };
    LayerModel.prototype.assembleLayoutSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleLayoutSignals());
        }, Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_6__["assembleLayoutSignals"])(this));
    };
    LayerModel.prototype.assembleSelectionData = function (data) {
        return this.children.reduce(function (db, child) { return child.assembleSelectionData(db); }, data);
    };
    LayerModel.prototype.assembleTitle = function () {
        var title = _super.prototype.assembleTitle.call(this);
        if (title) {
            return title;
        }
        // If title does not provide layer, look into children
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            title = child.assembleTitle();
            if (title) {
                return title;
            }
        }
        return undefined;
    };
    LayerModel.prototype.assembleLayout = function () {
        return null;
    };
    LayerModel.prototype.assembleMarks = function () {
        return Object(_selection_selection__WEBPACK_IMPORTED_MODULE_10__["assembleLayerSelectionMarks"])(this, Object(_util__WEBPACK_IMPORTED_MODULE_3__["flatten"])(this.children.map(function (child) {
            return child.assembleMarks();
        })));
    };
    LayerModel.prototype.assembleLegends = function () {
        return this.children.reduce(function (legends, child) {
            return legends.concat(child.assembleLegends());
        }, Object(_legend_assemble__WEBPACK_IMPORTED_MODULE_8__["assembleLegends"])(this));
    };
    return LayerModel;
}(_model__WEBPACK_IMPORTED_MODULE_9__["Model"]));

//# sourceMappingURL=layer.js.map

/***/ }),

/***/ "d/v9":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/role.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marktypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marktypes */ "a3zm");
/* harmony import */ var _roles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./roles */ "VX1o");



/* harmony default export */ __webpack_exports__["default"] = (function(spec) {
  var role = spec.role || '';
  return (!role.indexOf('axis') || !role.indexOf('legend'))
    ? role
    : spec.type === _marktypes__WEBPACK_IMPORTED_MODULE_0__["GroupMark"] ? _roles__WEBPACK_IMPORTED_MODULE_1__["ScopeRole"] : (role || _roles__WEBPACK_IMPORTED_MODULE_1__["MarkRole"]);
});


/***/ }),

/***/ "d61h":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/fielddef.js ***!
  \******************************************************/
/*! exports provided: isConditionalSelection, isRepeatRef, toFieldDefBase, isConditionalDef, hasConditionalFieldDef, hasConditionalValueDef, isFieldDef, isStringFieldDef, isValueDef, isScaleFieldDef, vgField, isDiscrete, isContinuous, isCount, verbalTitleFormatter, functionalTitleFormatter, defaultTitleFormatter, setTitleFormatter, resetTitleFormatter, title, defaultType, getFieldDef, normalize, normalizeFieldDef, normalizeBin, channelCompatibility, isNumberFieldDef, isTimeFieldDef, valueExpr, valueArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConditionalSelection", function() { return isConditionalSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatRef", function() { return isRepeatRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toFieldDefBase", function() { return toFieldDefBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConditionalDef", function() { return isConditionalDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasConditionalFieldDef", function() { return hasConditionalFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasConditionalValueDef", function() { return hasConditionalValueDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldDef", function() { return isFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStringFieldDef", function() { return isStringFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValueDef", function() { return isValueDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScaleFieldDef", function() { return isScaleFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vgField", function() { return vgField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiscrete", function() { return isDiscrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuous", function() { return isContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCount", function() { return isCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verbalTitleFormatter", function() { return verbalTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functionalTitleFormatter", function() { return functionalTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTitleFormatter", function() { return defaultTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTitleFormatter", function() { return setTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetTitleFormatter", function() { return resetTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "title", function() { return title; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultType", function() { return defaultType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFieldDef", function() { return getFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeFieldDef", function() { return normalizeFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeBin", function() { return normalizeBin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelCompatibility", function() { return channelCompatibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumberFieldDef", function() { return isNumberFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeFieldDef", function() { return isTimeFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueExpr", function() { return valueExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueArray", function() { return valueArray; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregate */ "OCqH");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bin */ "4qum");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datetime */ "QzCd");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./timeunit */ "f7J+");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util */ "Hc3/");










function isConditionalSelection(c) {
    return c['selection'];
}
function isRepeatRef(field) {
    return field && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field) && 'repeat' in field;
}
function toFieldDefBase(fieldDef) {
    var field = fieldDef.field, timeUnit = fieldDef.timeUnit, bin = fieldDef.bin, aggregate = fieldDef.aggregate;
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (timeUnit ? { timeUnit: timeUnit } : {}), (bin ? { bin: bin } : {}), (aggregate ? { aggregate: aggregate } : {}), { field: field });
}
function isConditionalDef(channelDef) {
    return !!channelDef && !!channelDef.condition;
}
/**
 * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef
 */
function hasConditionalFieldDef(channelDef) {
    return !!channelDef && !!channelDef.condition && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef.condition) && isFieldDef(channelDef.condition);
}
function hasConditionalValueDef(channelDef) {
    return !!channelDef && !!channelDef.condition && (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef.condition) || isValueDef(channelDef.condition));
}
function isFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');
}
function isStringFieldDef(fieldDef) {
    return isFieldDef(fieldDef) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(fieldDef.field);
}
function isValueDef(channelDef) {
    return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;
}
function isScaleFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['scale'] || !!channelDef['sort']);
}
function isOpFieldDef(fieldDef) {
    return !!fieldDef['op'];
}
function vgField(fieldDef, opt) {
    if (opt === void 0) { opt = {}; }
    var field = fieldDef.field;
    var prefix = opt.prefix;
    var suffix = opt.suffix;
    if (isCount(fieldDef)) {
        field = 'count_*';
    }
    else {
        var fn = undefined;
        if (!opt.nofn) {
            if (isOpFieldDef(fieldDef)) {
                fn = fieldDef.op;
            }
            else if (fieldDef.bin) {
                fn = Object(_bin__WEBPACK_IMPORTED_MODULE_3__["binToString"])(fieldDef.bin);
                suffix = opt.binSuffix || '';
            }
            else if (fieldDef.aggregate) {
                fn = String(fieldDef.aggregate);
            }
            else if (fieldDef.timeUnit) {
                fn = String(fieldDef.timeUnit);
            }
        }
        if (fn) {
            field = field ? fn + "_" + field : fn;
        }
    }
    if (suffix) {
        field = field + "_" + suffix;
    }
    if (prefix) {
        field = prefix + "_" + field;
    }
    if (opt.expr) {
        // Expression to access flattened field. No need to escape dots.
        return Object(_util__WEBPACK_IMPORTED_MODULE_9__["flatAccessWithDatum"])(field, opt.expr);
    }
    else {
        // We flattened all fields so paths should have become dot.
        return Object(_util__WEBPACK_IMPORTED_MODULE_9__["replacePathInField"])(field);
    }
}
function isDiscrete(fieldDef) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
        case 'geojson':
            return true;
        case 'quantitative':
            return !!fieldDef.bin;
        case 'latitude':
        case 'longitude':
        case 'temporal':
            return false;
    }
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidFieldType(fieldDef.type));
}
function isContinuous(fieldDef) {
    return !isDiscrete(fieldDef);
}
function isCount(fieldDef) {
    return fieldDef.aggregate === 'count';
}
function verbalTitleFormatter(fieldDef, config) {
    var field = fieldDef.field, bin = fieldDef.bin, timeUnit = fieldDef.timeUnit, aggregate = fieldDef.aggregate;
    if (aggregate === 'count') {
        return config.countTitle;
    }
    else if (bin) {
        return field + " (binned)";
    }
    else if (timeUnit) {
        var units = Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["getTimeUnitParts"])(timeUnit).join('-');
        return field + " (" + units + ")";
    }
    else if (aggregate) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_9__["titlecase"])(aggregate) + " of " + field;
    }
    return field;
}
function functionalTitleFormatter(fieldDef, config) {
    var fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');
    if (fn) {
        return fn.toUpperCase() + '(' + fieldDef.field + ')';
    }
    else {
        return fieldDef.field;
    }
}
var defaultTitleFormatter = function (fieldDef, config) {
    switch (config.fieldTitle) {
        case 'plain':
            return fieldDef.field;
        case 'functional':
            return functionalTitleFormatter(fieldDef, config);
        default:
            return verbalTitleFormatter(fieldDef, config);
    }
};
var titleFormatter = defaultTitleFormatter;
function setTitleFormatter(formatter) {
    titleFormatter = formatter;
}
function resetTitleFormatter() {
    setTitleFormatter(defaultTitleFormatter);
}
function title(fieldDef, config) {
    return titleFormatter(fieldDef, config);
}
function defaultType(fieldDef, channel) {
    if (fieldDef.timeUnit) {
        return 'temporal';
    }
    if (fieldDef.bin) {
        return 'quantitative';
    }
    switch (Object(_channel__WEBPACK_IMPORTED_MODULE_4__["rangeType"])(channel)) {
        case 'continuous':
            return 'quantitative';
        case 'discrete':
            return 'nominal';
        case 'flexible': // color
            return 'nominal';
        default:
            return 'quantitative';
    }
}
/**
 * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.
 * @param channelDef
 */
function getFieldDef(channelDef) {
    if (isFieldDef(channelDef)) {
        return channelDef;
    }
    else if (hasConditionalFieldDef(channelDef)) {
        return channelDef.condition;
    }
    return undefined;
}
/**
 * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
 */
function normalize(channelDef, channel) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(channelDef) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(channelDef) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isBoolean"])(channelDef)) {
        var primitiveType = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(channelDef) ? 'string' :
            Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(channelDef) ? 'number' : 'boolean';
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].primitiveChannelDef(channel, primitiveType, channelDef));
        return { value: channelDef };
    }
    // If a fieldDef contains a field, we need type.
    if (isFieldDef(channelDef)) {
        return normalizeFieldDef(channelDef, channel);
    }
    else if (hasConditionalFieldDef(channelDef)) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, channelDef, { 
            // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>
            condition: normalizeFieldDef(channelDef.condition, channel) });
    }
    return channelDef;
}
function normalizeFieldDef(fieldDef, channel) {
    // Drop invalid aggregate
    if (fieldDef.aggregate && !Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isAggregateOp"])(fieldDef.aggregate)) {
        var aggregate = fieldDef.aggregate, fieldDefWithoutAggregate = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](fieldDef, ["aggregate"]);
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidAggregate(fieldDef.aggregate));
        fieldDef = fieldDefWithoutAggregate;
    }
    // Normalize Time Unit
    if (fieldDef.timeUnit) {
        fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["normalizeTimeUnit"])(fieldDef.timeUnit) });
    }
    // Normalize bin
    if (fieldDef.bin) {
        fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, { bin: normalizeBin(fieldDef.bin, channel) });
    }
    // Normalize Type
    if (fieldDef.type) {
        var fullType = Object(_type__WEBPACK_IMPORTED_MODULE_8__["getFullName"])(fieldDef.type);
        if (fieldDef.type !== fullType) {
            // convert short type to full type
            fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, { type: fullType });
        }
        if (fieldDef.type !== 'quantitative') {
            if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isCountingAggregateOp"])(fieldDef.aggregate)) {
                _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidFieldTypeForCountAggregate(fieldDef.type, fieldDef.aggregate));
                fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, { type: 'quantitative' });
            }
        }
    }
    else {
        // If type is empty / invalid, then augment with default type
        var newType = defaultType(fieldDef, channel);
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].emptyOrInvalidFieldType(fieldDef.type, channel, newType));
        fieldDef = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, fieldDef, { type: newType });
    }
    var _a = channelCompatibility(fieldDef, channel), compatible = _a.compatible, warning = _a.warning;
    if (!compatible) {
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](warning);
    }
    return fieldDef;
}
function normalizeBin(bin, channel) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isBoolean"])(bin)) {
        return { maxbins: Object(_bin__WEBPACK_IMPORTED_MODULE_3__["autoMaxBins"])(channel) };
    }
    else if (!bin.maxbins && !bin.step) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, bin, { maxbins: Object(_bin__WEBPACK_IMPORTED_MODULE_3__["autoMaxBins"])(channel) });
    }
    else {
        return bin;
    }
}
var COMPATIBLE = { compatible: true };
function channelCompatibility(fieldDef, channel) {
    var type = fieldDef.type;
    switch (channel) {
        case 'row':
        case 'column':
            if (isContinuous(fieldDef)) {
                return {
                    compatible: false,
                    warning: _log__WEBPACK_IMPORTED_MODULE_6__["message"].facetChannelShouldBeDiscrete(channel)
                };
            }
            return COMPATIBLE;
        case 'x':
        case 'y':
        case 'color':
        case 'fill':
        case 'stroke':
        case 'text':
        case 'detail':
        case 'key':
        case 'tooltip':
        case 'href':
            return COMPATIBLE;
        case 'longitude':
        case 'longitude2':
        case 'latitude':
        case 'latitude2':
            if (type !== _type__WEBPACK_IMPORTED_MODULE_8__["QUANTITATIVE"]) {
                return {
                    compatible: false,
                    warning: "Channel " + channel + " should be used with a quantitative field only, not " + fieldDef.type + " field."
                };
            }
            return COMPATIBLE;
        case 'opacity':
        case 'size':
        case 'x2':
        case 'y2':
            if ((type === 'nominal' && !fieldDef['sort']) || type === 'geojson') {
                return {
                    compatible: false,
                    warning: "Channel " + channel + " should not be used with an unsorted discrete field."
                };
            }
            return COMPATIBLE;
        case 'shape':
            if (fieldDef.type !== 'nominal' && fieldDef.type !== 'geojson') {
                return {
                    compatible: false,
                    warning: 'Shape channel should be used with only either nominal or geojson data'
                };
            }
            return COMPATIBLE;
        case 'order':
            if (fieldDef.type === 'nominal' && !('sort' in fieldDef)) {
                return {
                    compatible: false,
                    warning: "Channel order is inappropriate for nominal field, which has no inherent order."
                };
            }
            return COMPATIBLE;
    }
    throw new Error('channelCompatability not implemented for channel ' + channel);
}
function isNumberFieldDef(fieldDef) {
    return fieldDef.type === 'quantitative' || !!fieldDef.bin;
}
function isTimeFieldDef(fieldDef) {
    return fieldDef.type === 'temporal' || !!fieldDef.timeUnit;
}
/**
 * Getting a value associated with a fielddef.
 * Convert the value to Vega expression if applicable (for datetime object, or string if the field def is temporal or has timeUnit)
 */
function valueExpr(v, _a) {
    var timeUnit = _a.timeUnit, type = _a.type, time = _a.time, undefinedIfExprNotRequired = _a.undefinedIfExprNotRequired;
    var _b;
    var expr = undefined;
    if (Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["isDateTime"])(v)) {
        expr = Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["dateTimeExpr"])(v, true);
    }
    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(v) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(v)) {
        if (timeUnit || type === 'temporal') {
            if (Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["isLocalSingleTimeUnit"])(timeUnit)) {
                expr = Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["dateTimeExpr"])((_b = {}, _b[timeUnit] = v, _b), true);
            }
            else if (Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["isUtcSingleTimeUnit"])(timeUnit)) {
                // FIXME is this really correct?
                expr = valueExpr(v, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["getLocalTimeUnit"])(timeUnit) });
            }
            else {
                // just pass the string to date function (which will call JS Date.parse())
                expr = "datetime(" + JSON.stringify(v) + ")";
            }
        }
    }
    if (expr) {
        return time ? "time(" + expr + ")" : expr;
    }
    // number or boolean or normal string
    return undefinedIfExprNotRequired ? undefined : JSON.stringify(v);
}
/**
 * Standardize value array -- convert each value to Vega expression if applicable
 */
function valueArray(fieldDef, values) {
    var timeUnit = fieldDef.timeUnit, type = fieldDef.type;
    return values.map(function (v) {
        var expr = valueExpr(v, { timeUnit: timeUnit, type: type, undefinedIfExprNotRequired: true });
        // return signal for the expression if we need an expression
        if (expr !== undefined) {
            return { signal: expr };
        }
        // otherwise just return the original value
        return v;
    });
}
//# sourceMappingURL=fielddef.js.map

/***/ }),

/***/ "dJ5h":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/filterinvalid.js ***!
  \************************************************************************/
/*! exports provided: FilterInvalidNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterInvalidNode", function() { return FilterInvalidNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataflow */ "LH2n");







var FilterInvalidNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterInvalidNode, _super);
    function FilterInvalidNode(parent, fieldDefs) {
        var _this = _super.call(this, parent) || this;
        _this.fieldDefs = fieldDefs;
        return _this;
    }
    FilterInvalidNode.prototype.clone = function () {
        return new FilterInvalidNode(null, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, this.fieldDefs));
    };
    FilterInvalidNode.make = function (parent, model) {
        var config = model.config, mark = model.mark;
        if (config.invalidValues !== 'filter') {
            return null;
        }
        var filter = model.reduceFieldDef(function (aggregator, fieldDef, channel) {
            var scaleComponent = Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isScaleChannel"])(channel) && model.getScaleComponent(channel);
            if (scaleComponent) {
                var scaleType = scaleComponent.get('type');
                // While discrete domain scales can handle invalid values, continuous scales can't.
                // Thus, for non-path marks, we have to filter null for scales with continuous domains.
                // (For path marks, we will use "defined" property and skip these values instead.)
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasContinuousDomain"])(scaleType) && !fieldDef.aggregate && !Object(_mark__WEBPACK_IMPORTED_MODULE_3__["isPathMark"])(mark)) {
                    aggregator[fieldDef.field] = fieldDef;
                }
            }
            return aggregator;
        }, {});
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(filter).length) {
            return null;
        }
        return new FilterInvalidNode(parent, filter);
    };
    Object.defineProperty(FilterInvalidNode.prototype, "filter", {
        get: function () {
            return this.fieldDefs;
        },
        enumerable: true,
        configurable: true
    });
    // create the VgTransforms for each of the filtered fields
    FilterInvalidNode.prototype.assemble = function () {
        var _this = this;
        var filters = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.filter).reduce(function (vegaFilters, field) {
            var fieldDef = _this.fieldDefs[field];
            var ref = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr: 'datum' });
            if (fieldDef !== null) {
                vegaFilters.push(ref + " !== null");
                vegaFilters.push("!isNaN(" + ref + ")");
            }
            return vegaFilters;
        }, []);
        return filters.length > 0 ?
            {
                type: 'filter',
                expr: filters.join(' && ')
            } : null;
    };
    return FilterInvalidNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_6__["DataFlowNode"]));

//# sourceMappingURL=filterinvalid.js.map

/***/ }),

/***/ "dW5G":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/component.js ***!
  \********************************************************************/
/*! exports provided: AxisComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisComponent", function() { return AxisComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ "cq+n");



function isFalseOrNull(v) {
    return v === false || v === null;
}
var AxisComponent = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AxisComponent, _super);
    function AxisComponent(explicit, implicit, mainExtracted) {
        if (explicit === void 0) { explicit = {}; }
        if (implicit === void 0) { implicit = {}; }
        if (mainExtracted === void 0) { mainExtracted = false; }
        var _this = _super.call(this) || this;
        _this.explicit = explicit;
        _this.implicit = implicit;
        _this.mainExtracted = mainExtracted;
        return _this;
    }
    AxisComponent.prototype.clone = function () {
        return new AxisComponent(Object(_util__WEBPACK_IMPORTED_MODULE_1__["duplicate"])(this.explicit), Object(_util__WEBPACK_IMPORTED_MODULE_1__["duplicate"])(this.implicit), this.mainExtracted);
    };
    AxisComponent.prototype.hasAxisPart = function (part) {
        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.
        if (part === 'axis') { // always has the axis container part
            return true;
        }
        if (part === 'grid' || part === 'title') {
            return !!this.get(part);
        }
        // Other parts are enabled by default, so they should not be false or null.
        return !isFalseOrNull(this.get(part));
    };
    return AxisComponent;
}(_split__WEBPACK_IMPORTED_MODULE_2__["Split"]));

//# sourceMappingURL=component.js.map

/***/ }),

/***/ "ddlc":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Flatten.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Flatten; });
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/util */ "MQBj");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Flattens array-typed field values into new data objects.
 * If multiple fields are specified, they are treated as parallel arrays,
 * with output values included for each matching index (or null if missing).
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} params.fields - An array of field
 *   accessors for the tuple fields that should be flattened.
 * @param {Array<string>} [params.as] - Output field names for flattened
 *   array fields. Any unspecified fields will use the field name provided
 *   by the fields accessors.
 */
function Flatten(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, [], params);
}

Flatten.Definition = {
  "type": "Flatten",
  "metadata": {"generates": true},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Flatten, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      fields = _.fields,
      as = Object(_util_util__WEBPACK_IMPORTED_MODULE_0__["fieldNames"])(fields, _.as || []),
      m = as.length;

  // remove any previous results
  out.rem = this.value;

  // generate flattened tuples
  pulse.visit(pulse.SOURCE, function(t) {
    var arrays = fields.map(function(f) { return f(t); }),
        maxlen = arrays.reduce(function(l, a) { return Math.max(l, a.length); }, 0),
        i = 0, j, d, v;

    for (; i<maxlen; ++i) {
      d = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["derive"])(t);
      for (j=0; j<m; ++j) {
        d[as[j]] = (v = arrays[j][i]) == null ? null : v;
      }
      out.add.push(d);
    }
  });

  this.value = out.source = out.add;
  return out.modifies(as);
};


/***/ }),

/***/ "dg/A":
/*!*******************************************************!*\
  !*** ./node_modules/vega-statistics/src/quartiles.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "Eqt6");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "vBe5");



/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var values = Object(_numbers__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f);

  return [
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values.sort(d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]), 0.25),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values, 0.50),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values, 0.75)
  ];
});


/***/ }),

/***/ "djgw":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/group.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/visit */ "TMLr");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/stroke */ "QXae");
/* harmony import */ var _util_canvas_fill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/fill */ "6rlB");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/svg/clip */ "R+vW");
/* harmony import */ var _util_svg_translateItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/svg/translateItem */ "8Mry");









var StrokeOffset = 0.5;

function attr(emit, item) {
  emit('transform', Object(_util_svg_translateItem__WEBPACK_IMPORTED_MODULE_7__["default"])(item));
}

function background(emit, item) {
  var offset = item.stroke ? StrokeOffset : 0;
  emit('class', 'background');
  emit('d', Object(_path_shapes__WEBPACK_IMPORTED_MODULE_0__["rectangle"])(null, item, offset, offset));
}

function foreground(emit, item, renderer) {
  var url = item.clip ? Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_6__["default"])(renderer, item, item) : null;
  emit('clip-path', url);
}

function bound(bounds, group) {
  if (!group.clip && group.items) {
    var items = group.items;
    for (var j=0, m=items.length; j<m; ++j) {
      bounds.union(items[j].bounds);
    }
  }

  if ((group.clip || group.width || group.height) && !group.noBound) {
    bounds.add(0, 0).add(group.width || 0, group.height || 0);
  }

  Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds, group);

  return bounds.translate(group.x || 0, group.y || 0);
}

function backgroundPath(context, group) {
  var offset = group.stroke ? StrokeOffset : 0;
  context.beginPath();
  Object(_path_shapes__WEBPACK_IMPORTED_MODULE_0__["rectangle"])(context, group, offset, offset);
}

var hitBackground = Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_5__["hitPath"])(backgroundPath);

function draw(context, scene, bounds) {
  var renderer = this;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(scene, function(group) {
    var gx = group.x || 0,
        gy = group.y || 0,
        w = group.width || 0,
        h = group.height || 0,
        opacity;

    // setup graphics context
    context.save();
    context.translate(gx, gy);

    // draw group background
    if (group.stroke || group.fill) {
      opacity = group.opacity == null ? 1 : group.opacity;
      if (opacity > 0) {
        backgroundPath(context, group);
        if (group.fill && Object(_util_canvas_fill__WEBPACK_IMPORTED_MODULE_4__["default"])(context, group, opacity)) {
          context.fill();
        }
        if (group.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_3__["default"])(context, group, opacity)) {
          context.stroke();
        }
      }
    }

    // set clip and bounds
    if (group.clip) {
      context.beginPath();
      context.rect(0, 0, w, h);
      context.clip();
    }
    if (bounds) bounds.translate(-gx, -gy);

    // draw group contents
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(group, function(item) {
      renderer.draw(context, item, bounds);
    });

    // restore graphics context
    if (bounds) bounds.translate(gx, gy);
    context.restore();
  });
}

function pick(context, scene, x, y, gx, gy) {
  if (scene.bounds && !scene.bounds.contains(gx, gy) || !scene.items) {
    return null;
  }

  var handler = this,
      cx = x * context.pixelRatio,
      cy = y * context.pixelRatio;

  return Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["pickVisit"])(scene, function(group) {
    var hit, dx, dy, b;

    // first hit test against bounding box
    // if a group is clipped, that should be handled by the bounds check.
    b = group.bounds;
    if (b && !b.contains(gx, gy)) return;

    // passed bounds check, so test sub-groups
    dx = (group.x || 0);
    dy = (group.y || 0);

    context.save();
    context.translate(dx, dy);

    dx = gx - dx;
    dy = gy - dy;

    // hit test against contained marks
    hit = Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["pickVisit"])(group, function(mark) {
      return pickMark(mark, dx, dy)
        ? handler.pick(mark, x, y, dx, dy)
        : null;
    });

    // hit test against group background
    if (!hit && scene.interactive !== false
        && (group.fill || group.stroke)
        && hitBackground(context, group, cx, cy)) {
      hit = group;
    }

    context.restore();
    return hit || null;
  });
}

function pickMark(mark, x, y) {
  return (mark.interactive !== false || mark.marktype === 'group')
    && mark.bounds && mark.bounds.contains(x, y);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:       'group',
  tag:        'g',
  nested:     false,
  attr:       attr,
  bound:      bound,
  draw:       draw,
  pick:       pick,
  background: background,
  foreground: foreground
});


/***/ }),

/***/ "dkbZ":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/mark.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_clip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marks/clip */ "UMkc");
/* harmony import */ var _marks_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/definition */ "Uy6m");
/* harmony import */ var _marks_interactive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/interactive */ "tnHq");
/* harmony import */ var _marks_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./marks/data */ "8qx1");
/* harmony import */ var _marks_facet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./marks/facet */ "85cw");
/* harmony import */ var _marks_subflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/subflow */ "Jn0y");
/* harmony import */ var _marks_role__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./marks/role */ "d/v9");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encode/encode-util */ "PkT2");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./transform */ "LX4U");
/* harmony import */ var _trigger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trigger */ "u/Z8");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./spec */ "zw9B");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../DataScope */ "/BrR");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../transforms */ "ZQwF");


















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var role = Object(_marks_role__WEBPACK_IMPORTED_MODULE_6__["default"])(spec),
      group = spec.type === _marks_marktypes__WEBPACK_IMPORTED_MODULE_7__["GroupMark"],
      facet = spec.from && spec.from.facet,
      layout = spec.layout || role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["ScopeRole"] || role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["FrameRole"],
      nested = role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["MarkRole"] || layout || facet,
      overlap = spec.overlap,
      ops, op, input, store, bound, render, sieve, name,
      joinRef, markRef, encodeRef, layoutRef, boundRef;

  // resolve input data
  input = Object(_marks_data__WEBPACK_IMPORTED_MODULE_3__["default"])(spec.from, group, scope);

  // data join to map tuples to visual items
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["DataJoin"])({
    key:   input.key || (spec.key ? Object(_util__WEBPACK_IMPORTED_MODULE_14__["fieldRef"])(spec.key) : undefined),
    pulse: input.pulse,
    clean: !group
  }));
  joinRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // collect visual items
  op = store = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Collect"])({pulse: joinRef}));

  // connect visual items to scenegraph
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Mark"])({
    markdef:     Object(_marks_definition__WEBPACK_IMPORTED_MODULE_1__["default"])(spec),
    interactive: Object(_marks_interactive__WEBPACK_IMPORTED_MODULE_2__["default"])(spec.interactive, scope),
    clip:        Object(_marks_clip__WEBPACK_IMPORTED_MODULE_0__["default"])(spec.clip, scope),
    context:     {$context: true},
    groups:      scope.lookup(),
    parent:      scope.signals.parent ? scope.signalRef('parent') : null,
    index:       scope.markpath(),
    pulse:       Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op)
  }));
  markRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // add visual encoders
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Encode"])(
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_9__["encoders"])(spec.encode, spec.type, role, spec.style, scope, {pulse: markRef})
  ));

  // monitor parent marks to propagate changes
  op.params.parent = scope.encode();

  // add post-encoding transforms, if defined
  if (spec.transform) {
    spec.transform.forEach(function(_) {
      var tx = Object(_transform__WEBPACK_IMPORTED_MODULE_10__["default"])(_, scope);
      if (tx.metadata.generates || tx.metadata.changes) {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Mark transforms should not generate new data.');
      }
      tx.params.pulse = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);
      scope.add(op = tx);
    });
  }

  // if item sort specified, perform post-encoding
  if (spec.sort) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["SortItems"])({
      sort:  scope.compareRef(spec.sort, true), // stable sort
      pulse: Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op)
    }));
  }

  encodeRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // add view layout operator if needed
  if (facet || layout) {
    layout = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["ViewLayout"])({
      layout:       scope.objectProperty(spec.layout),
      legendMargin: scope.config.legendMargin,
      mark:         markRef,
      pulse:        encodeRef
    }));
    layoutRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(layout);
  }

  // compute bounding boxes
  bound = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Bound"])({mark: markRef, pulse: layoutRef || encodeRef}));
  boundRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(bound);

  // if group mark, recurse to parse nested content
  if (group) {
    // juggle layout & bounds to ensure they run *after* any faceting transforms
    if (nested) { ops = scope.operators; ops.pop(); if (layout) ops.pop(); }

    scope.pushState(encodeRef, layoutRef || boundRef, joinRef);
    facet ? Object(_marks_facet__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, scope, input)          // explicit facet
        : nested ? Object(_marks_subflow__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, scope, input) // standard mark group
        : Object(_spec__WEBPACK_IMPORTED_MODULE_12__["default"])(spec, scope); // guide group, we can avoid nested scopes
    scope.popState();

    if (nested) { if (layout) ops.push(layout); ops.push(bound); }
  }

  // if requested, add overlap removal transform
  if (overlap) {
    boundRef = parseOverlap(overlap, boundRef, scope);
  }

  // render / sieve items
  render = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Render"])({pulse: boundRef}));
  sieve = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(render)}, undefined, scope.parent()));

  // if mark is named, make accessible as reactive geometry
  // add trigger updates if defined
  if (spec.name != null) {
    name = spec.name;
    scope.addData(name, new _DataScope__WEBPACK_IMPORTED_MODULE_13__["default"](scope, store, render, sieve));
    if (spec.on) spec.on.forEach(function(on) {
      if (on.insert || on.remove || on.toggle) {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Marks only support modify triggers.');
      }
      Object(_trigger__WEBPACK_IMPORTED_MODULE_11__["default"])(on, scope, name);
    });
  }
});

function parseOverlap(overlap, source, scope) {
  var method = overlap.method,
      bound = overlap.bound, tol;

  var params = {
    method: Object(_util__WEBPACK_IMPORTED_MODULE_14__["isSignal"])(method) ? scope.signalRef(method.signal) : method,
    pulse:  source
  };

  if (overlap.order) {
    params.sort = scope.compareRef({field: overlap.order});
  }

  if (bound) {
    tol = bound.tolerance;
    params.boundTolerance = Object(_util__WEBPACK_IMPORTED_MODULE_14__["isSignal"])(tol) ? scope.signalRef(tol.signal) : +tol;
    params.boundScale = scope.scaleRef(bound.scale);
    params.boundOrient = bound.orient;
  }

  return Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Overlap"])(params)));
}


/***/ }),

/***/ "doME":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/scale.js ***!
  \*********************************************/
/*! exports provided: scale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function scale(name) {
  var scales = this._runtime.scales;
  if (!scales.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Unrecognized scale or projection: ' + name);
  }
  return scales[name].value;
}


/***/ }),

/***/ "dp2b":
/*!**********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/symbols.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symbols; });
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse */ "n4MJ");
/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ "L758");



var tau = 2 * Math.PI,
    halfSqrt3 = Math.sqrt(3) / 2;

var builtins = {
  'circle': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2;
      context.moveTo(r, 0);
      context.arc(0, 0, r, 0, tau);
    }
  },
  'cross': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          s = r / 2.5;
      context.moveTo(-r, -s);
      context.lineTo(-r, s);
      context.lineTo(-s, s);
      context.lineTo(-s, r);
      context.lineTo(s, r);
      context.lineTo(s, s);
      context.lineTo(r, s);
      context.lineTo(r, -s);
      context.lineTo(s, -s);
      context.lineTo(s, -r);
      context.lineTo(-s, -r);
      context.lineTo(-s, -s);
      context.closePath();
    }
  },
  'diamond': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2;
      context.moveTo(-r, 0);
      context.lineTo(0, -r);
      context.lineTo(r, 0);
      context.lineTo(0, r);
      context.closePath();
    }
  },
  'square': {
    draw: function(context, size) {
      var w = Math.sqrt(size),
          x = -w / 2;
      context.rect(x, x, w, w);
    }
  },
  'triangle-up': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = halfSqrt3 * r;
      context.moveTo(0, -h);
      context.lineTo(-r, h);
      context.lineTo(r, h);
      context.closePath();
    }
  },
  'triangle-down': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = halfSqrt3 * r;
      context.moveTo(0, h);
      context.lineTo(-r, -h);
      context.lineTo(r, -h);
      context.closePath();
    }
  },
  'triangle-right': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = halfSqrt3 * r;
      context.moveTo(h, 0);
      context.lineTo(-h, -r);
      context.lineTo(-h, r);
      context.closePath();
    }
  },
  'triangle-left': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = halfSqrt3 * r;
      context.moveTo(-h, 0);
      context.lineTo(h, -r);
      context.lineTo(h, r);
      context.closePath();
    }
  }
};

function symbols(_) {
  return builtins.hasOwnProperty(_) ? builtins[_] : customSymbol(_);
}

var custom = {};

function customSymbol(path) {
  if (!custom.hasOwnProperty(path)) {
    var parsed = Object(_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(path);
    custom[path] = {
      draw: function(context, size) {
        Object(_render__WEBPACK_IMPORTED_MODULE_1__["default"])(context, parsed, 0, 0, Math.sqrt(size) / 2);
      }
    };
  }
  return custom[path];
}


/***/ }),

/***/ "drwQ":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layoutsize/parse.js ***!
  \**********************************************************************/
/*! exports provided: parseLayerLayoutSize, parseRepeatLayoutSize, parseConcatLayoutSize, parseChildrenLayoutSize, parseUnitLayoutSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLayerLayoutSize", function() { return parseLayerLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseRepeatLayoutSize", function() { return parseRepeatLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseConcatLayoutSize", function() { return parseConcatLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseChildrenLayoutSize", function() { return parseChildrenLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitLayoutSize", function() { return parseUnitLayoutSize; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ "cq+n");



function parseLayerLayoutSize(model) {
    parseChildrenLayoutSize(model);
    var layoutSizeCmpt = model.component.layoutSize;
    layoutSizeCmpt.setWithExplicit('width', parseNonUnitLayoutSizeForChannel(model, 'width'));
    layoutSizeCmpt.setWithExplicit('height', parseNonUnitLayoutSizeForChannel(model, 'height'));
}
var parseRepeatLayoutSize = parseLayerLayoutSize;
function parseConcatLayoutSize(model) {
    parseChildrenLayoutSize(model);
    var layoutSizeCmpt = model.component.layoutSize;
    var sizeTypeToMerge = model.isVConcat ? 'width' : 'height';
    layoutSizeCmpt.setWithExplicit(sizeTypeToMerge, parseNonUnitLayoutSizeForChannel(model, sizeTypeToMerge));
}
function parseChildrenLayoutSize(model) {
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        child.parseLayoutSize();
    }
}
function parseNonUnitLayoutSizeForChannel(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var resolve = model.component.resolve;
    var mergedSize;
    // Try to merge layout size
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        var childSize = child.component.layoutSize.getWithExplicit(sizeType);
        var scaleResolve = resolve.scale[channel];
        if (scaleResolve === 'independent' && childSize.value === 'range-step') {
            // Do not merge independent scales with range-step as their size depends
            // on the scale domains, which can be different between scales.
            mergedSize = undefined;
            break;
        }
        if (mergedSize) {
            if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {
                // For independent scale, only merge if all the sizes are the same.
                // If the values are different, abandon the merge!
                mergedSize = undefined;
                break;
            }
            mergedSize = Object(_split__WEBPACK_IMPORTED_MODULE_2__["mergeValuesWithExplicit"])(mergedSize, childSize, sizeType, '');
        }
        else {
            mergedSize = childSize;
        }
    }
    if (mergedSize) {
        // If merged, rename size and set size of all children.
        for (var _b = 0, _c = model.children; _b < _c.length; _b++) {
            var child = _c[_b];
            model.renameLayoutSize(child.getName(sizeType), model.getName(sizeType));
            child.component.layoutSize.set(sizeType, 'merged', false);
        }
        return mergedSize;
    }
    else {
        // Otherwise, there is no merged size.
        return {
            explicit: false,
            value: undefined
        };
    }
}
function parseUnitLayoutSize(model) {
    var layoutSizeComponent = model.component.layoutSize;
    if (!layoutSizeComponent.explicit.width) {
        var width = defaultUnitSize(model, 'width');
        layoutSizeComponent.set('width', width, false);
    }
    if (!layoutSizeComponent.explicit.height) {
        var height = defaultUnitSize(model, 'height');
        layoutSizeComponent.set('height', height, false);
    }
}
function defaultUnitSize(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var config = model.config;
    var scaleComponent = model.getScaleComponent(channel);
    if (scaleComponent) {
        var scaleType = scaleComponent.get('type');
        var range = scaleComponent.get('range');
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_0__["hasDiscreteDomain"])(scaleType) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_1__["isVgRangeStep"])(range)) {
            // For discrete domain with range.step, use dynamic width/height
            return 'range-step';
        }
        else {
            return config.view[sizeType];
        }
    }
    else if (model.hasProjection) {
        return config.view[sizeType];
    }
    else {
        // No scale - set default size
        if (sizeType === 'width' && model.mark === 'text') {
            // width for text mark without x-field is a bit wider than typical range step
            return config.scale.textXRangeStep;
        }
        // Set width/height equal to rangeStep config or if rangeStep is null, use value from default scale config.
        return config.scale.rangeStep || _scale__WEBPACK_IMPORTED_MODULE_0__["defaultScaleConfig"].rangeStep;
    }
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "eBT9":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/equal.js ***!
  \********************************************************/
/*! exports provided: sceneEqual, pathEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return sceneEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return pathEqual; });
/* harmony import */ var _path_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/parse */ "n4MJ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



var TOLERANCE = 1e-9;

function sceneEqual(a, b, key) {
  return (a === b) ? true
    : (key === 'path') ? pathEqual(a, b)
    : (a instanceof Date && b instanceof Date) ? +a === +b
    : (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(a) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(b)) ? Math.abs(a - b) <= TOLERANCE
    : (!a || !b || !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(a) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(b)) ? a == b
    : (a == null || b == null) ? false
    : objectEqual(a, b);
}

function pathEqual(a, b) {
  return sceneEqual(Object(_path_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(a), Object(_path_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(b));
}

function objectEqual(a, b) {
  var ka = Object.keys(a),
      kb = Object.keys(b),
      key, i;

  if (ka.length !== kb.length) return false;

  ka.sort();
  kb.sort();

  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) return false;
  }

  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!sceneEqual(a[key], b[key], key)) return false;
  }

  return typeof a === typeof b;
}


/***/ }),

/***/ "eIYp":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/pickPath.js ***!
  \***********************************************************/
/*! exports provided: pickArea, pickLine, pickTrail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickArea", function() { return pickArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickLine", function() { return pickLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickTrail", function() { return pickTrail; });
function pickArea(a, p) {
  var v = a[0].orient === 'horizontal' ? p[1] : p[0],
      z = a[0].orient === 'horizontal' ? 'y' : 'x',
      lo = 0,
      hi = a.length;

  if (hi === 1) return a[0];

  while (lo < hi) {
    var mid = lo + hi >>> 1;
    if (a[mid][z] < v) lo = mid + 1;
    else hi = mid;
  }
  lo = Math.max(0, lo - 1);
  hi = Math.min(a.length - 1, hi);

  return (v - a[lo][z]) < (a[hi][z] - v) ? a[lo] : a[hi];
}

function pickLine(a, p) {
  var t = Math.pow(a[0].strokeWidth || 1, 2),
      i = a.length, dx, dy, dd;

  while (--i >= 0) {
    if (a[i].defined === false) continue;
    dx = a[i].x - p[0];
    dy = a[i].y - p[1];
    dd = dx * dx + dy * dy;
    if (dd < t) return a[i];
  }

  return null;
}

function pickTrail(a, p) {
  var i = a.length, dx, dy, dd;

  while (--i >= 0) {
    if (a[i].defined === false) continue;
    dx = a[i].x - p[0];
    dy = a[i].y - p[1];
    dd = dx * dx + dy * dy;
    dx = a[i].size || 1;
    if (dd < dx*dx) return a[i];
  }

  return null;
}


/***/ }),

/***/ "eOkk":
/*!****************************************************!*\
  !*** ./node_modules/vega-expression/src/parser.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast */ "MDkm");
/*
  The following expression parser is based on Esprima (http://esprima.org/).
  Original header comment and license for Esprima is included here:

  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>
  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>
  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


var TokenName,
    source,
    index,
    length,
    lookahead;

var TokenBooleanLiteral = 1,
    TokenEOF = 2,
    TokenIdentifier = 3,
    TokenKeyword = 4,
    TokenNullLiteral = 5,
    TokenNumericLiteral = 6,
    TokenPunctuator = 7,
    TokenStringLiteral = 8,
    TokenRegularExpression = 9;

TokenName = {};
TokenName[TokenBooleanLiteral] = 'Boolean';
TokenName[TokenEOF] = '<end>';
TokenName[TokenIdentifier] = 'Identifier';
TokenName[TokenKeyword] = 'Keyword';
TokenName[TokenNullLiteral] = 'Null';
TokenName[TokenNumericLiteral] = 'Numeric';
TokenName[TokenPunctuator] = 'Punctuator';
TokenName[TokenStringLiteral] = 'String';
TokenName[TokenRegularExpression] = 'RegularExpression';

var SyntaxArrayExpression = 'ArrayExpression',
    SyntaxBinaryExpression = 'BinaryExpression',
    SyntaxCallExpression = 'CallExpression',
    SyntaxConditionalExpression = 'ConditionalExpression',
    SyntaxIdentifier = 'Identifier',
    SyntaxLiteral = 'Literal',
    SyntaxLogicalExpression = 'LogicalExpression',
    SyntaxMemberExpression = 'MemberExpression',
    SyntaxObjectExpression = 'ObjectExpression',
    SyntaxProperty = 'Property',
    SyntaxUnaryExpression = 'UnaryExpression';

// Error messages should be identical to V8.
var MessageUnexpectedToken = 'Unexpected token %0',
    MessageUnexpectedNumber = 'Unexpected number',
    MessageUnexpectedString = 'Unexpected string',
    MessageUnexpectedIdentifier = 'Unexpected identifier',
    MessageUnexpectedReserved = 'Unexpected reserved word',
    MessageUnexpectedEOS = 'Unexpected end of input',
    MessageInvalidRegExp = 'Invalid regular expression',
    MessageUnterminatedRegExp = 'Invalid regular expression: missing /',
    MessageStrictOctalLiteral = 'Octal literals are not allowed in strict mode.',
    MessageStrictDuplicateProperty = 'Duplicate data property in object literal not allowed in strict mode';

var ILLEGAL = 'ILLEGAL',
    DISABLED = 'Disabled.';

// See also tools/generate-unicode-regex.py.
var RegexNonAsciiIdentifierStart = new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]'),
    RegexNonAsciiIdentifierPart = new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]');

// Ensure the condition is true, otherwise throw an error.
// This is only to have a better contract semantic, i.e. another safety net
// to catch a logic error. The condition shall be fulfilled in normal case.
// Do NOT use this to enforce a certain condition on any user input.

function assert(condition, message) {
  /* istanbul ignore next */
  if (!condition) {
    throw new Error('ASSERT: ' + message);
  }
}

function isDecimalDigit(ch) {
  return (ch >= 0x30 && ch <= 0x39); // 0..9
}

function isHexDigit(ch) {
  return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;
}

function isOctalDigit(ch) {
  return '01234567'.indexOf(ch) >= 0;
}

// 7.2 White Space

function isWhiteSpace(ch) {
  return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||
    (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);
}

// 7.3 Line Terminators

function isLineTerminator(ch) {
  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);
}

// 7.6 Identifier Names and Identifiers

function isIdentifierStart(ch) {
  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)
    (ch >= 0x41 && ch <= 0x5A) || // A..Z
    (ch >= 0x61 && ch <= 0x7A) || // a..z
    (ch === 0x5C) || // \ (backslash)
    ((ch >= 0x80) && RegexNonAsciiIdentifierStart.test(String.fromCharCode(ch)));
}

function isIdentifierPart(ch) {
  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)
    (ch >= 0x41 && ch <= 0x5A) || // A..Z
    (ch >= 0x61 && ch <= 0x7A) || // a..z
    (ch >= 0x30 && ch <= 0x39) || // 0..9
    (ch === 0x5C) || // \ (backslash)
    ((ch >= 0x80) && RegexNonAsciiIdentifierPart.test(String.fromCharCode(ch)));
}

// 7.6.1.1 Keywords

var keywords = {
  'if':1, 'in':1, 'do':1,
  'var':1, 'for':1, 'new':1, 'try':1, 'let':1,
  'this':1, 'else':1, 'case':1, 'void':1, 'with':1, 'enum':1,
  'while':1, 'break':1, 'catch':1, 'throw':1, 'const':1, 'yield':1, 'class':1, 'super':1,
  'return':1, 'typeof':1, 'delete':1, 'switch':1, 'export':1, 'import':1, 'public':1, 'static':1,
  'default':1, 'finally':1, 'extends':1, 'package':1, 'private':1,
  'function':1, 'continue':1, 'debugger':1,
  'interface':1, 'protected':1,
  'instanceof':1, 'implements':1
};

function skipComment() {
  var ch;

  while (index < length) {
    ch = source.charCodeAt(index);

    if (isWhiteSpace(ch) || isLineTerminator(ch)) {
      ++index;
    } else {
      break;
    }
  }
}

function scanHexEscape(prefix) {
  var i, len, ch, code = 0;

  len = (prefix === 'u') ? 4 : 2;
  for (i = 0; i < len; ++i) {
    if (index < length && isHexDigit(source[index])) {
      ch = source[index++];
      code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
    } else {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
  }
  return String.fromCharCode(code);
}

function scanUnicodeCodePointEscape() {
  var ch, code, cu1, cu2;

  ch = source[index];
  code = 0;

  // At least, one hex digit is required.
  if (ch === '}') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  while (index < length) {
    ch = source[index++];
    if (!isHexDigit(ch)) {
      break;
    }
    code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
  }

  if (code > 0x10FFFF || ch !== '}') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  // UTF-16 Encoding
  if (code <= 0xFFFF) {
    return String.fromCharCode(code);
  }
  cu1 = ((code - 0x10000) >> 10) + 0xD800;
  cu2 = ((code - 0x10000) & 1023) + 0xDC00;
  return String.fromCharCode(cu1, cu2);
}

function getEscapedIdentifier() {
  var ch, id;

  ch = source.charCodeAt(index++);
  id = String.fromCharCode(ch);

  // '\u' (U+005C, U+0075) denotes an escaped character.
  if (ch === 0x5C) {
    if (source.charCodeAt(index) !== 0x75) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
    ++index;
    ch = scanHexEscape('u');
    if (!ch || ch === '\\' || !isIdentifierStart(ch.charCodeAt(0))) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
    id = ch;
  }

  while (index < length) {
    ch = source.charCodeAt(index);
    if (!isIdentifierPart(ch)) {
      break;
    }
    ++index;
    id += String.fromCharCode(ch);

    // '\u' (U+005C, U+0075) denotes an escaped character.
    if (ch === 0x5C) {
      id = id.substr(0, id.length - 1);
      if (source.charCodeAt(index) !== 0x75) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
      ++index;
      ch = scanHexEscape('u');
      if (!ch || ch === '\\' || !isIdentifierPart(ch.charCodeAt(0))) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
      id += ch;
    }
  }

  return id;
}

function getIdentifier() {
  var start, ch;

  start = index++;
  while (index < length) {
    ch = source.charCodeAt(index);
    if (ch === 0x5C) {
      // Blackslash (U+005C) marks Unicode escape sequence.
      index = start;
      return getEscapedIdentifier();
    }
    if (isIdentifierPart(ch)) {
      ++index;
    } else {
      break;
    }
  }

  return source.slice(start, index);
}

function scanIdentifier() {
  var start, id, type;

  start = index;

  // Backslash (U+005C) starts an escaped character.
  id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();

  // There is no keyword or literal with only one character.
  // Thus, it must be an identifier.
  if (id.length === 1) {
    type = TokenIdentifier;
  } else if (keywords.hasOwnProperty(id)) {
    type = TokenKeyword;
  } else if (id === 'null') {
    type = TokenNullLiteral;
  } else if (id === 'true' || id === 'false') {
    type = TokenBooleanLiteral;
  } else {
    type = TokenIdentifier;
  }

  return {
    type: type,
    value: id,
    start: start,
    end: index
  };
}

// 7.7 Punctuators

function scanPunctuator() {
  var start = index,
    code = source.charCodeAt(index),
    code2,
    ch1 = source[index],
    ch2,
    ch3,
    ch4;

  switch (code) {

    // Check for most common single-character punctuators.
    case 0x2E: // . dot
    case 0x28: // ( open bracket
    case 0x29: // ) close bracket
    case 0x3B: // ; semicolon
    case 0x2C: // , comma
    case 0x7B: // { open curly brace
    case 0x7D: // } close curly brace
    case 0x5B: // [
    case 0x5D: // ]
    case 0x3A: // :
    case 0x3F: // ?
    case 0x7E: // ~
      ++index;
      return {
        type: TokenPunctuator,
        value: String.fromCharCode(code),
        start: start,
        end: index
      };

    default:
      code2 = source.charCodeAt(index + 1);

      // '=' (U+003D) marks an assignment or comparison operator.
      if (code2 === 0x3D) {
        switch (code) {
          case 0x2B: // +
          case 0x2D: // -
          case 0x2F: // /
          case 0x3C: // <
          case 0x3E: // >
          case 0x5E: // ^
          case 0x7C: // |
          case 0x25: // %
          case 0x26: // &
          case 0x2A: // *
            index += 2;
            return {
              type: TokenPunctuator,
              value: String.fromCharCode(code) + String.fromCharCode(code2),
              start: start,
              end: index
            };

          case 0x21: // !
          case 0x3D: // =
            index += 2;

            // !== and ===
            if (source.charCodeAt(index) === 0x3D) {
              ++index;
            }
            return {
              type: TokenPunctuator,
              value: source.slice(start, index),
              start: start,
              end: index
            };
        }
      }
  }

  // 4-character punctuator: >>>=

  ch4 = source.substr(index, 4);

  if (ch4 === '>>>=') {
    index += 4;
    return {
      type: TokenPunctuator,
      value: ch4,
      start: start,
      end: index
    };
  }

  // 3-character punctuators: === !== >>> <<= >>=

  ch3 = ch4.substr(0, 3);

  if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {
    index += 3;
    return {
      type: TokenPunctuator,
      value: ch3,
      start: start,
      end: index
    };
  }

  // Other 2-character punctuators: ++ -- << >> && ||
  ch2 = ch3.substr(0, 2);

  if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {
    index += 2;
    return {
      type: TokenPunctuator,
      value: ch2,
      start: start,
      end: index
    };
  }

  // 1-character punctuators: < > = ! + - * % & | ^ /

  if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {
    ++index;
    return {
      type: TokenPunctuator,
      value: ch1,
      start: start,
      end: index
    };
  }

  throwError({}, MessageUnexpectedToken, ILLEGAL);
}

// 7.8.3 Numeric Literals

function scanHexLiteral(start) {
  var number = '';

  while (index < length) {
    if (!isHexDigit(source[index])) {
      break;
    }
    number += source[index++];
  }

  if (number.length === 0) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  if (isIdentifierStart(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseInt('0x' + number, 16),
    start: start,
    end: index
  };
}

function scanOctalLiteral(start) {
  var number = '0' + source[index++];
  while (index < length) {
    if (!isOctalDigit(source[index])) {
      break;
    }
    number += source[index++];
  }

  if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseInt(number, 8),
    octal: true,
    start: start,
    end: index
  };
}

function scanNumericLiteral() {
  var number, start, ch;

  ch = source[index];
  assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),
    'Numeric literal must start with a decimal digit or a decimal point');

  start = index;
  number = '';
  if (ch !== '.') {
    number = source[index++];
    ch = source[index];

    // Hex number starts with '0x'.
    // Octal number starts with '0'.
    if (number === '0') {
      if (ch === 'x' || ch === 'X') {
        ++index;
        return scanHexLiteral(start);
      }
      if (isOctalDigit(ch)) {
        return scanOctalLiteral(start);
      }

      // decimal number starts with '0' such as '09' is illegal.
      if (ch && isDecimalDigit(ch.charCodeAt(0))) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
    }

    while (isDecimalDigit(source.charCodeAt(index))) {
      number += source[index++];
    }
    ch = source[index];
  }

  if (ch === '.') {
    number += source[index++];
    while (isDecimalDigit(source.charCodeAt(index))) {
      number += source[index++];
    }
    ch = source[index];
  }

  if (ch === 'e' || ch === 'E') {
    number += source[index++];

    ch = source[index];
    if (ch === '+' || ch === '-') {
      number += source[index++];
    }
    if (isDecimalDigit(source.charCodeAt(index))) {
      while (isDecimalDigit(source.charCodeAt(index))) {
        number += source[index++];
      }
    } else {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
  }

  if (isIdentifierStart(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseFloat(number),
    start: start,
    end: index
  };
}

// 7.8.4 String Literals

function scanStringLiteral() {
  var str = '',
    quote, start, ch, code, octal = false;

  quote = source[index];
  assert((quote === '\'' || quote === '"'),
    'String literal must starts with a quote');

  start = index;
  ++index;

  while (index < length) {
    ch = source[index++];

    if (ch === quote) {
      quote = '';
      break;
    } else if (ch === '\\') {
      ch = source[index++];
      if (!ch || !isLineTerminator(ch.charCodeAt(0))) {
        switch (ch) {
          case 'u':
          case 'x':
            if (source[index] === '{') {
              ++index;
              str += scanUnicodeCodePointEscape();
            } else {
              str += scanHexEscape(ch);
            }
            break;
          case 'n':
            str += '\n';
            break;
          case 'r':
            str += '\r';
            break;
          case 't':
            str += '\t';
            break;
          case 'b':
            str += '\b';
            break;
          case 'f':
            str += '\f';
            break;
          case 'v':
            str += '\x0B';
            break;

          default:
            if (isOctalDigit(ch)) {
              code = '01234567'.indexOf(ch);

              // \0 is not octal escape sequence
              if (code !== 0) {
                octal = true;
              }

              if (index < length && isOctalDigit(source[index])) {
                octal = true;
                code = code * 8 + '01234567'.indexOf(source[index++]);

                // 3 digits are only allowed when string starts
                // with 0, 1, 2, 3
                if ('0123'.indexOf(ch) >= 0 &&
                  index < length &&
                  isOctalDigit(source[index])) {
                  code = code * 8 + '01234567'.indexOf(source[index++]);
                }
              }
              str += String.fromCharCode(code);
            } else {
              str += ch;
            }
            break;
        }
      } else {
        if (ch === '\r' && source[index] === '\n') {
          ++index;
        }
      }
    } else if (isLineTerminator(ch.charCodeAt(0))) {
      break;
    } else {
      str += ch;
    }
  }

  if (quote !== '') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenStringLiteral,
    value: str,
    octal: octal,
    start: start,
    end: index
  };
}

function testRegExp(pattern, flags) {
  var tmp = pattern;

  if (flags.indexOf('u') >= 0) {
    // Replace each astral symbol and every Unicode code point
    // escape sequence with a single ASCII symbol to avoid throwing on
    // regular expressions that are only valid in combination with the
    // `/u` flag.
    // Note: replacing with the ASCII symbol `x` might cause false
    // negatives in unlikely scenarios. For example, `[\u{61}-b]` is a
    // perfectly valid pattern that is equivalent to `[a-b]`, but it
    // would be replaced by `[x-b]` which throws an error.
    tmp = tmp
      .replace(/\\u\{([0-9a-fA-F]+)\}/g, function($0, $1) {
        if (parseInt($1, 16) <= 0x10FFFF) {
          return 'x';
        }
        throwError({}, MessageInvalidRegExp);
      })
      .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, 'x');
  }

  // First, detect invalid regular expressions.
  try {
    new RegExp(tmp);
  } catch (e) {
    throwError({}, MessageInvalidRegExp);
  }

  // Return a regular expression object for this pattern-flag pair, or
  // `null` in case the current environment doesn't support the flags it
  // uses.
  try {
    return new RegExp(pattern, flags);
  } catch (exception) {
    return null;
  }
}

function scanRegExpBody() {
  var ch, str, classMarker, terminated, body;

  ch = source[index];
  assert(ch === '/', 'Regular expression literal must start with a slash');
  str = source[index++];

  classMarker = false;
  terminated = false;
  while (index < length) {
    ch = source[index++];
    str += ch;
    if (ch === '\\') {
      ch = source[index++];
      // ECMA-262 7.8.5
      if (isLineTerminator(ch.charCodeAt(0))) {
        throwError({}, MessageUnterminatedRegExp);
      }
      str += ch;
    } else if (isLineTerminator(ch.charCodeAt(0))) {
      throwError({}, MessageUnterminatedRegExp);
    } else if (classMarker) {
      if (ch === ']') {
        classMarker = false;
      }
    } else {
      if (ch === '/') {
        terminated = true;
        break;
      } else if (ch === '[') {
        classMarker = true;
      }
    }
  }

  if (!terminated) {
    throwError({}, MessageUnterminatedRegExp);
  }

  // Exclude leading and trailing slash.
  body = str.substr(1, str.length - 2);
  return {
    value: body,
    literal: str
  };
}

function scanRegExpFlags() {
  var ch, str, flags;

  str = '';
  flags = '';
  while (index < length) {
    ch = source[index];
    if (!isIdentifierPart(ch.charCodeAt(0))) {
      break;
    }

    ++index;
    if (ch === '\\' && index < length) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    } else {
      flags += ch;
      str += ch;
    }
  }

  if (flags.search(/[^gimuy]/g) >= 0) {
    throwError({}, MessageInvalidRegExp, flags);
  }

  return {
    value: flags,
    literal: str
  };
}

function scanRegExp() {
  var start, body, flags, value;

  lookahead = null;
  skipComment();
  start = index;

  body = scanRegExpBody();
  flags = scanRegExpFlags();
  value = testRegExp(body.value, flags.value);

  return {
    literal: body.literal + flags.literal,
    value: value,
    regex: {
      pattern: body.value,
      flags: flags.value
    },
    start: start,
    end: index
  };
}

function isIdentifierName(token) {
  return token.type === TokenIdentifier ||
    token.type === TokenKeyword ||
    token.type === TokenBooleanLiteral ||
    token.type === TokenNullLiteral;
}

function advance() {
  var ch;

  skipComment();

  if (index >= length) {
    return {
      type: TokenEOF,
      start: index,
      end: index
    };
  }

  ch = source.charCodeAt(index);

  if (isIdentifierStart(ch)) {
    return scanIdentifier();
  }

  // Very common: ( and ) and ;
  if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {
    return scanPunctuator();
  }

  // String literal starts with single quote (U+0027) or double quote (U+0022).
  if (ch === 0x27 || ch === 0x22) {
    return scanStringLiteral();
  }


  // Dot (.) U+002E can also start a floating-point number, hence the need
  // to check the next character.
  if (ch === 0x2E) {
    if (isDecimalDigit(source.charCodeAt(index + 1))) {
      return scanNumericLiteral();
    }
    return scanPunctuator();
  }

  if (isDecimalDigit(ch)) {
    return scanNumericLiteral();
  }

  return scanPunctuator();
}

function lex() {
  var token;

  token = lookahead;
  index = token.end;

  lookahead = advance();

  index = token.end;

  return token;
}

function peek() {
  var pos;

  pos = index;

  lookahead = advance();
  index = pos;
}

function finishArrayExpression(elements) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxArrayExpression);
  node.elements = elements;
  return node;
}

function finishBinaryExpression(operator, left, right) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"]((operator === '||' || operator === '&&') ? SyntaxLogicalExpression : SyntaxBinaryExpression);
  node.operator = operator;
  node.left = left;
  node.right = right;
  return node;
}

function finishCallExpression(callee, args) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxCallExpression);
  node.callee = callee;
  node.arguments = args;
  return node;
}

function finishConditionalExpression(test, consequent, alternate) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxConditionalExpression);
  node.test = test;
  node.consequent = consequent;
  node.alternate = alternate;
  return node;
}

function finishIdentifier(name) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxIdentifier);
  node.name = name;
  return node;
}

function finishLiteral(token) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxLiteral);
  node.value = token.value;
  node.raw = source.slice(token.start, token.end);
  if (token.regex) {
    if (node.raw === '//') {
      node.raw = '/(?:)/';
    }
    node.regex = token.regex;
  }
  return node;
}

function finishMemberExpression(accessor, object, property) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxMemberExpression);
  node.computed = accessor === '[';
  node.object = object;
  node.property = property;
  if (!node.computed) property.member = true;
  return node;
}

function finishObjectExpression(properties) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxObjectExpression);
  node.properties = properties;
  return node;
}

function finishProperty(kind, key, value) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxProperty);
  node.key = key;
  node.value = value;
  node.kind = kind;
  return node;
}

function finishUnaryExpression(operator, argument) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxUnaryExpression);
  node.operator = operator;
  node.argument = argument;
  node.prefix = true;
  return node;
}

// Throw an exception

function throwError(token, messageFormat) {
  var error,
    args = Array.prototype.slice.call(arguments, 2),
    msg = messageFormat.replace(
      /%(\d)/g,
      function(whole, index) {
        assert(index < args.length, 'Message reference must be in range');
        return args[index];
      }
    );


  error = new Error(msg);
  error.index = index;
  error.description = msg;
  throw error;
}

// Throw an exception because of the token.

function throwUnexpected(token) {
  if (token.type === TokenEOF) {
    throwError(token, MessageUnexpectedEOS);
  }

  if (token.type === TokenNumericLiteral) {
    throwError(token, MessageUnexpectedNumber);
  }

  if (token.type === TokenStringLiteral) {
    throwError(token, MessageUnexpectedString);
  }

  if (token.type === TokenIdentifier) {
    throwError(token, MessageUnexpectedIdentifier);
  }

  if (token.type === TokenKeyword) {
    throwError(token, MessageUnexpectedReserved);
  }

  // BooleanLiteral, NullLiteral, or Punctuator.
  throwError(token, MessageUnexpectedToken, token.value);
}

// Expect the next token to match the specified punctuator.
// If not, an exception will be thrown.

function expect(value) {
  var token = lex();
  if (token.type !== TokenPunctuator || token.value !== value) {
    throwUnexpected(token);
  }
}

// Return true if the next token matches the specified punctuator.

function match(value) {
  return lookahead.type === TokenPunctuator && lookahead.value === value;
}

// Return true if the next token matches the specified keyword

function matchKeyword(keyword) {
  return lookahead.type === TokenKeyword && lookahead.value === keyword;
}

// 11.1.4 Array Initialiser

function parseArrayInitialiser() {
  var elements = [];

  index = lookahead.start;
  expect('[');

  while (!match(']')) {
    if (match(',')) {
      lex();
      elements.push(null);
    } else {
      elements.push(parseConditionalExpression());

      if (!match(']')) {
        expect(',');
      }
    }
  }

  lex();

  return finishArrayExpression(elements);
}

// 11.1.5 Object Initialiser

function parseObjectPropertyKey() {
  var token;

  index = lookahead.start;
  token = lex();

  // Note: This function is called only from parseObjectProperty(), where
  // EOF and Punctuator tokens are already filtered out.

  if (token.type === TokenStringLiteral || token.type === TokenNumericLiteral) {
    if (token.octal) {
      throwError(token, MessageStrictOctalLiteral);
    }
    return finishLiteral(token);
  }

  return finishIdentifier(token.value);
}

function parseObjectProperty() {
  var token, key, id, value;

  index = lookahead.start;
  token = lookahead;

  if (token.type === TokenIdentifier) {
    id = parseObjectPropertyKey();
    expect(':');
    value = parseConditionalExpression();
    return finishProperty('init', id, value);
  }
  if (token.type === TokenEOF || token.type === TokenPunctuator) {
    throwUnexpected(token);
  } else {
    key = parseObjectPropertyKey();
    expect(':');
    value = parseConditionalExpression();
    return finishProperty('init', key, value);
  }
}

function parseObjectInitialiser() {
  var properties = [],
    property, name, key, map = {},
    toString = String;

  index = lookahead.start;
  expect('{');

  while (!match('}')) {
    property = parseObjectProperty();

    if (property.key.type === SyntaxIdentifier) {
      name = property.key.name;
    } else {
      name = toString(property.key.value);
    }

    key = '$' + name;
    if (Object.prototype.hasOwnProperty.call(map, key)) {
      throwError({}, MessageStrictDuplicateProperty);
    } else {
      map[key] = true;
    }

    properties.push(property);

    if (!match('}')) {
      expect(',');
    }
  }

  expect('}');

  return finishObjectExpression(properties);
}

// 11.1.6 The Grouping Operator

function parseGroupExpression() {
  var expr;

  expect('(');

  expr = parseExpression();

  expect(')');

  return expr;
}


// 11.1 Primary Expressions

var legalKeywords = {
  "if": 1,
  "this": 1
};

function parsePrimaryExpression() {
  var type, token, expr;

  if (match('(')) {
    return parseGroupExpression();
  }

  if (match('[')) {
    return parseArrayInitialiser();
  }

  if (match('{')) {
    return parseObjectInitialiser();
  }

  type = lookahead.type;
  index = lookahead.start;


  if (type === TokenIdentifier || legalKeywords[lookahead.value]) {
    expr = finishIdentifier(lex().value);
  } else if (type === TokenStringLiteral || type === TokenNumericLiteral) {
    if (lookahead.octal) {
      throwError(lookahead, MessageStrictOctalLiteral);
    }
    expr = finishLiteral(lex());
  } else if (type === TokenKeyword) {
    throw new Error(DISABLED);
  } else if (type === TokenBooleanLiteral) {
    token = lex();
    token.value = (token.value === 'true');
    expr = finishLiteral(token);
  } else if (type === TokenNullLiteral) {
    token = lex();
    token.value = null;
    expr = finishLiteral(token);
  } else if (match('/') || match('/=')) {
    expr = finishLiteral(scanRegExp());
    peek();
  } else {
    throwUnexpected(lex());
  }

  return expr;
}

// 11.2 Left-Hand-Side Expressions

function parseArguments() {
  var args = [];

  expect('(');

  if (!match(')')) {
    while (index < length) {
      args.push(parseConditionalExpression());
      if (match(')')) {
        break;
      }
      expect(',');
    }
  }

  expect(')');

  return args;
}

function parseNonComputedProperty() {
  var token;
  index = lookahead.start;
  token = lex();

  if (!isIdentifierName(token)) {
    throwUnexpected(token);
  }

  return finishIdentifier(token.value);
}

function parseNonComputedMember() {
  expect('.');

  return parseNonComputedProperty();
}

function parseComputedMember() {
  var expr;

  expect('[');

  expr = parseExpression();

  expect(']');

  return expr;
}

function parseLeftHandSideExpressionAllowCall() {
  var expr, args, property;

  expr = parsePrimaryExpression();

  for (;;) {
    if (match('.')) {
      property = parseNonComputedMember();
      expr = finishMemberExpression('.', expr, property);
    } else if (match('(')) {
      args = parseArguments();
      expr = finishCallExpression(expr, args);
    } else if (match('[')) {
      property = parseComputedMember();
      expr = finishMemberExpression('[', expr, property);
    } else {
      break;
    }
  }

  return expr;
}

// 11.3 Postfix Expressions

function parsePostfixExpression() {
  var expr = parseLeftHandSideExpressionAllowCall();

  if (lookahead.type === TokenPunctuator) {
    if ((match('++') || match('--'))) {
      throw new Error(DISABLED);
    }
  }

  return expr;
}

// 11.4 Unary Operators

function parseUnaryExpression() {
  var token, expr;

  if (lookahead.type !== TokenPunctuator && lookahead.type !== TokenKeyword) {
    expr = parsePostfixExpression();
  } else if (match('++') || match('--')) {
    throw new Error(DISABLED);
  } else if (match('+') || match('-') || match('~') || match('!')) {
    token = lex();
    expr = parseUnaryExpression();
    expr = finishUnaryExpression(token.value, expr);
  } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
    throw new Error(DISABLED);
  } else {
    expr = parsePostfixExpression();
  }

  return expr;
}

function binaryPrecedence(token) {
  var prec = 0;

  if (token.type !== TokenPunctuator && token.type !== TokenKeyword) {
    return 0;
  }

  switch (token.value) {
    case '||':
      prec = 1;
      break;

    case '&&':
      prec = 2;
      break;

    case '|':
      prec = 3;
      break;

    case '^':
      prec = 4;
      break;

    case '&':
      prec = 5;
      break;

    case '==':
    case '!=':
    case '===':
    case '!==':
      prec = 6;
      break;

    case '<':
    case '>':
    case '<=':
    case '>=':
    case 'instanceof':
    case 'in':
      prec = 7;
      break;

    case '<<':
    case '>>':
    case '>>>':
      prec = 8;
      break;

    case '+':
    case '-':
      prec = 9;
      break;

    case '*':
    case '/':
    case '%':
      prec = 11;
      break;

    default:
      break;
  }

  return prec;
}

// 11.5 Multiplicative Operators
// 11.6 Additive Operators
// 11.7 Bitwise Shift Operators
// 11.8 Relational Operators
// 11.9 Equality Operators
// 11.10 Binary Bitwise Operators
// 11.11 Binary Logical Operators

function parseBinaryExpression() {
  var marker, markers, expr, token, prec, stack, right, operator, left, i;

  marker = lookahead;
  left = parseUnaryExpression();

  token = lookahead;
  prec = binaryPrecedence(token);
  if (prec === 0) {
    return left;
  }
  token.prec = prec;
  lex();

  markers = [marker, lookahead];
  right = parseUnaryExpression();

  stack = [left, token, right];

  while ((prec = binaryPrecedence(lookahead)) > 0) {

    // Reduce: make a binary expression from the three topmost entries.
    while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {
      right = stack.pop();
      operator = stack.pop().value;
      left = stack.pop();
      markers.pop();
      expr = finishBinaryExpression(operator, left, right);
      stack.push(expr);
    }

    // Shift.
    token = lex();
    token.prec = prec;
    stack.push(token);
    markers.push(lookahead);
    expr = parseUnaryExpression();
    stack.push(expr);
  }

  // Final reduce to clean-up the stack.
  i = stack.length - 1;
  expr = stack[i];
  markers.pop();
  while (i > 1) {
    markers.pop()
    expr = finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);
    i -= 2;
  }

  return expr;
}

// 11.12 Conditional Operator

function parseConditionalExpression() {
  var expr, consequent, alternate;

  expr = parseBinaryExpression();

  if (match('?')) {
    lex();
    consequent = parseConditionalExpression();
    expect(':');
    alternate = parseConditionalExpression();

    expr = finishConditionalExpression(expr, consequent, alternate);
  }

  return expr;
}

// 11.14 Comma Operator

function parseExpression() {
  var expr = parseConditionalExpression();

  if (match(',')) {
    throw new Error(DISABLED); // no sequence expressions
  }

  return expr;
}

/* harmony default export */ __webpack_exports__["default"] = (function(code) {
  source = code;
  index = 0;
  length = source.length;
  lookahead = null;

  peek();

  var expr = parseExpression();

  if (lookahead.type !== TokenEOF) {
    throw new Error("Unexpect token after expression.");
  }
  return expr;
});


/***/ }),

/***/ "eXek":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundItem.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "wOpL");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../marks/index */ "Mi2v");



/* harmony default export */ __webpack_exports__["default"] = (function(item, func, opt) {
  var type = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][item.mark.marktype],
      bound = func || type.bound;
  if (type.nested) item = item.mark;

  return bound(item.bounds || (item.bounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]()), item, opt);
});


/***/ }),

/***/ "eppj":
/*!****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/log.js ***!
  \****************************************************************/
/*! exports provided: warn, info, debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "info", function() { return info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
function log(df, method, args) {
  try {
    df[method].apply(df, ['EXPRESSION'].concat([].slice.call(args)));
  } catch (err) {
    df.warn(err);
  }
  return args[args.length-1];
}

function warn() {
  return log(this.context.dataflow, 'warn', arguments);
}

function info() {
  return log(this.context.dataflow, 'info', arguments);
}

function debug() {
  return log(this.context.dataflow, 'debug', arguments);
}


/***/ }),

/***/ "es2w":
/*!***********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/adjust-spatial.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var Skip = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['rule']),
    Swap = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['group', 'image', 'rect']);

/* harmony default export */ __webpack_exports__["default"] = (function(encode, marktype) {
  var code = '';

  if (Skip[marktype]) return code;

  if (encode.x2) {
    if (encode.x) {
      if (Swap[marktype]) {
        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';
      }
      code += 'o.width=o.x2-o.x;';
    } else {
      code += 'o.x=o.x2-(o.width||0);';
    }
  }

  if (encode.xc) {
    code += 'o.x=o.xc-(o.width||0)/2;';
  }

  if (encode.y2) {
    if (encode.y) {
      if (Swap[marktype]) {
        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';
      }
      code += 'o.height=o.y2-o.y;';
    } else {
      code += 'o.y=o.y2-(o.height||0);';
    }
  }

  if (encode.yc) {
    code += 'o.y=o.yc-(o.height||0)/2;';
  }

  return code;
});


/***/ }),

/***/ "etOl":
/*!****************************************************!*\
  !*** ./node_modules/vega-embed/build/src/embed.js ***!
  \****************************************************/
/*! exports provided: vega, vl, guessMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vega", function() { return vega; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vl", function() { return vl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guessMode", function() { return guessMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return embed; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "/TIM");
/* harmony import */ var json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! json-stringify-pretty-compact */ "ZYJ9");
/* harmony import */ var json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! semver */ "jWEn");
/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(semver__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var vega_lib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-lib */ "aV2Y");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-lite */ "KoP/");
/* harmony import */ var vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-schema-url-parser */ "gatG");
/* harmony import */ var vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var vega_themes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-themes */ "zo6v");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vega-tooltip */ "jSEt");
/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./post */ "/MTu");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./style */ "10j7");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util */ "yYvi");












var vega = vega_lib__WEBPACK_IMPORTED_MODULE_4__;
var vl = vega_lite__WEBPACK_IMPORTED_MODULE_5__;
var NAMES = {
    vega: 'Vega',
    'vega-lite': 'Vega-Lite',
};
var VERSION = {
    vega: vega.version,
    'vega-lite': vl ? vl.version : 'not available',
};
var PREPROCESSOR = {
    vega: function (vgjson, _) { return vgjson; },
    'vega-lite': function (vljson, config) { return vl.compile(vljson, { config: config }).spec; },
};
var SVG_CIRCLES = "\n<svg viewBox=\"0 0 16 16\" fill=\"currentColor\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\" width=\"14\" height=\"14\">\n  <circle r=\"2\" cy=\"8\" cx=\"2\"></circle>\n  <circle r=\"2\" cy=\"8\" cx=\"8\"></circle>\n  <circle r=\"2\" cy=\"8\" cx=\"14\"></circle>\n</svg>";
var I18N = {
    COMPILED_ACTION: 'View Vega',
    EDITOR_ACTION: 'Open in Vega Editor',
    PNG_ACTION: 'Save as PNG',
    SOURCE_ACTION: 'View Source',
    SVG_ACTION: 'Save as SVG',
};
function isTooltipHandler(h) {
    return typeof h === 'function';
}
function viewSource(source, sourceHeader, sourceFooter, mode) {
    var header = "<html><head>" + sourceHeader + "</head><body><pre><code class=\"json\">";
    var footer = "</code></pre>" + sourceFooter + "</body></html>";
    var win = window.open('');
    win.document.write(header + source + footer);
    win.document.title = NAMES[mode] + " JSON Source";
}
/**
 * Try to guess the type of spec.
 *
 * @param spec Vega or Vega-Lite spec.
 */
function guessMode(spec, providedMode) {
    // Decide mode
    if (spec.$schema) {
        var parsed = vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default()(spec.$schema);
        if (providedMode && providedMode !== parsed.library) {
            console.warn("The given visualization spec is written in " + NAMES[parsed.library] + ", but mode argument sets " + NAMES[providedMode] + ".");
        }
        var mode = parsed.library;
        if (!Object(semver__WEBPACK_IMPORTED_MODULE_3__["satisfies"])(VERSION[mode], "^" + parsed.version.slice(1))) {
            console.warn("The input spec uses " + mode + " " + parsed.version + ", but the current version of " + NAMES[mode] + " is " + VERSION[mode] + ".");
        }
        return mode;
    }
    else {
        // try to guess from the provided spec
        if ('mark' in spec ||
            'encoding' in spec ||
            'layer' in spec ||
            'hconcat' in spec ||
            'vconcat' in spec ||
            'facet' in spec ||
            'repeat' in spec) {
            return 'vega-lite';
        }
        if ('marks' in spec || 'signals' in spec || 'scales' in spec || 'axes' in spec) {
            return 'vega';
        }
    }
    return providedMode || 'vega';
}
function isLoader(o) {
    return !!(o && 'load' in o);
}
/**
 * Embed a Vega visualization component in a web page. This function returns a promise.
 *
 * @param el        DOM element in which to place component (DOM node or CSS selector).
 * @param spec      String : A URL string from which to load the Vega specification.
 *                  Object : The Vega/Vega-Lite specification as a parsed JSON object.
 * @param opt       A JavaScript object containing options for embedding.
 */
function embed(el, spec, opt) {
    if (opt === void 0) { opt = {}; }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
        var actions, i18n, loader, renderer, logLevel, data, config, data, ID, style, mode, vgSpec, parsed, div, runtime, view, handler, wrapper, ctrl, _loop_1, _i, _a, ext, editorUrl_1;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_b) {
            switch (_b.label) {
                case 0:
                    opt = opt || {};
                    actions = opt.actions === true || opt.actions === false
                        ? opt.actions
                        : Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])({}, { export: { svg: true, png: true }, source: true, compiled: false, editor: true }, opt.actions || {});
                    i18n = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, I18N, opt.i18n);
                    loader = isLoader(opt.loader) ? opt.loader : vega.loader(opt.loader);
                    renderer = opt.renderer || 'canvas';
                    logLevel = opt.logLevel || vega.Warn;
                    if (!vega.isString(spec)) return [3 /*break*/, 2];
                    return [4 /*yield*/, loader.load(spec)];
                case 1:
                    data = _b.sent();
                    return [2 /*return*/, embed(el, JSON.parse(data), opt)];
                case 2:
                    config = opt.config || {};
                    if (!vega.isString(config)) return [3 /*break*/, 4];
                    return [4 /*yield*/, loader.load(config)];
                case 3:
                    data = _b.sent();
                    return [2 /*return*/, embed(el, spec, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, opt, { config: JSON.parse(data) }))];
                case 4:
                    if (opt.defaultStyle) {
                        ID = 'vega-embed-style';
                        if (!document.getElementById(ID)) {
                            style = document.createElement('style');
                            style.id = ID;
                            style.innerText = opt.defaultStyle === true ? (_style__WEBPACK_IMPORTED_MODULE_10__["default"] || '').toString() : opt.defaultStyle;
                            document.getElementsByTagName('head')[0].appendChild(style);
                        }
                    }
                    if (opt.theme) {
                        config = Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])({}, vega_themes__WEBPACK_IMPORTED_MODULE_7__[opt.theme], config);
                    }
                    mode = guessMode(spec, opt.mode);
                    vgSpec = PREPROCESSOR[mode](spec, config);
                    if (mode === 'vega-lite') {
                        if (vgSpec.$schema) {
                            parsed = vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default()(vgSpec.$schema);
                            if (!Object(semver__WEBPACK_IMPORTED_MODULE_3__["satisfies"])(VERSION.vega, "^" + parsed.version.slice(1))) {
                                console.warn("The compiled spec uses Vega " + parsed.version + ", but current version is " + VERSION.vega + ".");
                            }
                        }
                    }
                    div = d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"](el) // d3.select supports elements and strings
                        .classed('vega-embed', true)
                        .html('');
                    if (opt.onBeforeParse) {
                        // Allow Vega spec to be modified before being used
                        vgSpec = opt.onBeforeParse(vgSpec);
                    }
                    runtime = vega.parse(vgSpec, mode === 'vega-lite' ? {} : config);
                    view = new vega.View(runtime, {
                        loader: loader,
                        logLevel: logLevel,
                        renderer: renderer,
                    }).initialize(el);
                    if (opt.tooltip !== false) {
                        handler = void 0;
                        if (isTooltipHandler(opt.tooltip)) {
                            handler = opt.tooltip;
                        }
                        else {
                            // user provided boolean true or tooltip options
                            handler = new vega_tooltip__WEBPACK_IMPORTED_MODULE_8__["Handler"](opt.tooltip === true ? {} : opt.tooltip).call;
                        }
                        view.tooltip(handler);
                    }
                    // do not automatically enable hover for Vega-Lite.
                    if (opt.hover === undefined ? mode !== 'vega-lite' : opt.hover) {
                        view.hover();
                    }
                    if (opt) {
                        if (opt.width) {
                            view.width(opt.width);
                        }
                        if (opt.height) {
                            view.height(opt.height);
                        }
                        if (opt.padding) {
                            view.padding(opt.padding);
                        }
                    }
                    if (!opt.runAsync) return [3 /*break*/, 6];
                    return [4 /*yield*/, view.runAsync()];
                case 5:
                    _b.sent();
                    return [3 /*break*/, 7];
                case 6:
                    view.run();
                    _b.label = 7;
                case 7:
                    if (actions !== false) {
                        wrapper = div.append('div').attr('class', 'vega-actions-wrapper');
                        if (opt.defaultStyle === true) {
                            wrapper.html(SVG_CIRCLES);
                        }
                        ctrl = wrapper.insert('div').attr('class', 'vega-actions');
                        // add 'Export' action
                        if (actions === true || actions.export !== false) {
                            _loop_1 = function (ext) {
                                if (actions === true || actions.export === true || actions.export[ext]) {
                                    var i18nExportAction = i18n[ext.toUpperCase() + "_ACTION"];
                                    ctrl
                                        .append('a')
                                        .text(i18nExportAction)
                                        .attr('href', '#')
                                        .attr('target', '_blank')
                                        .attr('download', "visualization." + ext)
                                        .on('mousedown', function () {
                                        var _this = this;
                                        view
                                            .toImageURL(ext, opt.scaleFactor)
                                            .then(function (url) {
                                            _this.href = url;
                                        })
                                            .catch(function (error) {
                                            throw error;
                                        });
                                        d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                                    });
                                }
                            };
                            for (_i = 0, _a = ['svg', 'png']; _i < _a.length; _i++) {
                                ext = _a[_i];
                                _loop_1(ext);
                            }
                        }
                        // add 'View Source' action
                        if (actions === true || actions.source !== false) {
                            ctrl
                                .append('a')
                                .text(i18n.SOURCE_ACTION)
                                .attr('href', '#')
                                .on('click', function () {
                                viewSource(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(spec), opt.sourceHeader || '', opt.sourceFooter || '', mode);
                                d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                            });
                        }
                        // add 'View Compiled' action
                        if (mode === 'vega-lite' && (actions === true || actions.compiled !== false)) {
                            ctrl
                                .append('a')
                                .text(i18n.COMPILED_ACTION)
                                .attr('href', '#')
                                .on('click', function () {
                                viewSource(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(vgSpec), opt.sourceHeader || '', opt.sourceFooter || '', 'vega');
                                d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                            });
                        }
                        // add 'Open in Vega Editor' action
                        if (actions === true || actions.editor !== false) {
                            editorUrl_1 = opt.editorUrl || 'https://vega.github.io/editor/';
                            ctrl
                                .append('a')
                                .text(i18n.EDITOR_ACTION)
                                .attr('href', '#')
                                .on('click', function () {
                                Object(_post__WEBPACK_IMPORTED_MODULE_9__["post"])(window, editorUrl_1, {
                                    config: config,
                                    mode: mode,
                                    renderer: renderer,
                                    spec: json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(spec),
                                });
                                d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                            });
                        }
                    }
                    return [2 /*return*/, { view: view, spec: spec }];
            }
        });
    });
}
//# sourceMappingURL=embed.js.map

/***/ }),

/***/ "ezh/":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Values.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Values; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Extracts an array of values. Assumes the source data has already been
 * reduced as needed (e.g., by an upstream Aggregate transform).
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The domain field to extract.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for sorting the values. The comparator will be
 *   applied to backing tuples prior to value extraction.
 */
function Values(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Values, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var run = !this.value
    || _.modified('field')
    || _.modified('sort')
    || pulse.changed()
    || (_.sort && pulse.modified(_.sort.fields));

  if (run) {
    this.value = (_.sort
      ? pulse.source.slice().sort(_.sort)
      : pulse.source).map(_.field);
  }
};


/***/ }),

/***/ "f4Fa":
/*!**************************************************!*\
  !*** ./node_modules/vega-tooltip/build/style.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// generated with build-style.sh
/* harmony default export */ __webpack_exports__["default"] = ("#vg-tooltip-element {\n  visibility: hidden;\n  padding: 8px;\n  position: fixed;\n  z-index: 1000;\n  font-family: sans-serif;\n  font-size: 11px;\n  border-radius: 3px;\n  box-shadow: 2px 2px 4px rgba(0,0,0,0.1);\n\n  /* The default theme is the light theme. */\n  background-color: rgba(255, 255, 255, 0.95);\n  border: 1px solid #d9d9d9;\n  color: black;\n}\n#vg-tooltip-element.visible {\n  visibility: visible;\n}\n#vg-tooltip-element h2 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 13px;\n}\n#vg-tooltip-element table {\n  border-spacing: 0;\n}\n#vg-tooltip-element td {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-top: 2px;\n  padding-bottom: 2px;\n}\n#vg-tooltip-element td.key {\n  color: #808080;\n  max-width: 150px;\n  text-align: right;\n  padding-right: 4px;\n}\n#vg-tooltip-element td.value {\n  display: block;\n  max-width: 300px;\n  max-height: 7em;\n  text-align: left;\n}\n\n/* Dark and light color themes */\n#vg-tooltip-element.dark-theme {\n  background-color: rgba(32, 32, 32, 0.9);\n  border: 1px solid #f5f5f5;\n  color: white;\n}\n#vg-tooltip-element.dark-theme td.key {\n  color: #bfbfbf;\n}\n\n#vg-tooltip-element.light-theme {\n  background-color: rgba(255, 255, 255, 0.95);\n  border: 1px solid #d9d9d9;\n  color: black;\n}\n#vg-tooltip-element.light-theme td.key {\n  color: #808080;\n}");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3R5bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQWdDO0FBQ2hDLGVBQWUsczBDQThEYixDQUFBIn0=

/***/ }),

/***/ "f7J+":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/timeunit.js ***!
  \******************************************************/
/*! exports provided: TimeUnit, TIMEUNIT_PARTS, isLocalSingleTimeUnit, isUtcSingleTimeUnit, isUTCTimeUnit, getLocalTimeUnit, TIMEUNITS, isTimeUnit, convert, getTimeUnitParts, containsTimeUnit, fieldExpr, formatExpression, normalizeTimeUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeUnit", function() { return TimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMEUNIT_PARTS", function() { return TIMEUNIT_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLocalSingleTimeUnit", function() { return isLocalSingleTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUtcSingleTimeUnit", function() { return isUtcSingleTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUTCTimeUnit", function() { return isUTCTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalTimeUnit", function() { return getLocalTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMEUNITS", function() { return TIMEUNITS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeUnit", function() { return isTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convert", function() { return convert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTimeUnitParts", function() { return getTimeUnitParts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsTimeUnit", function() { return containsTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldExpr", function() { return fieldExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatExpression", function() { return formatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeTimeUnit", function() { return normalizeTimeUnit; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datetime */ "QzCd");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "Hc3/");




var TimeUnit;
(function (TimeUnit) {
    TimeUnit.YEAR = 'year';
    TimeUnit.MONTH = 'month';
    TimeUnit.DAY = 'day';
    TimeUnit.DATE = 'date';
    TimeUnit.HOURS = 'hours';
    TimeUnit.MINUTES = 'minutes';
    TimeUnit.SECONDS = 'seconds';
    TimeUnit.MILLISECONDS = 'milliseconds';
    TimeUnit.YEARMONTH = 'yearmonth';
    TimeUnit.YEARMONTHDATE = 'yearmonthdate';
    TimeUnit.YEARMONTHDATEHOURS = 'yearmonthdatehours';
    TimeUnit.YEARMONTHDATEHOURSMINUTES = 'yearmonthdatehoursminutes';
    TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS = 'yearmonthdatehoursminutesseconds';
    // MONTHDATE always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.MONTHDATE = 'monthdate';
    TimeUnit.HOURSMINUTES = 'hoursminutes';
    TimeUnit.HOURSMINUTESSECONDS = 'hoursminutesseconds';
    TimeUnit.MINUTESSECONDS = 'minutesseconds';
    TimeUnit.SECONDSMILLISECONDS = 'secondsmilliseconds';
    TimeUnit.QUARTER = 'quarter';
    TimeUnit.YEARQUARTER = 'yearquarter';
    TimeUnit.QUARTERMONTH = 'quartermonth';
    TimeUnit.YEARQUARTERMONTH = 'yearquartermonth';
    TimeUnit.UTCYEAR = 'utcyear';
    TimeUnit.UTCMONTH = 'utcmonth';
    TimeUnit.UTCDAY = 'utcday';
    TimeUnit.UTCDATE = 'utcdate';
    TimeUnit.UTCHOURS = 'utchours';
    TimeUnit.UTCMINUTES = 'utcminutes';
    TimeUnit.UTCSECONDS = 'utcseconds';
    TimeUnit.UTCMILLISECONDS = 'utcmilliseconds';
    TimeUnit.UTCYEARMONTH = 'utcyearmonth';
    TimeUnit.UTCYEARMONTHDATE = 'utcyearmonthdate';
    TimeUnit.UTCYEARMONTHDATEHOURS = 'utcyearmonthdatehours';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTES = 'utcyearmonthdatehoursminutes';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTESSECONDS = 'utcyearmonthdatehoursminutesseconds';
    // MONTHDATE always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.UTCMONTHDATE = 'utcmonthdate';
    TimeUnit.UTCHOURSMINUTES = 'utchoursminutes';
    TimeUnit.UTCHOURSMINUTESSECONDS = 'utchoursminutesseconds';
    TimeUnit.UTCMINUTESSECONDS = 'utcminutesseconds';
    TimeUnit.UTCSECONDSMILLISECONDS = 'utcsecondsmilliseconds';
    TimeUnit.UTCQUARTER = 'utcquarter';
    TimeUnit.UTCYEARQUARTER = 'utcyearquarter';
    TimeUnit.UTCQUARTERMONTH = 'utcquartermonth';
    TimeUnit.UTCYEARQUARTERMONTH = 'utcyearquartermonth';
})(TimeUnit || (TimeUnit = {}));
/** Time Unit that only corresponds to only one part of Date objects. */
var LOCAL_SINGLE_TIMEUNIT_INDEX = {
    year: 1,
    quarter: 1,
    month: 1,
    day: 1,
    date: 1,
    hours: 1,
    minutes: 1,
    seconds: 1,
    milliseconds: 1
};
var TIMEUNIT_PARTS = Object(_util__WEBPACK_IMPORTED_MODULE_3__["flagKeys"])(LOCAL_SINGLE_TIMEUNIT_INDEX);
function isLocalSingleTimeUnit(timeUnit) {
    return !!LOCAL_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
var UTC_SINGLE_TIMEUNIT_INDEX = {
    utcyear: 1,
    utcquarter: 1,
    utcmonth: 1,
    utcday: 1,
    utcdate: 1,
    utchours: 1,
    utcminutes: 1,
    utcseconds: 1,
    utcmilliseconds: 1
};
function isUtcSingleTimeUnit(timeUnit) {
    return !!UTC_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
var LOCAL_MULTI_TIMEUNIT_INDEX = {
    yearquarter: 1,
    yearquartermonth: 1,
    yearmonth: 1,
    yearmonthdate: 1,
    yearmonthdatehours: 1,
    yearmonthdatehoursminutes: 1,
    yearmonthdatehoursminutesseconds: 1,
    quartermonth: 1,
    monthdate: 1,
    hoursminutes: 1,
    hoursminutesseconds: 1,
    minutesseconds: 1,
    secondsmilliseconds: 1
};
var UTC_MULTI_TIMEUNIT_INDEX = {
    utcyearquarter: 1,
    utcyearquartermonth: 1,
    utcyearmonth: 1,
    utcyearmonthdate: 1,
    utcyearmonthdatehours: 1,
    utcyearmonthdatehoursminutes: 1,
    utcyearmonthdatehoursminutesseconds: 1,
    utcquartermonth: 1,
    utcmonthdate: 1,
    utchoursminutes: 1,
    utchoursminutesseconds: 1,
    utcminutesseconds: 1,
    utcsecondsmilliseconds: 1
};
var UTC_TIMEUNIT_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, UTC_SINGLE_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
function isUTCTimeUnit(t) {
    return !!UTC_TIMEUNIT_INDEX[t];
}
function getLocalTimeUnit(t) {
    return t.substr(3);
}
var TIMEUNIT_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, LOCAL_SINGLE_TIMEUNIT_INDEX, UTC_SINGLE_TIMEUNIT_INDEX, LOCAL_MULTI_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
var TIMEUNITS = Object(_util__WEBPACK_IMPORTED_MODULE_3__["flagKeys"])(TIMEUNIT_INDEX);
function isTimeUnit(t) {
    return !!TIMEUNIT_INDEX[t];
}
var SET_DATE_METHOD = {
    year: 'setFullYear',
    month: 'setMonth',
    date: 'setDate',
    hours: 'setHours',
    minutes: 'setMinutes',
    seconds: 'setSeconds',
    milliseconds: 'setMilliseconds',
    // Day and quarter have their own special cases
    quarter: null,
    day: null,
};
/**
 * Converts a date to only have the measurements relevant to the specified unit
 * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'
 * Note: the base date is Jan 01 1900 00:00:00
 */
function convert(unit, date) {
    var isUTC = isUTCTimeUnit(unit);
    var result = isUTC ?
        // start with uniform date
        new Date(Date.UTC(0, 0, 1, 0, 0, 0, 0)) :
        new Date(0, 0, 1, 0, 0, 0, 0);
    for (var _i = 0, TIMEUNIT_PARTS_1 = TIMEUNIT_PARTS; _i < TIMEUNIT_PARTS_1.length; _i++) {
        var timeUnitPart = TIMEUNIT_PARTS_1[_i];
        if (containsTimeUnit(unit, timeUnitPart)) {
            switch (timeUnitPart) {
                case TimeUnit.DAY:
                    throw new Error('Cannot convert to TimeUnits containing \'day\'');
                case TimeUnit.QUARTER: {
                    var _a = dateMethods('month', isUTC), getDateMethod_1 = _a.getDateMethod, setDateMethod_1 = _a.setDateMethod;
                    // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)
                    result[setDateMethod_1]((Math.floor(date[getDateMethod_1]() / 3)) * 3);
                    break;
                }
                default:
                    var _b = dateMethods(timeUnitPart, isUTC), getDateMethod = _b.getDateMethod, setDateMethod = _b.setDateMethod;
                    result[setDateMethod](date[getDateMethod]());
            }
        }
    }
    return result;
}
function dateMethods(singleUnit, isUtc) {
    var rawSetDateMethod = SET_DATE_METHOD[singleUnit];
    var setDateMethod = isUtc ? 'setUTC' + rawSetDateMethod.substr(3) : rawSetDateMethod;
    var getDateMethod = 'get' + (isUtc ? 'UTC' : '') + rawSetDateMethod.substr(3);
    return { setDateMethod: setDateMethod, getDateMethod: getDateMethod };
}
function getTimeUnitParts(timeUnit) {
    return TIMEUNIT_PARTS.reduce(function (parts, part) {
        if (containsTimeUnit(timeUnit, part)) {
            return parts.concat(part);
        }
        return parts;
    }, []);
}
/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */
function containsTimeUnit(fullTimeUnit, timeUnit) {
    var index = fullTimeUnit.indexOf(timeUnit);
    return index > -1 &&
        (timeUnit !== TimeUnit.SECONDS ||
            index === 0 ||
            fullTimeUnit.charAt(index - 1) !== 'i' // exclude milliseconds
        );
}
/**
 * Returns Vega expresssion for a given timeUnit and fieldRef
 */
function fieldExpr(fullTimeUnit, field) {
    var fieldRef = Object(_util__WEBPACK_IMPORTED_MODULE_3__["accessPathWithDatum"])(field);
    var utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';
    function func(timeUnit) {
        if (timeUnit === TimeUnit.QUARTER) {
            // quarter starting at 0 (0,3,6,9).
            return "(" + utc + "quarter(" + fieldRef + ")-1)";
        }
        else {
            return "" + utc + timeUnit + "(" + fieldRef + ")";
        }
    }
    var d = TIMEUNIT_PARTS.reduce(function (dateExpr, tu) {
        if (containsTimeUnit(fullTimeUnit, tu)) {
            dateExpr[tu] = func(tu);
        }
        return dateExpr;
    }, {});
    return Object(_datetime__WEBPACK_IMPORTED_MODULE_1__["dateTimeExpr"])(d);
}
/**
 * returns the signal expression used for axis labels for a time unit
 */
function formatExpression(timeUnit, field, shortTimeLabels, isUTCScale) {
    if (!timeUnit) {
        return undefined;
    }
    var dateComponents = [];
    var expression = '';
    var hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);
    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {
        // special expression for quarter as prefix
        expression = "'Q' + quarter(" + field + ")";
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {
        // By default use short month name
        dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {
        dateComponents.push(shortTimeLabels ? '%a' : '%A');
    }
    else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {
        dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year
    }
    if (hasYear) {
        dateComponents.push(shortTimeLabels ? '%y' : '%Y');
    }
    var timeComponents = [];
    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {
        timeComponents.push('%H');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {
        timeComponents.push('%M');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {
        timeComponents.push('%S');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {
        timeComponents.push('%L');
    }
    var dateTimeComponents = [];
    if (dateComponents.length > 0) {
        dateTimeComponents.push(dateComponents.join(' '));
    }
    if (timeComponents.length > 0) {
        dateTimeComponents.push(timeComponents.join(':'));
    }
    if (dateTimeComponents.length > 0) {
        if (expression) {
            // Add space between quarter and main time format
            expression += " + ' ' + ";
        }
        // We only use utcFormat for utc scale
        // For utc time units, the data is already converted as a part of timeUnit transform.
        // Thus, utc time units should use timeFormat to avoid shifting the time twice.
        if (isUTCScale) {
            expression += "utcFormat(" + field + ", '" + dateTimeComponents.join(' ') + "')";
        }
        else {
            expression += "timeFormat(" + field + ", '" + dateTimeComponents.join(' ') + "')";
        }
    }
    // If expression is still an empty string, return undefined instead.
    return expression || undefined;
}
function normalizeTimeUnit(timeUnit) {
    if (timeUnit !== 'day' && timeUnit.indexOf('day') >= 0) {
        _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].dayReplacedWithDate(timeUnit));
        return timeUnit.replace('day', 'date');
    }
    return timeUnit;
}
//# sourceMappingURL=timeunit.js.map

/***/ }),

/***/ "f9Sr":
/*!*******************************************************!*\
  !*** ./node_modules/topojson-client/src/transform.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "OZV6");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2, n = input.length, output = new Array(n);
    output[0] = (x0 += input[0]) * kx + dx;
    output[1] = (y0 += input[1]) * ky + dy;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "fCHC":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/projection.js ***!
  \********************************************************/
/*! exports provided: PROJECTION_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PROJECTION_PROPERTIES", function() { return PROJECTION_PROPERTIES; });
var PROJECTION_PROPERTIES = [
    'type',
    'clipAngle',
    'clipExtent',
    'center',
    'rotate',
    'precision',
    'coefficient',
    'distance',
    'fraction',
    'lobes',
    'parallel',
    'radius',
    'ratio',
    'spacing',
    'tilt'
];
//# sourceMappingURL=projection.js.map

/***/ }),

/***/ "fDie":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/update.js ***!
  \***********************************************************/
/*! exports provided: touch, update, pulse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return touch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update", function() { return update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pulse", function() { return pulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Pulse */ "8gyZ");


var NO_OPT = {skip: false, force: false};

/**
 * Touches an operator, scheduling it to be evaluated. If invoked outside of
 * a pulse propagation, the operator will be evaluated the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the operator
 * will be queued for evaluation if and only if the operator has not yet been
 * evaluated on the current propagation timestamp.
 * @param {Operator} op - The operator to touch.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function touch(op, options) {
  var opt = options || NO_OPT;
  if (this._pulse) {
    // if in midst of propagation, add to priority queue
    this._enqueue(op);
  } else {
    // otherwise, queue for next propagation
    this._touched.add(op);
  }
  if (opt.skip) op.skip(true);
  return this;
}

/**
 * Updates the value of the given operator.
 * @param {Operator} op - The operator to update.
 * @param {*} value - The value to set.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function update(op, value, options) {
  var opt = options || NO_OPT;
  if (op.set(value) || opt.force) {
    this.touch(op, opt);
  }
  return this;
}

/**
 * Pulses an operator with a changeset of tuples. If invoked outside of
 * a pulse propagation, the pulse will be applied the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the pulse
 * will be added to the set of active pulses and will be applied if and
 * only if the target operator has not yet been evaluated on the current
 * propagation timestamp.
 * @param {Operator} op - The operator to pulse.
 * @param {ChangeSet} value - The tuple changeset to apply.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function pulse(op, changeset, options) {
  this.touch(op, options || NO_OPT);

  var p = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](this, this._clock + (this._pulse ? 0 : 1)),
      t = op.pulse && op.pulse.source || [];
  p.target = op;
  this._pulses[op.id] = changeset.pulse(p, t);

  return this;
}


/***/ }),

/***/ "fFaC":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/type.js ***!
  \**************************************************/
/*! exports provided: Type, TYPE_INDEX, isType, QUANTITATIVE, ORDINAL, TEMPORAL, NOMINAL, GEOJSON, getFullName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TYPE_INDEX", function() { return TYPE_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isType", function() { return isType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUANTITATIVE", function() { return QUANTITATIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ORDINAL", function() { return ORDINAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEMPORAL", function() { return TEMPORAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NOMINAL", function() { return NOMINAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOJSON", function() { return GEOJSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFullName", function() { return getFullName; });
/** Constants and utilities for data type */
/** Data type based on level of measurement */
var Type;
(function (Type) {
    Type.QUANTITATIVE = 'quantitative';
    Type.ORDINAL = 'ordinal';
    Type.TEMPORAL = 'temporal';
    Type.NOMINAL = 'nominal';
    Type.LATITUDE = 'latitude';
    Type.LONGITUDE = 'longitude';
    Type.GEOJSON = 'geojson';
})(Type || (Type = {}));
var TYPE_INDEX = {
    quantitative: 1,
    ordinal: 1,
    temporal: 1,
    nominal: 1,
    latitude: 1,
    longitude: 1,
    geojson: 1
};
function isType(t) {
    return !!TYPE_INDEX[t];
}
var QUANTITATIVE = Type.QUANTITATIVE;
var ORDINAL = Type.ORDINAL;
var TEMPORAL = Type.TEMPORAL;
var NOMINAL = Type.NOMINAL;
var GEOJSON = Type.GEOJSON;
/**
 * Get full, lowercase type name for a given type.
 * @param  type
 * @return Full type name.
 */
function getFullName(type) {
    if (type) {
        type = type.toLowerCase();
        switch (type) {
            case 'q':
            case QUANTITATIVE:
                return 'quantitative';
            case 't':
            case TEMPORAL:
                return 'temporal';
            case 'o':
            case ORDINAL:
                return 'ordinal';
            case 'n':
            case NOMINAL:
                return 'nominal';
            case Type.LATITUDE:
                return 'latitude';
            case Type.LONGITUDE:
                return 'longitude';
            case GEOJSON:
                return 'geojson';
        }
    }
    // If we get invalid input, return undefined type.
    return undefined;
}
//# sourceMappingURL=type.js.map

/***/ }),

/***/ "fKXb":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/mark.js ***!
  \**************************************************/
/*! exports provided: Mark, AREA, BAR, LINE, POINT, TEXT, TICK, TRAIL, RECT, RULE, GEOSHAPE, CIRCLE, SQUARE, isMark, isPathMark, PRIMITIVE_MARKS, isMarkDef, isPrimitiveMark, STROKE_CONFIG, FILL_CONFIG, FILL_STROKE_CONFIG, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX, defaultMarkConfig, defaultBarConfig, defaultTickConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mark", function() { return Mark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AREA", function() { return AREA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BAR", function() { return BAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LINE", function() { return LINE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POINT", function() { return POINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEXT", function() { return TEXT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TICK", function() { return TICK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRAIL", function() { return TRAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RECT", function() { return RECT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RULE", function() { return RULE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOSHAPE", function() { return GEOSHAPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CIRCLE", function() { return CIRCLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQUARE", function() { return SQUARE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMark", function() { return isMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPathMark", function() { return isPathMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIMITIVE_MARKS", function() { return PRIMITIVE_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMarkDef", function() { return isMarkDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimitiveMark", function() { return isPrimitiveMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKE_CONFIG", function() { return STROKE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL_CONFIG", function() { return FILL_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL_STROKE_CONFIG", function() { return FILL_STROKE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_MARK_CONFIG_PROPERTIES", function() { return VL_ONLY_MARK_CONFIG_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX", function() { return VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMarkConfig", function() { return defaultMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultBarConfig", function() { return defaultBarConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTickConfig", function() { return defaultTickConfig; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");


var Mark;
(function (Mark) {
    Mark.AREA = 'area';
    Mark.BAR = 'bar';
    Mark.LINE = 'line';
    Mark.POINT = 'point';
    Mark.RECT = 'rect';
    Mark.RULE = 'rule';
    Mark.TEXT = 'text';
    Mark.TICK = 'tick';
    Mark.TRAIL = 'trail';
    Mark.CIRCLE = 'circle';
    Mark.SQUARE = 'square';
    Mark.GEOSHAPE = 'geoshape';
})(Mark || (Mark = {}));
var AREA = Mark.AREA;
var BAR = Mark.BAR;
var LINE = Mark.LINE;
var POINT = Mark.POINT;
var TEXT = Mark.TEXT;
var TICK = Mark.TICK;
var TRAIL = Mark.TRAIL;
var RECT = Mark.RECT;
var RULE = Mark.RULE;
var GEOSHAPE = Mark.GEOSHAPE;
var CIRCLE = Mark.CIRCLE;
var SQUARE = Mark.SQUARE;
// Using mapped type to declare index, ensuring we always have all marks when we add more.
var MARK_INDEX = {
    area: 1,
    bar: 1,
    line: 1,
    point: 1,
    text: 1,
    tick: 1,
    trail: 1,
    rect: 1,
    geoshape: 1,
    rule: 1,
    circle: 1,
    square: 1
};
function isMark(m) {
    return !!MARK_INDEX[m];
}
function isPathMark(m) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(['line', 'area', 'trail'], m);
}
var PRIMITIVE_MARKS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(MARK_INDEX);
function isMarkDef(mark) {
    return mark['type'];
}
var PRIMITIVE_MARK_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(PRIMITIVE_MARKS);
function isPrimitiveMark(mark) {
    var markType = isMarkDef(mark) ? mark.type : mark;
    return markType in PRIMITIVE_MARK_INDEX;
}
var STROKE_CONFIG = ['stroke', 'strokeWidth',
    'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'strokeJoin', 'strokeMiterLimit'];
var FILL_CONFIG = ['fill', 'fillOpacity'];
var FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);
var VL_ONLY_MARK_CONFIG_PROPERTIES = ['filled', 'color'];
var VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {
    area: ['line', 'point'],
    bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],
    line: ['point'],
    text: ['shortTimeLabels'],
    tick: ['bandSize', 'thickness']
};
var defaultMarkConfig = {
    color: '#4c78a8',
};
var defaultBarConfig = {
    binSpacing: 1,
    continuousBandSize: 5
};
var defaultTickConfig = {
    thickness: 1
};
//# sourceMappingURL=mark.js.map

/***/ }),

/***/ "faBk":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/area.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "eIYp");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "IsBD");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('area', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["area"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickArea"]));


/***/ }),

/***/ "fv2O":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/bind.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ "ImxY");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");




var BindClass = 'vega-bind',
    NameClass = 'vega-bind-name',
    RadioClass = 'vega-bind-radio',
    OptionClass = 'vega-option-';

/**
 * Bind a signal to an external HTML input element. The resulting two-way
 * binding will propagate input changes to signals, and propagate signal
 * changes to the input element state. If this view instance has no parent
 * element, we assume the view is headless and no bindings are created.
 * @param {Element|string} el - The parent DOM element to which the input
 *   element should be appended as a child. If string-valued, this argument
 *   will be treated as a CSS selector. If null or undefined, the parent
 *   element of this view will be used as the element.
 * @param {object} param - The binding parameters which specify the signal
 *   to bind to, the input element type, and type-specific configuration.
 * @return {View} - This view instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(view, el, binding) {
  if (!el) return;

  var param = binding.param,
      bind = binding.state;

  if (!bind) {
    bind = binding.state = {
      elements: null,
      active: false,
      set: null,
      update: function(value) {
        if (value !== view.signal(param.signal)) {
          bind.source = true;
          view.signal(param.signal, value).run();
        }
      }
    };
    if (param.debounce) {
      bind.update = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["debounce"])(param.debounce, bind.update);
    }
  }

  generate(bind, el, param, view.signal(param.signal));

  if (!bind.active) {
    view.on(view._signals[param.signal], null, function() {
      bind.source
        ? (bind.source = false)
        : bind.set(view.signal(param.signal));
    });
    bind.active = true;
  }

  return bind;
});

/**
 * Generate an HTML input form element and bind it to a signal.
 */
function generate(bind, el, param, value) {
  var div = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('div', {'class': BindClass});

  div.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('span',
    {'class': NameClass},
    (param.name || param.signal)
  ));

  el.appendChild(div);

  var input = form;
  switch (param.input) {
    case 'checkbox': input = checkbox; break;
    case 'select':   input = select; break;
    case 'radio':    input = radio; break;
    case 'range':    input = range; break;
  }

  input(bind, div, param, value);
}

/**
 * Generates an arbitrary input form element.
 * The input type is controlled via user-provided parameters.
 */
function form(bind, el, param, value) {
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input');

  for (var key in param) {
    if (key !== 'signal' && key !== 'element') {
      node.setAttribute(key === 'input' ? 'type' : key, param[key]);
    }
  }
  node.setAttribute('name', param.signal);
  node.value = value;

  el.appendChild(node);

  node.addEventListener('input', function() {
    bind.update(node.value);
  });

  bind.elements = [node];
  bind.set = function(value) { node.value = value; };
}

/**
 * Generates a checkbox input element.
 */
function checkbox(bind, el, param, value) {
  var attr = {type: 'checkbox', name: param.signal};
  if (value) attr.checked = true;
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', attr);

  el.appendChild(node);

  node.addEventListener('change', function() {
    bind.update(node.checked);
  });

  bind.elements = [node];
  bind.set = function(value) { node.checked = !!value || null; }
}

/**
 * Generates a selection list input element.
 */
function select(bind, el, param, value) {
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('select', {name: param.signal});

  param.options.forEach(function(option) {
    var attr = {value: option};
    if (valuesEqual(option, value)) attr.selected = true;
    node.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('option', attr, option+''));
  });

  el.appendChild(node);

  node.addEventListener('change', function() {
    bind.update(param.options[node.selectedIndex]);
  });

  bind.elements = [node];
  bind.set = function(value) {
    for (var i=0, n=param.options.length; i<n; ++i) {
      if (valuesEqual(param.options[i], value)) {
        node.selectedIndex = i; return;
      }
    }
  };
}

/**
 * Generates a radio button group.
 */
function radio(bind, el, param, value) {
  var group = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('span', {'class': RadioClass});

  el.appendChild(group);

  bind.elements = param.options.map(function(option) {
    var id = OptionClass + param.signal + '-' + option;

    var attr = {
      id:    id,
      type:  'radio',
      name:  param.signal,
      value: option
    };
    if (valuesEqual(option, value)) attr.checked = true;

    var input = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', attr);

    input.addEventListener('change', function() {
      bind.update(option);
    });

    group.appendChild(input);
    group.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('label', {'for': id}, option+''));

    return input;
  });

  bind.set = function(value) {
    var nodes = bind.elements,
        i = 0,
        n = nodes.length;
    for (; i<n; ++i) {
      if (valuesEqual(nodes[i].value, value)) nodes[i].checked = true;
    }
  };
}

/**
 * Generates a slider input element.
 */
function range(bind, el, param, value) {
  value = value !== undefined ? value : ((+param.max) + (+param.min)) / 2;

  var min = param.min || Math.min(0, +value) || 0,
      max = param.max || Math.max(100, +value) || 100,
      step = param.step || Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["tickStep"])(min, max, 100);

  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', {
    type:  'range',
    name:  param.signal,
    min:   min,
    max:   max,
    step:  step
  });
  node.value = value;

  var label = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('label', {}, +value);

  el.appendChild(node);
  el.appendChild(label);

  function update() {
    label.textContent = node.value;
    bind.update(+node.value);
  }

  // subscribe to both input and change
  node.addEventListener('input', update);
  node.addEventListener('change', update);

  bind.elements = [node];
  bind.set = function(value) {
    node.value = value;
    label.textContent = value;
  };
}

function valuesEqual(a, b) {
  return a === b || (a+'' === b+'');
}


/***/ }),

/***/ "fwYv":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/timer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-timer */ "ta7q");


/* harmony default export */ __webpack_exports__["default"] = (function(callback, delay) {
  function tick(elapsed) {
    callback({timestamp: Date.now(), elapsed: elapsed});
  }
  this._timers.push(Object(d3_timer__WEBPACK_IMPORTED_MODULE_0__["interval"])(tick, delay));
});


/***/ }),

/***/ "fyS1":
/*!************************************************!*\
  !*** ./node_modules/vega-runtime/src/state.js ***!
  \************************************************/
/*! exports provided: getState, setState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getState", function() { return getState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setState", function() { return setState; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var SKIP = {skip: true};

function getState(options) {
  var ctx = this,
      state = {};

  if (options.signals) {
    var signals = (state.signals = {});
    Object.keys(ctx.signals).forEach(function(key) {
      var op = ctx.signals[key];
      if (options.signals(key, op)) {
        signals[key] = op.value;
      }
    });
  }

  if (options.data) {
    var data = (state.data = {});
    Object.keys(ctx.data).forEach(function(key) {
      var dataset = ctx.data[key];
      if (options.data(key, dataset)) {
        data[key] = dataset.input.value;
      }
    });
  }

  if (ctx.subcontext && options.recurse !== false) {
    state.subcontext = ctx.subcontext.map(function(ctx) {
      return ctx.getState(options);
    });
  }

  return state;
}

function setState(state) {
  var ctx = this,
      df = ctx.dataflow,
      data = state.data,
      signals = state.signals;

  Object.keys(signals || {}).forEach(function(key) {
    df.update(ctx.signals[key], signals[key], SKIP);
  });

  Object.keys(data || {}).forEach(function(key) {
    df.pulse(
      ctx.data[key].input,
      df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_0__["truthy"]).insert(data[key])
    );
  });

  (state.subcontext  || []).forEach(function(substate, i) {
    var subctx = ctx.subcontext[i];
    if (subctx) subctx.setState(substate);
  });
}


/***/ }),

/***/ "g/wi":
/*!**************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/WindowState.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WindowState; });
/* harmony import */ var _AggregateOps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AggregateOps */ "pOXG");
/* harmony import */ var _TupleStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TupleStore */ "ZqFd");
/* harmony import */ var _WindowOps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WindowOps */ "GYXB");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





function WindowState(_) {
  var self = this,
      ops = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.ops),
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.fields),
      params = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.params),
      as = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.as),
      outputs = self.outputs = [],
      windows = self.windows = [],
      inputs = {},
      map = {},
      countOnly = true,
      counts = [],
      measures = [];

  function visitInputs(f) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessorFields"])(f)).forEach(function(_) { inputs[_] = 1; });
  }
  visitInputs(_.sort);

  ops.forEach(function(op, i) {
    var field = fields[i],
        mname = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessorName"])(field),
        name = Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["measureName"])(op, mname, as[i]);

    visitInputs(field);
    outputs.push(name);

    // Window operation
    if (_WindowOps__WEBPACK_IMPORTED_MODULE_2__["WindowOps"].hasOwnProperty(op)) {
      windows.push(Object(_WindowOps__WEBPACK_IMPORTED_MODULE_2__["WindowOp"])(op, fields[i], params[i], name));
    }

    // Aggregate operation
    else {
      if (field == null && op !== 'count') {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Null aggregate field specified.');
      }
      if (op === 'count') {
        counts.push(name);
        return;
      }

      countOnly = false;
      var m = map[mname];
      if (!m) {
        m = (map[mname] = []);
        m.field = field;
        measures.push(m);
      }
      m.push(Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["createMeasure"])(op, name));
    }
  });

  if (counts.length || measures.length) {
    self.cell = cell(measures, counts, countOnly);
  }

  self.inputs = Object.keys(inputs);
}

var prototype = WindowState.prototype;

prototype.init = function() {
  this.windows.forEach(function(_) { _.init(); });
  if (this.cell) this.cell.init();
};

prototype.update = function(w, t) {
  var self = this,
      cell = self.cell,
      wind = self.windows,
      data = w.data,
      m = wind && wind.length,
      j;

  if (cell) {
    for (j=w.p0; j<w.i0; ++j) cell.rem(data[j]);
    for (j=w.p1; j<w.i1; ++j) cell.add(data[j]);
    cell.set(t);
  }
  for (j=0; j<m; ++j) wind[j].update(w, t);
};

function cell(measures, counts, countOnly) {
  measures = measures.map(function(m) {
    return Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["compileMeasures"])(m, m.field);
  });

  var cell = {
    num:   0,
    agg:   null,
    store: false,
    count: counts
  };

  if (!countOnly) {
    var n = measures.length,
        a = cell.agg = Array(n),
        i = 0;
    for (; i<n; ++i) a[i] = new measures[i](cell);
  }

  if (cell.store) {
    var store = cell.data = new _TupleStore__WEBPACK_IMPORTED_MODULE_1__["default"]();
  }

  cell.add = function(t) {
    cell.num += 1;
    if (countOnly) return;
    if (store) store.add(t);
    for (var i=0; i<n; ++i) {
      a[i].add(a[i].get(t), t);
    }
  };

  cell.rem = function(t) {
    cell.num -= 1;
    if (countOnly) return;
    if (store) store.rem(t);
    for (var i=0; i<n; ++i) {
      a[i].rem(a[i].get(t), t);
    }
  };

  cell.set = function(t) {
    var i, n;

    // consolidate stored values
    if (store) store.values();

    // update tuple properties
    for (i=0, n=counts.length; i<n; ++i) t[counts[i]] = cell.num;
    if (!countOnly) for (i=0, n=a.length; i<n; ++i) a[i].set(t);
  };

  cell.init = function() {
    cell.num = 0;
    if (store) store.reset();
    for (var i=0; i<n; ++i) a[i].init();
  };

  return cell;
}


/***/ }),

/***/ "g3H7":
/*!*************************************************!*\
  !*** ./node_modules/vega-geo/src/Projection.js ***!
  \*************************************************/
/*! exports provided: default, collectGeoJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "collectGeoJSON", function() { return collectGeoJSON; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "2JAl");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-projection */ "HD69");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Maintains a cartographic projection.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Projection(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Projection, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var proj = this.value;

  if (!proj || _.modified('type')) {
    this.value = (proj = create(_.type));
    vega_projection__WEBPACK_IMPORTED_MODULE_2__["projectionProperties"].forEach(function(prop) {
      if (_[prop] != null) set(proj, prop, _[prop]);
    });
  } else {
    vega_projection__WEBPACK_IMPORTED_MODULE_2__["projectionProperties"].forEach(function(prop) {
      if (_.modified(prop)) set(proj, prop, _[prop]);
    });
  }

  if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);
  if (_.fit) fit(proj, _);

  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);
};

function fit(proj, _) {
  var data = collectGeoJSON(_.fit);
  _.extent ? proj.fitExtent(_.extent, data)
    : _.size ? proj.fitSize(_.size, data) : 0;
}

function create(type) {
  var constructor = Object(vega_projection__WEBPACK_IMPORTED_MODULE_2__["projection"])((type || 'mercator').toLowerCase());
  if (!constructor) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unrecognized projection type: ' + type);
  return constructor();
}

function set(proj, key, value) {
   if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(proj[key])) proj[key](value);
}

function collectGeoJSON(features) {
  features = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(features);
  return features.length === 1
    ? features[0]
    : {
        type: _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"],
        features: features.reduce(function(list, f) {
            (f && f.type === _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"]) ? list.push.apply(list, f.features)
              : Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(f) ? list.push.apply(list, f)
              : list.push(f);
            return list;
          }, [])
      };
}

/***/ }),

/***/ "g9aV":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Pack.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pack; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "CLBL");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");




var Output = ['x', 'y', 'r', 'depth', 'children'];

/**
 * Packed circle tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Pack(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Pack.Definition = {
  "type": "Pack",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "radius", "type": "field", "default": null },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Pack, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.layout = d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["pack"];

prototype.params = ['size', 'padding'];

prototype.fields = Output;


/***/ }),

/***/ "gatG":
/*!******************************************************!*\
  !*** ./node_modules/vega-schema-url-parser/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Parse a vega schema url into library and version.
 */
function default_1(url) {
    var regex = /\/schema\/([\w-]+)\/([\w\.\-]+)\.json$/g;
    var _a = regex.exec(url).slice(1, 3), library = _a[0], version = _a[1];
    return { library: library, version: version };
}
exports.default = default_1;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "gfSE":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/trail.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "83xM");


var pi = Math.PI;

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x,
      y,
      size,
      defined,
      context = null,
      ready, x1, y1, r1;

  function point(x2, y2, w2) {
    var r2 = w2 / 2;

    if (ready) {
      var ux = y1 - y2,
          uy = x2 - x1;

      if (ux || uy) {
        // get normal vector
        var ud = Math.sqrt(ux * ux + uy * uy),
            rx = (ux /= ud) * r1,
            ry = (uy /= ud) * r1,
            t = Math.atan2(uy, ux);

        // draw segment
        context.moveTo(x1 - rx, y1 - ry);
        context.lineTo(x2 - ux * r2, y2 - uy * r2);
        context.arc(x2, y2, r2, t - pi, t);
        context.lineTo(x1 + rx, y1 + ry);
        context.arc(x1, y1, r1, t, t + pi);
      } else {
        context.arc(x2, y2, r2, 0, 2*pi);
      }
      context.closePath();
    } else {
      ready = 1;
    }
    x1 = x2;
    y1 = y2;
    r1 = r2;
  }

  function trail(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;

    if (context == null) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) ready = 0;
      }
      if (defined0) point(+x(d, i, data), +y(d, i, data), +size(d, i, data));
    }

    if (buffer) {
      context = null;
      return buffer + '' || null;
    }
  }

  trail.x = function(_) {
    if (arguments.length) {
      x = _;
      return trail;
    } else {
      return x;
    }
  };

  trail.y = function(_) {
    if (arguments.length) {
      y = _;
      return trail;
    } else {
      return y;
    }
  };

  trail.size = function(_) {
    if (arguments.length) {
      size = _;
      return trail;
    } else {
      return size;
    }
  };

  trail.defined = function(_) {
    if (arguments.length) {
      defined = _;
      return trail;
    } else {
      return defined;
    }
  };

  trail.context = function(_) {
    if (arguments.length) {
      if (_ == null) {
        context = null;
      } else {
        context = _;
      }
      return trail;
    } else {
      return context;
    }
  };

  return trail;
});


/***/ }),

/***/ "gnF8":
/*!********************************************************!*\
  !*** ./node_modules/vega-wordcloud/src/CloudLayout.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "4Usi");


/*
Copyright (c) 2013, Jason Davies.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  * The name Jason Davies may not be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/
// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf

var cloudRadians = Math.PI / 180,
    cw = 1 << 11 >> 5,
    ch = 1 << 11;

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var size = [256, 256],
      text,
      font,
      fontSize,
      fontStyle,
      fontWeight,
      rotate,
      padding,
      spiral = archimedeanSpiral,
      words = [],
      random = Math.random,
      cloud = {};

  cloud.layout = function() {
    var contextAndRatio = getContext(Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["canvas"])()),
        board = zeroArray((size[0] >> 5) * size[1]),
        bounds = null,
        n = words.length,
        i = -1,
        tags = [],
        data = words.map(function(d) {
          return {
            text: text(d),
            font: font(d),
            style: fontStyle(d),
            weight: fontWeight(d),
            rotate: rotate(d),
            size: ~~fontSize(d),
            padding: padding(d),
            xoff: 0,
            yoff: 0,
            x1: 0,
            y1: 0,
            x0: 0,
            y0: 0,
            hasText: false,
            sprite: null,
            datum: d
          };
        }).sort(function(a, b) { return b.size - a.size; });

    while (++i < n) {
      var d = data[i];
      d.x = (size[0] * (random() + .5)) >> 1;
      d.y = (size[1] * (random() + .5)) >> 1;
      cloudSprite(contextAndRatio, d, data, i);
      if (d.hasText && place(board, d, bounds)) {
        tags.push(d);
        if (bounds) cloudBounds(bounds, d);
        else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];
        // Temporary hack
        d.x -= size[0] >> 1;
        d.y -= size[1] >> 1;
      }
    }

    return tags;
  };

  function getContext(canvas) {
    canvas.width = canvas.height = 1;
    var ratio = Math.sqrt(canvas.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
    canvas.width = (cw << 5) / ratio;
    canvas.height = ch / ratio;

    var context = canvas.getContext("2d");
    context.fillStyle = context.strokeStyle = "red";
    context.textAlign = "center";

    return {context: context, ratio: ratio};
  }

  function place(board, tag, bounds) {
    var startX = tag.x,
        startY = tag.y,
        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),
        s = spiral(size),
        dt = random() < .5 ? 1 : -1,
        t = -dt,
        dxdy,
        dx,
        dy;

    while (dxdy = s(t += dt)) {
      dx = ~~dxdy[0];
      dy = ~~dxdy[1];

      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;

      tag.x = startX + dx;
      tag.y = startY + dy;

      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||
          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;
      // TODO only check for collisions within current bounds.
      if (!bounds || !cloudCollide(tag, board, size[0])) {
        if (!bounds || collideRects(tag, bounds)) {
          var sprite = tag.sprite,
              w = tag.width >> 5,
              sw = size[0] >> 5,
              lx = tag.x - (w << 4),
              sx = lx & 0x7f,
              msx = 32 - sx,
              h = tag.y1 - tag.y0,
              x = (tag.y + tag.y0) * sw + (lx >> 5),
              last;
          for (var j = 0; j < h; j++) {
            last = 0;
            for (var i = 0; i <= w; i++) {
              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);
            }
            x += sw;
          }
          tag.sprite = null;
          return true;
        }
      }
    }
    return false;
  }

  cloud.words = function(_) {
    if (arguments.length) {
      words = _;
      return cloud;
    } else {
      return words;
    }
  };

  cloud.size = function(_) {
    if (arguments.length) {
      size = [+_[0], +_[1]];
      return cloud;
    } else {
      return size;
    }
  };

  cloud.font = function(_) {
    if (arguments.length) {
      font = functor(_);
      return cloud;
    } else {
      return font;
    }
  };

  cloud.fontStyle = function(_) {
    if (arguments.length) {
      fontStyle = functor(_);
      return cloud;
    } else {
      return fontStyle;
    }
  };

  cloud.fontWeight = function(_) {
    if (arguments.length) {
      fontWeight = functor(_);
      return cloud;
    } else {
      return fontWeight;
    }
  };

  cloud.rotate = function(_) {
    if (arguments.length) {
      rotate = functor(_);
      return cloud;
    } else {
      return rotate;
    }
  };

  cloud.text = function(_) {
    if (arguments.length) {
      text = functor(_);
      return cloud;
    } else {
      return text;
    }
  };

  cloud.spiral = function(_) {
    if (arguments.length) {
      spiral = spirals[_] || _;
      return cloud;
    } else {
      return spiral;
    }
  };

  cloud.fontSize = function(_) {
    if (arguments.length) {
      fontSize = functor(_);
      return cloud;
    } else {
      return fontSize;
    }
  };

  cloud.padding = function(_) {
    if (arguments.length) {
      padding = functor(_);
      return cloud;
    } else {
      return padding;
    }
  };

  cloud.random = function(_) {
    if (arguments.length) {
      random = _;
      return cloud;
    } else {
      return random;
    }
  };

  return cloud;
});

// Fetches a monochrome sprite bitmap for the specified text.
// Load in batches for speed.
function cloudSprite(contextAndRatio, d, data, di) {
  if (d.sprite) return;
  var c = contextAndRatio.context,
      ratio = contextAndRatio.ratio;

  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);
  var x = 0,
      y = 0,
      maxh = 0,
      n = data.length,
      w, w32, h, i, j;
  --di;
  while (++di < n) {
    d = data[di];
    c.save();
    c.font = d.style + " " + d.weight + " " + ~~((d.size + 1) / ratio) + "px " + d.font;
    w = c.measureText(d.text + "m").width * ratio;
    h = d.size << 1;
    if (d.rotate) {
      var sr = Math.sin(d.rotate * cloudRadians),
          cr = Math.cos(d.rotate * cloudRadians),
          wcr = w * cr,
          wsr = w * sr,
          hcr = h * cr,
          hsr = h * sr;
      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;
      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));
    } else {
      w = (w + 0x1f) >> 5 << 5;
    }
    if (h > maxh) maxh = h;
    if (x + w >= (cw << 5)) {
      x = 0;
      y += maxh;
      maxh = 0;
    }
    if (y + h >= ch) break;
    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);
    if (d.rotate) c.rotate(d.rotate * cloudRadians);
    c.fillText(d.text, 0, 0);
    if (d.padding) {
      c.lineWidth = 2 * d.padding;
      c.strokeText(d.text, 0, 0);
    }
    c.restore();
    d.width = w;
    d.height = h;
    d.xoff = x;
    d.yoff = y;
    d.x1 = w >> 1;
    d.y1 = h >> 1;
    d.x0 = -d.x1;
    d.y0 = -d.y1;
    d.hasText = true;
    x += w;
  }
  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,
      sprite = [];
  while (--di >= 0) {
    d = data[di];
    if (!d.hasText) continue;
    w = d.width;
    w32 = w >> 5;
    h = d.y1 - d.y0;
    // Zero the buffer
    for (i = 0; i < h * w32; i++) sprite[i] = 0;
    x = d.xoff;
    if (x == null) return;
    y = d.yoff;
    var seen = 0,
        seenRow = -1;
    for (j = 0; j < h; j++) {
      for (i = 0; i < w; i++) {
        var k = w32 * j + (i >> 5),
            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;
        sprite[k] |= m;
        seen |= m;
      }
      if (seen) seenRow = j;
      else {
        d.y0++;
        h--;
        j--;
        y++;
      }
    }
    d.y1 = d.y0 + seenRow;
    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);
  }
}

// Use mask-based collision detection.
function cloudCollide(tag, board, sw) {
  sw >>= 5;
  var sprite = tag.sprite,
      w = tag.width >> 5,
      lx = tag.x - (w << 4),
      sx = lx & 0x7f,
      msx = 32 - sx,
      h = tag.y1 - tag.y0,
      x = (tag.y + tag.y0) * sw + (lx >> 5),
      last;
  for (var j = 0; j < h; j++) {
    last = 0;
    for (var i = 0; i <= w; i++) {
      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))
          & board[x + i]) return true;
    }
    x += sw;
  }
  return false;
}

function cloudBounds(bounds, d) {
  var b0 = bounds[0],
      b1 = bounds[1];
  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;
  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;
  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;
  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;
}

function collideRects(a, b) {
  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;
}

function archimedeanSpiral(size) {
  var e = size[0] / size[1];
  return function(t) {
    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];
  };
}

function rectangularSpiral(size) {
  var dy = 4,
      dx = dy * size[0] / size[1],
      x = 0,
      y = 0;
  return function(t) {
    var sign = t < 0 ? -1 : 1;
    // See triangular numbers: T_n = n * (n + 1) / 2.
    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {
      case 0:  x += dx; break;
      case 1:  y += dy; break;
      case 2:  x -= dx; break;
      default: y -= dy; break;
    }
    return [x, y];
  };
}

// TODO reuse arrays?
function zeroArray(n) {
  var a = [],
      i = -1;
  while (++i < n) a[i] = 0;
  return a;
}

function functor(d) {
  return typeof d === "function" ? d : function() { return d; };
}

var spirals = {
  archimedean: archimedeanSpiral,
  rectangular: rectangularSpiral
};


/***/ }),

/***/ "gngp":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/scale.js ***!
  \******************************************************************/
/*! exports provided: getScale, scaleVisitor, range, domain, bandwidth, bandspace, copy, scale, invert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScale", function() { return getScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleVisitor", function() { return scaleVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domain", function() { return domain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandwidth", function() { return bandwidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandspace", function() { return bandspace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony import */ var _ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast */ "bcOo");
/* harmony import */ var _prefixes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prefixes */ "bnRp");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





function getScale(name, ctx) {
  var s;
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(name) ? name
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(name) ? (s = ctx.scales[name]) && s.value
    : undefined;
}

function addScaleDependency(scope, params, name) {
  var scaleName = _prefixes__WEBPACK_IMPORTED_MODULE_1__["scalePrefix"] + name;
  if (!params.hasOwnProperty(scaleName)) {
    try {
      params[scaleName] = scope.scaleRef(name);
    } catch (err) {
      // TODO: error handling? warning?
    }
  }
}

function scaleVisitor(name, args, scope, params) {
  if (args[0].type === _ast__WEBPACK_IMPORTED_MODULE_0__["Literal"]) {
    // add scale dependency
    addScaleDependency(scope, params, args[0].value);
  }
  else if (args[0].type === _ast__WEBPACK_IMPORTED_MODULE_0__["Identifier"]) {
    // indirect scale lookup; add all scales as parameters
    for (name in scope.scales) {
      addScaleDependency(scope, params, name);
    }
  }
}

function range(name, group) {
  var s = getScale(name, (group || this).context);
  return s && s.range ? s.range() : [];
}

function domain(name, group) {
  var s = getScale(name, (group || this).context);
  return s ? s.domain() : [];
}

function bandwidth(name, group) {
  var s = getScale(name, (group || this).context);
  return s && s.bandwidth ? s.bandwidth() : 0;
}

function bandspace(count, paddingInner, paddingOuter) {
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["bandSpace"])(count || 0, paddingInner || 0, paddingOuter || 0);
}

function copy(name, group) {
  var s = getScale(name, (group || this).context);
  return s ? s.copy() : undefined;
}

function scale(name, value, group) {
  var s = getScale(name, (group || this).context);
  return s ? s(value) : undefined;
}

function invert(name, range, group) {
  var s = getScale(name, (group || this).context);
  return !s ? undefined
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(range) ? (s.invertRange || s.invert)(range)
    : (s.invert || s.invertExtent)(range);
}


/***/ }),

/***/ "gxyW":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/assemble.js ***!
  \*******************************************************************/
/*! exports provided: assembleFacetData, assembleRootData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleFacetData", function() { return assembleFacetData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleRootData", function() { return assembleRootData; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aggregate */ "JbBH");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bin */ "MHKK");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./calculate */ "a40Z");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataflow */ "LH2n");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./facet */ "LZFT");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./filter */ "sGpF");
/* harmony import */ var _filterinvalid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./filterinvalid */ "dJ5h");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./formatparse */ "5CN0");
/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geojson */ "xYZI");
/* harmony import */ var _geopoint__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./geopoint */ "vVSx");
/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./identifier */ "1CMI");
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lookup */ "ZeRq");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./source */ "6g+2");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./stack */ "oiGR");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./timeunit */ "2toQ");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./window */ "MsEM");



















/**
 * Print debug information for dataflow tree.
 */
// tslint:disable-next-line
function debug(node) {
    console.log("" + node.constructor.name + (node.debugName ? " (" + node.debugName + ")" : '') + " -> " + (node.children.map(function (c) {
        return "" + c.constructor.name + (c.debugName ? " (" + c.debugName + ")" : '');
    })));
    console.log(node);
    node.children.forEach(debug);
}
function makeWalkTree(data) {
    // to name datasources
    var datasetIndex = 0;
    /**
     * Recursively walk down the tree.
     */
    function walkTree(node, dataSource) {
        if (node instanceof _source__WEBPACK_IMPORTED_MODULE_15__["SourceNode"]) {
            // If the source is a named data source or a data source with values, we need
            // to put it in a different data source. Otherwise, Vega may override the data.
            if (!Object(_data__WEBPACK_IMPORTED_MODULE_1__["isUrlData"])(node.data)) {
                data.push(dataSource);
                var newData = {
                    name: null,
                    source: dataSource.name,
                    transform: []
                };
                dataSource = newData;
            }
        }
        if (node instanceof _formatparse__WEBPACK_IMPORTED_MODULE_10__["ParseNode"]) {
            if (node.parent instanceof _source__WEBPACK_IMPORTED_MODULE_15__["SourceNode"] && !dataSource.source) {
                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse
                dataSource.format = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, dataSource.format || {}, { parse: node.assembleFormatParse() });
                // add calculates for all nested fields
                dataSource.transform = dataSource.transform.concat(node.assembleTransforms(true));
            }
            else {
                // Otherwise use Vega expression to parse
                dataSource.transform = dataSource.transform.concat(node.assembleTransforms());
            }
        }
        if (node instanceof _facet__WEBPACK_IMPORTED_MODULE_7__["FacetNode"]) {
            if (!dataSource.name) {
                dataSource.name = "data_" + datasetIndex++;
            }
            if (!dataSource.source || dataSource.transform.length > 0) {
                data.push(dataSource);
                node.data = dataSource.name;
            }
            else {
                node.data = dataSource.source;
            }
            node.assemble().forEach(function (d) { return data.push(d); });
            // break here because the rest of the tree has to be taken care of by the facet.
            return;
        }
        if (node instanceof _filter__WEBPACK_IMPORTED_MODULE_8__["FilterNode"] ||
            node instanceof _calculate__WEBPACK_IMPORTED_MODULE_5__["CalculateNode"] ||
            node instanceof _geopoint__WEBPACK_IMPORTED_MODULE_12__["GeoPointNode"] ||
            node instanceof _geojson__WEBPACK_IMPORTED_MODULE_11__["GeoJSONNode"] ||
            node instanceof _aggregate__WEBPACK_IMPORTED_MODULE_3__["AggregateNode"] ||
            node instanceof _lookup__WEBPACK_IMPORTED_MODULE_14__["LookupNode"] ||
            node instanceof _window__WEBPACK_IMPORTED_MODULE_18__["WindowTransformNode"] ||
            node instanceof _identifier__WEBPACK_IMPORTED_MODULE_13__["IdentifierNode"]) {
            dataSource.transform.push(node.assemble());
        }
        if (node instanceof _filterinvalid__WEBPACK_IMPORTED_MODULE_9__["FilterInvalidNode"] ||
            node instanceof _bin__WEBPACK_IMPORTED_MODULE_4__["BinNode"] ||
            node instanceof _timeunit__WEBPACK_IMPORTED_MODULE_17__["TimeUnitNode"] ||
            node instanceof _stack__WEBPACK_IMPORTED_MODULE_16__["StackNode"]) {
            dataSource.transform = dataSource.transform.concat(node.assemble());
        }
        if (node instanceof _aggregate__WEBPACK_IMPORTED_MODULE_3__["AggregateNode"]) {
            if (!dataSource.name) {
                dataSource.name = "data_" + datasetIndex++;
            }
        }
        if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_6__["OutputNode"]) {
            if (dataSource.source && dataSource.transform.length === 0) {
                node.setSource(dataSource.source);
            }
            else if (node.parent instanceof _dataflow__WEBPACK_IMPORTED_MODULE_6__["OutputNode"]) {
                // Note that an output node may be required but we still do not assemble a
                // separate data source for it.
                node.setSource(dataSource.name);
            }
            else {
                if (!dataSource.name) {
                    dataSource.name = "data_" + datasetIndex++;
                }
                // Here we set the name of the datasource we generated. From now on
                // other assemblers can use it.
                node.setSource(dataSource.name);
                // if this node has more than one child, we will add a datasource automatically
                if (node.numChildren() === 1) {
                    data.push(dataSource);
                    var newData = {
                        name: null,
                        source: dataSource.name,
                        transform: []
                    };
                    dataSource = newData;
                }
            }
        }
        switch (node.numChildren()) {
            case 0:
                // done
                if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_6__["OutputNode"] && (!dataSource.source || dataSource.transform.length > 0)) {
                    // do not push empty datasources that are simply references
                    data.push(dataSource);
                }
                break;
            case 1:
                walkTree(node.children[0], dataSource);
                break;
            default:
                if (!dataSource.name) {
                    dataSource.name = "data_" + datasetIndex++;
                }
                var source_1 = dataSource.name;
                if (!dataSource.source || dataSource.transform.length > 0) {
                    data.push(dataSource);
                }
                else {
                    source_1 = dataSource.source;
                }
                node.children.forEach(function (child) {
                    var newData = {
                        name: null,
                        source: source_1,
                        transform: []
                    };
                    walkTree(child, newData);
                });
                break;
        }
    }
    return walkTree;
}
/**
 * Assemble data sources that are derived from faceted data.
 */
function assembleFacetData(root) {
    var data = [];
    var walkTree = makeWalkTree(data);
    root.children.forEach(function (child) { return walkTree(child, {
        source: root.name,
        name: null,
        transform: []
    }); });
    return data;
}
/**
 * Create Vega Data array from a given compiled model and append all of them to the given array
 *
 * @param  model
 * @param  data array
 * @return modified data array
 */
function assembleRootData(dataComponent, datasets) {
    var roots = Object(_util__WEBPACK_IMPORTED_MODULE_2__["vals"])(dataComponent.sources);
    var data = [];
    // roots.forEach(debug);
    var walkTree = makeWalkTree(data);
    var sourceIndex = 0;
    roots.forEach(function (root) {
        // assign a name if the source does not have a name yet
        if (!root.hasName()) {
            root.dataName = "source_" + sourceIndex++;
        }
        var newData = root.assemble();
        walkTree(root, newData);
    });
    // remove empty transform arrays for cleaner output
    data.forEach(function (d) {
        if (d.transform.length === 0) {
            delete d.transform;
        }
    });
    // move sources without transforms (the ones that are potentially used in lookups) to the beginning
    var whereTo = 0;
    for (var i = 0; i < data.length; i++) {
        var d = data[i];
        if ((d.transform || []).length === 0 && !d.source) {
            data.splice(whereTo++, 0, data.splice(i, 1)[0]);
        }
    }
    // now fix the from references in lookup transforms
    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
        var d = data_1[_i];
        for (var _a = 0, _b = d.transform || []; _a < _b.length; _a++) {
            var t = _b[_a];
            if (t.type === 'lookup') {
                t.from = dataComponent.outputNodes[t.from].getSource();
            }
        }
    }
    // inline values for datasets that are in the datastore
    for (var _c = 0, data_2 = data; _c < data_2.length; _c++) {
        var d = data_2[_c];
        if (d.name in datasets) {
            d.values = datasets[d.name];
        }
    }
    return data;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "gzSB":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-domain.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var orient = spec.orient,
      zero = {value: 0},
      encode, enter, update, u, u2, v;

  encode = {
    enter: enter = {
      opacity: zero
    },
    update: update = {
      opacity: {value: 1}
    },
    exit: {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'stroke',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('domainColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeWidth',   Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('domainWidth', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'strokeOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('domainOpacity', spec, config));

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    u = 'x';
    v = 'y';
  } else {
    u = 'y';
    v = 'x';
  }
  u2 = u + '2';

  enter[v] = zero;
  update[u] = enter[u] = position(spec, 0);
  update[u2] = enter[u2] = position(spec, 1);

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisDomainRole"], null, null, dataRef, encode, userEncode);
});

function position(spec, pos) {
  return {scale: spec.scale, range: pos};
}


/***/ }),

/***/ "h0dZ":
/*!***********************************************!*\
  !*** ./node_modules/vega-scenegraph/index.js ***!
  \***********************************************/
/*! exports provided: Bounds, Gradient, GroupItem, ResourceLoader, Item, Scenegraph, Handler, Renderer, CanvasHandler, CanvasRenderer, SVGHandler, SVGRenderer, SVGStringRenderer, RenderType, renderModule, Marks, boundClip, boundContext, boundStroke, boundItem, boundMark, pathCurves, pathSymbols, pathRectangle, pathTrail, pathParse, pathRender, point, domCreate, domFind, domChild, domClear, openTag, closeTag, font, fontFamily, fontSize, textMetrics, resetSVGClipId, sceneEqual, pathEqual, sceneToJSON, sceneFromJSON, sceneZOrder, sceneVisit, scenePickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Bounds */ "wOpL");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bounds", function() { return _src_Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Gradient */ "bglh");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _src_Gradient__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_GroupItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/GroupItem */ "Wap9");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupItem", function() { return _src_GroupItem__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_ResourceLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/ResourceLoader */ "UrvT");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResourceLoader", function() { return _src_ResourceLoader__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Item */ "T8/Q");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Item", function() { return _src_Item__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Scenegraph__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Scenegraph */ "itEn");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scenegraph", function() { return _src_Scenegraph__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Handler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Handler */ "kAsH");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return _src_Handler__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_Renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Renderer */ "KHmK");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Renderer", function() { return _src_Renderer__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_CanvasHandler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/CanvasHandler */ "XGZ2");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasHandler", function() { return _src_CanvasHandler__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_CanvasRenderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/CanvasRenderer */ "lz4/");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return _src_CanvasRenderer__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_SVGHandler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/SVGHandler */ "4Nvv");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGHandler", function() { return _src_SVGHandler__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_SVGRenderer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/SVGRenderer */ "3LL3");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGRenderer", function() { return _src_SVGRenderer__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_SVGStringRenderer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/SVGStringRenderer */ "YuFh");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGStringRenderer", function() { return _src_SVGStringRenderer__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_modules__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/modules */ "wYkF");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return _src_modules__WEBPACK_IMPORTED_MODULE_13__["RenderType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return _src_modules__WEBPACK_IMPORTED_MODULE_13__["renderModule"]; });

/* harmony import */ var _src_marks_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/marks/index */ "Mi2v");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Marks", function() { return _src_marks_index__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_bound_boundClip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/bound/boundClip */ "b9FA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundClip", function() { return _src_bound_boundClip__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_bound_boundContext__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/bound/boundContext */ "lW0u");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundContext", function() { return _src_bound_boundContext__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_bound_boundStroke__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/bound/boundStroke */ "B5NT");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundStroke", function() { return _src_bound_boundStroke__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_bound_boundItem__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/bound/boundItem */ "eXek");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundItem", function() { return _src_bound_boundItem__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_bound_boundMark__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/bound/boundMark */ "Lc2I");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundMark", function() { return _src_bound_boundMark__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_path_curves__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/path/curves */ "KhyV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathCurves", function() { return _src_path_curves__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_path_symbols__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/path/symbols */ "dp2b");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathSymbols", function() { return _src_path_symbols__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_path_rectangle__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/path/rectangle */ "3J2f");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRectangle", function() { return _src_path_rectangle__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_path_trail__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/path/trail */ "gfSE");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathTrail", function() { return _src_path_trail__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_path_parse__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/path/parse */ "n4MJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathParse", function() { return _src_path_parse__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_path_render__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/path/render */ "L758");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRender", function() { return _src_path_render__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_util_point__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/util/point */ "4ci8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _src_util_point__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_util_dom__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/util/dom */ "k9GY");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_27__["domCreate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_27__["domFind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_27__["domChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_27__["domClear"]; });

/* harmony import */ var _src_util_tags__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/util/tags */ "LBcO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return _src_util_tags__WEBPACK_IMPORTED_MODULE_28__["openTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return _src_util_tags__WEBPACK_IMPORTED_MODULE_28__["closeTag"]; });

/* harmony import */ var _src_util_text__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/util/text */ "/fEO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "font", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_29__["font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_29__["fontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_29__["fontSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_29__["textMetrics"]; });

/* harmony import */ var _src_util_svg_clip__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/util/svg/clip */ "R+vW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return _src_util_svg_clip__WEBPACK_IMPORTED_MODULE_30__["resetSVGClipId"]; });

/* harmony import */ var _src_util_equal__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/util/equal */ "eBT9");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return _src_util_equal__WEBPACK_IMPORTED_MODULE_31__["sceneEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return _src_util_equal__WEBPACK_IMPORTED_MODULE_31__["pathEqual"]; });

/* harmony import */ var _src_util_serialize__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/util/serialize */ "KW+5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return _src_util_serialize__WEBPACK_IMPORTED_MODULE_32__["sceneToJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return _src_util_serialize__WEBPACK_IMPORTED_MODULE_32__["sceneFromJSON"]; });

/* harmony import */ var _src_util_visit__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/util/visit */ "TMLr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneZOrder", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_33__["zorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneVisit", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_33__["visit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scenePickVisit", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_33__["pickVisit"]; });











































/***/ }),

/***/ "h1Rr":
/*!*****************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-vox.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var markColor = '#3e5c69';
var voxTheme = {
    background: '#fff',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor },
    axis: {
        domainWidth: 0.5,
        grid: true,
        labelPadding: 2,
        tickSize: 5,
        tickWidth: 0.5,
        titleFontWeight: 'normal',
    },
    axisBand: {
        grid: false,
    },
    axisX: {
        gridWidth: 0.2,
    },
    axisY: {
        gridDash: [3],
        gridWidth: 0.4,
    },
    legend: {
        labelFontSize: 11,
        padding: 1,
        symbolType: 'square',
    },
    range: {
        category: [
            '#3e5c69',
            '#6793a6',
            '#182429',
            '#0570b0',
            '#3690c0',
            '#74a9cf',
            '#a6bddb',
            '#e2ddf2',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (voxTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtdm94LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLXZveC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxJQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFFNUIsSUFBTSxRQUFRLEdBQVc7SUFDdkIsVUFBVSxFQUFFLE1BQU07SUFFbEIsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN4QixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUMzQixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDNUIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUUzQixJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsR0FBRztRQUNoQixJQUFJLEVBQUUsSUFBSTtRQUNWLFlBQVksRUFBRSxDQUFDO1FBQ2YsUUFBUSxFQUFFLENBQUM7UUFDWCxTQUFTLEVBQUUsR0FBRztRQUNkLGVBQWUsRUFBRSxRQUFRO0tBQzFCO0lBRUQsUUFBUSxFQUFFO1FBQ1IsSUFBSSxFQUFFLEtBQUs7S0FDWjtJQUVELEtBQUssRUFBRTtRQUNMLFNBQVMsRUFBRSxHQUFHO0tBQ2Y7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDYixTQUFTLEVBQUUsR0FBRztLQUNmO0lBRUQsTUFBTSxFQUFFO1FBQ04sYUFBYSxFQUFFLEVBQUU7UUFDakIsT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsUUFBUTtLQUNyQjtJQUVELEtBQUssRUFBRTtRQUNMLFFBQVEsRUFBRTtZQUNSLFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFFBQVEsQ0FBQyJ9

/***/ }),

/***/ "h4ZY":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/stack.js ***!
  \***************************************************/
/*! exports provided: isStackOffset, STACKABLE_MARKS, STACK_BY_DEFAULT_MARKS, stack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStackOffset", function() { return isStackOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STACKABLE_MARKS", function() { return STACKABLE_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STACK_BY_DEFAULT_MARKS", function() { return STACK_BY_DEFAULT_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return stack; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aggregate */ "OCqH");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util */ "Hc3/");









var STACK_OFFSET_INDEX = {
    zero: 1,
    center: 1,
    normalize: 1
};
function isStackOffset(s) {
    return !!STACK_OFFSET_INDEX[s];
}
var STACKABLE_MARKS = [_mark__WEBPACK_IMPORTED_MODULE_6__["BAR"], _mark__WEBPACK_IMPORTED_MODULE_6__["AREA"], _mark__WEBPACK_IMPORTED_MODULE_6__["RULE"], _mark__WEBPACK_IMPORTED_MODULE_6__["POINT"], _mark__WEBPACK_IMPORTED_MODULE_6__["CIRCLE"], _mark__WEBPACK_IMPORTED_MODULE_6__["SQUARE"], _mark__WEBPACK_IMPORTED_MODULE_6__["LINE"], _mark__WEBPACK_IMPORTED_MODULE_6__["TEXT"], _mark__WEBPACK_IMPORTED_MODULE_6__["TICK"]];
var STACK_BY_DEFAULT_MARKS = [_mark__WEBPACK_IMPORTED_MODULE_6__["BAR"], _mark__WEBPACK_IMPORTED_MODULE_6__["AREA"]];
function potentialStackedChannel(encoding) {
    var xDef = encoding.x;
    var yDef = encoding.y;
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(xDef) && Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(yDef)) {
        if (xDef.type === 'quantitative' && yDef.type === 'quantitative') {
            if (xDef.stack) {
                return 'x';
            }
            else if (yDef.stack) {
                return 'y';
            }
            // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y
            if ((!!xDef.aggregate) !== (!!yDef.aggregate)) {
                return xDef.aggregate ? 'x' : 'y';
            }
        }
        else if (xDef.type === 'quantitative') {
            return 'x';
        }
        else if (yDef.type === 'quantitative') {
            return 'y';
        }
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(xDef) && xDef.type === 'quantitative') {
        return 'x';
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(yDef) && yDef.type === 'quantitative') {
        return 'y';
    }
    return undefined;
}
// Note: CompassQL uses this method and only pass in required properties of each argument object.
// If required properties change, make sure to update CompassQL.
function stack(m, encoding, stackConfig) {
    var mark = Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isMarkDef"])(m) ? m.type : m;
    // Should have stackable mark
    if (!Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(STACKABLE_MARKS, mark)) {
        return null;
    }
    var fieldChannel = potentialStackedChannel(encoding);
    if (!fieldChannel) {
        return null;
    }
    var stackedFieldDef = encoding[fieldChannel];
    var stackedField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isStringFieldDef"])(stackedFieldDef) ? Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(stackedFieldDef, {}) : undefined;
    var dimensionChannel = fieldChannel === 'x' ? 'y' : 'x';
    var dimensionDef = encoding[dimensionChannel];
    var dimensionField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isStringFieldDef"])(dimensionDef) ? Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(dimensionDef, {}) : undefined;
    // Should have grouping level of detail that is different from the dimension field
    var stackBy = _channel__WEBPACK_IMPORTED_MODULE_2__["NONPOSITION_CHANNELS"].reduce(function (sc, channel) {
        if (Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["channelHasField"])(encoding, channel)) {
            var channelDef = encoding[channel];
            (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(function (cDef) {
                var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["getFieldDef"])(cDef);
                if (fieldDef.aggregate) {
                    return;
                }
                // Check whether the channel's field is identical to x/y's field or if the channel is a repeat
                var f = Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["isStringFieldDef"])(fieldDef) ? Object(_fielddef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, {}) : undefined;
                if (
                // if fielddef is a repeat, just include it in the stack by
                !f ||
                    // otherwise, the field must be different from x and y fields.
                    (f !== dimensionField && f !== stackedField)) {
                    sc.push({ channel: channel, fieldDef: fieldDef });
                }
            });
        }
        return sc;
    }, []);
    if (stackBy.length === 0) {
        return null;
    }
    // Automatically determine offset
    var offset = undefined;
    if (stackedFieldDef.stack !== undefined) {
        offset = stackedFieldDef.stack;
    }
    else if (Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(STACK_BY_DEFAULT_MARKS, mark)) {
        // Bar and Area with sum ops are automatically stacked by default
        offset = stackConfig === undefined ? 'zero' : stackConfig;
    }
    else {
        offset = stackConfig;
    }
    if (!offset || !isStackOffset(offset)) {
        return null;
    }
    // warn when stacking non-linear
    if (stackedFieldDef.scale && stackedFieldDef.scale.type && stackedFieldDef.scale.type !== _scale__WEBPACK_IMPORTED_MODULE_7__["ScaleType"].LINEAR) {
        _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].cannotStackNonLinearScale(stackedFieldDef.scale.type));
    }
    // Check if it is a ranged mark
    if (Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["channelHasField"])(encoding, fieldChannel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_2__["X2"] : _channel__WEBPACK_IMPORTED_MODULE_2__["Y2"])) {
        if (stackedFieldDef.stack !== undefined) {
            _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].cannotStackRangedMark(fieldChannel));
        }
        return null;
    }
    // Warn if stacking summative aggregate
    if (stackedFieldDef.aggregate && !Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(_aggregate__WEBPACK_IMPORTED_MODULE_1__["SUM_OPS"], stackedFieldDef.aggregate)) {
        _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].stackNonSummativeAggregate(stackedFieldDef.aggregate));
    }
    return {
        groupbyChannel: dimensionDef ? dimensionChannel : undefined,
        fieldChannel: fieldChannel,
        impute: Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isPathMark"])(mark),
        stackBy: stackBy,
        offset: offset
    };
}
//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "hG+Y":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-title.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var zero = {value: 0},
      encode, enter;

  encode = {
    enter: enter = {
      opacity: zero,
      x: {field: {group: 'padding'}},
      y: {field: {group: 'padding'}}
    },
    update: {
      opacity: {value: 1},
      text: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(spec.title),
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: zero
    }
  };
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'align',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleAlign', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'baseline',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleBaseline', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'font',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFont', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontSize',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontWeight',  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleFontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'limit',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleLimit', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fillOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('titleOpacity', spec, config));

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendTitleRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideTitleStyle"], null, dataRef, encode, userEncode);
});


/***/ }),

/***/ "hIQG":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Extent.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Extent; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Computes extents (min/max) for a data field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field over which to compute extends.
 */
function Extent(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [+Infinity, -Infinity], params);
}

Extent.Definition = {
  "type": "Extent",
  "metadata": {},
  "params": [
    { "name": "field", "type": "field", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Extent, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var extent = this.value,
      field = _.field,
      min = extent[0],
      max = extent[1],
      flag = pulse.ADD,
      mod;

  mod = pulse.changed()
     || pulse.modified(field.fields)
     || _.modified('field');

  if (mod) {
    flag = pulse.SOURCE;
    min = +Infinity;
    max = -Infinity;
  }

  pulse.visit(flag, function(t) {
    var v = field(t);
    if (v != null) {
      // coerce to number
      v = +v;
      // NaNs will fail all comparisons!
      if (v < min) min = v;
      if (v > max) max = v;
    }
  });

  this.value = [min, max];
};


/***/ }),

/***/ "hKDE":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Tree.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tree; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "CLBL");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");




var Layouts = {
  tidy: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["tree"],
  cluster: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["cluster"]
};

var Output = ['x', 'y', 'depth', 'children'];

/**
 * Tree layout. Depending on the method parameter, performs either
 * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Tree(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Tree.Definition = {
  "type": "Tree",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "method", "type": "enum", "default": "tidy", "values": ["tidy", "cluster"] },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "nodeSize", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Tree, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.
 */
prototype.layout = function(method) {
  var m = method || 'tidy';
  if (Layouts.hasOwnProperty(m)) return Layouts[m]();
  else Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized Tree layout method: ' + m);
};

prototype.params = ['size', 'nodeSize', 'separation'];

prototype.fields = Output;


/***/ }),

/***/ "hTHI":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Impute.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Impute; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");




var Methods = {
  value: 'value',
  median: d3_array__WEBPACK_IMPORTED_MODULE_2__["median"],
  mean: d3_array__WEBPACK_IMPORTED_MODULE_2__["mean"],
  min: d3_array__WEBPACK_IMPORTED_MODULE_2__["min"],
  max: d3_array__WEBPACK_IMPORTED_MODULE_2__["max"]
};

var Empty = [];

/**
 * Impute missing values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to impute.
 * @param {Array<function(object): *>} [params.groupby] - An array of
 *   accessors to determine series within which to perform imputation.
 * @param {function(object): *} params.key - An accessor for a key value.
 *   Each key value should be unique within a group. New tuples will be
 *   imputed for any key values that are not found within a group.
 * @param {Array<*>} [params.keyvals] - Optional array of required key
 *   values. New tuples will be imputed for any key values that are not
 *   found within a group. In addition, these values will be automatically
 *   augmented with the key values observed in the input data.
 * @param {string} [method='value'] - The imputation method to use. One of
 *   'value', 'mean', 'median', 'max', 'min'.
 * @param {*} [value=0] - The constant value to use for imputation
 *   when using method 'value'.
 */
function Impute(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

Impute.Definition = {
  "type": "Impute",
  "metadata": {"changes": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "key", "type": "field", "required": true },
    { "name": "keyvals", "array": true },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "method", "type": "enum", "default": "value",
      "values": ["value", "mean", "median", "max", "min"] },
    { "name": "value", "default": 0 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Impute, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

function getValue(_) {
  var m = _.method || Methods.value, v;

  if (Methods[m] == null) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized imputation method: ' + m);
  } else if (m === Methods.value) {
    v = _.value !== undefined ? _.value : 0;
    return function() { return v; };
  } else {
    return Methods[m];
  }
}

function getField(_) {
  var f = _.field;
  return function(t) { return t ? f(t) : NaN; };
}

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      impute = getValue(_),
      field = getField(_),
      fName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(_.field),
      kName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(_.key),
      gNames = (_.groupby || []).map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]),
      groups = partition(pulse.source, _.groupby, _.key, _.keyvals),
      curr = [],
      prev = this.value,
      m = groups.domain.length,
      group, value, gVals, kVal, g, i, j, l, n, t;

  for (g=0, l=groups.length; g<l; ++g) {
    group = groups[g];
    gVals = group.values;
    value = NaN;

    // add tuples for missing values
    for (j=0; j<m; ++j) {
      if (group[j] != null) continue;
      kVal = groups.domain[j];

      t = {_impute: true};
      for (i=0, n=gVals.length; i<n; ++i) t[gNames[i]] = gVals[i];
      t[kName] = kVal;
      t[fName] = isNaN(value) ? (value = impute(group, field)) : value;

      curr.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
    }
  }

  // update pulse with imputed tuples
  if (curr.length) out.add = out.materialize(out.ADD).add.concat(curr);
  if (prev.length) out.rem = out.materialize(out.REM).rem.concat(prev);
  this.value = curr;

  return out;
};

function partition(data, groupby, key, keyvals) {
  var get = function(f) { return f(t); },
      groups = [],
      domain = keyvals ? keyvals.slice() : [],
      kMap = {},
      gMap = {}, gVals, gKey,
      group, i, j, k, n, t;

  domain.forEach(function(k, i) { kMap[k] = i + 1; });

  for (i=0, n=data.length; i<n; ++i) {
    t = data[i];
    k = key(t);
    j = kMap[k] || (kMap[k] = domain.push(k));

    gKey = (gVals = groupby ? groupby.map(get) : Empty) + '';
    if (!(group = gMap[gKey])) {
      group = (gMap[gKey] = []);
      groups.push(group);
      group.values = gVals;
    }
    group[j-1] = t;
  }

  groups.domain = domain;
  return groups;
}


/***/ }),

/***/ "hTN5":
/*!***************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/scale-gradient.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "gngp");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scale */ "kakv");




/* harmony default export */ __webpack_exports__["default"] = (function(scale, p0, p1, count, group) {
  scale = Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(scale, (group || this).context);

  var gradient = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["Gradient"])(p0, p1),
      stops = scale.domain(),
      min = stops[0],
      max = stops[stops.length-1],
      fraction = Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["scaleFraction"])(scale, min, max);

  if (scale.ticks) {
    stops = scale.ticks(+count || 15);
    if (min !== stops[0]) stops.unshift(min);
    if (max !== stops[stops.length-1]) stops.push(max);
  }

  for (var i=0, n=stops.length; i<n; ++i) {
    gradient.stop(fraction(stops[i]), scale(stops[i]));
  }

  return gradient;
});


/***/ }),

/***/ "hp6z":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/mixture.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "yD9f");


/* harmony default export */ __webpack_exports__["default"] = (function(dists, weights) {
  var dist = {}, m = 0, w;

  function normalize(x) {
    var w = [], sum = 0, i;
    for (i=0; i<m; ++i) { sum += (w[i] = (x[i]==null ? 1 : +x[i])); }
    for (i=0; i<m; ++i) { w[i] /= sum; }
    return w;
  }

  dist.weights = function(_) {
    if (arguments.length) {
      w = normalize(weights = (_ || []));
      return dist;
    }
    return weights;
  };

  dist.distributions = function(_) {
    if (arguments.length) {
      if (_) {
        m = _.length;
        dists = _;
      } else {
        m = 0;
        dists = [];
      }
      return dist.weights(weights);
    }
    return dists;
  };

  dist.sample = function() {
    var r = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])(),
        d = dists[m-1],
        v = w[0],
        i = 0;

    // first select distribution
    for (; i<m-1; v += w[++i]) {
      if (r < v) { d = dists[i]; break; }
    }
    // then sample from it
    return d.sample();
  };

  dist.pdf = function(x) {
    for (var p=0, i=0; i<m; ++i) {
      p += w[i] * dists[i].pdf(x);
    }
    return p;
  };

  dist.cdf = function(x) {
    for (var p=0, i=0; i<m; ++i) {
      p += w[i] * dists[i].cdf(x);
    }
    return p;
  };

  dist.icdf = function() {
    throw Error('Mixture icdf not supported.');
  };

  return dist.distributions(dists).weights(weights);
});


/***/ }),

/***/ "hzKX":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/hover.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function itemFilter(event) {
  return event.item;
}

function markTarget(event) {
  // grab upstream collector feeding the mark operator
  var source = event.item.mark.source;
  return source.source || source;
}

function invoke(name) {
  return function(_, event) {
    return event.vega.view()
      .changeset()
      .encode(event.item, name);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(hoverSet, leaveSet) {
  hoverSet = [hoverSet || 'hover'];
  leaveSet = [leaveSet || 'update', hoverSet[0]];

  // invoke hover set upon mouseover
  this.on(
    this.events('view', 'mouseover', itemFilter),
    markTarget,
    invoke(hoverSet)
  );

  // invoke leave set upon mouseout
  this.on(
    this.events('view', 'mouseout', itemFilter),
    markTarget,
    invoke(leaveSet)
  );

  return this;
});


/***/ }),

/***/ "iFFr":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/area.js ***!
  \***************************************************************/
/*! exports provided: area */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins */ "NITR");


var area = {
    vgMark: 'area',
    encodeEntry: function (model) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'ignore', orient: 'include' }), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('x', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('y', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition2"](model, 'zeroOrMin', model.markDef.orient === 'horizontal' ? 'x2' : 'y2'), _mixins__WEBPACK_IMPORTED_MODULE_1__["defined"](model));
    }
};
//# sourceMappingURL=area.js.map

/***/ }),

/***/ "iMRA":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/accessor.js ***!
  \************************************************/
/*! exports provided: default, accessorName, accessorFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return accessorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return accessorFields; });
/* harmony default export */ __webpack_exports__["default"] = (function(fn, fields, name) {
  fn.fields = fields || [];
  fn.fname = name;
  return fn;
});

function accessorName(fn) {
  return fn == null ? null : fn.fname;
}

function accessorFields(fn) {
  return fn == null ? null : fn.fields;
}


/***/ }),

/***/ "ikrb":
/*!**********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../log */ "6ow0");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../mark */ "fKXb");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../selection */ "3eK9");



var VORONOI = 'voronoi';
var nearest = {
    has: function (selCmpt) {
        return selCmpt.type !== 'interval' && selCmpt.nearest;
    },
    marks: function (model, selCmpt, marks) {
        var _a = Object(_selection__WEBPACK_IMPORTED_MODULE_2__["positionalProjections"])(selCmpt), x = _a.x, y = _a.y;
        var markType = model.mark;
        if (Object(_mark__WEBPACK_IMPORTED_MODULE_1__["isPathMark"])(markType)) {
            _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].nearestNotSupportForContinuous(markType));
            return marks;
        }
        var cellDef = {
            name: model.getName(VORONOI),
            type: 'path',
            from: { data: model.getName('marks') },
            encode: {
                enter: {
                    fill: { value: 'transparent' },
                    strokeWidth: { value: 0.35 },
                    stroke: { value: 'transparent' },
                    isVoronoi: { value: true }
                }
            },
            transform: [{
                    type: 'voronoi',
                    x: { expr: (x || (!x && !y)) ? 'datum.datum.x || 0' : '0' },
                    y: { expr: (y || (!x && !y)) ? 'datum.datum.y || 0' : '0' },
                    size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]
                }]
        };
        var index = 0;
        var exists = false;
        marks.forEach(function (mark, i) {
            var name = mark.name || '';
            if (name === model.component.mark[0].name) {
                index = i;
            }
            else if (name.indexOf(VORONOI) >= 0) {
                exists = true;
            }
        });
        if (!exists) {
            marks.splice(index + 1, 0, cellDef);
        }
        return marks;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (nearest);
//# sourceMappingURL=nearest.js.map

/***/ }),

/***/ "ilY1":
/*!******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/MultiPulse.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiPulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pulse */ "8gyZ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Represents a set of multiple pulses. Used as input for operators
 * that accept multiple pulses at a time. Contained pulses are
 * accessible via the public "pulses" array property. This pulse doe
 * not carry added, removed or modified tuples directly. However,
 * the visit method can be used to traverse all such tuples contained
 * in sub-pulses with a timestamp matching this parent multi-pulse.
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The timestamp.
 * @param {Array<Pulse>} pulses - The sub-pulses for this multi-pulse.
 */
function MultiPulse(dataflow, stamp, pulses, encode) {
  var p = this,
      c = 0,
      pulse, hash, i, n, f;

  this.dataflow = dataflow;
  this.stamp = stamp;
  this.fields = null;
  this.encode = encode || null;
  this.pulses = pulses;

  for (i=0, n=pulses.length; i<n; ++i) {
    pulse = pulses[i];
    if (pulse.stamp !== stamp) continue;

    if (pulse.fields) {
      hash = p.fields || (p.fields = {});
      for (f in pulse.fields) { hash[f] = 1; }
    }

    if (pulse.changed(p.ADD)) c |= p.ADD;
    if (pulse.changed(p.REM)) c |= p.REM;
    if (pulse.changed(p.MOD)) c |= p.MOD;
  }

  this.changes = c;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiPulse, _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * @return {Pulse}
 */
prototype.fork = function(flags) {
  var p = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](this.dataflow).init(this, flags & this.NO_FIELDS);
  if (flags !== undefined) {
    if (flags & p.ADD) {
      this.visit(p.ADD, function(t) { return p.add.push(t); });
    }
    if (flags & p.REM) {
      this.visit(p.REM, function(t) { return p.rem.push(t); });
    }
    if (flags & p.MOD) {
      this.visit(p.MOD, function(t) { return p.mod.push(t); });
    }
  }
  return p;
};

prototype.changed = function(flags) {
  return this.changes & flags;
};

prototype.modified = function(_) {
  var p = this, fields = p.fields;
  return !(fields && (p.changes & p.MOD)) ? 0
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_) ? _.some(function(f) { return fields[f]; })
    : fields[_];
};

prototype.filter = function() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('MultiPulse does not support filtering.');
};

prototype.materialize = function() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('MultiPulse does not support materialization.');
};

prototype.visit = function(flags, visitor) {
  var p = this,
      pulses = p.pulses,
      n = pulses.length,
      i = 0;

  if (flags & p.SOURCE) {
    for (; i<n; ++i) {
      pulses[i].visit(flags, visitor);
    }
  } else {
    for (; i<n; ++i) {
      if (pulses[i].stamp === p.stamp) {
        pulses[i].visit(flags, visitor);
      }
    }
  }

  return p;
};


/***/ }),

/***/ "ipwT":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/assemble.js ***!
  \********************************************************************/
/*! exports provided: assembleScales, assembleScalesForModel, assembleScaleRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScales", function() { return assembleScales; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScalesForModel", function() { return assembleScalesForModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScaleRange", function() { return assembleScaleRange; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vega.schema */ "P9ZJ");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../selection/selection */ "3eK9");
/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./domain */ "2wP2");







function assembleScales(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_4__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_4__["isRepeatModel"])(model)) {
        // For concat / layer / repeat, include scales of children too
        return model.children.reduce(function (scales, child) {
            return scales.concat(assembleScales(child));
        }, assembleScalesForModel(model));
    }
    else {
        // For facet, child scales would not be included in the parent's scope.
        // For unit, there is no child.
        return assembleScalesForModel(model);
    }
}
function assembleScalesForModel(model) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(model.component.scales).reduce(function (scales, channel) {
        var scaleComponent = model.component.scales[channel];
        if (scaleComponent.merged) {
            // Skipped merged scales
            return scales;
        }
        var scale = scaleComponent.combine();
        // need to separate const and non const object destruction
        var domainRaw = scale.domainRaw, range = scale.range;
        var name = scale.name, type = scale.type, _d = scale.domainRaw, _r = scale.range, otherScaleProps = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](scale, ["name", "type", "domainRaw", "range"]);
        range = assembleScaleRange(range, name, model, channel);
        // As scale parsing occurs before selection parsing, a temporary signal
        // is used for domainRaw. Here, we detect if this temporary signal
        // is set, and replace it with the correct domainRaw signal.
        // For more information, see isRawSelectionDomain in selection.ts.
        if (domainRaw && Object(_selection_selection__WEBPACK_IMPORTED_MODULE_5__["isRawSelectionDomain"])(domainRaw)) {
            domainRaw = Object(_selection_selection__WEBPACK_IMPORTED_MODULE_5__["selectionScaleDomain"])(model, domainRaw);
        }
        scales.push(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: name,
            type: type, domain: Object(_domain__WEBPACK_IMPORTED_MODULE_6__["assembleDomain"])(model, channel) }, (domainRaw ? { domainRaw: domainRaw } : {}), { range: range }, otherScaleProps));
        return scales;
    }, []);
}
function assembleScaleRange(scaleRange, scaleName, model, channel) {
    // add signals to x/y range
    if (channel === 'x' || channel === 'y') {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_3__["isVgRangeStep"])(scaleRange)) {
            // For x/y range step, use a signal created in layout assemble instead of a constant range step.
            return {
                step: { signal: scaleName + '_step' }
            };
        }
        else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(scaleRange) && scaleRange.length === 2) {
            var r0 = scaleRange[0];
            var r1 = scaleRange[1];
            if (r0 === 0 && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_3__["isVgSignalRef"])(r1)) {
                // Replace width signal just in case it is renamed.
                return [0, { signal: model.getSizeName(r1.signal) }];
            }
            else if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_3__["isVgSignalRef"])(r0) && r1 === 0) {
                // Replace height signal just in case it is renamed.
                return [{ signal: model.getSizeName(r0.signal) }, 0];
            }
        }
    }
    return scaleRange;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "itEn":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Scenegraph.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scenegraph; });
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bounds */ "wOpL");
/* harmony import */ var _GroupItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GroupItem */ "Wap9");
/* harmony import */ var _util_serialize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/serialize */ "KW+5");




function Scenegraph(scene) {
  if (arguments.length) {
    this.root = Object(_util_serialize__WEBPACK_IMPORTED_MODULE_2__["sceneFromJSON"])(scene);
  } else {
    this.root = createMark({
      marktype: 'group',
      name: 'root',
      role: 'frame'
    });
    this.root.items = [new _GroupItem__WEBPACK_IMPORTED_MODULE_1__["default"](this.root)];
  }
}

var prototype = Scenegraph.prototype;

prototype.toJSON = function(indent) {
  return Object(_util_serialize__WEBPACK_IMPORTED_MODULE_2__["sceneToJSON"])(this.root, indent || 0);
};

prototype.mark = function(markdef, group, index) {
  group = group || this.root.items[0];
  var mark = createMark(markdef, group);
  group.items[index] = mark;
  if (mark.zindex) mark.group.zdirty = true;
  return mark;
};

function createMark(def, group) {
  return {
    bounds:      new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"](),
    clip:        !!def.clip,
    group:       group,
    interactive: def.interactive === false ? false : true,
    items:       [],
    marktype:    def.marktype,
    name:        def.name || undefined,
    role:        def.role || undefined,
    zindex:      def.zindex || 0
  };
}


/***/ }),

/***/ "jLeK":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/baseconcat.js ***!
  \****************************************************************/
/*! exports provided: BaseConcatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseConcatModel", function() { return BaseConcatModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data/parse */ "S7P/");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layoutsize/assemble */ "Ds8r");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model */ "MqRG");





var BaseConcatModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BaseConcatModel, _super);
    function BaseConcatModel(spec, parent, parentGivenName, config, repeater, resolve) {
        return _super.call(this, spec, parent, parentGivenName, config, repeater, resolve) || this;
    }
    BaseConcatModel.prototype.parseData = function () {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_2__["parseData"])(this);
        this.children.forEach(function (child) {
            child.parseData();
        });
    };
    BaseConcatModel.prototype.parseSelection = function () {
        var _this = this;
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        var _loop_1 = function (child) {
            child.parseSelection();
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(child.component.selection).forEach(function (key) {
                _this.component.selection[key] = child.component.selection[key];
            });
        };
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            _loop_1(child);
        }
    };
    BaseConcatModel.prototype.parseMarkGroup = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseMarkGroup();
        }
    };
    BaseConcatModel.prototype.parseAxisAndHeader = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseAxisAndHeader();
        }
        // TODO(#2415): support shared axes
    };
    BaseConcatModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.children.reduce(function (sg, child) { return child.assembleSelectionTopLevelSignals(sg); }, signals);
    };
    BaseConcatModel.prototype.assembleSelectionSignals = function () {
        this.children.forEach(function (child) { return child.assembleSelectionSignals(); });
        return [];
    };
    BaseConcatModel.prototype.assembleLayoutSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleLayoutSignals());
        }, Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_3__["assembleLayoutSignals"])(this));
    };
    BaseConcatModel.prototype.assembleSelectionData = function (data) {
        return this.children.reduce(function (db, child) { return child.assembleSelectionData(db); }, data);
    };
    BaseConcatModel.prototype.assembleMarks = function () {
        // only children have marks
        return this.children.map(function (child) {
            var title = child.assembleTitle();
            var style = child.assembleGroupStyle();
            var layoutSizeEncodeEntry = child.assembleLayoutSize();
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'group', name: child.getName('group') }, (title ? { title: title } : {}), (style ? { style: style } : {}), (layoutSizeEncodeEntry ? {
                encode: {
                    update: layoutSizeEncodeEntry
                }
            } : {}), child.assembleGroup());
        });
    };
    return BaseConcatModel;
}(_model__WEBPACK_IMPORTED_MODULE_4__["Model"]));

//# sourceMappingURL=baseconcat.js.map

/***/ }),

/***/ "jRJ8":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/common.js ***!
  \******************************************************************/
/*! exports provided: getMarkSpecificConfigMixins */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkSpecificConfigMixins", function() { return getMarkSpecificConfigMixins; });
function getMarkSpecificConfigMixins(markSpecificConfig, channel) {
    var _a;
    var value = markSpecificConfig[channel];
    return value !== undefined ? (_a = {}, _a[channel] = { value: value }, _a) : {};
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "jSEt":
/*!**************************************************!*\
  !*** ./node_modules/vega-tooltip/build/index.js ***!
  \**************************************************/
/*! exports provided: default, DEFAULT_OPTIONS, escapeHTML, createDefaultStyle, formatValue, replacer, stringify, calculatePosition, Handler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "vF6P");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ "rlgB");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_OPTIONS", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_OPTIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escapeHTML", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["escapeHTML"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDefaultStyle", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["createDefaultStyle"]; });

/* harmony import */ var _formatValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatValue */ "G+K7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatValue", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["formatValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["replacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["stringify"]; });

/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./position */ "6GNL");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculatePosition", function() { return _position__WEBPACK_IMPORTED_MODULE_3__["calculatePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return _Handler__WEBPACK_IMPORTED_MODULE_0__["Handler"]; });






/**
 * Create a tooltip handler and register it with the provided view.
 *
 * @param view The Vega view.
 * @param opt Tooltip options.
 */
/* harmony default export */ __webpack_exports__["default"] = (function (view, opt) {
    var handler = new _Handler__WEBPACK_IMPORTED_MODULE_0__["Handler"](opt);
    view.tooltip(handler.call).run();
    return handler;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVwQyxjQUFjLFlBQVksQ0FBQztBQUMzQixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLFlBQVksQ0FBQztBQUMzQixjQUFjLFdBQVcsQ0FBQztBQUUxQjs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxPQUFPLFdBQVUsSUFBVSxFQUFFLEdBQXNCO0lBQ3hELElBQU0sT0FBTyxHQUFHLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWpDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRWpDLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMifQ==

/***/ }),

/***/ "jjHi":
/*!***********************************************!*\
  !*** ./node_modules/vega-expression/index.js ***!
  \***********************************************/
/*! exports provided: ASTNode, parse, codegen, functions, constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/ast */ "MDkm");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ASTNode", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/parser */ "eOkk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_parser__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_codegen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/codegen */ "z5aY");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codegen", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/functions */ "1RqS");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return _src_functions__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/constants */ "QOGX");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constants", function() { return _src_constants__WEBPACK_IMPORTED_MODULE_4__["default"]; });








/***/ }),

/***/ "jucA":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Window.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Window; });
/* harmony import */ var _util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/AggregateKeys */ "+cNY");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "pOXG");
/* harmony import */ var _util_SortedList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/SortedList */ "wg3X");
/* harmony import */ var _util_WindowOps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/WindowOps */ "GYXB");
/* harmony import */ var _util_WindowState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/WindowState */ "g/wi");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-array */ "vBe5");









/**
 * Perform window calculations and write results to the input stream.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator function for sorting tuples within a window.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors by which to partition tuples into separate windows.
 * @param {Array<string>} params.ops - An array of strings indicating window operations to perform.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors
 *   for data fields to use as inputs to window operations.
 * @param {Array<*>} [params.params] - An array of parameter values for window operations.
 * @param {Array<string>} [params.as] - An array of output field names for window operations.
 * @param {Array<number>} [params.frame] - Window frame definition as two-element array.
 * @param {boolean} [params.ignorePeers=false] - If true, base window frame boundaries on row
 *   number alone, ignoring peers with identical sort values. If false (default),
 *   the window boundaries will be adjusted to include peer values.
 */
function Window(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"].call(this, {}, params);
  this._mlen = 0;
  this._mods = [];
}

Window.Definition = {
  "type": "Window",
  "metadata": {"modifies": true},
  "params": [
    { "name": "sort", "type": "compare" },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_WindowOps__WEBPACK_IMPORTED_MODULE_3__["ValidWindowOps"].concat(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"]) },
    { "name": "params", "type": "number", "null": true, "array": true },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "frame", "type": "number", "null": true, "array": true, "length": 2, "default": [null, 0] },
    { "name": "ignorePeers", "type": "boolean", "default": false }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["inherits"])(Window, vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"]);

prototype.transform = function(_, pulse) {
  var self = this,
      state = self.state,
      mod = _.modified(),
      i, n;

  this.stamp = pulse.stamp;

  // initialize window state
  if (!state || mod) {
    state = self.state = new _util_WindowState__WEBPACK_IMPORTED_MODULE_4__["default"](_);
  }

  // retrieve group for a tuple
  var key = Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])(_.groupby);
  function group(t) { return self.group(key(t)); }

  // partition input tuples
  if (mod || pulse.modified(state.inputs)) {
    self.value = {};
    pulse.visit(pulse.SOURCE, function(t) { group(t).add(t); });
  } else {
    pulse.visit(pulse.REM, function(t) { group(t).remove(t); });
    pulse.visit(pulse.ADD, function(t) { group(t).add(t); });
  }

  // perform window calculations for each modified partition
  for (i=0, n=self._mlen; i<n; ++i) {
    processPartition(self._mods[i], state, _);
  }
  self._mlen = 0;
  self._mods = [];

  // TODO don't reflow everything?
  return pulse.reflow(mod).modifies(state.outputs);
};

prototype.group = function(key) {
  var self = this,
      group = self.value[key];

  if (!group) {
    group = self.value[key] = Object(_util_SortedList__WEBPACK_IMPORTED_MODULE_2__["default"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["tupleid"]);
    group.stamp = -1;
  }

  if (group.stamp < self.stamp) {
    group.stamp = self.stamp;
    self._mods[self._mlen++] = group;
  }

  return group;
};

function processPartition(list, state, _) {
  var sort = _.sort,
      range = sort && !_.ignorePeers,
      frame = _.frame || [null, 0],
      data = list.data(sort),
      n = data.length,
      i = 0,
      b = range ? Object(d3_array__WEBPACK_IMPORTED_MODULE_7__["bisector"])(sort) : null,
      w = {
        i0: 0, i1: 0, p0: 0, p1: 0, index: 0,
        data: data, compare: sort || Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["constant"])(-1)
      };

  for (state.init(); i<n; ++i) {
    setWindow(w, frame, i, n);
    if (range) adjustRange(w, b);
    state.update(w, data[i]);
  }
}

function setWindow(w, f, i, n) {
  w.p0 = w.i0;
  w.p1 = w.i1;
  w.i0 = f[0] == null ? 0 : Math.max(0, i - Math.abs(f[0]));
  w.i1 = f[1] == null ? n : Math.min(n, i + Math.abs(f[1]) + 1);
  w.index = i;
}

// if frame type is 'range', adjust window for peer values
function adjustRange(w, bisect) {
  var r0 = w.i0,
      r1 = w.i1 - 1,
      c = w.compare,
      d = w.data,
      n = d.length - 1;

  if (r0 > 0 && !c(d[r0], d[r0-1])) w.i0 = bisect.left(d, d[r0]);
  if (r1 < n && !c(d[r1], d[r1+1])) w.i1 = bisect.right(d, d[r1]);
}


/***/ }),

/***/ "k2RQ":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/header/index.js ***!
  \******************************************************************/
/*! exports provided: HEADER_CHANNELS, HEADER_TYPES, getHeaderType, getTitleGroup, getHeaderGroups, labelAlign, labelBaseline, getHeaderGroup, getHeaderProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_CHANNELS", function() { return HEADER_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TYPES", function() { return HEADER_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderType", function() { return getHeaderType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTitleGroup", function() { return getTitleGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderGroups", function() { return getHeaderGroups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelAlign", function() { return labelAlign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelBaseline", function() { return labelBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderGroup", function() { return getHeaderGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderProperties", function() { return getHeaderProperties; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../header */ "9C4T");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sort */ "58wk");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/calculate */ "a40Z");

/**
 * Utility for generating row / column headers
 */







var HEADER_CHANNELS = ['row', 'column'];
var HEADER_TYPES = ['header', 'footer'];
function getHeaderType(orient) {
    if (orient === 'top' || orient === 'left') {
        return 'header';
    }
    return 'footer';
}
function getTitleGroup(model, channel) {
    var title = model.component.layoutHeaders[channel].title;
    var textOrient = channel === 'row' ? 'left' : undefined;
    var config = model.config ? model.config : undefined;
    var facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef ? model.component.layoutHeaders[channel].facetFieldDef : undefined;
    return {
        name: channel + "-title",
        type: 'group',
        role: channel + "-title",
        title: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ text: title, offset: 10, orient: textOrient, style: 'guide-title' }, getHeaderProperties(config, facetFieldDef, _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_TITLE_PROPERTIES"], _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_TITLE_PROPERTIES_MAP"]))
    };
}
function getHeaderGroups(model, channel) {
    var layoutHeader = model.component.layoutHeaders[channel];
    var groups = [];
    for (var _i = 0, HEADER_TYPES_1 = HEADER_TYPES; _i < HEADER_TYPES_1.length; _i++) {
        var headerType = HEADER_TYPES_1[_i];
        if (layoutHeader[headerType]) {
            for (var _a = 0, _b = layoutHeader[headerType]; _a < _b.length; _a++) {
                var headerCmpt = _b[_a];
                groups.push(getHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt));
            }
        }
    }
    return groups;
}
// 0, (0,90), 90, (90, 180), 180, (180, 270), 270, (270, 0)
function labelAlign(angle) {
    // to keep angle in [0, 360)
    angle = ((angle % 360) + 360) % 360;
    if ((angle + 90) % 180 === 0) { // for 90 and 270
        return {}; // default center
    }
    else if (angle < 90 || 270 < angle) {
        return { align: { value: 'right' } };
    }
    else if (135 <= angle && angle < 225) {
        return { align: { value: 'left' } };
    }
    return {};
}
function labelBaseline(angle) {
    // to keep angle in [0, 360)
    angle = ((angle % 360) + 360) % 360;
    if (45 <= angle && angle <= 135) {
        return { baseline: 'top' };
    }
    return { baseline: 'middle' };
}
function getSort(facetFieldDef, channel) {
    var sort = facetFieldDef.sort;
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_4__["isSortField"])(sort)) {
        return {
            field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(sort, { expr: 'datum' }),
            order: sort.order || 'ascending'
        };
    }
    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sort)) {
        return {
            field: Object(_data_calculate__WEBPACK_IMPORTED_MODULE_7__["sortArrayIndexField"])(facetFieldDef, channel, 'datum'),
            order: 'ascending'
        };
    }
    else {
        return {
            field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(facetFieldDef, { expr: 'datum' }),
            order: sort || 'ascending'
        };
    }
}
function getHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt) {
    var _a;
    if (headerCmpt) {
        var title = null;
        var facetFieldDef = layoutHeader.facetFieldDef;
        if (facetFieldDef && headerCmpt.labels) {
            var _b = facetFieldDef.header, header = _b === void 0 ? {} : _b;
            var format = header.format, labelAngle = header.labelAngle;
            var config = model.config ? model.config : undefined;
            var update = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, labelAlign(labelAngle));
            title = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ text: Object(_common__WEBPACK_IMPORTED_MODULE_6__["formatSignalRef"])(facetFieldDef, format, 'parent', model.config), offset: 10, orient: channel === 'row' ? 'left' : 'top', style: 'guide-label' }, getHeaderProperties(config, facetFieldDef, _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_LABEL_PROPERTIES"], _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_LABEL_PROPERTIES_MAP"]), (Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(update).length > 0 ? { encode: { update: update } } : {}));
        }
        var axes = headerCmpt.axes;
        var hasAxes = axes && axes.length > 0;
        if (title || hasAxes) {
            var sizeChannel = channel === 'row' ? 'height' : 'width';
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ name: model.getName(channel + "_" + headerType), type: 'group', role: channel + "-" + headerType }, (layoutHeader.facetFieldDef ? {
                from: { data: model.getName(channel + '_domain') },
                sort: getSort(facetFieldDef, channel)
            } : {}), (title ? { title: title } : {}), (headerCmpt.sizeSignal ? {
                encode: {
                    update: (_a = {},
                        _a[sizeChannel] = headerCmpt.sizeSignal,
                        _a)
                }
            } : {}), (hasAxes ? { axes: axes } : {}));
        }
    }
    return null;
}
function getHeaderProperties(config, facetFieldDef, properties, propertiesMap) {
    var props = {};
    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
        var prop = properties_1[_i];
        if (config && config.header) {
            if (config.header[prop]) {
                props[propertiesMap[prop]] = config.header[prop];
            }
        }
        if (facetFieldDef && facetFieldDef.header) {
            if (facetFieldDef.header[prop]) {
                props[propertiesMap[prop]] = facetFieldDef.header[prop];
            }
        }
    }
    return props;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "k8NR":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/Scale.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scale; });
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks */ "Wj74");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _scale_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scale-types */ "BM/x");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-scale */ "kakv");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-interpolate */ "pD2Y");










var DEFAULT_COUNT = 5;

var INCLUDE_ZERO = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])([_scale_types__WEBPACK_IMPORTED_MODULE_3__["Linear"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Pow"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Sqrt"]]);

var INCLUDE_PAD = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])([_scale_types__WEBPACK_IMPORTED_MODULE_3__["Linear"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Log"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Pow"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Sqrt"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Time"], _scale_types__WEBPACK_IMPORTED_MODULE_3__["Utc"]]);

var SKIP = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])([
  'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',
  'domain', 'domainMin', 'domainMid', 'domainMax', 'domainRaw', 'domainImplicit', 'nice', 'zero',
  'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'
]);

/**
 * Maintains a scale function mapping data values to visual channels.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Scale(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Scale, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      scale = this.value,
      prop;

  if (!scale || _.modified('type')) {
    this.value = scale = Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["scale"])((_.type || _scale_types__WEBPACK_IMPORTED_MODULE_3__["Linear"]).toLowerCase())();
  }

  for (prop in _) if (!SKIP[prop]) {
    // padding is a scale property for band/point but not others
    if (prop === 'padding' && INCLUDE_PAD[scale.type]) continue;
    // invoke scale property setter, raise warning if not found
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale[prop])
      ? scale[prop](_[prop])
      : df.warn('Unsupported scale property: ' + prop);
  }

  configureRange(scale, _, configureDomain(scale, _, df));

  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);
};

function configureDomain(scale, _, df) {
  // check raw domain, if provided use that and exit early
  var raw = rawDomain(scale, _.domainRaw, df);
  if (raw > -1) return raw;

  var domain = _.domain,
      type = scale.type,
      zero = _.zero || (_.zero === undefined && INCLUDE_ZERO[type]),
      n, mid;

  if (!domain) return 0;

  // adjust continuous domain for minimum pixel padding
  if (INCLUDE_PAD[type] && _.padding && domain[0] !== Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(domain)) {
    domain = padDomain(type, domain, _.range, _.padding, _.exponent);
  }

  // adjust domain based on zero, min, max settings
  if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {
    n = ((domain = domain.slice()).length - 1) || 1;
    if (zero) {
      if (domain[0] > 0) domain[0] = 0;
      if (domain[n] < 0) domain[n] = 0;
    }
    if (_.domainMin != null) domain[0] = _.domainMin;
    if (_.domainMax != null) domain[n] = _.domainMax;

    if (_.domainMid != null) {
      mid = _.domainMid;
      if (mid < domain[0] || mid > domain[n]) {
        df.warn('Scale domainMid exceeds domain min or max.', mid);
      }
      domain.splice(n, 0, mid);
    }
  }

  // set the scale domain
  scale.domain(domainCheck(type, domain, df));

  // if ordinal scale domain is defined, prevent implicit
  // domain construction as side-effect of scale lookup
  if (type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Ordinal"]) {
    scale.unknown(_.domainImplicit ? vega_scale__WEBPACK_IMPORTED_MODULE_4__["scaleImplicit"] : undefined);
  }

  // perform 'nice' adjustment as requested
  if (_.nice && scale.nice) {
    scale.nice((_.nice !== true && Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickCount"])(scale, _.nice)) || null);
  }

  // return the cardinality of the domain
  return domain.length;
}

function rawDomain(scale, raw, df) {
  if (raw) {
    scale.domain(domainCheck(scale.type, raw, df));
    return raw.length;
  } else {
    return -1;
  }
}

function padDomain(type, domain, range, pad, exponent) {
  var span = Math.abs(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(range) - range[0]),
      frac = span / (span - 2 * pad),
      d = type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Log"]  ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomLog"])(domain, null, frac)
        : type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Sqrt"] ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomPow"])(domain, null, frac, 0.5)
        : type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Pow"]  ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomPow"])(domain, null, frac, exponent)
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomLinear"])(domain, null, frac);

  domain = domain.slice();
  domain[0] = d[0];
  domain[domain.length-1] = d[1];
  return domain;
}

function domainCheck(type, domain, df) {
  if (type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Log"]) {
    // sum signs of domain values
    // if all pos or all neg, abs(sum) === domain.length
    var s = Math.abs(domain.reduce(function(s, v) {
      return s + (v < 0 ? -1 : v > 0 ? 1 : 0);
    }, 0));

    if (s !== domain.length) {
      df.warn('Log scale domain includes zero: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(domain));
    }
  }
  return domain;
}

function configureRange(scale, _, count) {
  var round = _.round || false,
      range = _.range;

  // if range step specified, calculate full range extent
  if (_.rangeStep != null) {
    range = configureRangeStep(scale.type, _, count);
  }

  // else if a range scheme is defined, use that
  else if (_.scheme) {
    range = configureScheme(scale.type, _, count);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(range)) return scale.interpolator(range);
  }

  // given a range array for a sequential scale, convert to interpolator
  else if (range && scale.type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Sequential"]) {
    return scale.interpolator(Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["interpolateRgbBasis"])(flip(range, _.reverse)));
  }

  // configure rounding / interpolation
  if (range && _.interpolate && scale.interpolate) {
    scale.interpolate(Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["interpolate"])(_.interpolate, _.interpolateGamma));
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale.round)) {
    scale.round(round);
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale.rangeRound)) {
    scale.interpolate(round ? d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["interpolateRound"] : d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["interpolate"]);
  }

  if (range) scale.range(flip(range, _.reverse));
}

function configureRangeStep(type, _, count) {
  if (type !== _scale_types__WEBPACK_IMPORTED_MODULE_3__["Band"] && type !== _scale_types__WEBPACK_IMPORTED_MODULE_3__["Point"]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Only band and point scales support rangeStep.');
  }

  // calculate full range based on requested step size and padding
  var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,
      inner = type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Point"] ? 1
            : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);
  return [0, _.rangeStep * Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["bandSpace"])(count, inner, outer)];
}

function configureScheme(type, _, count) {
  var name = _.scheme.toLowerCase(),
      scheme = Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["scheme"])(name),
      extent = _.schemeExtent,
      discrete;

  if (!scheme) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized scheme name: ' + _.scheme);
  }

  // determine size for potential discrete range
  count = (type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Threshold"]) ? count + 1
    : (type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["BinOrdinal"]) ? count - 1
    : (type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Quantile"] || type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Quantize"]) ? (+_.schemeCount || DEFAULT_COUNT)
    : count;

  // adjust and/or quantize scheme as appropriate
  return type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Sequential"] ? adjustScheme(scheme, extent, _.reverse)
    : !extent && (discrete = Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["scheme"])(name + '-' + count)) ? discrete
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scheme) ? quantize(adjustScheme(scheme, extent), count)
    : type === _scale_types__WEBPACK_IMPORTED_MODULE_3__["Ordinal"] ? scheme : scheme.slice(0, count);
}

function adjustScheme(scheme, extent, reverse) {
  return (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scheme) && (extent || reverse))
    ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["interpolateRange"])(scheme, flip(extent || [0, 1], reverse))
    : scheme;
}

function flip(array, reverse) {
  return reverse ? array.slice().reverse() : array;
}

function quantize(interpolator, count) {
  var samples = new Array(count),
      n = count + 1;
  for (var i = 0; i < count;) samples[i] = interpolator(++i / n);
  return samples;
}


/***/ }),

/***/ "k9GY":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/dom.js ***!
  \******************************************************/
/*! exports provided: domCreate, domFind, domChild, domClear, cssClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return domCreate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return domFind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return domChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return domClear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssClass", function() { return cssClass; });
// create a new DOM element
function domCreate(doc, tag, ns) {
  if (!doc && typeof document !== 'undefined' && document.createElement) {
    doc = document;
  }
  return doc
    ? (ns ? doc.createElementNS(ns, tag) : doc.createElement(tag))
    : null;
}

// find first child element with matching tag
function domFind(el, tag) {
  tag = tag.toLowerCase();
  var nodes = el.childNodes, i = 0, n = nodes.length;
  for (; i<n; ++i) if (nodes[i].tagName.toLowerCase() === tag) {
    return nodes[i];
  }
}

// retrieve child element at given index
// create & insert if doesn't exist or if tags do not match
function domChild(el, index, tag, ns) {
  var a = el.childNodes[index], b;
  if (!a || a.tagName.toLowerCase() !== tag.toLowerCase()) {
    b = a || null;
    a = domCreate(el.ownerDocument, tag, ns);
    el.insertBefore(a, b);
  }
  return a;
}

// remove all child elements at or above the given index
function domClear(el, index) {
  var nodes = el.childNodes,
      curr = nodes.length;
  while (curr > index) el.removeChild(nodes[--curr]);
  return el;
}

// generate css class name for mark
function cssClass(mark) {
  return 'mark-' + mark.marktype
    + (mark.role ? ' role-' + mark.role : '')
    + (mark.name ? ' ' + mark.name : '');
}


/***/ }),

/***/ "kAsH":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Handler.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Handler; });
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var _util_resolveItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/resolveItem */ "Yhs0");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-loader */ "Ln7r");




/**
 * Create a new Handler instance.
 * @param {object} [customLoader] - Optional loader instance for
 *   href URL sanitization. If not specified, a standard loader
 *   instance will be generated.
 * @param {function} [customTooltip] - Optional tooltip handler
 *   function for custom tooltip display.
 * @constructor
 */
function Handler(customLoader, customTooltip) {
  this._active = null;
  this._handlers = {};
  this._loader = customLoader || Object(vega_loader__WEBPACK_IMPORTED_MODULE_2__["loader"])();
  this._tooltip = customTooltip || defaultTooltip;
}

// The default tooltip display handler.
// Sets the HTML title attribute on the visualization container.
function defaultTooltip(handler, event, item, value) {
  handler.element().setAttribute('title', value || '');
}

var prototype = Handler.prototype;

/**
 * Initialize a new Handler instance.
 * @param {DOMElement} el - The containing DOM element for the display.
 * @param {Array<number>} origin - The origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {object} [obj] - Optional context object that should serve as
 *   the "this" context for event callbacks.
 * @return {Handler} - This handler instance.
 */
prototype.initialize = function(el, origin, obj) {
  this._el = el;
  this._obj = obj || null;
  return this.origin(origin);
};

/**
 * Returns the parent container element for a visualization.
 * @return {DOMElement} - The containing DOM element.
 */
prototype.element = function() {
  return this._el;
};

/**
 * Returns the scene element (e.g., canvas or SVG) of the visualization
 * Subclasses must override if the first child is not the scene element.
 * @return {DOMElement} - The scene (e.g., canvas or SVG) element.
 */
prototype.canvas = function() {
  return this._el && this._el.firstChild;
};

/**
 * Get / set the origin coordinates of the visualization.
 */
prototype.origin = function(origin) {
  if (arguments.length) {
    this._origin = origin || [0, 0];
    return this;
  } else {
    return this._origin.slice();
  }
};

/**
 * Get / set the scenegraph root.
 */
prototype.scene = function(scene) {
  if (!arguments.length) return this._scene;
  this._scene = scene;
  return this;
};

/**
 * Add an event handler. Subclasses should override this method.
 */
prototype.on = function(/*type, handler*/) {};

/**
 * Remove an event handler. Subclasses should override this method.
 */
prototype.off = function(/*type, handler*/) {};

/**
 * Utility method for finding the array index of an event handler.
 * @param {Array} h - An array of registered event handlers.
 * @param {string} type - The event type.
 * @param {function} handler - The event handler instance to find.
 * @return {number} - The handler's array index or -1 if not registered.
 */
prototype._handlerIndex = function(h, type, handler) {
  for (var i = h ? h.length : 0; --i>=0;) {
    if (h[i].type === type && (!handler || h[i].handler === handler)) {
      return i;
    }
  }
  return -1;
};

/**
 * Returns an array with registered event handlers.
 * @param {string} [type] - The event type to query. Any annotations
 *   are ignored; for example, for the argument "click.foo", ".foo" will
 *   be ignored and the method returns all "click" handlers. If type is
 *   null or unspecified, this method returns handlers for all types.
 * @return {Array} - A new array containing all registered event handlers.
 */
prototype.handlers = function(type) {
  var h = this._handlers, a = [], k;
  if (type) {
    a.push.apply(a, h[this.eventName(type)]);
  } else {
    for (k in h) { a.push.apply(a, h[k]); }
  }
  return a;
};

/**
 * Parses an event name string to return the specific event type.
 * For example, given "click.foo" returns "click"
 * @param {string} name - The input event type string.
 * @return {string} - A string with the event type only.
 */
prototype.eventName = function(name) {
  var i = name.indexOf('.');
  return i < 0 ? name : name.slice(0,i);
};

/**
 * Handle hyperlink navigation in response to an item.href value.
 * @param {Event} event - The event triggering hyperlink navigation.
 * @param {Item} item - The scenegraph item.
 * @param {string} href - The URL to navigate to.
 */
prototype.handleHref = function(event, item, href) {
  this._loader
    .sanitize(href, {context:'href'})
    .then(function(opt) {
      var e = new MouseEvent(event.type, event),
          a = Object(_util_dom__WEBPACK_IMPORTED_MODULE_0__["domCreate"])(null, 'a');
      for (var name in opt) a.setAttribute(name, opt[name]);
      a.dispatchEvent(e);
    })
    .catch(function() { /* do nothing */ });
};

/**
 * Handle tooltip display in response to an item.tooltip value.
 * @param {Event} event - The event triggering tooltip display.
 * @param {Item} item - The scenegraph item.
 * @param {boolean} show - A boolean flag indicating whether
 *   to show or hide a tooltip for the given item.
 */
prototype.handleTooltip = function(event, item, show) {
  if (item && item.tooltip != null) {
    item = Object(_util_resolveItem__WEBPACK_IMPORTED_MODULE_1__["default"])(item, event, this.canvas(), this._origin);
    var value = (show && item && item.tooltip) || null;
    this._tooltip.call(this._obj, this, event, item, value);
  }
};

/**
 * Returns the size of a scenegraph item and its position relative
 * to the viewport.
 * @param {Item} item - The scenegraph item.
 * @return {object} - A bounding box object (compatible with the
 *   DOMRect type) consisting of x, y, width, heigh, top, left,
 *   right, and bottom properties.
 */
prototype.getItemBoundingClientRect = function(item) {
  if (!(el = this.canvas())) return;

  var el, rect = el.getBoundingClientRect(),
      origin = this._origin,
      itemBounds = item.bounds,
      x = itemBounds.x1 + origin[0] + rect.left,
      y = itemBounds.y1 + origin[1] + rect.top,
      w = itemBounds.width(),
      h = itemBounds.height();

  // translate coordinate for each parent group
  while (item.mark && (item = item.mark.group)) {
    x += item.x || 0;
    y += item.y || 0;
  }

  // return DOMRect-compatible bounding box
  return {
    x:      x,
    y:      y,
    width:  w,
    height: h,
    left:   x,
    top:    y,
    right:  x + w,
    bottom: y + h
  };
};


/***/ }),

/***/ "kJOv":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/toplevelprops.js ***!
  \***********************************************************/
/*! exports provided: extractCompositionLayout, normalizeAutoSize, extractTopLevelProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractCompositionLayout", function() { return extractCompositionLayout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeAutoSize", function() { return normalizeAutoSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTopLevelProperties", function() { return extractTopLevelProperties; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log */ "6ow0");



function extractCompositionLayout(layout) {
    var _a = layout || {}, _b = _a.align, align = _b === void 0 ? undefined : _b, _c = _a.center, center = _c === void 0 ? undefined : _c, _d = _a.bounds, bounds = _d === void 0 ? undefined : _d, _e = _a.spacing, spacing = _e === void 0 ? undefined : _e;
    return { align: align, bounds: bounds, center: center, spacing: spacing };
}
function _normalizeAutoSize(autosize) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(autosize) ? { type: autosize } : autosize || {};
}
function normalizeAutoSize(topLevelAutosize, configAutosize, isUnitOrLayer) {
    if (isUnitOrLayer === void 0) { isUnitOrLayer = true; }
    var autosize = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'pad' }, _normalizeAutoSize(configAutosize), _normalizeAutoSize(topLevelAutosize));
    if (autosize.type === 'fit') {
        if (!isUnitOrLayer) {
            _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].FIT_NON_SINGLE);
            autosize.type = 'pad';
        }
    }
    return autosize;
}
var TOP_LEVEL_PROPERTIES = [
    'background', 'padding', 'datasets'
    // We do not include "autosize" here as it is supported by only unit and layer specs and thus need to be normalized
];
function extractTopLevelProperties(t) {
    return TOP_LEVEL_PROPERTIES.reduce(function (o, p) {
        if (t && t[p] !== undefined) {
            o[p] = t[p];
        }
        return o;
    }, {});
}
//# sourceMappingURL=toplevelprops.js.map

/***/ }),

/***/ "kLXP":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/config.js ***!
  \*****************************************************************/
/*! exports provided: getAxisConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAxisConfig", function() { return getAxisConfig; });
function getAxisConfig(property, config, channel, orient, scaleType) {
    if (orient === void 0) { orient = ''; }
    // configTypes to loop, starting from higher precedence
    var configTypes = (scaleType === 'band' ? ['axisBand'] : []).concat([
        channel === 'x' ? 'axisX' : 'axisY',
        'axis' + orient.substr(0, 1).toUpperCase() + orient.substr(1),
        'axis'
    ]);
    for (var _i = 0, configTypes_1 = configTypes; _i < configTypes_1.length; _i++) {
        var configType = configTypes_1[_i];
        if (config[configType] && config[configType][property] !== undefined) {
            return config[configType][property];
        }
    }
    return undefined;
}
//# sourceMappingURL=config.js.map

/***/ }),

/***/ "kNdx":
/*!**************************************************!*\
  !*** ./node_modules/vega-transforms/src/Fold.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Fold; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Folds one more tuple fields into multiple tuples in which the field
 * name and values are available under new 'key' and 'value' fields.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.fields - An array of field accessors
 *   for the tuple fields that should be folded.
 * @param {Array<string>} [params.as] - Output field names for folded key
 *   and value fields, defaults to ['key', 'value'].
 */
function Fold(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

Fold.Definition = {
  "type": "Fold",
  "metadata": {"generates": true},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["key", "value"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Fold, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      fields = _.fields,
      fnames = fields.map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]),
      as = _.as || ['key', 'value'],
      k = as[0],
      v = as[1],
      n = fields.length;

  out.rem = this.value;

  pulse.visit(pulse.SOURCE, function(t) {
    for (var i=0, d; i<n; ++i) {
      d = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["derive"])(t);
      d[k] = fnames[i];
      d[v] = fields[i](t);
      out.add.push(d);
    }
  });

  this.value = out.source = out.add;
  return out.modifies(as);
};


/***/ }),

/***/ "kOmo":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/parse.js ***!
  \*****************************************************************/
/*! exports provided: parseScale, parseScaleCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScale", function() { return parseScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleCore", function() { return parseScaleCore; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "MqRG");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../resolve */ "aZSk");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../split */ "cq+n");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component */ "scKy");
/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./domain */ "2wP2");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./properties */ "21jt");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./range */ "NEhT");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./type */ "aabZ");














function parseScale(model) {
    parseScaleCore(model);
    Object(_domain__WEBPACK_IMPORTED_MODULE_10__["parseScaleDomain"])(model);
    for (var _i = 0, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1 = _scale__WEBPACK_IMPORTED_MODULE_3__["NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES"]; _i < NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1.length; _i++) {
        var prop = NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1[_i];
        Object(_properties__WEBPACK_IMPORTED_MODULE_11__["parseScaleProperty"])(model, prop);
    }
    // range depends on zero
    Object(_range__WEBPACK_IMPORTED_MODULE_12__["parseScaleRange"])(model);
}
function parseScaleCore(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model)) {
        model.component.scales = parseUnitScaleCore(model);
    }
    else {
        model.component.scales = parseNonUnitScaleCore(model);
    }
}
/**
 * Parse scales for all channels of a model.
 */
function parseUnitScaleCore(model) {
    var encoding = model.encoding, config = model.config, mark = model.mark;
    return _channel__WEBPACK_IMPORTED_MODULE_0__["SCALE_CHANNELS"].reduce(function (scaleComponents, channel) {
        var fieldDef;
        var specifiedScale = undefined;
        var channelDef = encoding[channel];
        // Don't generate scale for shape of geoshape
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef) && mark === _mark__WEBPACK_IMPORTED_MODULE_2__["GEOSHAPE"] &&
            channel === _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"] && channelDef.type === _type__WEBPACK_IMPORTED_MODULE_4__["GEOJSON"]) {
            return scaleComponents;
        }
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef)) {
            fieldDef = channelDef;
            specifiedScale = channelDef.scale;
        }
        else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["hasConditionalFieldDef"])(channelDef)) {
            fieldDef = channelDef.condition;
            specifiedScale = channelDef.condition['scale']; // We use ['scale'] since we know that channel here has scale for sure
        }
        else if (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["X"]) {
            fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["getFieldDef"])(encoding.x2);
        }
        else if (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]) {
            fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["getFieldDef"])(encoding.y2);
        }
        if (fieldDef && specifiedScale !== null && specifiedScale !== false) {
            specifiedScale = specifiedScale || {};
            var specifiedScaleType = specifiedScale.type;
            var sType = Object(_type__WEBPACK_IMPORTED_MODULE_13__["scaleType"])(specifiedScale.type, channel, fieldDef, mark, config.scale);
            scaleComponents[channel] = new _component__WEBPACK_IMPORTED_MODULE_9__["ScaleComponent"](model.scaleName(channel + '', true), { value: sType, explicit: specifiedScaleType === sType });
        }
        return scaleComponents;
    }, {});
}
var scaleTypeTieBreaker = Object(_split__WEBPACK_IMPORTED_MODULE_8__["tieBreakByComparing"])(function (st1, st2) { return (Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypePrecedence"])(st1) - Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypePrecedence"])(st2)); });
function parseNonUnitScaleCore(model) {
    var scaleComponents = model.component.scales = {};
    var scaleTypeWithExplicitIndex = {};
    var resolve = model.component.resolve;
    var _loop_1 = function (child) {
        parseScaleCore(child);
        // Instead of always merging right away -- check if it is compatible to merge first!
        Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(child.component.scales).forEach(function (channel) {
            // if resolve is undefined, set default first
            resolve.scale[channel] = resolve.scale[channel] || Object(_resolve__WEBPACK_IMPORTED_MODULE_7__["defaultScaleResolve"])(channel, model);
            if (resolve.scale[channel] === 'shared') {
                var explicitScaleType = scaleTypeWithExplicitIndex[channel];
                var childScaleType = child.component.scales[channel].getWithExplicit('type');
                if (explicitScaleType) {
                    if (Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleCompatible"])(explicitScaleType.value, childScaleType.value)) {
                        // merge scale component if type are compatible
                        scaleTypeWithExplicitIndex[channel] = Object(_split__WEBPACK_IMPORTED_MODULE_8__["mergeValuesWithExplicit"])(explicitScaleType, childScaleType, 'type', 'scale', scaleTypeTieBreaker);
                    }
                    else {
                        // Otherwise, update conflicting channel to be independent
                        resolve.scale[channel] = 'independent';
                        // Remove from the index so they don't get merged
                        delete scaleTypeWithExplicitIndex[channel];
                    }
                }
                else {
                    scaleTypeWithExplicitIndex[channel] = childScaleType;
                }
            }
        });
    };
    // Parse each child scale and determine if a particular channel can be merged.
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        _loop_1(child);
    }
    // Merge each channel listed in the index
    Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(scaleTypeWithExplicitIndex).forEach(function (channel) {
        // Create new merged scale component
        var name = model.scaleName(channel, true);
        var typeWithExplicit = scaleTypeWithExplicitIndex[channel];
        scaleComponents[channel] = new _component__WEBPACK_IMPORTED_MODULE_9__["ScaleComponent"](name, typeWithExplicit);
        // rename each child and mark them as merged
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childScale = child.component.scales[channel];
            if (childScale) {
                child.renameScale(childScale.get('name'), name);
                childScale.merged = true;
            }
        }
    });
    return scaleComponents;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "kUhs":
/*!************************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/translate.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "8Sdu");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../channel */ "5g++");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interval */ "aHhC");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../selection */ "3eK9");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scales */ "7xeG");





var ANCHOR = '_translate_anchor';
var DELTA = '_translate_delta';
var translate = {
    has: function (selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.translate;
    },
    signals: function (model, selCmpt, signals) {
        var name = selCmpt.name;
        var hasScales = _scales__WEBPACK_IMPORTED_MODULE_4__["default"].has(selCmpt);
        var anchor = name + ANCHOR;
        var _a = Object(_selection__WEBPACK_IMPORTED_MODULE_3__["positionalProjections"])(selCmpt), x = _a.x, y = _a.y;
        var events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])(selCmpt.translate, 'scope');
        if (!hasScales) {
            events = events.map(function (e) { return (e.between[0].markname = name + _interval__WEBPACK_IMPORTED_MODULE_2__["BRUSH"], e); });
        }
        signals.push({
            name: anchor,
            value: {},
            on: [{
                    events: events.map(function (e) { return e.between[0]; }),
                    update: '{x: x(unit), y: y(unit)' +
                        (x !== null ? ', extent_x: ' + (hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_4__["domain"])(model, _channel__WEBPACK_IMPORTED_MODULE_1__["X"]) :
                            "slice(" + Object(_selection__WEBPACK_IMPORTED_MODULE_3__["channelSignalName"])(selCmpt, 'x', 'visual') + ")") : '') +
                        (y !== null ? ', extent_y: ' + (hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_4__["domain"])(model, _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]) :
                            "slice(" + Object(_selection__WEBPACK_IMPORTED_MODULE_3__["channelSignalName"])(selCmpt, 'y', 'visual') + ")") : '') + '}'
                }]
        }, {
            name: name + DELTA,
            value: {},
            on: [{
                    events: events,
                    update: "{x: " + anchor + ".x - x(unit), y: " + anchor + ".y - y(unit)}"
                }]
        });
        if (x !== null) {
            onDelta(model, selCmpt, _channel__WEBPACK_IMPORTED_MODULE_1__["X"], 'width', signals);
        }
        if (y !== null) {
            onDelta(model, selCmpt, _channel__WEBPACK_IMPORTED_MODULE_1__["Y"], 'height', signals);
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (translate);
function onDelta(model, selCmpt, channel, size, signals) {
    var name = selCmpt.name;
    var hasScales = _scales__WEBPACK_IMPORTED_MODULE_4__["default"].has(selCmpt);
    var signal = signals.filter(function (s) {
        return s.name === Object(_selection__WEBPACK_IMPORTED_MODULE_3__["channelSignalName"])(selCmpt, channel, hasScales ? 'data' : 'visual');
    })[0];
    var anchor = name + ANCHOR;
    var delta = name + DELTA;
    var sizeSg = model.getSizeSignalRef(size).signal;
    var scaleCmpt = model.getScaleComponent(channel);
    var scaleType = scaleCmpt.get('type');
    var sign = hasScales && channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] ? '-' : ''; // Invert delta when panning x-scales.
    var extent = anchor + ".extent_" + channel;
    var offset = "" + sign + delta + "." + channel + " / " + (hasScales ? "" + sizeSg : "span(" + extent + ")");
    var panFn = !hasScales ? 'panLinear' :
        scaleType === 'log' ? 'panLog' :
            scaleType === 'pow' ? 'panPow' : 'panLinear';
    var update = panFn + "(" + extent + ", " + offset +
        (hasScales && scaleType === 'pow' ? ", " + (scaleCmpt.get('exponent') || 1) : '') + ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : "clampRange(" + update + ", 0, " + sizeSg + ")"
    });
}
//# sourceMappingURL=translate.js.map

/***/ }),

/***/ "kUw3":
/*!*************************************************!*\
  !*** ./node_modules/vega-runtime/src/stream.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "cf9k");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Parse an event stream specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var filter = spec.filter != null ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["eventExpression"])(spec.filter, ctx) : undefined,
      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,
      args;

  if (spec.source) {
    stream = ctx.events(spec.source, spec.type, filter);
  }
  else if (spec.merge) {
    args = spec.merge.map(ctx.get.bind(ctx));
    stream = args[0].merge.apply(args[0], args.slice(1));
  }

  if (spec.between) {
    args = spec.between.map(ctx.get.bind(ctx));
    stream = stream.between(args[0], args[1]);
  }

  if (spec.filter) {
    stream = stream.filter(filter);
  }

  if (spec.throttle != null) {
    stream = stream.throttle(+spec.throttle);
  }

  if (spec.debounce != null) {
    stream = stream.debounce(+spec.debounce);
  }

  if (stream == null) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Invalid stream definition: ' + JSON.stringify(spec));
  }

  if (spec.consume) stream.consume(true);

  ctx.stream(spec, stream);
});


/***/ }),

/***/ "kakv":
/*!******************************************!*\
  !*** ./node_modules/vega-scale/index.js ***!
  \******************************************/
/*! exports provided: bandSpace, scale, interpolate, interpolateRange, scaleFraction, scheme, schemeDiscretized, timeInterval, utcInterval, scaleImplicit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bandSpace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bandSpace */ "+JMV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bandSpace", function() { return _src_bandSpace__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_scales__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/scales */ "x5u8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _src_scales__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/interpolate */ "R6hj");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolateRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleFraction", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_2__["scaleFraction"]; });

/* harmony import */ var _src_schemes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/schemes */ "cjdR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return _src_schemes__WEBPACK_IMPORTED_MODULE_3__["scheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDiscretized", function() { return _src_schemes__WEBPACK_IMPORTED_MODULE_3__["schemeDiscretized"]; });

/* harmony import */ var _src_timeInterval__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/timeInterval */ "6Zp8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _src_timeInterval__WEBPACK_IMPORTED_MODULE_4__["timeInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcInterval", function() { return _src_timeInterval__WEBPACK_IMPORTED_MODULE_4__["utcInterval"]; });

/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ "ziQ1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleImplicit"]; });









/***/ }),

/***/ "kj2a":
/*!********************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-quartz.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var markColor = '#ab5787';
var axisColor = '#979797';
var quartzTheme = {
    background: '#f9f9f9',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, size: 30 },
    axis: {
        domainColor: axisColor,
        domainWidth: 0.5,
        gridWidth: 0.2,
        labelColor: axisColor,
        tickColor: axisColor,
        tickWidth: 0.2,
        titleColor: axisColor,
    },
    axisBand: {
        grid: false,
    },
    axisX: {
        grid: true,
        tickSize: 10,
    },
    axisY: {
        domain: false,
        grid: true,
        tickSize: 0,
    },
    legend: {
        labelFontSize: 11,
        padding: 1,
        symbolSize: 30,
        symbolType: 'square',
    },
    range: {
        category: [
            '#ab5787',
            '#51b2e5',
            '#703c5c',
            '#168dd9',
            '#d190b6',
            '#00609f',
            '#d365ba',
            '#154866',
            '#666666',
            '#c4c4c4',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (quartzTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtcXVhcnR6LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLXF1YXJ0ei50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxJQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDNUIsSUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBRTVCLElBQU0sV0FBVyxHQUFXO0lBQzFCLFVBQVUsRUFBRSxTQUFTO0lBRXJCLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzNCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzVCLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtJQUVyQyxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsU0FBUztRQUN0QixXQUFXLEVBQUUsR0FBRztRQUNoQixTQUFTLEVBQUUsR0FBRztRQUNkLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFNBQVMsRUFBRSxHQUFHO1FBQ2QsVUFBVSxFQUFFLFNBQVM7S0FDdEI7SUFFRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsS0FBSztLQUNaO0lBRUQsS0FBSyxFQUFFO1FBQ0wsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsRUFBRTtLQUNiO0lBRUQsS0FBSyxFQUFFO1FBQ0wsTUFBTSxFQUFFLEtBQUs7UUFDYixJQUFJLEVBQUUsSUFBSTtRQUNWLFFBQVEsRUFBRSxDQUFDO0tBQ1o7SUFFRCxNQUFNLEVBQUU7UUFDTixhQUFhLEVBQUUsRUFBRTtRQUNqQixPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUU7WUFDUixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFdBQVcsQ0FBQyJ9

/***/ }),

/***/ "koaG":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/stream.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseStream; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




var Timer = 'timer';

function parseStream(stream, scope) {
  var method = stream.merge ? mergeStream
    : stream.stream ? nestedStream
    : stream.type ? eventStream
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid stream specification: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(stream));

  return method(stream, scope);
}

function eventSource(source) {
   return source === _util__WEBPACK_IMPORTED_MODULE_1__["Scope"] ? _util__WEBPACK_IMPORTED_MODULE_1__["View"] : (source || _util__WEBPACK_IMPORTED_MODULE_1__["View"]);
}

function mergeStream(stream, scope) {
  var list = stream.merge.map(function(s) {
    return parseStream(s, scope);
  });

  var entry = streamParameters({merge: list}, stream, scope);
  return scope.addStream(entry).id;
}

function nestedStream(stream, scope) {
  var id = parseStream(stream.stream, scope),
      entry = streamParameters({stream: id}, stream, scope);
  return scope.addStream(entry).id;
}

function eventStream(stream, scope) {
  var id, entry;

  if (stream.type === Timer) {
    id = scope.event(Timer, stream.throttle);
    stream = {between: stream.between, filter: stream.filter};
  } else {
    id = scope.event(eventSource(stream.source), stream.type);
  }

  entry = streamParameters({stream: id}, stream, scope);
  return Object.keys(entry).length === 1
    ? id
    : scope.addStream(entry).id;
}

function streamParameters(entry, stream, scope) {
  var param = stream.between;

  if (param) {
    if (param.length !== 2) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Stream "between" parameter must have 2 entries: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(stream));
    }
    entry.between = [
      parseStream(param[0], scope),
      parseStream(param[1], scope)
    ];
  }

  param = stream.filter ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(stream.filter) : [];
  if (stream.marktype || stream.markname || stream.markrole) {
    // add filter for mark type, name and/or role
    param.push(filterMark(stream.marktype, stream.markname, stream.markrole));
  }
  if (stream.source === _util__WEBPACK_IMPORTED_MODULE_1__["Scope"]) {
    // add filter to limit events from sub-scope only
    param.push('inScope(event.item)');
  }
  if (param.length) {
    entry.filter = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])('(' + param.join(')&&(') + ')').$expr;
  }

  if ((param = stream.throttle) != null) {
    entry.throttle = +param;
  }

  if ((param = stream.debounce) != null) {
    entry.debounce = +param;
  }

  if (stream.consume) {
    entry.consume = true;
  }

  return entry;
}

function filterMark(type, name, role) {
  var item = 'event.item';
  return item
    + (type && type !== '*' ? '&&' + item + '.mark.marktype===\'' + type + '\'' : '')
    + (role ? '&&' + item + '.mark.role===\'' + role + '\'' : '')
    + (name ? '&&' + item + '.mark.name===\'' + name + '\'' : '');
}


/***/ }),

/***/ "kygm":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/selection.js ***!
  \*******************************************************/
/*! exports provided: SELECTION_ID, defaultConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTION_ID", function() { return SELECTION_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
var SELECTION_ID = '_vgsid_';
var defaultConfig = {
    single: {
        on: 'click',
        fields: [SELECTION_ID],
        resolve: 'global',
        empty: 'all'
    },
    multi: {
        on: 'click',
        fields: [SELECTION_ID],
        toggle: 'event.shiftKey',
        resolve: 'global',
        empty: 'all'
    },
    interval: {
        on: '[mousedown, window:mouseup] > window:mousemove!',
        encodings: ['x', 'y'],
        translate: '[mousedown, window:mouseup] > window:mousemove!',
        zoom: 'wheel!',
        mark: { fill: '#333', fillOpacity: 0.125, stroke: 'white' },
        resolve: 'global'
    }
};
//# sourceMappingURL=selection.js.map

/***/ }),

/***/ "lW0u":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundContext.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return context; });
var bounds,
    tau = Math.PI * 2,
    halfPi = tau / 4,
    circleThreshold = tau - 1e-8;

function context(_) {
  bounds = _;
  return context;
}

function noop() {}

function add(x, y) { bounds.add(x, y); }

context.beginPath = noop;

context.closePath = noop;

context.moveTo = add;

context.lineTo = add;

context.rect = function(x, y, w, h) {
  add(x, y);
  add(x + w, y + h);
};

context.quadraticCurveTo = function(x1, y1, x2, y2) {
  add(x1, y1);
  add(x2, y2);
};

context.bezierCurveTo = function(x1, y1, x2, y2, x3, y3) {
  add(x1, y1);
  add(x2, y2);
  add(x3, y3);
};

context.arc = function(cx, cy, r, sa, ea, ccw) {
  if (Math.abs(ea - sa) > circleThreshold) {
    add(cx - r, cy - r);
    add(cx + r, cy + r);
    return;
  }

  var xmin = Infinity, xmax = -Infinity,
      ymin = Infinity, ymax = -Infinity,
      s, i, x, y;

  function update(a) {
    x = r * Math.cos(a);
    y = r * Math.sin(a);
    if (x < xmin) xmin = x;
    if (x > xmax) xmax = x;
    if (y < ymin) ymin = y;
    if (y > ymax) ymax = y;
  }

  // Sample end points and interior points aligned with 90 degrees
  update(sa);
  update(ea);

  if (ea !== sa) {
    sa = sa % tau; if (sa < 0) sa += tau;
    ea = ea % tau; if (ea < 0) ea += tau;

    if (ea < sa) {
      ccw = !ccw; // flip direction
      s = sa; sa = ea; ea = s; // swap end-points
    }

    if (ccw) {
      ea -= tau;
      s = sa - (sa % halfPi);
      for (i=0; i<4 && s>ea; ++i, s-=halfPi) update(s);
    } else {
      s = sa - (sa % halfPi) + halfPi;
      for (i=0; i<4 && s<ea; ++i, s=s+halfPi) update(s);
    }
  }

  add(cx + xmin, cy + ymin);
  add(cx + xmax, cy + ymax);
};


/***/ }),

/***/ "lXap":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/arrays.js ***!
  \*******************************************************************/
/*! exports provided: extent, inrange, clampRange, span */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return extent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inrange", function() { return inrange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clampRange", function() { return clampRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "span", function() { return span; });
/**
 * Return an array with minimum and maximum values, in the
 * form [min, max]. Ignores null, undefined, and NaN values.
 */
function extent(array) {
  var i = 0, n, v, min, max;

  if (array && (n = array.length)) {
    // find first valid value
    for (v = array[i]; v == null || v !== v; v = array[++i]);
    min = max = v;

    // visit all other values
    for (; i<n; ++i) {
      v = array[i];
      // skip null/undefined; NaN will fail all comparisons
      if (v != null) {
        if (v < min) min = v;
        if (v > max) max = v;
      }
    }
  }

  return [min, max];
}

/**
 * Predicate that returns true if the value lies within the span
 * of the given range. The left and right flags control the use
 * of inclusive (true) or exclusive (false) comparisons.
 */
function inrange(value, range, left, right) {
  var r0 = range[0], r1 = range[range.length-1], t;
  if (r0 > r1) {
    t = r0;
    r0 = r1;
    r1 = t;
  }
  left = left === undefined || left;
  right = right === undefined || right;

  return (left ? r0 <= value : r0 < value) &&
    (right ? value <= r1 : value < r1);
}

/**
 * Span-preserving range clamp. If the span of the input range is less
 * than (max - min) and an endpoint exceeds either the min or max value,
 * the range is translated such that the span is preserved and one
 * endpoint touches the boundary of the min/max range.
 * If the span exceeds (max - min), the range [min, max] is returned.
 */
function clampRange(range, min, max) {
  var lo = range[0],
      hi = range[1],
      span;

  if (hi < lo) {
    span = hi;
    hi = lo;
    lo = span;
  }
  span = hi - lo;

  return span >= (max - min)
    ? [min, max]
    : [
        (lo = Math.min(Math.max(lo, min), max - span)),
        lo + span
      ];
}

/**
 * Return the numerical span of an array: the difference between
 * the last and first values.
 */
function span(array) {
  return (array[array.length-1] - array[0]) || 0;
}


/***/ }),

/***/ "lYE4":
/*!*******************************************!*\
  !*** ./node_modules/vega-util/src/pad.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repeat */ "7Ikf");


/* harmony default export */ __webpack_exports__["default"] = (function(str, length, padchar, align) {
  var c = padchar || ' ',
      s = str + '',
      n = length - s.length;

  return n <= 0 ? s
    : align === 'left' ? Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, n) + s
    : align === 'center' ? Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, ~~(n/2)) + s + Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, Math.ceil(n/2))
    : s + Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, n);
});


/***/ }),

/***/ "ll1p":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/common.js ***!
  \************************************************************/
/*! exports provided: applyConfig, applyMarkConfig, getStyles, getMarkConfig, formatSignalRef, getSpecifiedOrDefaultValue, numberFormat, numberFormatExpr, binFormatExpression, timeFormatExpression, sortParams, mergeTitleFieldDefs, mergeTitle, mergeTitleComponent, binRequiresRange, guideEncodeEntry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyConfig", function() { return applyConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMarkConfig", function() { return applyMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkConfig", function() { return getMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatSignalRef", function() { return formatSignalRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSpecifiedOrDefaultValue", function() { return getSpecifiedOrDefaultValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberFormat", function() { return numberFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberFormatExpr", function() { return numberFormatExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binFormatExpression", function() { return binFormatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormatExpression", function() { return timeFormatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortParams", function() { return sortParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitleFieldDefs", function() { return mergeTitleFieldDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitle", function() { return mergeTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitleComponent", function() { return mergeTitleComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binRequiresRange", function() { return binRequiresRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guideEncodeEntry", function() { return guideEncodeEntry; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scale */ "50Px");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../timeunit */ "f7J+");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _mark_mixins__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mark/mixins */ "NITR");









function applyConfig(e, config, // TODO(#1842): consolidate MarkConfig | TextConfig?
propsList) {
    for (var _i = 0, propsList_1 = propsList; _i < propsList_1.length; _i++) {
        var property = propsList_1[_i];
        var value = config[property];
        if (value !== undefined) {
            e[property] = { value: value };
        }
    }
    return e;
}
function applyMarkConfig(e, model, propsList) {
    for (var _i = 0, propsList_2 = propsList; _i < propsList_2.length; _i++) {
        var property = propsList_2[_i];
        var value = getMarkConfig(property, model.markDef, model.config);
        if (value !== undefined) {
            e[property] = { value: value };
        }
    }
    return e;
}
function getStyles(mark) {
    return [].concat(mark.type, mark.style || []);
}
/**
 * Return property value from style or mark specific config property if exists.
 * Otherwise, return general mark specific config.
 */
function getMarkConfig(prop, mark, config) {
    // By default, read from mark config first!
    var value = config.mark[prop];
    // Then read mark specific config, which has higher precedence
    var markSpecificConfig = config[mark.type];
    if (markSpecificConfig[prop] !== undefined) {
        value = markSpecificConfig[prop];
    }
    // Then read style config, which has even higher precedence.
    var styles = getStyles(mark);
    for (var _i = 0, styles_1 = styles; _i < styles_1.length; _i++) {
        var style = styles_1[_i];
        var styleConfig = config.style[style];
        // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style
        // However here we also check if it is defined, so it is okay to cast here
        var p = prop;
        if (styleConfig && styleConfig[p] !== undefined) {
            value = styleConfig[p];
        }
    }
    return value;
}
function formatSignalRef(fieldDef, specifiedFormat, expr, config) {
    var format = numberFormat(fieldDef, specifiedFormat, config);
    if (fieldDef.bin) {
        var startField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: expr });
        var endField = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: expr, binSuffix: 'end' });
        return {
            signal: binFormatExpression(startField, endField, format, config)
        };
    }
    else if (fieldDef.type === 'quantitative') {
        return {
            signal: "" + formatExpr(Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: expr, binSuffix: 'range' }), format)
        };
    }
    else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isTimeFieldDef"])(fieldDef)) {
        var isUTCScale = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isScaleFieldDef"])(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === _scale__WEBPACK_IMPORTED_MODULE_4__["ScaleType"].UTC;
        return {
            signal: timeFormatExpression(Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: expr }), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale, true)
        };
    }
    else {
        return {
            signal: "''+" + Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: expr })
        };
    }
}
function getSpecifiedOrDefaultValue(specifiedValue, defaultValue) {
    if (specifiedValue !== undefined) {
        return specifiedValue;
    }
    return defaultValue;
}
/**
 * Returns number format for a fieldDef
 *
 * @param format explicitly specified format
 */
function numberFormat(fieldDef, specifiedFormat, config) {
    if (fieldDef.type === _type__WEBPACK_IMPORTED_MODULE_6__["QUANTITATIVE"]) {
        // add number format for quantitative type only
        // Specified format in axis/legend has higher precedence than fieldDef.format
        if (specifiedFormat) {
            return specifiedFormat;
        }
        // TODO: need to make this work correctly for numeric ordinal / nominal type
        return config.numberFormat;
    }
    return undefined;
}
function formatExpr(field, format) {
    return "format(" + field + ", \"" + (format || '') + "\")";
}
function numberFormatExpr(field, specifiedFormat, config) {
    return formatExpr(field, specifiedFormat || config.numberFormat);
}
function binFormatExpression(startField, endField, format, config) {
    return startField + " === null || isNaN(" + startField + ") ? \"null\" : " + numberFormatExpr(startField, format, config) + " + \" - \" + " + numberFormatExpr(endField, format, config);
}
/**
 * Returns the time expression used for axis/legend labels or text mark for a temporal field
 */
function timeFormatExpression(field, timeUnit, format, shortTimeLabels, timeFormatConfig, isUTCScale, alwaysReturn) {
    if (alwaysReturn === void 0) { alwaysReturn = false; }
    if (!timeUnit || format) {
        // If there is not time unit, or if user explicitly specify format for axis/legend/text.
        format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.
        if (format || alwaysReturn) {
            return (isUTCScale ? 'utc' : 'time') + "Format(" + field + ", '" + format + "')";
        }
        else {
            return undefined;
        }
    }
    else {
        return Object(_timeunit__WEBPACK_IMPORTED_MODULE_5__["formatExpression"])(timeUnit, field, shortTimeLabels, isUTCScale);
    }
}
/**
 * Return Vega sort parameters (tuple of field and order).
 */
function sortParams(orderDef, fieldRefOption) {
    return (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(orderDef) ? orderDef : [orderDef]).reduce(function (s, orderChannelDef) {
        s.field.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(orderChannelDef, fieldRefOption));
        s.order.push(orderChannelDef.sort || 'ascending');
        return s;
    }, { field: [], order: [] });
}
function mergeTitleFieldDefs(f1, f2) {
    var merged = f1.slice();
    f2.forEach(function (fdToMerge) {
        for (var _i = 0, merged_1 = merged; _i < merged_1.length; _i++) {
            var fieldDef1 = merged_1[_i];
            // If already exists, no need to append to merged array
            if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["stringify"])(fieldDef1) === Object(_util__WEBPACK_IMPORTED_MODULE_7__["stringify"])(fdToMerge)) {
                return;
            }
        }
        merged.push(fdToMerge);
    });
    return merged;
}
function mergeTitle(title1, title2) {
    return title1 === title2 ?
        title1 : // if title is the same just use one of them
        title1 + ', ' + title2; // join title with comma if different
}
function mergeTitleComponent(v1, v2) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(v1.value) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(v2.value)) {
        return {
            explicit: v1.explicit,
            value: mergeTitleFieldDefs(v1.value, v2.value)
        };
    }
    else if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(v1.value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(v2.value)) {
        return {
            explicit: v1.explicit,
            value: mergeTitle(v1.value, v2.value)
        };
    }
    /* istanbul ignore next: Condition should not happen -- only for warning in development. */
    throw new Error('It should never reach here');
}
/**
 * Checks whether a fieldDef for a particular channel requires a computed bin range.
 */
function binRequiresRange(fieldDef, channel) {
    if (!fieldDef.bin) {
        console.warn('Only use this method with binned field defs');
        return false;
    }
    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.
    // We could check whether the axis or legend exists (not disabled) but that seems overkill.
    return Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isScaleChannel"])(channel) && Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['ordinal', 'nominal'], fieldDef.type);
}
function guideEncodeEntry(encoding, model) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_7__["keys"])(encoding).reduce(function (encode, channel) {
        var valueDef = encoding[channel];
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, encode, Object(_mark_mixins__WEBPACK_IMPORTED_MODULE_8__["wrapCondition"])(model, valueDef, channel, function (x) { return ({ value: x.value }); }));
    }, {});
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "lp5H":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/assemble.js ***!
  \*******************************************************************/
/*! exports provided: assembleAxis, assembleAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleAxis", function() { return assembleAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleAxes", function() { return assembleAxes; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../axis */ "0iGg");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "Hc3/");





function assembleTitle(title, config) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(title)) {
        return title.map(function (fieldDef) { return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["title"])(fieldDef, config); }).join(', ');
    }
    return title;
}
function assembleAxis(axisCmpt, kind, config, opt) {
    if (opt === void 0) { opt = { header: false }; }
    var _a = axisCmpt.combine(), orient = _a.orient, scale = _a.scale, title = _a.title, zindex = _a.zindex, axis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["orient", "scale", "title", "zindex"]);
    // Remove properties that are not valid for this kind of axis
    Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(axis).forEach(function (key) {
        var propType = _axis__WEBPACK_IMPORTED_MODULE_2__["AXIS_PROPERTY_TYPE"][key];
        if (propType && propType !== kind && propType !== 'both') {
            delete axis[key];
        }
    });
    if (kind === 'grid') {
        if (!axis.grid) {
            return undefined;
        }
        // Remove unnecessary encode block
        if (axis.encode) {
            // Only need to keep encode block for grid
            var grid = axis.encode.grid;
            axis.encode = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (grid ? { grid: grid } : {}));
            if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(axis.encode).length === 0) {
                delete axis.encode;
            }
        }
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ scale: scale,
            orient: orient }, axis, { domain: false, labels: false, 
            // Always set min/maxExtent to 0 to ensure that `config.axis*.minExtent` and `config.axis*.maxExtent`
            // would not affect gridAxis
            maxExtent: 0, minExtent: 0, ticks: false, zindex: zindex !== undefined ? zindex : 0 // put grid behind marks by default
         });
    }
    else { // kind === 'main'
        if (!opt.header && axisCmpt.mainExtracted) {
            // if mainExtracted has been extracted to a separate facet
            return undefined;
        }
        // Remove unnecessary encode block
        if (axis.encode) {
            for (var _i = 0, AXIS_PARTS_1 = _axis__WEBPACK_IMPORTED_MODULE_2__["AXIS_PARTS"]; _i < AXIS_PARTS_1.length; _i++) {
                var part = AXIS_PARTS_1[_i];
                if (!axisCmpt.hasAxisPart(part)) {
                    delete axis.encode[part];
                }
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(axis.encode).length === 0) {
                delete axis.encode;
            }
        }
        var titleString = assembleTitle(title, config);
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ scale: scale,
            orient: orient, grid: false }, (titleString ? { title: titleString } : {}), axis, { zindex: zindex !== undefined ? zindex : 1 // put axis line above marks by default
         });
    }
}
function assembleAxes(axisComponents, config) {
    var _a = axisComponents.x, x = _a === void 0 ? [] : _a, _b = axisComponents.y, y = _b === void 0 ? [] : _b;
    return x.map(function (a) { return assembleAxis(a, 'main', config); }).concat(x.map(function (a) { return assembleAxis(a, 'grid', config); }), y.map(function (a) { return assembleAxis(a, 'main', config); }), y.map(function (a) { return assembleAxis(a, 'grid', config); })).filter(function (a) { return a; }); // filter undefined
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "ltAm":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/data.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseData; });
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ "LX4U");
/* harmony import */ var _trigger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trigger */ "u/Z8");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






function parseData(data, scope) {
  var transforms = [];

  if (data.transform) {
    data.transform.forEach(function(tx) {
      transforms.push(Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(tx, scope));
    });
  }

  if (data.on) {
    data.on.forEach(function(on) {
      Object(_trigger__WEBPACK_IMPORTED_MODULE_1__["default"])(on, scope, data.name);
    });
  }

  scope.addDataPipeline(data.name, analyze(data, scope, transforms));
}

/**
 * Analyze a data pipeline, add needed operators.
 */
function analyze(data, scope, ops) {
  // POSSIBLE TODOs:
  // - error checking for treesource on tree operators (BUT what if tree is upstream?)
  // - this is local analysis, perhaps some tasks better for global analysis...

  var output = [],
      source = null,
      modify = false,
      generate = false,
      upstream, i, n, t, m;

  if (data.values) {
    // hard-wired input data set
    output.push(source = collect({
      $ingest: data.values,
      $format: data.format
    }));
  } else if (data.url) {
    // load data from external source
    // if either url or format has signal, use dynamic loader
    // otherwise, request load upon dataflow init
    source = (Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.url) || Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.format))
      ? {$load: Object(_util__WEBPACK_IMPORTED_MODULE_2__["ref"])(scope.add(load(scope, data, source)))}
      : {$request: data.url, $format: data.format};
    output.push(source = collect(source));
  } else if (data.source) {
    // derives from one or more other data sets
    source = upstream = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(data.source).map(function(d) {
      return Object(_util__WEBPACK_IMPORTED_MODULE_2__["ref"])(scope.getData(d).output);
    });
    output.push(null); // populate later
  }

  // scan data transforms, add collectors as needed
  for (i=0, n=ops.length; i<n; ++i) {
    t = ops[i];
    m = t.metadata;

    if (!source && !m.source) {
      output.push(source = collect());
    }
    output.push(t);

    if (m.generates) generate = true;
    if (m.modifies && !generate) modify = true;

    if (m.source) source = t;
    else if (m.changes) source = null;
  }

  if (upstream) {
    n = upstream.length - 1;
    output[0] = Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Relay"])({
      derive: modify,
      pulse: n ? upstream : upstream[0]
    });
    if (modify || n) {
      // collect derived and multi-pulse tuples
      output.splice(1, 0, collect());
    }
  }

  if (!source) output.push(collect());
  output.push(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Sieve"])({}));
  return output;
}

function collect(values) {
  var s = Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Collect"])({}, values);
  s.metadata = {source: true};
  return s;
}

function load(scope, data) {
  return Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Load"])({
    url:    scope.property(data.url),
    format: scope.objectProperty(data.format)
  });
}


/***/ }),

/***/ "lz4/":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/CanvasRenderer.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CanvasRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "KHmK");
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bounds */ "wOpL");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/index */ "Mi2v");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/dom */ "k9GY");
/* harmony import */ var _util_canvas_clip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/canvas/clip */ "5vJq");
/* harmony import */ var _util_canvas_resize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/canvas/resize */ "U3M5");
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-canvas */ "4Usi");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-util */ "J29t");










function CanvasRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);
  this._redraw = false;
  this._dirty = new _Bounds__WEBPACK_IMPORTED_MODULE_1__["default"]();
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_7__["inherits"])(CanvasRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]),
    base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype,
    tempBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_1__["default"]();

prototype.initialize = function(el, width, height, origin, scaleFactor) {
  this._canvas = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_6__["canvas"])(1, 1); // instantiate a small canvas
  if (el) {
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, 0).appendChild(this._canvas);
    this._canvas.setAttribute('class', 'marks');
  }
  // this method will invoke resize to size the canvas appropriately
  return base.initialize.call(this, el, width, height, origin, scaleFactor);
};

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);
  Object(_util_canvas_resize__WEBPACK_IMPORTED_MODULE_5__["default"])(this._canvas, this._width, this._height, this._origin, this._scale);
  this._redraw = true;
  return this;
};

prototype.canvas = function() {
  return this._canvas;
};

prototype.context = function() {
  return this._canvas ? this._canvas.getContext('2d') : null;
};

prototype.dirty = function(item) {
  var b = translate(item.bounds, item.mark.group);
  this._dirty.union(b);
};

function clipToBounds(g, b, origin) {
  // expand bounds by 1 pixel, then round to pixel boundaries
  b.expand(1).round();

  // to avoid artifacts translate if origin has fractional pixels
  b.translate(-(origin[0] % 1), -(origin[1] % 1));

  // set clipping path
  g.beginPath();
  g.rect(b.x1, b.y1, b.width(), b.height());
  g.clip();

  return b;
}

function translate(bounds, group) {
  if (group == null) return bounds;
  var b = tempBounds.clear().union(bounds);
  for (; group != null; group = group.mark.group) {
    b.translate(group.x || 0, group.y || 0);
  }
  return b;
}

prototype._render = function(scene) {
  var g = this.context(),
      o = this._origin,
      w = this._width,
      h = this._height,
      b = this._dirty;

  // setup
  g.save();
  if (this._redraw || b.empty()) {
    this._redraw = false;
    b = null;
  } else {
    b = clipToBounds(g, b, o);
  }

  this.clear(-o[0], -o[1], w, h);

  // render
  this.draw(g, scene, b);

  // takedown
  g.restore();

  this._dirty.clear();
  return this;
};

prototype.draw = function(ctx, scene, bounds) {
  var mark = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][scene.marktype];
  if (scene.clip) Object(_util_canvas_clip__WEBPACK_IMPORTED_MODULE_4__["default"])(ctx, scene);
  mark.draw.call(this, ctx, scene, bounds);
  if (scene.clip) ctx.restore();
};

prototype.clear = function(x, y, w, h) {
  var g = this.context();
  g.clearRect(x, y, w, h);
  if (this._bgcolor != null) {
    g.fillStyle = this._bgcolor;
    g.fillRect(x, y, w, h);
  }
};


/***/ }),

/***/ "mBE9":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/legend.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/constants */ "Z42V");
/* harmony import */ var _guides_legend_gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/legend-gradient */ "PJcO");
/* harmony import */ var _guides_legend_gradient_discrete__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/legend-gradient-discrete */ "49vs");
/* harmony import */ var _guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guides/legend-gradient-labels */ "Px89");
/* harmony import */ var _guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./guides/legend-symbol-groups */ "DuFz");
/* harmony import */ var _guides_legend_title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guides/legend-title */ "hG+Y");
/* harmony import */ var _guides_guide_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guides/guide-group */ "PNr2");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guides/guide-util */ "T/Dk");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mark */ "dkbZ");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scale */ "FvSR");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./encode/encode-util */ "PkT2");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util */ "+JJI");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../transforms */ "ZQwF");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-util */ "J29t");

















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = scope.config.legend,
      encode = spec.encode || {},
      legendEncode = encode.legend || {},
      name = legendEncode.name || undefined,
      interactive = legendEncode.interactive,
      style = legendEncode.style,
      entryEncode, entryLayout, params, children,
      type, datum, dataRef, entryRef, group;

  // resolve 'canonical' scale name
  var scale = _guides_constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].reduce(function(a, b) { return a || spec[b]; }, 0);
  if (!scale) Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Missing valid scale for legend.');

  // resolve legend type (symbol, gradient, or discrete gradient)
  type = legendType(spec, scope.scaleType(scale));

  // single-element data source for legend group
  datum = {
    orient: Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('orient', spec, config),
    title:  spec.title != null,
    type:   type
  };
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_13__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_14__["Collect"])(null, [datum])));

  // encoding properties for legend group
  legendEncode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["extendEncode"])(
    buildLegendEncode(spec, config),legendEncode, _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Skip"]
  );

  // encoding properties for legend entry sub-group
  entryEncode = {enter: {x: {value: 0}, y: {value: 0}}};

  // data source for legend values
  entryRef = Object(_util__WEBPACK_IMPORTED_MODULE_13__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_14__["LegendEntries"])(params = {
    type:   type,
    scale:  scope.scaleRef(scale),
    count:  scope.objectProperty(spec.tickCount),
    values: scope.objectProperty(spec.values),
    formatSpecifier: scope.property(spec.format)
  })));

  // continuous gradient legend
  if (type === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"]) {
    children = [
      Object(_guides_legend_gradient__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, scale, config, encode.gradient),
      Object(_guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.labels, entryRef)
    ];
    // adjust default tick count based on the gradient length
    params.count = params.count || scope.signalRef(
      'max(2,2*floor((' + Object(_util__WEBPACK_IMPORTED_MODULE_13__["deref"])(Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["gradientLength"])(spec, config)) + ')/100))'
    );
  }

  // discrete gradient legend
  else if (type === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]) {
    children = [
      Object(_guides_legend_gradient_discrete__WEBPACK_IMPORTED_MODULE_2__["default"])(spec, scale, config, encode.gradient, entryRef),
      Object(_guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.labels, entryRef)
    ];
  }

  // symbol legend
  else {
    // determine legend symbol group layout
    entryLayout = Object(_guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__["legendSymbolLayout"])(spec, config);
    children = [
      Object(_guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, config, encode, entryRef, Object(_util__WEBPACK_IMPORTED_MODULE_13__["deref"])(entryLayout.columns))
    ];
    // pass symbol size information to legend entry generator
    params.size = sizeExpression(spec, scope, children[0].marks);
  }

  // generate legend marks
  children = [
    Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_11__["LegendEntryRole"], null, null, dataRef, interactive,
               entryEncode, children, entryLayout)
  ];

  // include legend title if defined
  if (datum.title) {
    children.push(Object(_guides_legend_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, config, encode.title, dataRef));
  }

  // build legend specification
  group = Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_11__["LegendRole"], style, name, dataRef, interactive, legendEncode, children);
  if (spec.zindex) group.zindex = spec.zindex;

  // parse legend specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_9__["default"])(group, scope);
});

function legendType(spec, scaleType) {
  var type = spec.type || _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"];

  if (!spec.type && scaleCount(spec) === 1 && (spec.fill || spec.stroke)) {
    type = Object(_scale__WEBPACK_IMPORTED_MODULE_10__["isContinuous"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"]
      : Object(_scale__WEBPACK_IMPORTED_MODULE_10__["isDiscretizing"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]
      : _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"];
  }

  return type !== _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"] ? type
    : Object(_scale__WEBPACK_IMPORTED_MODULE_10__["isDiscretizing"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]
    : _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"];
}

function scaleCount(spec) {
  return _guides_constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].reduce(function(count, type) {
    return count + (spec[type] ? 1 : 0);
  }, 0);
}

function buildLegendEncode(spec, config) {
  var encode = {enter: {}, update: {}};

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'offset',       Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('offset', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'padding',      Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('padding', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'titlePadding', Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('titlePadding', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'fill',         Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('fillColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'stroke',       Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('strokeColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'strokeWidth',  Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('strokeWidth', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'cornerRadius', Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])('cornerRadius', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_12__["addEncode"])(encode, 'strokeDash',   config.strokeDash);

  return encode;
}

function sizeExpression(spec, scope, marks) {
  var fontSize, size, strokeWidth, expr;

  strokeWidth = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getEncoding"])('strokeWidth', marks[0].encode);

  size = spec.size ? 'scale("' + spec.size + '",datum)'
    : Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getEncoding"])('size', marks[0].encode, scope);

  fontSize = getFontSize(marks[1].encode, scope, _guides_constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"]);

  expr = 'max('
    + 'ceil(sqrt(' + Object(_util__WEBPACK_IMPORTED_MODULE_13__["deref"])(size) + ')+' + Object(_util__WEBPACK_IMPORTED_MODULE_13__["deref"])(strokeWidth) + '),'
    + Object(_util__WEBPACK_IMPORTED_MODULE_13__["deref"])(fontSize)
    + ')';

  return Object(_expression__WEBPACK_IMPORTED_MODULE_8__["default"])(expr, scope);
}

function getFontSize(encode, scope, style) {
  return Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getEncoding"])('fontSize', encode) || Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getStyle"])('fontSize', scope, style);
}


/***/ }),

/***/ "mL5n":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Generate.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Generate; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Generates data tuples using a provided generator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Parameters): object} params.generator - A tuple generator
 *   function. This function is given the operator parameters as input.
 *   Changes to any additional parameters will not trigger re-calculation
 *   of previously generated tuples. Only future tuples are affected.
 * @param {number} params.size - The number of tuples to produce.
 */
function Generate(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Generate, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var data = this.value,
      out = pulse.fork(pulse.ALL),
      num = _.size - data.length,
      gen = _.generator,
      add, rem, t;

  if (num > 0) {
    // need more tuples, generate and add
    for (add=[]; --num >= 0;) {
      add.push(t = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(gen(_)));
      data.push(t);
    }
    out.add = out.add.length
      ? out.materialize(out.ADD).add.concat(add)
      : add;
  } else {
    // need fewer tuples, remove
    rem = data.slice(0, -num);
    out.rem = out.rem.length
      ? out.materialize(out.REM).rem.concat(rem)
      : rem;
    data = data.slice(-num);
  }

  out.source = this.value = data;
  return out;
};


/***/ }),

/***/ "mQYq":
/*!***********************************************************!*\
  !*** ./node_modules/vega-transforms/src/JoinAggregate.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return JoinAggregate; });
/* harmony import */ var _Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Aggregate */ "S/FN");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "pOXG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Extend input tuples with aggregate values.
 * Calcuates aggregate values and joins them with the input stream.
 * @constructor
 */
function JoinAggregate(params) {
  _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

JoinAggregate.Definition = {
  "type": "JoinAggregate",
  "metadata": {"modifies": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"] },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(JoinAggregate, _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.transform = function(_, pulse) {
  var aggr = this,
      mod = _.modified(),
      cells;

  // process all input tuples to calculate aggregates
  if (aggr.value && (mod || pulse.modified(aggr._inputs))) {
    cells = aggr.value = mod ? aggr.init(_) : {};
    pulse.visit(pulse.SOURCE, function(t) { aggr.add(t); });
  } else {
    cells = aggr.value = aggr.value || this.init(_);
    pulse.visit(pulse.REM, function(t) { aggr.rem(t); });
    pulse.visit(pulse.ADD, function(t) { aggr.add(t); });
  }

  // update aggregation cells
  aggr.changes();

  // write aggregate values to input tuples
  pulse.visit(pulse.SOURCE, function(t) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(t, cells[aggr.cellkey(t)].tuple);
  });

  return pulse.reflow(mod).modifies(this._outputs);
};

prototype.changes = function() {
  var adds = this._adds,
      mods = this._mods,
      i, n;

  for (i=0, n=this._alen; i<n; ++i) {
    this.celltuple(adds[i]);
    adds[i] = null; // for garbage collection
  }

  for (i=0, n=this._mlen; i<n; ++i) {
    this.celltuple(mods[i]);
    mods[i] = null; // for garbage collection
  }

  this._alen = this._mlen = 0; // reset list of active cells
};


/***/ }),

/***/ "mrSG":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "mw3f":
/*!******************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/json.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function isBuffer(_) {
  return (typeof Buffer === 'function' && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(Buffer.isBuffer))
    ? Buffer.isBuffer(_) : false;
}

/* harmony default export */ __webpack_exports__["default"] = (function(data, format) {
  var prop = (format && format.property) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["field"])(format.property) : vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"];
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(data) && !isBuffer(data)
    ? parseJSON(prop(data))
    : prop(JSON.parse(data));
});

function parseJSON(data, format) {
  return (format && format.copy)
    ? JSON.parse(JSON.stringify(data))
    : data;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ "tjlA").Buffer))

/***/ }),

/***/ "mwYA":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/draw.js ***!
  \**************************************************************/
/*! exports provided: drawAll, drawOne */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawAll", function() { return drawAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawOne", function() { return drawOne; });
/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fill */ "6rlB");
/* harmony import */ var _stroke__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stroke */ "QXae");
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../visit */ "TMLr");




function drawAll(path) {
  return function(context, scene, bounds) {
    Object(_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(scene, function(item) {
      if (!bounds || bounds.intersects(item.bounds)) {
        drawPath(path, context, item, item);
      }
    });
  };
}

function drawOne(path) {
  return function(context, scene, bounds) {
    if (scene.items.length && (!bounds || bounds.intersects(scene.bounds))) {
      drawPath(path, context, scene.items[0], scene.items);
    }
  };
}

function drawPath(path, context, item, items) {
  var opacity = item.opacity == null ? 1 : item.opacity;
  if (opacity === 0) return;

  if (path(context, items)) return;

  if (item.fill && Object(_fill__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, opacity)) {
    context.fill();
  }

  if (item.stroke && Object(_stroke__WEBPACK_IMPORTED_MODULE_1__["default"])(context, item, opacity)) {
    context.stroke();
  }
}


/***/ }),

/***/ "mzfd":
/*!***************************************************!*\
  !*** ./node_modules/vega-encode/src/AxisTicks.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AxisTicks; });
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks */ "Wj74");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Generates axis ticks for visualizing a spatial scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate ticks for.
 * @param {*} [params.count=10] - The approximate number of ticks, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {function(*):string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid d3 4.0 format specifier.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */
function AxisTicks(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(AxisTicks, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !_.modified()) {
    return pulse.StopPropagation;
  }

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      ticks = this.value,
      scale = _.scale,
      count = _.count == null ? (_.values ? _.values.length : 10) : Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickCount"])(scale, _.count),
      format = _.format || Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickFormat"])(scale, count, _.formatSpecifier),
      values = _.values ? Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["validTicks"])(scale, _.values, count) : Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickValues"])(scale, count);

  if (ticks) out.rem = ticks;

  ticks = values.map(function(value, i) {
    return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({
      index: i / (values.length - 1),
      value: value,
      label: format(value)
    });
  });

  if (_.extra && ticks.length) {
    // add an extra tick pegged to the initial domain value
    // this is used to generate axes with 'binned' domains
    ticks.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({
      index: -1,
      extra: {value: ticks[0].value},
      label: ''
    }));
  }

  out.source = ticks;
  out.add = ticks;
  this.value = ticks;

  return out;
};


/***/ }),

/***/ "n4MJ":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/parse.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Path parsing and rendering code adapted from fabric.js -- Thanks!
var cmdlen = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },
    regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\d)([-+])/g, /\s|,|###/];

/* harmony default export */ __webpack_exports__["default"] = (function(pathstr) {
  var result = [],
      path,
      curr,
      chunks,
      parsed, param,
      cmd, len, i, j, n, m;

  // First, break path into command sequence
  path = pathstr
    .slice()
    .replace(regexp[0], '###$1')
    .split(regexp[1])
    .slice(1);

  // Next, parse each command in turn
  for (i=0, n=path.length; i<n; ++i) {
    curr = path[i];
    chunks = curr
      .slice(1)
      .trim()
      .replace(regexp[2],'$1###$2')
      .split(regexp[3]);
    cmd = curr.charAt(0);

    parsed = [cmd];
    for (j=0, m=chunks.length; j<m; ++j) {
      if ((param = +chunks[j]) === param) { // not NaN
        parsed.push(param);
      }
    }

    len = cmdlen[cmd.toLowerCase()];
    if (parsed.length-1 > len) {
      for (j=1, m=parsed.length; j<m; j+=len) {
        result.push([cmd].concat(parsed.slice(j, j+len)));
      }
    }
    else {
      result.push(parsed);
    }
  }

  return result;
});


/***/ }),

/***/ "nBwP":
/*!****************************************************!*\
  !*** ./node_modules/topojson-client/src/bisect.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, x) {
  var lo = 0, hi = a.length;
  while (lo < hi) {
    var mid = lo + hi >>> 1;
    if (a[mid] < x) lo = mid + 1;
    else hi = mid;
  }
  return lo;
});


/***/ }),

/***/ "nUsu":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/path.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "lW0u");
/* harmony import */ var _path_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../path/parse */ "n4MJ");
/* harmony import */ var _path_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../path/render */ "L758");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/draw */ "mwYA");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_svg_translateItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/svg/translateItem */ "8Mry");








function attr(emit, item) {
  emit('transform', Object(_util_svg_translateItem__WEBPACK_IMPORTED_MODULE_6__["default"])(item));
  emit('d', item.path);
}

function path(context, item) {
  var path = item.path;
  if (path == null) return true;

  var cache = item.pathCache;
  if (!cache || cache.path !== path) {
    (item.pathCache = cache = Object(_path_parse__WEBPACK_IMPORTED_MODULE_2__["default"])(path)).path = path;
  }
  Object(_path_render__WEBPACK_IMPORTED_MODULE_3__["default"])(context, cache, item.x, item.y);
}

function bound(bounds, item) {
  return path(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), item)
    ? bounds.set(0, 0, 0, 0)
    : Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, item);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'path',
  tag:    'path',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_4__["drawAll"])(path),
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_5__["pickPath"])(path)
});


/***/ }),

/***/ "nawu":
/*!******************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/Bitmaps.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bitmaps; });
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ "s8Kw");


/**
 * Maintains CrossFilter state.
 */
function Bitmaps() {

  var width = 8,
      data = [],
      seen = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(0),
      curr = array(0, width),
      prev = array(0, width);

  return {

    data: function() { return data; },

    seen: function() {
      return (seen = lengthen(seen, data.length));
    },

    add: function(array) {
      for (var i=0, j=data.length, n=array.length, t; i<n; ++i) {
        t = array[i];
        t._index = j++;
        data.push(t);
      }
    },

    remove: function(num, map) { // map: index -> boolean (true => remove)
      var n = data.length,
          copy = Array(n - num),
          reindex = data, // reuse old data array for index map
          t, i, j;

      // seek forward to first removal
      for (i=0; !map[i] && i<n; ++i) {
        copy[i] = data[i];
        reindex[i] = i;
      }

      // condense arrays
      for (j=i; i<n; ++i) {
        t = data[i];
        if (!map[i]) {
          reindex[i] = j;
          curr[j] = curr[i];
          prev[j] = prev[i];
          copy[j] = t;
          t._index = j++;
        } else {
          reindex[i] = -1;
        }
        curr[i] = 0; // clear unused bits
      }

      data = copy;
      return reindex;
    },

    size: function() { return data.length; },

    curr: function() { return curr; },

    prev: function() { return prev; },

    reset: function(k) { prev[k] = curr[k]; },

    all: function() {
      return width < 0x101 ? 0xff : width < 0x10001 ? 0xffff : 0xffffffff;
    },

    set: function(k, one) { curr[k] |= one; },

    clear: function(k, one) { curr[k] &= ~one; },

    resize: function(n, m) {
      var k = curr.length;
      if (n > k || m > width) {
        width = Math.max(m, width);
        curr = array(n, width, curr);
        prev = array(n, width);
      }
    }
  };
}

function lengthen(array, length, copy) {
  if (array.length >= length) return array;
  copy = copy || new array.constructor(length);
  copy.set(array);
  return copy;
}

function array(n, m, array) {
  var copy = (m < 0x101 ? _arrays__WEBPACK_IMPORTED_MODULE_0__["array8"] : m < 0x10001 ? _arrays__WEBPACK_IMPORTED_MODULE_0__["array16"] : _arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n);
  if (array) copy.set(array);
  return copy;
}


/***/ }),

/***/ "nlKP":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/truncate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(str, length, align, ellipsis) {
  var e = ellipsis != null ? ellipsis : '\u2026',
      s = str + '',
      n = s.length,
      l = Math.max(0, length - e.length);

  return n <= length ? s
    : align === 'left' ? e + s.slice(n - l)
    : align === 'center' ? s.slice(0, Math.ceil(l/2)) + e + s.slice(n - ~~(l/2))
    : s.slice(0, l) + e;
});


/***/ }),

/***/ "nwJO":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/compare.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "iMRA");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "PNfb");
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isFunction */ "LOlD");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./splitAccessPath */ "QGy5");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stringValue */ "2OXM");






/* harmony default export */ __webpack_exports__["default"] = (function(fields, orders) {
  var idx = [],
      cmp = (fields = Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields)).map(function(f, i) {
        if (f == null) {
          return null;
        } else {
          idx.push(i);
          return Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(f) ? f
            : Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_3__["default"])(f).map(_stringValue__WEBPACK_IMPORTED_MODULE_4__["default"]).join('][');
        }
      }),
      n = idx.length - 1,
      ord = Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(orders),
      code = 'var u,v;return ',
      i, j, f, u, v, d, t, lt, gt;

  if (n < 0) return null;

  for (j=0; j<=n; ++j) {
    i = idx[j];
    f = cmp[i];

    if (Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(f)) {
      d = 'f' + i;
      u = '(u=this.' + d + '(a))';
      v = '(v=this.' + d + '(b))';
      (t = t || {})[d] = f;
    } else {
      u = '(u=a['+f+'])';
      v = '(v=b['+f+'])';
    }

    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';

    if (ord[i] !== 'descending') {
      gt = 1;
      lt = -1;
    } else {
      gt = -1;
      lt = 1;
    }

    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt
      + ':(u>v||v==null)&&u!=null?' + gt
      + ':'+d+'!==u&&v===v?' + lt
      + ':v!==v&&u===u?' + gt
      + (i < n ? ':' : ':0');
  }

  f = Function('a', 'b', code + ';');
  if (t) f = f.bind(t);

  fields = fields.reduce(function(map, field) {
    if (Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(field)) {
      (Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorFields"])(field) || []).forEach(function(_) { map[_] = 1; });
    } else if (field != null) {
      map[field + ''] = 1;
    }
    return map;
  }, {});

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(f, Object.keys(fields));
});


/***/ }),

/***/ "nyvx":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/text.js ***!
  \***************************************************************/
/*! exports provided: text */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./valueref */ "vfFY");




var text = {
    vgMark: 'text',
    encodeEntry: function (model) {
        var config = model.config, encoding = model.encoding, width = model.width, height = model.height, markDef = model.markDef;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_2__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_2__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_3__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_2__["text"](model), _mixins__WEBPACK_IMPORTED_MODULE_2__["nonPosition"]('size', model, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (markDef.size ? { defaultValue: markDef.size } : {}), { vgChannel: 'fontSize' // VL's text size is fontSize
         })), _mixins__WEBPACK_IMPORTED_MODULE_2__["valueIfDefined"]('align', align(model.markDef, encoding, config)));
    }
};
function align(markDef, encoding, config) {
    var a = markDef.align || Object(_common__WEBPACK_IMPORTED_MODULE_1__["getMarkConfig"])('align', markDef, config);
    if (a === undefined) {
        return 'center';
    }
    // If there is a config, Vega-parser will process this already.
    return undefined;
}
//# sourceMappingURL=text.js.map

/***/ }),

/***/ "oH5S":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/trail.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "eIYp");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "IsBD");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('trail', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["trail"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickTrail"]));


/***/ }),

/***/ "oJLp":
/*!******************************************************!*\
  !*** ./node_modules/topojson-client/src/quantize.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bbox */ "quX3");
/* harmony import */ var _untransform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./untransform */ "/glu");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, transform) {
  if (topology.transform) throw new Error("already quantized");

  if (!transform || !transform.scale) {
    if (!((n = Math.floor(transform)) >= 2)) throw new Error("n must be ≥2");
    box = topology.bbox || Object(_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(topology);
    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;
    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};
  } else {
    box = topology.bbox;
  }

  var t = Object(_untransform__WEBPACK_IMPORTED_MODULE_1__["default"])(transform), box, key, inputs = topology.objects, outputs = {};

  function quantizePoint(point) {
    return t(point);
  }

  function quantizeGeometry(input) {
    var output;
    switch (input.type) {
      case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(quantizeGeometry)}; break;
      case "Point": output = {type: "Point", coordinates: quantizePoint(input.coordinates)}; break;
      case "MultiPoint": output = {type: "MultiPoint", coordinates: input.coordinates.map(quantizePoint)}; break;
      default: return input;
    }
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    if (input.properties != null) output.properties = input.properties;
    return output;
  }

  function quantizeArc(input) {
    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic
    output[0] = t(input[0], 0);
    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points
    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points
    output.length = j;
    return output;
  }

  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);

  return {
    type: "Topology",
    bbox: box,
    transform: transform,
    objects: outputs,
    arcs: topology.arcs.map(quantizeArc)
  };
});


/***/ }),

/***/ "oe4J":
/*!**************************************************!*\
  !*** ./node_modules/vega-voronoi/src/Voronoi.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Voronoi; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_voronoi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-voronoi */ "bKjm");




function Voronoi(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Voronoi.Definition = {
  "type": "Voronoi",
  "metadata": {"modifies": true},
  "params": [
    { "name": "x", "type": "field", "required": true },
    { "name": "y", "type": "field", "required": true },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "extent", "type": "array", "array": true, "length": 2,
      "default": [[-1e5, -1e5], [1e5, 1e5]],
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Voronoi, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

var defaultExtent = [[-1e5, -1e5], [1e5, 1e5]];

prototype.transform = function(_, pulse) {
  var as = _.as || 'path',
      data = pulse.source,
      diagram, polygons, i, n;

  // configure and construct voronoi diagram
  diagram = Object(d3_voronoi__WEBPACK_IMPORTED_MODULE_2__["voronoi"])().x(_.x).y(_.y);
  if (_.size) diagram.size(_.size);
  else diagram.extent(_.extent || defaultExtent);

  this.value = (diagram = diagram(data));

  // map polygons to paths
  polygons = diagram.polygons();
  for (i=0, n=data.length; i<n; ++i) {
    data[i][as] = polygons[i]
      ? 'M' + polygons[i].join('L') + 'Z'
      : null;
  }

  return pulse.reflow(_.modified()).modifies(as);
};


/***/ }),

/***/ "oiGR":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/stack.js ***!
  \****************************************************************/
/*! exports provided: StackNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StackNode", function() { return StackNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common */ "ll1p");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dataflow */ "LH2n");






function getStackByFields(model) {
    return model.stack.stackBy.reduce(function (fields, by) {
        var fieldDef = by.fieldDef;
        var _field = Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef);
        if (_field) {
            fields.push(_field);
        }
        return fields;
    }, []);
}
function isValidAsArray(as) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(as) && as.every(function (s) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(s); }) && as.length > 1;
}
var StackNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](StackNode, _super);
    function StackNode(parent, stack) {
        var _this = _super.call(this, parent) || this;
        _this._stack = stack;
        return _this;
    }
    StackNode.prototype.clone = function () {
        return new StackNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this._stack));
    };
    StackNode.makeFromTransform = function (parent, stackTransform) {
        var stack = stackTransform.stack, groupby = stackTransform.groupby, as = stackTransform.as, _a = stackTransform.offset, offset = _a === void 0 ? 'zero' : _a;
        var sortFields = [];
        var sortOrder = [];
        if (stackTransform.sort !== undefined) {
            for (var _i = 0, _b = stackTransform.sort; _i < _b.length; _i++) {
                var sortField = _b[_i];
                sortFields.push(sortField.field);
                sortOrder.push(sortField.order === undefined ? 'ascending' : sortField.order);
            }
        }
        var sort = {
            field: sortFields,
            order: sortOrder,
        };
        var normalizedAs;
        if (isValidAsArray(as)) {
            normalizedAs = as;
        }
        else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(as)) {
            normalizedAs = [as, as + '_end'];
        }
        else {
            normalizedAs = [stackTransform.stack + '_start', stackTransform.stack + '_end'];
        }
        return new StackNode(parent, {
            stackField: stack,
            groupby: groupby,
            offset: offset,
            sort: sort,
            facetby: [],
            as: normalizedAs
        });
    };
    StackNode.makeFromEncoding = function (parent, model) {
        var stackProperties = model.stack;
        if (!stackProperties) {
            return null;
        }
        var dimensionFieldDef;
        if (stackProperties.groupbyChannel) {
            dimensionFieldDef = model.fieldDef(stackProperties.groupbyChannel);
        }
        var stackby = getStackByFields(model);
        var orderDef = model.encoding.order;
        var sort;
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(orderDef) || Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(orderDef)) {
            sort = Object(_common__WEBPACK_IMPORTED_MODULE_4__["sortParams"])(orderDef);
        }
        else {
            // default = descending by stackFields
            // FIXME is the default here correct for binned fields?
            sort = stackby.reduce(function (s, field) {
                s.field.push(field);
                s.order.push('descending');
                return s;
            }, { field: [], order: [] });
        }
        // Refactored to add "as" in the make phase so that we can get producedFields
        // from the as property
        var field = model.vgField(stackProperties.fieldChannel);
        return new StackNode(parent, {
            dimensionFieldDef: dimensionFieldDef,
            stackField: field,
            facetby: [],
            stackby: stackby,
            sort: sort,
            offset: stackProperties.offset,
            impute: stackProperties.impute,
            as: [field + '_start', field + '_end']
        });
    };
    Object.defineProperty(StackNode.prototype, "stack", {
        get: function () {
            return this._stack;
        },
        enumerable: true,
        configurable: true
    });
    StackNode.prototype.addDimensions = function (fields) {
        this._stack.facetby = this._stack.facetby.concat(fields);
    };
    StackNode.prototype.dependentFields = function () {
        var out = {};
        out[this._stack.stackField] = true;
        this.getGroupbyFields().forEach(function (f) { return out[f] = true; });
        this._stack.facetby.forEach(function (f) { return out[f] = true; });
        var field = this._stack.sort.field;
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(field) ? field.forEach(function (f) { return out[f] = true; }) : out[field] = true;
        return out;
    };
    StackNode.prototype.producedFields = function () {
        return this._stack.as.reduce(function (result, item) {
            result[item] = true;
            return result;
        }, {});
    };
    StackNode.prototype.getGroupbyFields = function () {
        var _a = this._stack, dimensionFieldDef = _a.dimensionFieldDef, impute = _a.impute, groupby = _a.groupby;
        if (dimensionFieldDef) {
            if (dimensionFieldDef.bin) {
                if (impute) {
                    // For binned group by field with impute, we calculate bin_mid
                    // as we cannot impute two fields simultaneously
                    return [Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, { binSuffix: 'mid' })];
                }
                return [
                    // For binned group by field without impute, we need both bin (start) and bin_end
                    Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, {}),
                    Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, { binSuffix: 'end' })
                ];
            }
            return [Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef)];
        }
        return groupby || [];
    };
    StackNode.prototype.assemble = function () {
        var transform = [];
        var _a = this._stack, facetby = _a.facetby, dimensionFieldDef = _a.dimensionFieldDef, field = _a.stackField, stackby = _a.stackby, sort = _a.sort, offset = _a.offset, impute = _a.impute, as = _a.as;
        // Impute
        if (impute && dimensionFieldDef) {
            var dimensionField = dimensionFieldDef ? Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, { binSuffix: 'mid' }) : undefined;
            if (dimensionFieldDef.bin) {
                // As we can only impute one field at a time, we need to calculate
                // mid point for a binned field
                transform.push({
                    type: 'formula',
                    expr: '(' +
                        Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, { expr: 'datum' }) +
                        '+' +
                        Object(_fielddef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' }) +
                        ')/2',
                    as: dimensionField
                });
            }
            transform.push({
                type: 'impute',
                field: field,
                groupby: stackby,
                key: dimensionField,
                method: 'value',
                value: 0
            });
        }
        // Stack
        transform.push({
            type: 'stack',
            groupby: this.getGroupbyFields().concat(facetby),
            field: field,
            sort: sort,
            as: as,
            offset: offset
        });
        return transform;
    };
    return StackNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_5__["DataFlowNode"]));

//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "ox7e":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/properties.js ***!
  \*********************************************************************/
/*! exports provided: grid, gridScale, labelFlush, labelOverlap, orient, tickCount, title, values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "grid", function() { return grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gridScale", function() { return gridScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelFlush", function() { return labelFlush; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelOverlap", function() { return labelOverlap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orient", function() { return orient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickCount", function() { return tickCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "title", function() { return title; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "4qum");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util */ "Hc3/");








// TODO: we need to refactor this method after we take care of config refactoring
/**
 * Default rules for whether to show a grid should be shown for a channel.
 * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned
 */
function grid(scaleType, fieldDef) {
    return !Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(scaleType) && !fieldDef.bin;
}
function gridScale(model, channel) {
    var gridChannel = channel === 'x' ? 'y' : 'x';
    if (model.getScaleComponent(gridChannel)) {
        return model.scaleName(gridChannel);
    }
    return undefined;
}
function labelFlush(fieldDef, channel, specifiedAxis) {
    if (specifiedAxis.labelFlush !== undefined) {
        return specifiedAxis.labelFlush;
    }
    if (channel === 'x' && Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['quantitative', 'temporal'], fieldDef.type)) {
        return true;
    }
    return undefined;
}
function labelOverlap(fieldDef, specifiedAxis, channel, scaleType) {
    if (specifiedAxis.labelOverlap !== undefined) {
        return specifiedAxis.labelOverlap;
    }
    // do not prevent overlap for nominal data because there is no way to infer what the missing labels are
    if (fieldDef.type !== 'nominal') {
        if (scaleType === 'log') {
            return 'greedy';
        }
        return true;
    }
    return undefined;
}
function orient(channel) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_2__["X"]:
            return 'bottom';
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]:
            return 'left';
    }
    /* istanbul ignore next: This should never happen. */
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_4__["message"].INVALID_CHANNEL_FOR_AXIS);
}
function tickCount(channel, fieldDef, scaleType, size) {
    if (!Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(scaleType) && scaleType !== 'log' && !Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['month', 'hours', 'day', 'quarter'], fieldDef.timeUnit)) {
        if (fieldDef.bin) {
            // for binned data, we don't want more ticks than maxbins
            return { signal: "ceil(" + size.signal + "/20)" };
        }
        return { signal: "ceil(" + size.signal + "/40)" };
    }
    return undefined;
}
function title(maxLength, fieldDef, config) {
    // if not defined, automatically determine axis title from field def
    var fieldTitle = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["title"])(fieldDef, config);
    return maxLength ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["truncate"])(fieldTitle, maxLength) : fieldTitle;
}
function values(specifiedAxis, model, fieldDef, channel) {
    var vals = specifiedAxis.values;
    if (vals) {
        return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["valueArray"])(fieldDef, vals);
    }
    if (fieldDef.bin && fieldDef.type === _type__WEBPACK_IMPORTED_MODULE_6__["QUANTITATIVE"]) {
        var domain = model.scaleDomain(channel);
        if (domain && domain !== 'unaggregated' && !Object(_scale__WEBPACK_IMPORTED_MODULE_5__["isSelectionDomain"])(domain)) { // explicit value
            return undefined;
        }
        var signal = model.getName(Object(_bin__WEBPACK_IMPORTED_MODULE_1__["binToString"])(fieldDef.bin) + "_" + fieldDef.field + "_bins");
        return { signal: "sequence(" + signal + ".start, " + signal + ".stop + " + signal + ".step, " + signal + ".step)" };
    }
    return undefined;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "pOXG":
/*!***************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/AggregateOps.js ***!
  \***************************************************************/
/*! exports provided: measureName, AggregateOps, ValidAggregateOps, createMeasure, compileMeasures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measureName", function() { return measureName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AggregateOps", function() { return AggregateOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidAggregateOps", function() { return ValidAggregateOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMeasure", function() { return createMeasure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileMeasures", function() { return compileMeasures; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


function measureName(op, field, as) {
  return as || (op + (!field ? '' : '_' + field));
}

var AggregateOps = {
  'values': measure({
    name: 'values',
    init: 'cell.store = true;',
    set:  'cell.data.values()', idx: -1
  }),
  'count': measure({
    name: 'count',
    set:  'cell.num'
  }),
  '__count__': measure({
    name: 'count',
    set:  'this.missing + this.valid'
  }),
  'missing': measure({
    name: 'missing',
    set:  'this.missing'
  }),
  'valid': measure({
    name: 'valid',
    set:  'this.valid'
  }),
  'sum': measure({
    name: 'sum',
    init: 'this.sum = 0;',
    add:  'this.sum += v;',
    rem:  'this.sum -= v;',
    set:  'this.sum'
  }),
  'mean': measure({
    name: 'mean',
    init: 'this.mean = 0;',
    add:  'var d = v - this.mean; this.mean += d / this.valid;',
    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',
    set:  'this.mean'
  }),
  'average': measure({
    name: 'average',
    set:  'this.mean',
    req:  ['mean'], idx: 1
  }),
  'variance': measure({
    name: 'variance',
    init: 'this.dev = 0;',
    add:  'this.dev += d * (v - this.mean);',
    rem:  'this.dev -= d * (v - this.mean);',
    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',
    req:  ['mean'], idx: 1
  }),
  'variancep': measure({
    name: 'variancep',
    set:  'this.valid > 1 ? this.dev / this.valid : 0',
    req:  ['variance'], idx: 2
  }),
  'stdev': measure({
    name: 'stdev',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',
    req:  ['variance'], idx: 2
  }),
  'stdevp': measure({
    name: 'stdevp',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',
    req:  ['variance'], idx: 2
  }),
  'stderr': measure({
    name: 'stderr',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : 0',
    req:  ['variance'], idx: 2
  }),
  'distinct': measure({
    name: 'distinct',
    set:  'cell.data.distinct(this.get)',
    req:  ['values'], idx: 3
  }),
  'ci0': measure({
    name: 'ci0',
    set:  'cell.data.ci0(this.get)',
    req:  ['values'], idx: 3
  }),
  'ci1': measure({
    name: 'ci1',
    set:  'cell.data.ci1(this.get)',
    req:  ['values'], idx: 3
  }),
  'median': measure({
    name: 'median',
    set:  'cell.data.q2(this.get)',
    req:  ['values'], idx: 3
  }),
  'q1': measure({
    name: 'q1',
    set:  'cell.data.q1(this.get)',
    req:  ['values'], idx: 3
  }),
  'q3': measure({
    name: 'q3',
    set:  'cell.data.q3(this.get)',
    req:  ['values'], idx: 3
  }),
  'argmin': measure({
    name: 'argmin',
    init: 'this.argmin = null;',
    add:  'if (v < this.min) this.argmin = t;',
    rem:  'if (v <= this.min) this.argmin = null;',
    set:  'this.argmin || cell.data.argmin(this.get)',
    req:  ['min'], str: ['values'], idx: 3
  }),
  'argmax': measure({
    name: 'argmax',
    init: 'this.argmax = null;',
    add:  'if (v > this.max) this.argmax = t;',
    rem:  'if (v >= this.max) this.argmax = null;',
    set:  'this.argmax || cell.data.argmax(this.get)',
    req:  ['max'], str: ['values'], idx: 3
  }),
  'min': measure({
    name: 'min',
    init: 'this.min = null;',
    add:  'if (v < this.min || this.min === null) this.min = v;',
    rem:  'if (v <= this.min) this.min = NaN;',
    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',
    str:  ['values'], idx: 4
  }),
  'max': measure({
    name: 'max',
    init: 'this.max = null;',
    add:  'if (v > this.max || this.max === null) this.max = v;',
    rem:  'if (v >= this.max) this.max = NaN;',
    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',
    str:  ['values'], idx: 4
  })
};

var ValidAggregateOps = Object.keys(AggregateOps);

function createMeasure(op, name) {
  return AggregateOps[op](name);
}

function measure(base) {
  return function(out) {
    var m = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({init:'', add:'', rem:'', idx:0}, base);
    m.out = out || base.name;
    return m;
  };
}

function compareIndex(a, b) {
  return a.idx - b.idx;
}

function resolve(agg, stream) {
  function collect(m, a) {
    function helper(r) { if (!m[r]) collect(m, m[r] = AggregateOps[r]()); }
    if (a.req) a.req.forEach(helper);
    if (stream && a.str) a.str.forEach(helper);
    return m;
  }
  var map = agg.reduce(
    collect,
    agg.reduce(function(m, a) {
      m[a.name] = a;
      return m;
    }, {})
  );
  var values = [], key;
  for (key in map) values.push(map[key]);
  return values.sort(compareIndex);
}

function compileMeasures(agg, field) {
  var get = field || vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"],
      all = resolve(agg, true), // assume streaming removes may occur
      init = 'var cell = this.cell; this.valid = 0; this.missing = 0;',
      ctr = 'this.cell = cell; this.init();',
      add = 'if(v==null){++this.missing; return;} if(v!==v) return; ++this.valid;',
      rem = 'if(v==null){--this.missing; return;} if(v!==v) return; --this.valid;',
      set = 'var cell = this.cell;';

  all.forEach(function(a) {
    init += a.init;
    add += a.add;
    rem += a.rem;
  });
  agg.slice().sort(compareIndex).forEach(function(a) {
    set += 't[\'' + a.out + '\']=' + a.set + ';';
  });
  set += 'return t;';

  ctr = Function('cell', ctr);
  ctr.prototype.init = Function(init);
  ctr.prototype.add = Function('v', 't', add);
  ctr.prototype.rem = Function('v', 't', rem);
  ctr.prototype.set = Function('t', set);
  ctr.prototype.get = get;
  ctr.fields = agg.map(function(_) { return _.out; });
  return ctr;
}


/***/ }),

/***/ "pawb":
/*!********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/Dimension.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(index, i, query) {
  var bit = (1 << i);

  return {
    one:     bit,
    zero:    ~bit,
    range:   query.slice(),
    bisect:  index.bisect,
    index:   index.index,
    size:    index.size,

    onAdd: function(added, curr) {
      var dim = this,
          range = dim.bisect(dim.range, added.value),
          idx = added.index,
          lo = range[0],
          hi = range[1],
          n1 = idx.length, i;

      for (i=0;  i<lo; ++i) curr[idx[i]] |= bit;
      for (i=hi; i<n1; ++i) curr[idx[i]] |= bit;
      return dim;
    }
  };
});


/***/ }),

/***/ "pcFI":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Pivot.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pivot; });
/* harmony import */ var _Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Aggregate */ "S/FN");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "pOXG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Aggregate and pivot selected field values to become new fields.
 * This operator is useful to construction cross-tabulations.
 * @constructor
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors
 *  to groupby. These fields act just like groupby fields of an Aggregate transform.
 * @param {function(object): *} params.field - The field to pivot on. The unique
 *  values of this field become new field names in the output stream.
 * @param {function(object): *} params.value - The field to populate pivoted fields.
 *  The aggregate values of this field become the values of the new pivoted fields.
 * @param {string} [params.op] - The aggregation operation for the value field,
 *  applied per cell in the output stream. The default is "sum".
 * @param {number} [params.limit] - An optional parameter indicating the maximum
 *  number of pivoted fields to generate. The pivoted field names are sorted in
 *  ascending order prior to enforcing the limit.
 */
function Pivot(params) {
  _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Pivot.Definition = {
  "type": "Pivot",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "field", "type": "field", "required": true },
    { "name": "value", "type": "field", "required": true },
    { "name": "op", "type": "enum", "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"], "default": "sum" },
    { "name": "limit", "type": "number", "default": 0 },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Pivot, _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype._transform = prototype.transform;

prototype.transform = function(_, pulse) {
  return this._transform(aggregateParams(_, pulse), pulse);
};

// Shoehorn a pivot transform into an aggregate transform!
// First collect all unique pivot field values.
// Then generate aggregate fields for each output pivot field.
function aggregateParams(_, pulse) {
  var key    = _.field,
  value  = _.value,
      op     = (_.op === 'count' ? '__count__' : _.op) || 'sum',
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(key).concat(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(value)),
      keys   = pivotKeys(key, _.limit || 0, pulse);

  return {
    key:      _.key,
    groupby:  _.groupby,
    ops:      keys.map(function() { return op; }),
    fields:   keys.map(function(k) { return get(k, key, value, fields); }),
    as:       keys.map(function(k) { return k + ''; }),
    modified: _.modified.bind(_)
  };
}

// Generate aggregate field accessor.
// Output NaN for non-existent values; aggregator will ignore!
function get(k, key, value, fields) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessor"])(
    function(d) { return key(d) === k ? value(d) : NaN; },
    fields,
    k + ''
  );
}

// Collect (and optionally limit) all unique pivot values.
function pivotKeys(key, limit, pulse) {
  var map = {},
      list = [];

  pulse.visit(pulse.SOURCE, function(t) {
    var k = key(t);
    if (!map[k]) {
      map[k] = 1;
      list.push(k);
    }
  });

  // TODO? Move this comparator to vega-util?
  list.sort(function(u, v) {
    return (u<v||u==null) && v!=null ? -1
      : (u>v||v==null) && u!=null ? 1
      : ((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))!==u && v===v ? -1
      : v!==v && u===u ? 1 : 0;
  });

  return limit ? list.slice(0, limit) : list;
}


/***/ }),

/***/ "pcUx":
/*!**********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/symbol.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markItemPath */ "AiIN");



/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_1__["default"])('symbol', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["symbol"]));


/***/ }),

/***/ "pqN6":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-fivethirtyeight.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var markColor = '#30a2da';
var axisColor = '#cbcbcb';
var backgroundColor = '#f0f0f0';
var fivethirtyeighttheme = {
    arc: { fill: markColor },
    area: { fill: markColor },
    axisBand: {
        grid: false,
    },
    axisBottom: {
        domain: false,
        domainColor: 'black',
        domainWidth: 3,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelFontSize: 12,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisLeft: {
        domainColor: axisColor,
        domainWidth: 1,
        gridColor: axisColor,
        gridWidth: 1,
        labelFontSize: 12,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        ticks: true,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisRight: {
        domainColor: axisColor,
        domainWidth: 1,
        gridColor: axisColor,
        gridWidth: 1,
        labelFontSize: 12,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        ticks: true,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisTop: {
        domain: false,
        domainColor: 'black',
        domainWidth: 3,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelFontSize: 12,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        titleFontSize: 14,
        titlePadding: 10,
    },
    background: backgroundColor,
    group: {
        fill: backgroundColor,
    },
    legend: {
        labelFontSize: 11,
        padding: 1,
        symbolSize: 30,
        symbolType: 'square',
        titleFontSize: 14,
        titlePadding: 10,
    },
    line: {
        stroke: markColor,
        strokeWidth: 2,
    },
    path: { stroke: markColor, strokeWidth: 0.5 },
    point: { filled: true },
    rect: { fill: markColor },
    range: {
        category: [
            '#30a2da',
            '#fc4f30',
            '#e5ae38',
            '#6d904f',
            '#8b8b8b',
            '#b96db8',
            '#ff9e27',
            '#56cc60',
            '#52d2ca',
            '#52689e',
            '#545454',
            '#9fe4f8',
        ],
        diverging: [
            '#cc0020',
            '#e77866',
            '#f6e7e1',
            '#d6e8ed',
            '#91bfd9',
            '#1d78b5',
        ],
        heatmap: ['#d6e8ed', '#cee0e5', '#91bfd9', '#549cc6', '#1d78b5'],
    },
    symbol: {
        opacity: 1,
        shape: 'circle',
        size: 40,
        strokeWidth: 1,
    },
    shape: { stroke: markColor },
    style: {
        bar: {
            binSpacing: 2,
            fill: markColor,
            stroke: null,
        },
    },
    title: {
        anchor: 'start',
        fontSize: 24,
        fontWeight: 600,
        offset: 20,
    },
};
/* harmony default export */ __webpack_exports__["default"] = (fivethirtyeighttheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZml2ZXRoaXJ0eWVpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLWZpdmV0aGlydHllaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxJQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDNUIsSUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBQzVCLElBQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQztBQUVsQyxJQUFNLG9CQUFvQixHQUFXO0lBQ25DLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUV6QixRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsS0FBSztLQUNaO0lBRUQsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEtBQUs7UUFDYixXQUFXLEVBQUUsT0FBTztRQUNwQixXQUFXLEVBQUUsQ0FBQztRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLENBQUM7UUFDWixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxFQUFFO1FBQ1osYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLEVBQUU7S0FDakI7SUFFRCxRQUFRLEVBQUU7UUFDUixXQUFXLEVBQUUsU0FBUztRQUN0QixXQUFXLEVBQUUsQ0FBQztRQUNkLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFNBQVMsRUFBRSxDQUFDO1FBQ1osYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLENBQUM7UUFDZixTQUFTLEVBQUUsU0FBUztRQUNwQixRQUFRLEVBQUUsRUFBRTtRQUNaLEtBQUssRUFBRSxJQUFJO1FBQ1gsYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLEVBQUU7S0FDakI7SUFFRCxTQUFTLEVBQUU7UUFDVCxXQUFXLEVBQUUsU0FBUztRQUN0QixXQUFXLEVBQUUsQ0FBQztRQUNkLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFNBQVMsRUFBRSxDQUFDO1FBQ1osYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLENBQUM7UUFDZixTQUFTLEVBQUUsU0FBUztRQUNwQixRQUFRLEVBQUUsRUFBRTtRQUNaLEtBQUssRUFBRSxJQUFJO1FBQ1gsYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLEVBQUU7S0FDakI7SUFFRCxPQUFPLEVBQUU7UUFDUCxNQUFNLEVBQUUsS0FBSztRQUNiLFdBQVcsRUFBRSxPQUFPO1FBQ3BCLFdBQVcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxFQUFFLElBQUk7UUFDVixTQUFTLEVBQUUsU0FBUztRQUNwQixTQUFTLEVBQUUsQ0FBQztRQUNaLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFlBQVksRUFBRSxDQUFDO1FBQ2YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsUUFBUSxFQUFFLEVBQUU7UUFDWixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsRUFBRTtLQUNqQjtJQUVELFVBQVUsRUFBRSxlQUFlO0lBQzNCLEtBQUssRUFBRTtRQUNMLElBQUksRUFBRSxlQUFlO0tBQ3RCO0lBRUQsTUFBTSxFQUFFO1FBQ04sYUFBYSxFQUFFLEVBQUU7UUFDakIsT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsRUFBRTtRQUNkLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFlBQVksRUFBRSxFQUFFO0tBQ2pCO0lBRUQsSUFBSSxFQUFFO1FBQ0osTUFBTSxFQUFFLFNBQVM7UUFDakIsV0FBVyxFQUFFLENBQUM7S0FDZjtJQUVELElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEdBQUcsRUFBRTtJQUM3QyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0lBQ3ZCLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFFekIsS0FBSyxFQUFFO1FBQ0wsUUFBUSxFQUFFO1lBQ1IsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7UUFFRCxTQUFTLEVBQUU7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7U0FDVjtRQUNELE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUM7S0FDakU7SUFFRCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsQ0FBQztRQUNWLEtBQUssRUFBRSxRQUFRO1FBQ2YsSUFBSSxFQUFFLEVBQUU7UUFDUixXQUFXLEVBQUUsQ0FBQztLQUNmO0lBRUQsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUU1QixLQUFLLEVBQUU7UUFDTCxHQUFHLEVBQUU7WUFDSCxVQUFVLEVBQUUsQ0FBQztZQUNiLElBQUksRUFBRSxTQUFTO1lBQ2YsTUFBTSxFQUFFLElBQUk7U0FDYjtLQUNGO0lBRUQsS0FBSyxFQUFFO1FBQ0wsTUFBTSxFQUFFLE9BQU87UUFDZixRQUFRLEVBQUUsRUFBRTtRQUNaLFVBQVUsRUFBRSxHQUFHO1FBQ2YsTUFBTSxFQUFFLEVBQUU7S0FDWDtDQUNGLENBQUM7QUFFRixlQUFlLG9CQUFvQixDQUFDIn0=

/***/ }),

/***/ "q8Se":
/*!*****************************************************!*\
  !*** ./node_modules/vega-runtime/src/parameters.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseParameters; });
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataflow */ "bd+s");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression */ "cf9k");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Parse a set of operator parameters.
 */
function parseParameters(spec, ctx, params) {
  params = params || {};
  var key, value;

  for (key in spec) {
    value = spec[key];

    params[key] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(value)
      ? value.map(function(v) { return parseParameter(v, ctx, params); })
      : parseParameter(value, ctx, params);
  }
  return params;
}

/**
 * Parse a single parameter.
 */
function parseParameter(spec, ctx, params) {
  if (!spec || !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(spec)) return spec;

  for (var i=0, n=PARSERS.length, p; i<n; ++i) {
    p = PARSERS[i];
    if (spec.hasOwnProperty(p.key)) {
      return p.parse(spec, ctx, params);
    }
  }
  return spec;
}

/** Reference parsers. */
var PARSERS = [
  {key: '$ref',      parse: getOperator},
  {key: '$key',      parse: getKey},
  {key: '$expr',     parse: getExpression},
  {key: '$field',    parse: getField},
  {key: '$encode',   parse: getEncode},
  {key: '$compare',  parse: getCompare},
  {key: '$context',  parse: getContext},
  {key: '$subflow',  parse: getSubflow},
  {key: '$tupleid',  parse: getTupleId}
];

/**
 * Resolve an operator reference.
 */
function getOperator(_, ctx) {
  return ctx.get(_.$ref) || Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Operator not defined: ' + _.$ref);
}

/**
 * Resolve an expression reference.
 */
function getExpression(_, ctx, params) {
  if (_.$params) { // parse expression parameters
    parseParameters(_.$params, ctx, params);
  }
  var k = 'e:' + _.$expr + '_' + _.$name;
  return ctx.fn[k]
    || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessor"])(Object(_expression__WEBPACK_IMPORTED_MODULE_1__["parameterExpression"])(_.$expr, ctx), _.$fields, _.$name));
}

/**
 * Resolve a key accessor reference.
 */
function getKey(_, ctx) {
  var k = 'k:' + _.$key + '_' + (!!_.$flat);
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["key"])(_.$key, _.$flat));
}

/**
 * Resolve a field accessor reference.
 */
function getField(_, ctx) {
  if (!_.$field) return null;
  var k = 'f:' + _.$field + '_' + _.$name;
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["field"])(_.$field, _.$name));
}

/**
 * Resolve a comparator function reference.
 */
function getCompare(_, ctx) {
  var k = 'c:' + _.$compare + '_' + _.$order,
      c = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.$compare).map(function(_) {
        return (_ && _.$tupleid) ? vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["tupleid"] : _;
      });
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["compare"])(c, _.$order));
}

/**
 * Resolve an encode operator reference.
 */
function getEncode(_, ctx) {
  var spec = _.$encode,
      encode = {}, name, enc;

  for (name in spec) {
    enc = spec[name];
    encode[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessor"])(Object(_expression__WEBPACK_IMPORTED_MODULE_1__["encodeExpression"])(enc.$expr, ctx), enc.$fields);
    encode[name].output = enc.$output;
  }
  return encode;
}

/**
 * Resolve a context reference.
 */
function getContext(_, ctx) {
  return ctx;
}

/**
 * Resolve a recursive subflow specification.
 */
function getSubflow(_, ctx) {
  var spec = _.$subflow;
  return function(dataflow, key, parent) {
    var subctx = Object(_dataflow__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, ctx.fork()),
        op = subctx.get(spec.operators[0].id),
        p = subctx.signals.parent;
    if (p) p.set(parent);
    return op;
  };
}

/**
 * Resolve a tuple id reference.
 */
function getTupleId() {
  return vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["tupleid"];
}


/***/ }),

/***/ "qHvB":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/package.json ***!
  \***************************************************/
/*! exports provided: name, author, version, collaborators, homepage, description, main, unpkg, jsdelivr, module, types, bin, directories, scripts, repository, license, bugs, devDependencies, dependencies, jest, default */
/***/ (function(module) {

module.exports = {"name":"vega-lite","author":"Jeffrey Heer, Dominik Moritz, Kanit \"Ham\" Wongsuphasawat","version":"2.6.0","collaborators":["Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)","Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)","Jeffrey Heer <jheer@uw.edu> (http://jheer.org)"],"homepage":"https://vega.github.io/vega-lite/","description":"Vega-Lite is a concise high-level language for interactive visualization.","main":"build/vega-lite.js","unpkg":"build/vega-lite.min.js","jsdelivr":"build/vega-lite.min.js","module":"build/src/index","types":"build/src/index.d.ts","bin":{"vl2png":"./bin/vl2png","vl2svg":"./bin/vl2svg","vl2vg":"./bin/vl2vg"},"directories":{"test":"test"},"scripts":{"prebuild":"mkdir -p build/src","build":"npm run build:only","build:only":"tsc && rollup -c","postbuild":"uglifyjs build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema","build:examples":"npm run data && TZ=America/Los_Angeles scripts/build-examples.sh","build:examples-full":"TZ=America/Los_Angeles scripts/build-examples.sh 1","build:example":"TZ=America/Los_Angeles scripts/build-example.sh","build:toc":"bundle exec jekyll build -q && scripts/generate-toc","build:site":"tsc -p site && webpack --config site/webpack.config.js","build:versions":"scripts/update-version.sh","check:examples":"scripts/check-examples.sh","check:schema":"scripts/check-schema.sh","clean":"rm -rf build && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' -type f -delete","data":"rsync -r node_modules/vega-datasets/data/* data","deploy":"scripts/deploy.sh","deploy:gh":"scripts/deploy-gh.sh","deploy:schema":"scripts/deploy-schema.sh","preschema":"npm run prebuild","schema":"node --stack-size=1200 ./node_modules/.bin/ts-json-schema-generator --path tsconfig.json --type TopLevelSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/","renameschema":"scripts/rename-schema.sh","presite":"npm run prebuild && npm run data && npm run build:site && npm run build:toc && npm run build:versions && scripts/create-example-pages","site":"bundle exec jekyll serve --incremental","lint":"tslint -p . -e 'package.json'","test":"jest test/ && npm run lint && npm run schema && jest examples/ && npm run test:runtime","test:inspect":"node --inspect-brk ./node_modules/.bin/jest --runInBand test","test:runtime":"TZ=America/Los_Angeles TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' wdio wdio.conf.js","test:runtime:generate":"rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime","watch:build":"npm run build:only && concurrently --kill-others -n Typescript,Rollup 'tsc -w' 'rollup -c -w'","watch:site":"concurrently --kill-others -n Typescript,Webpack 'tsc -p site --watch' 'webpack --config site/webpack.config.js --mode development --watch'","watch:test":"jest --watch"},"repository":{"type":"git","url":"https://github.com/vega/vega-lite.git"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/vega/vega-lite/issues"},"devDependencies":{"@types/chai":"^4.1.4","@types/d3":"^5.0.0","@types/highlight.js":"^9.12.3","@types/jest":"^23.1.1","@types/mkdirp":"^0.5.2","@types/node":"^9.0.0","@types/webdriverio":"^4.10.2","ajv":"^6.5.1","chai":"^4.1.2","cheerio":"^1.0.0-rc.2","chromedriver":"^2.40.0","codecov":"^3.0.2","concurrently":"^3.6.0","d3":"^5.5.0","highlight.js":"^9.12.0","jest":"^23.1.0","mkdirp":"^0.5.1","rollup":"^0.59.4","rollup-plugin-commonjs":"^9.1.3","rollup-plugin-json":"^3.0.0","rollup-plugin-node-resolve":"^3.3.0","rollup-plugin-sourcemaps":"^0.4.2","source-map-support":"^0.5.6","svg2png-many":"^0.0.7","ts-jest":"^22.4.6","ts-json-schema-generator":"^0.28.0","ts-node":"^6.1.1","tslint":"5.10.0","tslint-eslint-rules":"^5.3.1","typescript":"^2.9.2","uglify-js":"^3.4.1","vega":"^4.0.0-rc.3","vega-datasets":"^1.19.0","vega-embed":"^3.16.0","vega-tooltip":"^0.11.0","wdio-chromedriver-service":"^0.1.3","wdio-dot-reporter":"0.0.9","wdio-mocha-framework":"^0.5.13","wdio-static-server-service":"^1.0.1","webdriverio":"^4.13.0","webpack":"^4.12.0","webpack-cli":"^3.0.8","yaml-front-matter":"^4.0.0"},"dependencies":{"@types/json-stable-stringify":"^1.0.32","json-stable-stringify":"^1.0.1","tslib":"^1.9.2","vega-event-selector":"^2.0.0","vega-typings":"^0.3.17","vega-util":"^1.7.0","yargs":"^11.0.0"},"jest":{"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testPathIgnorePatterns":["node_modules","test-runtime","<rootDir>/build","_site","src"],"coverageDirectory":"./coverage/","collectCoverage":false}};

/***/ }),

/***/ "qRBp":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/title.js ***!
  \***************************************************/
/*! exports provided: extractTitleConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTitleConfig", function() { return extractTitleConfig; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");

function extractTitleConfig(titleConfig) {
    var 
    // These are non-mark title config that need to be hardcoded
    anchor = titleConfig.anchor, offset = titleConfig.offset, orient = titleConfig.orient, 
    // color needs to be redirect to fill
    color = titleConfig.color, 
    // The rest are mark config.
    titleMarkConfig = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](titleConfig, ["anchor", "offset", "orient", "color"]);
    var mark = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, titleMarkConfig, color ? { fill: color } : {});
    var nonMark = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, anchor ? { anchor: anchor } : {}, offset ? { offset: offset } : {}, orient ? { orient: orient } : {});
    return { mark: mark, nonMark: nonMark };
}
//# sourceMappingURL=title.js.map

/***/ }),

/***/ "qsdV":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/isBoolean.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'boolean';
});


/***/ }),

/***/ "quX3":
/*!**************************************************!*\
  !*** ./node_modules/topojson-client/src/bbox.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ "f9Sr");


/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var t = Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(topology.transform), key,
      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;

  function bboxPoint(p) {
    p = t(p);
    if (p[0] < x0) x0 = p[0];
    if (p[0] > x1) x1 = p[0];
    if (p[1] < y0) y0 = p[1];
    if (p[1] > y1) y1 = p[1];
  }

  function bboxGeometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(bboxGeometry); break;
      case "Point": bboxPoint(o.coordinates); break;
      case "MultiPoint": o.coordinates.forEach(bboxPoint); break;
    }
  }

  topology.arcs.forEach(function(arc) {
    var i = -1, n = arc.length, p;
    while (++i < n) {
      p = t(arc[i], i);
      if (p[0] < x0) x0 = p[0];
      if (p[0] > x1) x1 = p[0];
      if (p[1] < y0) y0 = p[1];
      if (p[1] > y1) y1 = p[1];
    }
  });

  for (key in topology.objects) {
    bboxGeometry(topology.objects[key]);
  }

  return [x0, y0, x1, y1];
});


/***/ }),

/***/ "r/lw":
/*!***************************************************!*\
  !*** ./node_modules/topojson-client/src/merge.js ***!
  \***************************************************/
/*! exports provided: default, mergeArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return mergeArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "+xE1");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "IAF7");



function planarRingArea(ring) {
  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;
  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];
  return Math.abs(area); // Note: doubled area!
}

/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, mergeArcs.apply(this, arguments));
});

function mergeArcs(topology, objects) {
  var polygonsByArc = {},
      polygons = [],
      groups = [];

  objects.forEach(geometry);

  function geometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "Polygon": extract(o.arcs); break;
      case "MultiPolygon": o.arcs.forEach(extract); break;
    }
  }

  function extract(polygon) {
    polygon.forEach(function(ring) {
      ring.forEach(function(arc) {
        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
      });
    });
    polygons.push(polygon);
  }

  function area(ring) {
    return planarRingArea(Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, {type: "Polygon", arcs: [ring]}).coordinates[0]);
  }

  polygons.forEach(function(polygon) {
    if (!polygon._) {
      var group = [],
          neighbors = [polygon];
      polygon._ = 1;
      groups.push(group);
      while (polygon = neighbors.pop()) {
        group.push(polygon);
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
              if (!polygon._) {
                polygon._ = 1;
                neighbors.push(polygon);
              }
            });
          });
        });
      }
    }
  });

  polygons.forEach(function(polygon) {
    delete polygon._;
  });

  return {
    type: "MultiPolygon",
    arcs: groups.map(function(polygons) {
      var arcs = [], n;

      // Extract the exterior (unique) arcs.
      polygons.forEach(function(polygon) {
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {
              arcs.push(arc);
            }
          });
        });
      });

      // Stitch the arcs into one or more rings.
      arcs = Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs);

      // If more than one ring is returned,
      // at most one of these rings can be the exterior;
      // choose the one with the greatest absolute area.
      if ((n = arcs.length) > 1) {
        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {
          if ((ki = area(arcs[i])) > k) {
            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;
          }
        }
      }

      return arcs;
    })
  };
}


/***/ }),

/***/ "r9P9":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/facet.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "rIyC":
/*!***********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/properties.js ***!
  \***********************************************************************/
/*! exports provided: values, type */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "type", function() { return type; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");




function values(legend, fieldDef) {
    var vals = legend.values;
    if (vals) {
        return Object(_fielddef__WEBPACK_IMPORTED_MODULE_1__["valueArray"])(fieldDef, vals);
    }
    return undefined;
}
function type(t, channel, scaleType) {
    if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isColorChannel"])(channel) && ((t === 'quantitative' && !Object(_scale__WEBPACK_IMPORTED_MODULE_2__["isBinScale"])(scaleType)) ||
        (t === 'temporal' && Object(_util__WEBPACK_IMPORTED_MODULE_3__["contains"])(['time', 'utc'], scaleType)))) {
        return 'gradient';
    }
    return undefined;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "rL+x":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/toBoolean.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;
});


/***/ }),

/***/ "rN79":
/*!****************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/Distributions.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parse; });
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");




var Distributions = {
  kde:     vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomKDE"],
  mixture: vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomMixture"],
  normal:  vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomNormal"],
  uniform: vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomUniform"]
};

var DISTRIBUTIONS = 'distributions',
    FUNCTION = 'function',
    FIELD = 'field';

/**
 * Parse a parameter object for a probability distribution.
 * @param {object} def - The distribution parameter object.
 * @param {function():Array<object>} - A method for requesting
 *   source data. Used for distributions (such as KDE) that
 *   require sample data points. This method will only be
 *   invoked if the 'from' parameter for a target data source
 *   is not provided. Typically this method returns backing
 *   source data for a Pulse object.
 * @return {object} - The output distribution object.
 */
function parse(def, data) {
  var func = def[FUNCTION];
  if (!Distributions.hasOwnProperty(func)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unknown distribution function: ' + func);
  }

  var d = Distributions[func]();

  for (var name in def) {
    // if data field, extract values
    if (name === FIELD) {
      d.data((def.from || data()).map(def[name]));
    }

    // if distribution mixture, recurse to parse each definition
    else if (name === DISTRIBUTIONS) {
      d[name](def[name].map(function(_) { return parse(_, data); }));
    }

    // otherwise, simply set the parameter
    else if (typeof d[name] === FUNCTION) {
      d[name](def[name]);
    }
  }

  return d;
}


/***/ }),

/***/ "rSoo":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/optimize.js ***!
  \*******************************************************************/
/*! exports provided: FACET_SCALE_PREFIX, optimizeDataflow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FACET_SCALE_PREFIX", function() { return FACET_SCALE_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optimizeDataflow", function() { return optimizeDataflow; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data */ "NCIN");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregate */ "JbBH");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "LH2n");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./facet */ "LZFT");
/* harmony import */ var _filterinvalid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./filterinvalid */ "dJ5h");
/* harmony import */ var _optimizers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./optimizers */ "KLxh");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stack */ "oiGR");








var FACET_SCALE_PREFIX = 'scale_';
/**
 * Clones the subtree and ignores output nodes except for the leafs, which are renamed.
 */
function cloneSubtree(facet) {
    function clone(node) {
        if (!(node instanceof _facet__WEBPACK_IMPORTED_MODULE_4__["FacetNode"])) {
            var copy_1 = node.clone();
            if (copy_1 instanceof _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"]) {
                var newName = FACET_SCALE_PREFIX + copy_1.getSource();
                copy_1.setSource(newName);
                facet.model.component.data.outputNodes[newName] = copy_1;
            }
            else if (copy_1 instanceof _aggregate__WEBPACK_IMPORTED_MODULE_2__["AggregateNode"] || copy_1 instanceof _stack__WEBPACK_IMPORTED_MODULE_7__["StackNode"]) {
                copy_1.addDimensions(facet.fields);
            }
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(clone)).forEach(function (n) { return n.parent = copy_1; });
            return [copy_1];
        }
        return Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(clone));
    }
    return clone;
}
/**
 * Move facet nodes down to the next fork or output node. Also pull the main output with the facet node.
 * After moving down the facet node, make a copy of the subtree and make it a child of the main output.
 */
function moveFacetDown(node) {
    if (node instanceof _facet__WEBPACK_IMPORTED_MODULE_4__["FacetNode"]) {
        if (node.numChildren() === 1 && !(node.children[0] instanceof _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"])) {
            // move down until we hit a fork or output node
            var child = node.children[0];
            if (child instanceof _aggregate__WEBPACK_IMPORTED_MODULE_2__["AggregateNode"] || child instanceof _stack__WEBPACK_IMPORTED_MODULE_7__["StackNode"]) {
                child.addDimensions(node.fields);
            }
            child.swapWithParent();
            moveFacetDown(node);
        }
        else {
            // move main to facet
            moveMainDownToFacet(node.model.component.data.main);
            // replicate the subtree and place it before the facet's main node
            var copy = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(cloneSubtree(node)));
            copy.forEach(function (c) { return c.parent = node.model.component.data.main; });
        }
    }
    else {
        node.children.forEach(moveFacetDown);
    }
}
function moveMainDownToFacet(node) {
    if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"] && node.type === _data__WEBPACK_IMPORTED_MODULE_0__["MAIN"]) {
        if (node.numChildren() === 1) {
            var child = node.children[0];
            if (!(child instanceof _facet__WEBPACK_IMPORTED_MODULE_4__["FacetNode"])) {
                child.swapWithParent();
                moveMainDownToFacet(node);
            }
        }
    }
}
/**
 * Remove nodes that are not required starting from a root.
 */
function removeUnnecessaryNodes(node) {
    // remove empty null filter nodes
    if (node instanceof _filterinvalid__WEBPACK_IMPORTED_MODULE_5__["FilterInvalidNode"] && Object(_util__WEBPACK_IMPORTED_MODULE_1__["every"])(Object(_util__WEBPACK_IMPORTED_MODULE_1__["vals"])(node.filter), function (f) { return f === null; })) {
        node.remove();
    }
    // remove output nodes that are not required
    if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"] && !node.isRequired()) {
        node.remove();
    }
    node.children.forEach(removeUnnecessaryNodes);
}
/**
 * Return all leaf nodes.
 */
function getLeaves(roots) {
    var leaves = [];
    function append(node) {
        if (node.numChildren() === 0) {
            leaves.push(node);
        }
        else {
            node.children.forEach(append);
        }
    }
    roots.forEach(append);
    return leaves;
}
/**
 * Optimizes the dataflow of the passed in data component.
 */
function optimizeDataflow(dataComponent) {
    var roots = Object(_util__WEBPACK_IMPORTED_MODULE_1__["vals"])(dataComponent.sources);
    roots.forEach(removeUnnecessaryNodes);
    // remove source nodes that don't have any children because they also don't have output nodes
    roots = roots.filter(function (r) { return r.numChildren() > 0; });
    getLeaves(roots).forEach(_optimizers__WEBPACK_IMPORTED_MODULE_6__["iterateFromLeaves"](_optimizers__WEBPACK_IMPORTED_MODULE_6__["removeUnusedSubtrees"]));
    roots = roots.filter(function (r) { return r.numChildren() > 0; });
    getLeaves(roots).forEach(_optimizers__WEBPACK_IMPORTED_MODULE_6__["iterateFromLeaves"](_optimizers__WEBPACK_IMPORTED_MODULE_6__["moveParseUp"]));
    getLeaves(roots).forEach(_optimizers__WEBPACK_IMPORTED_MODULE_6__["removeDuplicateTimeUnits"]);
    roots.forEach(moveFacetDown);
    Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(dataComponent.sources).forEach(function (s) {
        if (dataComponent.sources[s].numChildren() === 0) {
            delete dataComponent.sources[s];
        }
    });
}
//# sourceMappingURL=optimize.js.map

/***/ }),

/***/ "rXX8":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/rule.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "B5NT");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/visit */ "TMLr");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/stroke */ "QXae");
/* harmony import */ var _util_svg_translateItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/svg/translateItem */ "8Mry");






function attr(emit, item) {
  emit('transform', Object(_util_svg_translateItem__WEBPACK_IMPORTED_MODULE_4__["default"])(item));
  emit('x2', item.x2 != null ? item.x2 - (item.x||0) : 0);
  emit('y2', item.y2 != null ? item.y2 - (item.y||0) : 0);
}

function bound(bounds, item) {
  var x1, y1;
  return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds.set(
    x1 = item.x || 0,
    y1 = item.y || 0,
    item.x2 != null ? item.x2 : x1,
    item.y2 != null ? item.y2 : y1
  ), item);
}

function path(context, item, opacity) {
  var x1, y1, x2, y2;

  if (item.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_3__["default"])(context, item, opacity)) {
    x1 = item.x || 0;
    y1 = item.y || 0;
    x2 = item.x2 != null ? item.x2 : x1;
    y2 = item.y2 != null ? item.y2 : y1;
    context.beginPath();
    context.moveTo(x1, y1);
    context.lineTo(x2, y2);
    return true;
  }
  return false;
}

function draw(context, scene, bounds) {
  Object(_util_visit__WEBPACK_IMPORTED_MODULE_1__["visit"])(scene, function(item) {
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check
    var opacity = item.opacity == null ? 1 : item.opacity;
    if (opacity && path(context, item, opacity)) {
      context.stroke();
    }
  });
}

function hit(context, item, x, y) {
  if (!context.isPointInStroke) return false;
  return path(context, item, 1) && context.isPointInStroke(x, y);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'rule',
  tag:    'line',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   draw,
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_2__["pick"])(hit)
});


/***/ }),

/***/ "rlgB":
/*!*****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/defaults.js ***!
  \*****************************************************/
/*! exports provided: DEFAULT_OPTIONS, escapeHTML, createDefaultStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_OPTIONS", function() { return DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escapeHTML", function() { return escapeHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDefaultStyle", function() { return createDefaultStyle; });
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style */ "f4Fa");

var EL_ID = 'vg-tooltip-element';
var DEFAULT_OPTIONS = {
    /**
     * X offset.
     */
    offsetX: 10,
    /**
     * Y offset.
     */
    offsetY: 10,
    /**
     * ID of the tooltip element.
     */
    id: EL_ID,
    /**
     * ID of the tooltip CSS style.
     */
    styleId: 'vega-tooltip-style',
    /**
     * The name of the theme. You can use the CSS class called [THEME]-theme to style the tooltips.
     *
     * There are two predefined themes: "light" (default) and "dark".
     */
    theme: 'light',
    /**
     * Do not use the default styles provided by Vega Tooltip. If you enable this option, you need to use your own styles. It is not necessary to disable the default style when using a custom theme.
     */
    disableDefaultStyle: false,
    /**
     * HTML sanitizer function that removes dangerous HTML to prevent XSS.
     *
     * This should be a function from string to string. You may replace it with a formatter such as a markdown formatter.
     */
    sanitize: escapeHTML,
    /**
     * The maximum recursion depth when printing objects in the tooltip.
     */
    maxDepth: 2,
};
/**
 * Escape special HTML characters.
 *
 * @param value A value to convert to string and HTML-escape.
 */
function escapeHTML(value) {
    return String(value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;');
}
function createDefaultStyle(id) {
    // Just in case this id comes from a user, ensure these is no security issues
    if (!/^[A-Za-z]+[-:.\w]*$/.test(id)) {
        throw new Error('Invalid HTML ID');
    }
    return _style__WEBPACK_IMPORTED_MODULE_0__["default"].toString().replace(EL_ID, id);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGVmYXVsdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxZQUFZLE1BQU0sU0FBUyxDQUFDO0FBRW5DLElBQU0sS0FBSyxHQUFHLG9CQUFvQixDQUFDO0FBRW5DLE1BQU0sQ0FBQyxJQUFNLGVBQWUsR0FBRztJQUM3Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxFQUFFO0lBRVg7O09BRUc7SUFDSCxPQUFPLEVBQUUsRUFBRTtJQUVYOztPQUVHO0lBQ0gsRUFBRSxFQUFFLEtBQUs7SUFFVDs7T0FFRztJQUNILE9BQU8sRUFBRSxvQkFBb0I7SUFFN0I7Ozs7T0FJRztJQUNILEtBQUssRUFBRSxPQUFPO0lBRWQ7O09BRUc7SUFDSCxtQkFBbUIsRUFBRSxLQUFLO0lBRTFCOzs7O09BSUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUVwQjs7T0FFRztJQUNILFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQztBQUlGOzs7O0dBSUc7QUFDSCxNQUFNLHFCQUFxQixLQUFVO0lBQ25DLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQztTQUNqQixPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztTQUN0QixPQUFPLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLENBQUM7QUFFRCxNQUFNLDZCQUE2QixFQUFVO0lBQzNDLDZFQUE2RTtJQUM3RSxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQ25DLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDcEQsQ0FBQyJ9

/***/ }),

/***/ "rrAK":
/*!***************************************************!*\
  !*** ./node_modules/vega-runtime/src/operator.js ***!
  \***************************************************/
/*! exports provided: default, parseOperatorParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseOperatorParameters", function() { return parseOperatorParameters; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "cf9k");
/* harmony import */ var _parameters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parameters */ "q8Se");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "DQPB");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/**
 * Parse a dataflow operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isOperator"])(spec.type) || !spec.type) {
    ctx.operator(spec,
      spec.update ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["operatorExpression"])(spec.update, ctx) : null);
  } else {
    ctx.transform(spec, spec.type);
  }
});

/**
 * Parse and assign operator parameters.
 */
function parseOperatorParameters(spec, ctx) {
  var op, params;
  if (spec.params) {
    if (!(op = ctx.get(spec.id))) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Invalid operator id: ' + spec.id);
    }
    params = Object(_parameters__WEBPACK_IMPORTED_MODULE_1__["default"])(spec.params, ctx);
    ctx.dataflow.connect(op, op.parameters(params));
  }
}


/***/ }),

/***/ "s+XR":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/field.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "WgpX");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/* harmony default export */ __webpack_exports__["default"] = (function(ref, scope, params, fields) {
  return resolve(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ref) ? ref : {datum: ref}, scope, params, fields);
});

function resolve(ref, scope, params, fields) {
  var object, level, field;

  if (ref.signal) {
    object = 'datum';
    field = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(ref.signal, scope, params, fields);
  } else if (ref.group || ref.parent) {
    level = Math.max(1, ref.level || 1);
    object = 'item';

    while (level-- > 0) {
      object += '.mark.group';
    }

    if (ref.parent) {
      field = ref.parent;
      object += '.datum';
    } else {
      field = ref.group;
    }
  } else if (ref.datum) {
    object = 'datum';
    field = ref.datum;
  } else {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Invalid field reference: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(ref));
  }

  if (!ref.signal) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field)) {
      fields[field] = 1; // TODO review field tracking?
      field = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["splitAccessPath"])(field).map(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"]).join('][');
    } else {
      field = resolve(field, scope, params, fields);
    }
  }

  return object + '[' + field + ']';
}


/***/ }),

/***/ "s/HG":
/*!*****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/logical.js ***!
  \*****************************************************/
/*! exports provided: isLogicalOr, isLogicalAnd, isLogicalNot, forEachLeaf, normalizeLogicalOperand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalOr", function() { return isLogicalOr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalAnd", function() { return isLogicalAnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalNot", function() { return isLogicalNot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachLeaf", function() { return forEachLeaf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeLogicalOperand", function() { return normalizeLogicalOperand; });
function isLogicalOr(op) {
    return !!op.or;
}
function isLogicalAnd(op) {
    return !!op.and;
}
function isLogicalNot(op) {
    return !!op.not;
}
function forEachLeaf(op, fn) {
    if (isLogicalNot(op)) {
        forEachLeaf(op.not, fn);
    }
    else if (isLogicalAnd(op)) {
        for (var _i = 0, _a = op.and; _i < _a.length; _i++) {
            var subop = _a[_i];
            forEachLeaf(subop, fn);
        }
    }
    else if (isLogicalOr(op)) {
        for (var _b = 0, _c = op.or; _b < _c.length; _b++) {
            var subop = _c[_b];
            forEachLeaf(subop, fn);
        }
    }
    else {
        fn(op);
    }
}
function normalizeLogicalOperand(op, normalizer) {
    if (isLogicalNot(op)) {
        return { not: normalizeLogicalOperand(op.not, normalizer) };
    }
    else if (isLogicalAnd(op)) {
        return { and: op.and.map(function (o) { return normalizeLogicalOperand(o, normalizer); }) };
    }
    else if (isLogicalOr(op)) {
        return { or: op.or.map(function (o) { return normalizeLogicalOperand(o, normalizer); }) };
    }
    else {
        return normalizer(op);
    }
}
//# sourceMappingURL=logical.js.map

/***/ }),

/***/ "s8Kw":
/*!*****************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/arrays.js ***!
  \*****************************************************/
/*! exports provided: array8, array16, array32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array8", function() { return array8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array16", function() { return array16; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array32", function() { return array32; });
function array8(n) { return new Uint8Array(n); }

function array16(n) { return new Uint16Array(n); }

function array32(n) { return new Uint32Array(n); }


/***/ }),

/***/ "s8zn":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/tooltip.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(handler, event, item, value) {
  var el = handler.element();
  if (el) el.setAttribute('title', formatTooltip(value));
});

function formatTooltip(value) {
  return value == null ? ''
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? formatArray(value)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"])(value) ? formatObject(value)
    : value + '';
}

function formatObject(obj) {
  return Object.keys(obj).map(function(key) {
    var v = obj[key];
    return key + ': ' + (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v) ? formatArray(v) : formatValue(v));
  }).join('\n');
}

function formatArray(value) {
  return '[' + value.map(formatValue).join(', ') + ']';
}

function formatValue(value) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? '[\u2026]'
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"])(value) ? '{\u2026}'
    : value;
}


/***/ }),

/***/ "sGpF":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/filter.js ***!
  \*****************************************************************/
/*! exports provided: FilterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterNode", function() { return FilterNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../predicate */ "WSy+");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "LH2n");




var FilterNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterNode, _super);
    function FilterNode(parent, model, filter) {
        var _this = _super.call(this, parent) || this;
        _this.model = model;
        _this.filter = filter;
        _this.expr = Object(_predicate__WEBPACK_IMPORTED_MODULE_1__["expression"])(_this.model, _this.filter, _this);
        return _this;
    }
    FilterNode.prototype.clone = function () {
        return new FilterNode(null, this.model, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.filter));
    };
    FilterNode.prototype.assemble = function () {
        return {
            type: 'filter',
            expr: this.expr
        };
    };
    return FilterNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"]));

//# sourceMappingURL=filter.js.map

/***/ }),

/***/ "sHgr":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/encoding.js ***!
  \******************************************************/
/*! exports provided: channelHasField, isAggregate, normalizeEncoding, isRanged, fieldDefs, forEach, reduce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelHasField", function() { return channelHasField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregate", function() { return isAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeEncoding", function() { return normalizeEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRanged", function() { return isRanged; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldDefs", function() { return fieldDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ "Hc3/");







function channelHasField(encoding, channel) {
    var channelDef = encoding && encoding[channel];
    if (channelDef) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_6__["some"])(channelDef, function (fieldDef) { return !!fieldDef.field; });
        }
        else {
            return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) || Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["hasConditionalFieldDef"])(channelDef);
        }
    }
    return false;
}
function isAggregate(encoding) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["some"])(_channel__WEBPACK_IMPORTED_MODULE_2__["CHANNELS"], function (channel) {
        if (channelHasField(encoding, channel)) {
            var channelDef = encoding[channel];
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
                return Object(_util__WEBPACK_IMPORTED_MODULE_6__["some"])(channelDef, function (fieldDef) { return !!fieldDef.aggregate; });
            }
            else {
                var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(channelDef);
                return fieldDef && !!fieldDef.aggregate;
            }
        }
        return false;
    });
}
function normalizeEncoding(encoding, mark) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(encoding).reduce(function (normalizedEncoding, channel) {
        var _a;
        if (!Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isChannel"])(channel)) {
            // Drop invalid channel
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].invalidEncodingChannel(channel));
            return normalizedEncoding;
        }
        if (!Object(_channel__WEBPACK_IMPORTED_MODULE_2__["supportMark"])(channel, mark)) {
            // Drop unsupported channel
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].incompatibleChannel(channel, mark));
            return normalizedEncoding;
        }
        // Drop line's size if the field is aggregated.
        if (channel === 'size' && mark === 'line') {
            var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(encoding[channel]);
            if (fieldDef && fieldDef.aggregate) {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].LINE_WITH_VARYING_SIZE);
                return normalizedEncoding;
            }
        }
        // Drop color if either fill or stroke is specified
        if (channel === 'color' && ('fill' in encoding || 'stroke' in encoding)) {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].droppingColor('encoding', { fill: 'fill' in encoding, stroke: 'stroke' in encoding }));
            return normalizedEncoding;
        }
        var channelDef = encoding[channel];
        if (channel === 'detail' ||
            (channel === 'order' && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) && !Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(channelDef)) ||
            (channel === 'tooltip' && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef))) {
            if (channelDef) {
                // Array of fieldDefs for detail channel (or production rule)
                normalizedEncoding[channel] = (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) ? channelDef : [channelDef])
                    .reduce(function (defs, fieldDef) {
                    if (!Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(fieldDef)) {
                        _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].emptyFieldDef(fieldDef, channel));
                    }
                    else {
                        defs.push(Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["normalizeFieldDef"])(fieldDef, channel));
                    }
                    return defs;
                }, []);
            }
        }
        else {
            var fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(encoding[channel]);
            if (fieldDef && Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_type__WEBPACK_IMPORTED_MODULE_5__["Type"].LATITUDE, _type__WEBPACK_IMPORTED_MODULE_5__["Type"].LONGITUDE], fieldDef.type)) {
                var _b = channel, _ = normalizedEncoding[_b], newEncoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](normalizedEncoding, [typeof _b === "symbol" ? _b : _b + ""]);
                var newChannel = channel === 'x' ? 'longitude' :
                    channel === 'y' ? 'latitude' :
                        channel === 'x2' ? 'longitude2' :
                            channel === 'y2' ? 'latitude2' : undefined;
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].latLongDeprecated(channel, fieldDef.type, newChannel));
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, newEncoding, (_a = {}, _a[newChannel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["normalize"])(fieldDef, channel), { type: 'quantitative' }), _a));
            }
            if (!Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) && !Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(channelDef) && !Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isConditionalDef"])(channelDef)) {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].emptyFieldDef(channelDef, channel));
                return normalizedEncoding;
            }
            normalizedEncoding[channel] = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["normalize"])(channelDef, channel);
        }
        return normalizedEncoding;
    }, {});
}
function isRanged(encoding) {
    return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));
}
function fieldDefs(encoding) {
    var arr = [];
    _channel__WEBPACK_IMPORTED_MODULE_2__["CHANNELS"].forEach(function (channel) {
        if (channelHasField(encoding, channel)) {
            var channelDef = encoding[channel];
            (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(function (def) {
                if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(def)) {
                    arr.push(def);
                }
                else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["hasConditionalFieldDef"])(def)) {
                    arr.push(def.condition);
                }
            });
        }
    });
    return arr;
}
function forEach(mapping, f, thisArg) {
    if (!mapping) {
        return;
    }
    var _loop_1 = function (channel) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(mapping[channel])) {
            mapping[channel].forEach(function (channelDef) {
                f.call(thisArg, channelDef, channel);
            });
        }
        else {
            f.call(thisArg, mapping[channel], channel);
        }
    };
    for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(mapping); _i < _a.length; _i++) {
        var channel = _a[_i];
        _loop_1(channel);
    }
}
function reduce(mapping, f, init, thisArg) {
    if (!mapping) {
        return init;
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(mapping).reduce(function (r, channel) {
        var map = mapping[channel];
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(map)) {
            return map.reduce(function (r1, channelDef) {
                return f.call(thisArg, r1, channelDef, channel);
            }, r);
        }
        else {
            return f.call(thisArg, r, map, channel);
        }
    }, init);
}
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "sXDa":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/scale.js ***!
  \**************************************************************/
/*! exports provided: default, getScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScale", function() { return getScale; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "WgpX");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "s+XR");
/* harmony import */ var _expression_prefixes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../expression/prefixes */ "bnRp");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "J29t");





/* harmony default export */ __webpack_exports__["default"] = (function(enc, value, scope, params, fields) {
  var scale = getScale(enc.scale, scope, params, fields),
      interp, func, flag;

  if (enc.range != null) {
    // pull value from scale range
    interp = +enc.range;
    func = scale + '.range()';
    value = (interp === 0) ? (func + '[0]')
      : '($=' + func + ',' + ((interp === 1) ? '$[$.length-1]'
      : '$[0]+' + interp + '*($[$.length-1]-$[0])') + ')';
  } else {
    // run value through scale and/or pull scale bandwidth
    if (value !== undefined) value = scale + '(' + value + ')';

    if (enc.band && (flag = hasBandwidth(enc.scale, scope))) {
      func = scale + '.bandwidth';
      interp = +enc.band;
      interp = func + '()' + (interp===1 ? '' : '*' + interp);

      // if we don't know the scale type, check for bandwidth
      if (flag < 0) interp = '(' + func + '?' + interp + ':0)';

      value = (value ? value + '+' : '') + interp;

      if (enc.extra) {
        // include logic to handle extraneous elements
        value = '(datum.extra?' + scale + '(datum.extra.value):' + value + ')';
      }
    }

    if (value == null) value = '0';
  }

  return value;
});

function hasBandwidth(name, scope) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(name)) return -1;
  var type = scope.scaleType(name);
  return type === 'band' || type === 'point' ? 1 : 0;
}

function getScale(name, scope, params, fields) {
  var scaleName;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(name)) {
    // direct scale lookup; add scale as parameter
    scaleName = _expression_prefixes__WEBPACK_IMPORTED_MODULE_2__["scalePrefix"] + name;
    if (!params.hasOwnProperty(scaleName)) {
      params[scaleName] = scope.scaleRef(name);
    }
    scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(scaleName);
  } else {
    // indirect scale lookup; add all scales as parameters
    for (scaleName in scope.scales) {
      params[_expression_prefixes__WEBPACK_IMPORTED_MODULE_2__["scalePrefix"] + scaleName] = scope.scaleRef(scaleName);
    }
    scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(_expression_prefixes__WEBPACK_IMPORTED_MODULE_2__["scalePrefix"]) + '+'
      + (name.signal
        ? '(' + Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(name.signal, scope, params, fields) + ')'
        : Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])(name, scope, params, fields));
  }

  return '_[' + scaleName + ']';
}


/***/ }),

/***/ "sYtO":
/*!**************************************************!*\
  !*** ./node_modules/topojson-client/src/mesh.js ***!
  \**************************************************/
/*! exports provided: default, meshArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return meshArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "+xE1");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "IAF7");



/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, meshArcs.apply(this, arguments));
});

function meshArcs(topology, object, filter) {
  var arcs, i, n;
  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);
  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;
  return {type: "MultiLineString", arcs: Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs)};
}

function extractArcs(topology, object, filter) {
  var arcs = [],
      geomsByArc = [],
      geom;

  function extract0(i) {
    var j = i < 0 ? ~i : i;
    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});
  }

  function extract1(arcs) {
    arcs.forEach(extract0);
  }

  function extract2(arcs) {
    arcs.forEach(extract1);
  }

  function extract3(arcs) {
    arcs.forEach(extract2);
  }

  function geometry(o) {
    switch (geom = o, o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "LineString": extract1(o.arcs); break;
      case "MultiLineString": case "Polygon": extract2(o.arcs); break;
      case "MultiPolygon": extract3(o.arcs); break;
    }
  }

  geometry(object);

  geomsByArc.forEach(filter == null
      ? function(geoms) { arcs.push(geoms[0].i); }
      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });

  return arcs;
}


/***/ }),

/***/ "sbHs":
/*!******************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Partition.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Partition; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "CLBL");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");




var Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];

/**
 * Partition tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Partition(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Partition.Definition = {
  "type": "Partition",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "round", "type": "boolean", "default": false },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Partition, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.layout = d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["partition"];

prototype.params = ['size', 'round', 'padding'];

prototype.fields = Output;


/***/ }),

/***/ "scKy":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/component.js ***!
  \*********************************************************************/
/*! exports provided: ScaleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleComponent", function() { return ScaleComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../split */ "cq+n");


var ScaleComponent = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ScaleComponent, _super);
    function ScaleComponent(name, typeWithExplicit) {
        var _this = _super.call(this, {}, // no initial explicit property
        { name: name } // name as initial implicit property
        ) || this;
        _this.merged = false;
        _this.domains = [];
        _this.setWithExplicit('type', typeWithExplicit);
        return _this;
    }
    return ScaleComponent;
}(_split__WEBPACK_IMPORTED_MODULE_1__["Split"]));

//# sourceMappingURL=component.js.map

/***/ }),

/***/ "t1ED":
/*!******************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/gradient.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(context, gradient, bounds) {
  var w = bounds.width(),
      h = bounds.height(),
      x1 = bounds.x1 + gradient.x1 * w,
      y1 = bounds.y1 + gradient.y1 * h,
      x2 = bounds.x1 + gradient.x2 * w,
      y2 = bounds.y1 + gradient.y2 * h,
      stop = gradient.stops,
      i = 0,
      n = stop.length,
      linearGradient = context.createLinearGradient(x1, y1, x2, y2);

  for (; i<n; ++i) {
    linearGradient.addColorStop(stop[i].offset, stop[i].color);
  }

  return linearGradient;
});


/***/ }),

/***/ "tG+F":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/text.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "wOpL");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/text */ "/fEO");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/visit */ "TMLr");
/* harmony import */ var _util_canvas_fill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/fill */ "6rlB");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/pick */ "8a2X");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/stroke */ "QXae");
/* harmony import */ var _util_svg_translate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/svg/translate */ "E/AX");








var textAlign = {
  'left':   'start',
  'center': 'middle',
  'right':  'end'
};

var tempBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

function attr(emit, item) {
  var dx = item.dx || 0,
      dy = (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_1__["offset"])(item),
      x = item.x || 0,
      y = item.y || 0,
      a = item.angle || 0,
      r = item.radius || 0, t;

  if (r) {
    t = (item.theta || 0) - Math.PI/2;
    x += r * Math.cos(t);
    y += r * Math.sin(t);
  }

  emit('text-anchor', textAlign[item.align] || 'start');

  if (a) {
    t = Object(_util_svg_translate__WEBPACK_IMPORTED_MODULE_6__["default"])(x, y) + ' rotate('+a+')';
    if (dx || dy) t += ' ' + Object(_util_svg_translate__WEBPACK_IMPORTED_MODULE_6__["default"])(dx, dy);
  } else {
    t = Object(_util_svg_translate__WEBPACK_IMPORTED_MODULE_6__["default"])(x + dx, y + dy);
  }
  emit('transform', t);
}

function bound(bounds, item, noRotate) {
  var h = _util_text__WEBPACK_IMPORTED_MODULE_1__["textMetrics"].height(item),
      a = item.align,
      r = item.radius || 0,
      x = item.x || 0,
      y = item.y || 0,
      dx = item.dx || 0,
      dy = (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_1__["offset"])(item) - Math.round(0.8*h), // use 4/5 offset
      w, t;

  if (r) {
    t = (item.theta || 0) - Math.PI/2;
    x += r * Math.cos(t);
    y += r * Math.sin(t);
  }

  // horizontal alignment
  w = _util_text__WEBPACK_IMPORTED_MODULE_1__["textMetrics"].width(item);
  if (a === 'center') {
    dx -= (w / 2);
  } else if (a === 'right') {
    dx -= w;
  } else {
    // left by default, do nothing
  }

  bounds.set(dx+=x, dy+=y, dx+w, dy+h);
  if (item.angle && !noRotate) {
    bounds.rotate(item.angle*Math.PI/180, x, y);
  }
  return bounds.expand(noRotate || !w ? 0 : 1);
}

function draw(context, scene, bounds) {
  Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(scene, function(item) {
    var opacity, x, y, r, t, str;
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check
    if (!(str = Object(_util_text__WEBPACK_IMPORTED_MODULE_1__["textValue"])(item))) return; // get text string

    opacity = item.opacity == null ? 1 : item.opacity;
    if (opacity === 0) return;

    context.font = Object(_util_text__WEBPACK_IMPORTED_MODULE_1__["font"])(item);
    context.textAlign = item.align || 'left';

    x = item.x || 0;
    y = item.y || 0;
    if ((r = item.radius)) {
      t = (item.theta || 0) - Math.PI/2;
      x += r * Math.cos(t);
      y += r * Math.sin(t);
    }

    if (item.angle) {
      context.save();
      context.translate(x, y);
      context.rotate(item.angle * Math.PI/180);
      x = y = 0; // reset x, y
    }
    x += (item.dx || 0);
    y += (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_1__["offset"])(item);

    if (item.fill && Object(_util_canvas_fill__WEBPACK_IMPORTED_MODULE_3__["default"])(context, item, opacity)) {
      context.fillText(str, x, y);
    }
    if (item.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_5__["default"])(context, item, opacity)) {
      context.strokeText(str, x, y);
    }
    if (item.angle) context.restore();
  });
}

function hit(context, item, x, y, gx, gy) {
  if (item.fontSize <= 0) return false;
  if (!item.angle) return true; // bounds sufficient if no rotation

  // project point into space of unrotated bounds
  var b = bound(tempBounds, item, true),
      a = -item.angle * Math.PI / 180,
      cos = Math.cos(a),
      sin = Math.sin(a),
      ix = item.x,
      iy = item.y,
      px = cos*gx - sin*gy + (ix - ix*cos + iy*sin),
      py = sin*gx + cos*gy + (iy - ix*sin - iy*cos);

  return b.contains(px, py);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'text',
  tag:    'text',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   draw,
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__["pick"])(hit)
});


/***/ }),

/***/ "tMQJ":
/*!*********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/padding.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  spec = spec || config.padding;
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(spec)
    ? {
        top:    number(spec.top),
        bottom: number(spec.bottom),
        left:   number(spec.left),
        right:  number(spec.right)
      }
    : paddingObject(number(spec));
});

function number(_) {
  return +_ || 0;
}

function paddingObject(_) {
  return {top: _, bottom: _, left: _, right: _};
}


/***/ }),

/***/ "tbDw":
/*!*******************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/index.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "cKzl");
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json */ "mw3f");
/* harmony import */ var _topojson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./topojson */ "3TMy");




var formats = {
  dsv: _dsv__WEBPACK_IMPORTED_MODULE_0__["default"],
  csv: Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["delimitedFormat"])(','),
  tsv: Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["delimitedFormat"])('\t'),
  json: _json__WEBPACK_IMPORTED_MODULE_1__["default"],
  topojson: _topojson__WEBPACK_IMPORTED_MODULE_2__["default"]
};

/* harmony default export */ __webpack_exports__["default"] = (function(name, format) {
  if (arguments.length > 1) {
    formats[name] = format;
    return this;
  } else {
    return formats.hasOwnProperty(name) ? formats[name] : null;
  }
});


/***/ }),

/***/ "tcAQ":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/assemble.js ***!
  \*********************************************************************/
/*! exports provided: assembleLegends */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLegends", function() { return assembleLegends; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ "2Qqt");


function assembleLegends(model) {
    var legendComponentIndex = model.component.legends;
    var legendByDomain = {};
    for (var _i = 0, _a = Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(legendComponentIndex); _i < _a.length; _i++) {
        var channel = _a[_i];
        var scaleComponent = model.getScaleComponent(channel);
        var domainHash = Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(scaleComponent.domains);
        if (legendByDomain[domainHash]) {
            for (var _b = 0, _c = legendByDomain[domainHash]; _b < _c.length; _b++) {
                var mergedLegendComponent = _c[_b];
                var merged = Object(_parse__WEBPACK_IMPORTED_MODULE_1__["mergeLegendComponent"])(mergedLegendComponent, legendComponentIndex[channel]);
                if (!merged) {
                    // If cannot merge, need to add this legend separately
                    legendByDomain[domainHash].push(legendComponentIndex[channel]);
                }
            }
        }
        else {
            legendByDomain[domainHash] = [legendComponentIndex[channel].clone()];
        }
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_0__["vals"])(legendByDomain)).map(function (legendCmpt) { return legendCmpt.combine(); });
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "tnHq":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/interactive.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  return spec && spec.signal ? scope.signalRef(spec.signal)
    : spec === false ? false
    : true;
});


/***/ }),

/***/ "u/Z8":
/*!*********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/trigger.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "Ut0u");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "+JJI");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, name) {
  var remove = spec.remove,
      insert = spec.insert,
      toggle = spec.toggle,
      modify = spec.modify,
      values = spec.values,
      op = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])()),
      update, expr;

  update = 'if(' + spec.trigger + ',modify("'
    + name + '",'
    + [insert, remove, toggle, modify, values]
        .map(function(_) { return _ == null ? 'null' : _; })
        .join(',')
    + '),0)';

  expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update, scope);
  op.update = expr.$expr;
  op.params = expr.$params;
});


/***/ }),

/***/ "uLgU":
/*!******************************************!*\
  !*** ./node_modules/vega-force/index.js ***!
  \******************************************/
/*! exports provided: force */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Force__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Force */ "7qzI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "force", function() { return _src_Force__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "v+OT":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/trap.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(view, fn) {
  return !fn ? null : function() {
    try {
      fn.apply(this, arguments);
    } catch (error) {
      view.error(error);
    }
  };
});


/***/ }),

/***/ "v1SV":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/signal.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var OUTER = 'outer',
    OUTER_INVALID = ['value', 'update', 'react', 'bind'];

function outerError(prefix, name) {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])(prefix + ' for "outer" push: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(name));
}

/* harmony default export */ __webpack_exports__["default"] = (function(signal, scope) {
  var name = signal.name;

  if (signal.push === OUTER) {
    // signal must already be defined, raise error if not
    if (!scope.signals[name]) outerError('No prior signal definition', name);
    // signal push must not use properties reserved for standard definition
    OUTER_INVALID.forEach(function(prop) {
      if (signal[prop] !== undefined) outerError('Invalid property ', prop);
    });
  } else {
    // define a new signal in the current scope
    var op = scope.addSignal(name, signal.value);
    if (signal.react === false) op.react = false;
    if (signal.bind) scope.addBinding(name, signal.bind);
  }
});


/***/ }),

/***/ "v2iz":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/projection.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(proj, scope) {
  var params = {};

  for (var name in proj) {
    if (name === 'name') continue;
    params[name] = parseParameter(proj[name], name, scope);
  }

  scope.addProjection(proj.name, params);
});

function parseParameter(_, name, scope) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_) ? _.map(function(_) { return parseParameter(_, name, scope); })
    : !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(_) ? _
    : _.signal ? scope.signalRef(_.signal)
    : name === 'fit' ? _
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Unsupported parameter object: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(_));
}


/***/ }),

/***/ "vF6P":
/*!****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/Handler.js ***!
  \****************************************************/
/*! exports provided: Handler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return Handler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ "rlgB");
/* harmony import */ var _formatValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatValue */ "G+K7");
/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./position */ "6GNL");




/**
 * The tooltip handler class.
 */
var Handler = /** @class */ (function () {
    /**
     * Create the tooltip handler and initialize the element and style.
     *
     * @param options Tooltip Options
     */
    function Handler(options) {
        this.options = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _defaults__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_OPTIONS"], options);
        var elementId = this.options.id;
        // bind this to call
        this.call = this.tooltip_handler.bind(this);
        // prepend a default stylesheet for tooltips to the head
        if (!this.options.disableDefaultStyle && !document.getElementById(this.options.styleId)) {
            var style = document.createElement('style');
            style.setAttribute('id', this.options.styleId);
            style.innerHTML = Object(_defaults__WEBPACK_IMPORTED_MODULE_1__["createDefaultStyle"])(elementId);
            if (document.head.childNodes.length > 0) {
                document.head.insertBefore(style, document.head.childNodes[0]);
            }
            else {
                document.head.appendChild(style);
            }
        }
        // append a div element that we use as a tooltip unless it already exists
        this.el = document.getElementById(elementId);
        if (!this.el) {
            this.el = document.createElement('div');
            this.el.setAttribute('id', elementId);
            this.el.classList.add('vg-tooltip');
            document.body.appendChild(this.el);
        }
    }
    /**
     * The tooltip handler function.
     */
    Handler.prototype.tooltip_handler = function (handler, event, item, value) {
        // console.log(handler, event, item, value);
        // hide tooltip for null, undefined, or empty string values
        if (value == null || value === '') {
            this.el.classList.remove('visible', this.options.theme + "-theme");
            return;
        }
        // set the tooltip content
        this.el.innerHTML = Object(_formatValue__WEBPACK_IMPORTED_MODULE_2__["formatValue"])(value, this.options.sanitize, this.options.maxDepth);
        // make the tooltip visible
        this.el.classList.add('visible', this.options.theme + "-theme");
        var _a = Object(_position__WEBPACK_IMPORTED_MODULE_3__["calculatePosition"])(event, this.el.getBoundingClientRect(), this.options.offsetX, this.options.offsetY), x = _a.x, y = _a.y;
        this.el.setAttribute('style', "top: " + y + "px; left: " + x + "px");
    };
    return Handler;
}());

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9IYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFXLE1BQU0sWUFBWSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRS9DOztHQUVHO0FBQ0g7SUFnQkU7Ozs7T0FJRztJQUNILGlCQUFZLE9BQTBCO1FBQ3BDLElBQUksQ0FBQyxPQUFPLHdCQUFRLGVBQWUsRUFBSyxPQUFPLENBQUUsQ0FBQztRQUNsRCxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUVsQyxvQkFBb0I7UUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU1Qyx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDdkYsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM5QyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQy9DLEtBQUssQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7WUFFaEQsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUN2QyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoRTtpQkFBTTtnQkFDTCxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNsQztTQUNGO1FBRUQseUVBQXlFO1FBQ3pFLElBQUksQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUUsQ0FBQztRQUM5QyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNaLElBQUksQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBRXBDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUNwQztJQUNILENBQUM7SUFFRDs7T0FFRztJQUNLLGlDQUFlLEdBQXZCLFVBQXdCLE9BQVksRUFBRSxLQUFpQixFQUFFLElBQVMsRUFBRSxLQUFVO1FBQzVFLDRDQUE0QztRQUU1QywyREFBMkQ7UUFDM0QsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDakMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBSyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssV0FBUSxDQUFDLENBQUM7WUFDbkUsT0FBTztTQUNSO1FBRUQsMEJBQTBCO1FBQzFCLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVyRiwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBSyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssV0FBUSxDQUFDLENBQUM7UUFFMUQsSUFBQSwwR0FLTCxFQUxPLFFBQUMsRUFBRSxRQUFDLENBS1Y7UUFFRixJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsVUFBUSxDQUFDLGtCQUFhLENBQUMsT0FBSSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNILGNBQUM7QUFBRCxDQUFDLEFBL0VELElBK0VDIn0=

/***/ }),

/***/ "vJ6+":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/shape.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "aOVj");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markItemPath */ "AiIN");



/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_1__["default"])('shape', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["shape"]));


/***/ }),

/***/ "vSVW":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/debounce.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(delay, handler) {
  var tid, evt;

  function callback() {
    handler(evt);
    tid = evt = null;
  }

  return function(e) {
    evt = e;
    if (tid) clearTimeout(tid);
    tid = setTimeout(callback, delay);
  };
});


/***/ }),

/***/ "vVSx":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/geopoint.js ***!
  \*******************************************************************/
/*! exports provided: GeoPointNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoPointNode", function() { return GeoPointNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "LH2n");




var GeoPointNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GeoPointNode, _super);
    function GeoPointNode(parent, projection, fields, as) {
        var _this = _super.call(this, parent) || this;
        _this.projection = projection;
        _this.fields = fields;
        _this.as = as;
        return _this;
    }
    GeoPointNode.prototype.clone = function () {
        return new GeoPointNode(null, this.projection, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.fields), Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.as));
    };
    GeoPointNode.parseAll = function (parent, model) {
        if (!model.projectionName()) {
            return parent;
        }
        [[_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE2"]]].forEach(function (coordinates) {
            var pair = coordinates.map(function (channel) { return model.channelHasField(channel) ? model.fieldDef(channel).field : undefined; });
            var suffix = coordinates[0] === _channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE2"] ? '2' : '';
            if (pair[0] || pair[1]) {
                parent = new GeoPointNode(parent, model.projectionName(), pair, [model.getName('x' + suffix), model.getName('y' + suffix)]);
            }
        });
        return parent;
    };
    GeoPointNode.prototype.assemble = function () {
        return {
            type: 'geopoint',
            projection: this.projection,
            fields: this.fields,
            as: this.as
        };
    };
    return GeoPointNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"]));

//# sourceMappingURL=geopoint.js.map

/***/ }),

/***/ "vfFY":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/valueref.js ***!
  \*******************************************************************/
/*! exports provided: position, position2, getOffset, bin, fieldRef, bandRef, midPoint, text, mid, getDefaultRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "position", function() { return position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "position2", function() { return position2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOffset", function() { return getOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return bin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldRef", function() { return fieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandRef", function() { return bandRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "midPoint", function() { return midPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mid", function() { return mid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultRef", function() { return getDefaultRef; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fielddef */ "d61h");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "6ow0");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "50Px");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common */ "ll1p");

/**
 * Utility files for producing Vega ValueRef for marks
 */








// TODO: we need to find a way to refactor these so that scaleName is a part of scale
// but that's complicated.  For now, this is a huge step moving forward.
/**
 * @return Vega ValueRef for normal x- or y-position without projection
 */
function position(channel, channelDef, scaleName, scale, stack, defaultRef) {
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) && stack && channel === stack.fieldChannel) {
        // x or y use stack_end so that stacked line's point mark use stack_end too.
        return fieldRef(channelDef, scaleName, { suffix: 'end' });
    }
    return midPoint(channel, channelDef, scaleName, scale, stack, defaultRef);
}
/**
 * @return Vega ValueRef for normal x2- or y2-position without projection
 */
function position2(channel, aFieldDef, a2fieldDef, scaleName, scale, stack, defaultRef) {
    if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(aFieldDef) && stack &&
        // If fieldChannel is X and channel is X2 (or Y and Y2)
        channel.charAt(0) === stack.fieldChannel.charAt(0)) {
        return fieldRef(aFieldDef, scaleName, { suffix: 'start' });
    }
    return midPoint(channel, a2fieldDef, scaleName, scale, stack, defaultRef);
}
function getOffset(channel, markDef) {
    var offsetChannel = channel + 'Offset';
    // TODO: in the future read from encoding channel too
    var markDefOffsetValue = markDef[offsetChannel];
    if (markDefOffsetValue) {
        return markDefOffsetValue;
    }
    return undefined;
}
/**
 * Value Ref for binned fields
 */
function bin(fieldDef, scaleName, side, offset) {
    var binSuffix = side === 'start' ? undefined : 'end';
    return fieldRef(fieldDef, scaleName, { binSuffix: binSuffix }, offset ? { offset: offset } : {});
}
function fieldRef(fieldDef, scaleName, opt, mixins) {
    var ref = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (scaleName ? { scale: scaleName } : {}), { field: Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, opt) });
    if (mixins) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, ref, mixins);
    }
    return ref;
}
function bandRef(scaleName, band) {
    if (band === void 0) { band = true; }
    return {
        scale: scaleName,
        band: band
    };
}
/**
 * Signal that returns the middle of a bin. Should only be used with x and y.
 */
function binMidSignal(fieldDef, scaleName) {
    return {
        signal: "(" +
            ("scale(\"" + scaleName + "\", " + Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: 'datum' }) + ")") +
            " + " +
            ("scale(\"" + scaleName + "\", " + Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'end', expr: 'datum' }) + ")") +
            ")/2"
    };
}
/**
 * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.
 */
function midPoint(channel, channelDef, scaleName, scale, stack, defaultRef) {
    // TODO: datum support
    if (channelDef) {
        /* istanbul ignore else */
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef)) {
            if (channelDef.bin) {
                // Use middle only for x an y to place marks in the center between start and end of the bin range.
                // We do not use the mid point for other channels (e.g. size) so that properties of legends and marks match.
                if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel) && channelDef.type === _type__WEBPACK_IMPORTED_MODULE_6__["QUANTITATIVE"]) {
                    if (stack && stack.impute) {
                        // For stack, we computed bin_mid so we can impute.
                        return fieldRef(channelDef, scaleName, { binSuffix: 'mid' });
                    }
                    // For non-stack, we can just calculate bin mid on the fly using signal.
                    return binMidSignal(channelDef, scaleName);
                }
                return fieldRef(channelDef, scaleName, Object(_common__WEBPACK_IMPORTED_MODULE_8__["binRequiresRange"])(channelDef, channel) ? { binSuffix: 'range' } : {});
            }
            if (scale) {
                var scaleType = scale.get('type');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(scaleType)) {
                    if (scaleType === 'band') {
                        // For band, to get mid point, need to offset by half of the band
                        return fieldRef(channelDef, scaleName, { binSuffix: 'range' }, { band: 0.5 });
                    }
                    return fieldRef(channelDef, scaleName, { binSuffix: 'range' });
                }
            }
            return fieldRef(channelDef, scaleName, {}); // no need for bin suffix
        }
        else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(channelDef)) {
            var value = channelDef.value;
            if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['x', 'x2'], channel) && value === 'width') {
                return { field: { group: 'width' } };
            }
            else if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['y', 'y2'], channel) && value === 'height') {
                return { field: { group: 'height' } };
            }
            return { value: value };
        }
        // If channelDef is neither field def or value def, it's a condition-only def.
        // In such case, we will use default ref.
    }
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(defaultRef) ? defaultRef() : defaultRef;
}
function text(textDef, config) {
    // text
    if (textDef) {
        if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(textDef)) {
            return Object(_common__WEBPACK_IMPORTED_MODULE_8__["formatSignalRef"])(textDef, textDef.format, 'datum', config);
        }
        else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(textDef)) {
            return { value: textDef.value };
        }
    }
    return undefined;
}
function mid(sizeRef) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, sizeRef, { mult: 0.5 });
}
/**
 * Whether the scale definitely includes zero in the domain
 */
function domainDefinitelyIncludeZero(scale) {
    if (scale.get('zero') !== false) {
        return true;
    }
    var domains = scale.domains;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(domains)) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_7__["some"])(domains, function (d) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(d) && d.length === 2 && d[0] <= 0 && d[1] >= 0; });
    }
    return false;
}
function getDefaultRef(defaultRef, channel, scaleName, scale, mark) {
    return function () {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(defaultRef)) {
            if (scaleName) {
                var scaleType = scale.get('type');
                if (Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])([_scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].LOG, _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].TIME, _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].UTC], scaleType)) {
                    // Log scales cannot have zero.
                    // Zero in time scale is arbitrary, and does not affect ratio.
                    // (Time is an interval level of measurement, not ratio).
                    // See https://en.wikipedia.org/wiki/Level_of_measurement for more info.
                    if (mark === 'bar' || mark === 'area') {
                        _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].nonZeroScaleUsedWithLengthMark(mark, channel, { scaleType: scaleType }));
                    }
                }
                else {
                    if (domainDefinitelyIncludeZero(scale)) {
                        return {
                            scale: scaleName,
                            value: 0
                        };
                    }
                    if (mark === 'bar' || mark === 'area') {
                        _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].nonZeroScaleUsedWithLengthMark(mark, channel, { zeroFalse: scale.explicit.zero === false }));
                    }
                }
            }
            if (defaultRef === 'zeroOrMin') {
                return channel === 'x' ? { value: 0 } : { field: { group: 'height' } };
            }
            else { // zeroOrMax
                return channel === 'x' ? { field: { group: 'width' } } : { value: 0 };
            }
        }
        return defaultRef;
    };
}
//# sourceMappingURL=valueref.js.map

/***/ }),

/***/ "vy8A":
/*!**********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/CrossFilter.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CrossFilter; });
/* harmony import */ var _Bitmaps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bitmaps */ "nawu");
/* harmony import */ var _Dimension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Dimension */ "pawb");
/* harmony import */ var _SortedIndex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SortedIndex */ "cGI2");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "J29t");






/**
 * An indexed multi-dimensional filter.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} params.fields - An array of dimension accessors to filter.
 * @param {Array} params.query - An array of per-dimension range queries.
 */
function CrossFilter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, Object(_Bitmaps__WEBPACK_IMPORTED_MODULE_0__["default"])(), params);
  this._indices = null;
  this._dims = null;
}

CrossFilter.Definition = {
  "type": "CrossFilter",
  "metadata": {},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "query", "type": "array", "array": true, "required": true,
      "content": {"type": "number", "array": true, "length": 2} }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["inherits"])(CrossFilter, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!this._dims) {
    return this.init(_, pulse);
  } else {
    var init = _.modified('fields')
          || _.fields.some(function(f) { return pulse.modified(f.fields); });

    return init
      ? this.reinit(_, pulse)
      : this.eval(_, pulse);
  }
};

prototype.init = function(_, pulse) {
  var fields = _.fields,
      query = _.query,
      indices = this._indices = {},
      dims = this._dims = [],
      m = query.length,
      i = 0, key, index;

  // instantiate indices and dimensions
  for (; i<m; ++i) {
    key = fields[i].fname;
    index = indices[key] || (indices[key] = Object(_SortedIndex__WEBPACK_IMPORTED_MODULE_2__["default"])());
    dims.push(Object(_Dimension__WEBPACK_IMPORTED_MODULE_1__["default"])(index, i, query[i]));
  }

  return this.eval(_, pulse);
};

prototype.reinit = function(_, pulse) {
  var output = pulse.materialize().fork(),
      fields = _.fields,
      query = _.query,
      indices = this._indices,
      dims = this._dims,
      bits = this.value,
      curr = bits.curr(),
      prev = bits.prev(),
      all = bits.all(),
      out = (output.rem = output.add),
      mod = output.mod,
      m = query.length,
      adds = {}, add, index, key,
      mods, remMap, modMap, i, n, f;

  // set prev to current state
  prev.set(curr);

  // if pulse has remove tuples, process them first
  if (pulse.rem.length) {
    remMap = this.remove(_, pulse, output);
  }

  // if pulse has added tuples, add them to state
  if (pulse.add.length) {
    bits.add(pulse.add);
  }

  // if pulse has modified tuples, create an index map
  if (pulse.mod.length) {
    modMap = {};
    for (mods=pulse.mod, i=0, n=mods.length; i<n; ++i) {
      modMap[mods[i]._index] = 1;
    }
  }

  // re-initialize indices as needed, update curr bitmap
  for (i=0; i<m; ++i) {
    f = fields[i];
    if (!dims[i] || _.modified('fields', i) || pulse.modified(f.fields)) {
      key = f.fname;
      if (!(add = adds[key])) {
        indices[key] = index = Object(_SortedIndex__WEBPACK_IMPORTED_MODULE_2__["default"])();
        adds[key] = add = index.insert(f, pulse.source, 0);
      }
      dims[i] = Object(_Dimension__WEBPACK_IMPORTED_MODULE_1__["default"])(index, i, query[i]).onAdd(add, curr);
    }
  }

  // visit each tuple
  // if filter state changed, push index to add/rem
  // else if in mod and passes a filter, push index to mod
  for (i=0, n=bits.data().length; i<n; ++i) {
    if (remMap[i]) { // skip if removed tuple
      continue;
    } else if (prev[i] !== curr[i]) { // add if state changed
      out.push(i);
    } else if (modMap[i] && curr[i] !== all) { // otherwise, pass mods through
      mod.push(i);
    }
  }

  bits.mask = (1 << m) - 1;
  return output;
};

prototype.eval = function(_, pulse) {
  var output = pulse.materialize().fork(),
      m = this._dims.length,
      mask = 0;

  if (pulse.rem.length) {
    this.remove(_, pulse, output);
    mask |= (1 << m) - 1;
  }

  if (_.modified('query') && !_.modified('fields')) {
    mask |= this.update(_, pulse, output);
  }

  if (pulse.add.length) {
    this.insert(_, pulse, output);
    mask |= (1 << m) - 1;
  }

  if (pulse.mod.length) {
    this.modify(pulse, output);
    mask |= (1 << m) - 1;
  }

  this.value.mask = mask;
  return output;
};

prototype.insert = function(_, pulse, output) {
  var tuples = pulse.add,
      bits = this.value,
      dims = this._dims,
      indices = this._indices,
      fields = _.fields,
      adds = {},
      out = output.add,
      k = bits.size(),
      n = k + tuples.length,
      m = dims.length, j, key, add;

  // resize bitmaps and add tuples as needed
  bits.resize(n, m);
  bits.add(tuples);

  var curr = bits.curr(),
      prev = bits.prev(),
      all  = bits.all();

  // add to dimensional indices
  for (j=0; j<m; ++j) {
    key = fields[j].fname;
    add = adds[key] || (adds[key] = indices[key].insert(fields[j], tuples, k));
    dims[j].onAdd(add, curr);
  }

  // set previous filters, output if passes at least one filter
  for (; k<n; ++k) {
    prev[k] = all;
    if (curr[k] !== all) out.push(k);
  }
};

prototype.modify = function(pulse, output) {
  var out = output.mod,
      bits = this.value,
      curr = bits.curr(),
      all  = bits.all(),
      tuples = pulse.mod,
      i, n, k;

  for (i=0, n=tuples.length; i<n; ++i) {
    k = tuples[i]._index;
    if (curr[k] !== all) out.push(k);
  }
};

prototype.remove = function(_, pulse, output) {
  var indices = this._indices,
      bits = this.value,
      curr = bits.curr(),
      prev = bits.prev(),
      all  = bits.all(),
      map = {},
      out = output.rem,
      tuples = pulse.rem,
      i, n, k, f;

  // process tuples, output if passes at least one filter
  for (i=0, n=tuples.length; i<n; ++i) {
    k = tuples[i]._index;
    map[k] = 1; // build index map
    prev[k] = (f = curr[k]);
    curr[k] = all;
    if (f !== all) out.push(k);
  }

  // remove from dimensional indices
  for (k in indices) {
    indices[k].remove(n, map);
  }

  this.reindex(pulse, n, map);
  return map;
};

// reindex filters and indices after propagation completes
prototype.reindex = function(pulse, num, map) {
  var indices = this._indices,
      bits = this.value;

  pulse.runAfter(function() {
    var indexMap = bits.remove(num, map);
    for (var key in indices) indices[key].reindex(indexMap);
  });
};

prototype.update = function(_, pulse, output) {
  var dims = this._dims,
      query = _.query,
      stamp = pulse.stamp,
      m = dims.length,
      mask = 0, i, q;

  // survey how many queries have changed
  output.filters = 0;
  for (q=0; q<m; ++q) {
    if (_.modified('query', q)) { i = q; ++mask; }
  }

  if (mask === 1) {
    // only one query changed, use more efficient update
    mask = dims[i].one;
    this.incrementOne(dims[i], query[i], output.add, output.rem);
  } else {
    // multiple queries changed, perform full record keeping
    for (q=0, mask=0; q<m; ++q) {
      if (!_.modified('query', q)) continue;
      mask |= dims[q].one;
      this.incrementAll(dims[q], query[q], stamp, output.add);
      output.rem = output.add; // duplicate add/rem for downstream resolve
    }
  }

  return mask;
};

prototype.incrementAll = function(dim, query, stamp, out) {
  var bits = this.value,
      seen = bits.seen(),
      curr = bits.curr(),
      prev = bits.prev(),
      index = dim.index(),
      old = dim.bisect(dim.range),
      range = dim.bisect(query),
      lo1 = range[0],
      hi1 = range[1],
      lo0 = old[0],
      hi0 = old[1],
      one = dim.one,
      i, j, k;

  // Fast incremental update based on previous lo index.
  if (lo1 < lo0) {
    for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  } else if (lo1 > lo0) {
    for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  }

  // Fast incremental update based on previous hi index.
  if (hi1 > hi0) {
    for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  } else if (hi1 < hi0) {
    for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  }

  dim.range = query.slice();
};

prototype.incrementOne = function(dim, query, add, rem) {
  var bits = this.value,
      curr = bits.curr(),
      index = dim.index(),
      old = dim.bisect(dim.range),
      range = dim.bisect(query),
      lo1 = range[0],
      hi1 = range[1],
      lo0 = old[0],
      hi0 = old[1],
      one = dim.one,
      i, j, k;

  // Fast incremental update based on previous lo index.
  if (lo1 < lo0) {
    for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      add.push(k);
    }
  } else if (lo1 > lo0) {
    for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      rem.push(k);
    }
  }

  // Fast incremental update based on previous hi index.
  if (hi1 > hi0) {
    for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      add.push(k);
    }
  } else if (hi1 < hi0) {
    for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      rem.push(k);
    }
  }

  dim.range = query.slice();
};


/***/ }),

/***/ "w21d":
/*!*********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/rank.js ***!
  \*********************************************************/
/*! exports provided: rank, rerank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rank", function() { return rank; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rerank", function() { return rerank; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/**
 * Assigns a rank to an operator. Ranks are assigned in increasing order
 * by incrementing an internal rank counter.
 * @param {Operator} op - The operator to assign a rank.
 */
function rank(op) {
  op.rank = ++this._rank;
}

/**
 * Re-ranks an operator and all downstream target dependencies. This
 * is necessary when upstream depencies of higher rank are added to
 * a target operator.
 * @param {Operator} op - The operator to re-rank.
 */
function rerank(op) {
  var queue = [op],
      cur, list, i;

  while (queue.length) {
    this.rank(cur = queue.pop());
    if (list = cur._targets) {
      for (i=list.length; --i >= 0;) {
        queue.push(cur = list[i]);
        if (cur === op) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Cycle detected in dataflow graph.');
      }
    }
  }
}


/***/ }),

/***/ "w3Jc":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sample.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sample; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "VZYI");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Samples tuples passing through this operator.
 * Uses reservoir sampling to maintain a representative sample.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.size=1000] - The maximum number of samples.
 */
function Sample(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
  this.count = 0;
}

Sample.Definition = {
  "type": "Sample",
  "metadata": {},
  "params": [
    { "name": "size", "type": "number", "default": 1000 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Sample, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      mod = _.modified('size'),
      num = _.size,
      res = this.value,
      cnt = this.count,
      cap = 0,
      map = res.reduce(function(m, t) {
        m[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1;
        return m;
      }, {});

  // sample reservoir update function
  function update(t) {
    var p, idx;

    if (res.length < num) {
      res.push(t);
    } else {
      idx = ~~((cnt + 1) * Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["random"])());
      if (idx < res.length && idx >= cap) {
        p = res[idx];
        if (map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(p)]) out.rem.push(p); // eviction
        res[idx] = t;
      }
    }
    ++cnt;
  }

  if (pulse.rem.length) {
    // find all tuples that should be removed, add to output
    pulse.visit(pulse.REM, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
      if (map[id]) {
        map[id] = -1;
        out.rem.push(t);
      }
      --cnt;
    });

    // filter removed tuples out of the sample reservoir
    res = res.filter(function(t) { return map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] !== -1; });
  }

  if ((pulse.rem.length || mod) && res.length < num && pulse.source) {
    // replenish sample if backing data source is available
    cap = cnt = res.length;
    pulse.visit(pulse.SOURCE, function(t) {
      // update, but skip previously sampled tuples
      if (!map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]) update(t);
    });
    cap = -1;
  }

  if (mod && res.length > num) {
    for (var i=0, n=res.length-num; i<n; ++i) {
      map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(res[i])] = -1;
      out.rem.push(res[i]);
    }
    res = res.slice(n);
  }

  if (pulse.mod.length) {
    // propagate modified tuples in the sample reservoir
    pulse.visit(pulse.MOD, function(t) {
      if (map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]) out.mod.push(t);
    });
  }

  if (pulse.add.length) {
    // update sample reservoir
    pulse.visit(pulse.ADD, update);
  }

  if (pulse.add.length || cap < 0) {
    // output newly added tuples
    out.add = res.filter(function(t) { return !map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]; });
  }

  this.count = cnt;
  this.value = out.source = res;
  return out;
};


/***/ }),

/***/ "w4de":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/pinch.js ***!
  \******************************************************************/
/*! exports provided: pinchDistance, pinchAngle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pinchDistance", function() { return pinchDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pinchAngle", function() { return pinchAngle; });
function pinchDistance(event) {
  var t = event.touches,
      dx = t[0].clientX - t[1].clientX,
      dy = t[0].clientY - t[1].clientY;
  return Math.sqrt(dx * dx + dy * dy);
}

function pinchAngle(event) {
  var t = event.touches;
  return Math.atan2(
    t[0].clientY - t[1].clientY,
    t[0].clientX - t[1].clientX
  );
}


/***/ }),

/***/ "w6H4":
/*!**********************************************!*\
  !*** ./node_modules/vega-view/src/cursor.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var Default = 'default';

/* harmony default export */ __webpack_exports__["default"] = (function(view) {
  var cursor = view._signals.cursor;

  // add cursor signal to dataflow, if needed
  if (!cursor) {
    view._signals.cursor = (cursor = view.add({user: Default, item: null}));
  }

  // evaluate cursor on each mousemove event
  view.on(view.events('view', 'mousemove'), cursor,
    function(_, event) {
      var value = cursor.value,
          user = value ? (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(value) ? value : value.user) : Default,
          item = event.item && event.item.cursor || null;

      return (value && user === value.user && item == value.item) ? value
        : {user: user, item: item};
    }
  );

  // when cursor signal updates, set visible cursor
  view.add(null, function(_) {
    var user = _.cursor,
        item = this.value;

    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(user)) {
      item = user.item;
      user = user.user;
    }

    setCursor(user && user !== Default ? user : (item || user));

    return item;
  }, {cursor: cursor});
});

function setCursor(cursor) {
  // set cursor on document body
  // this ensures cursor applies even if dragging out of view
  if (typeof document !== 'undefined' && document.body) {
    document.body.style.cursor = cursor;
  }
}


/***/ }),

/***/ "wF5L":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/line.js ***!
  \***************************************************************/
/*! exports provided: line, trail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "line", function() { return line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trail", function() { return trail; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins */ "NITR");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./valueref */ "vfFY");



var line = {
    vgMark: 'line',
    encodeEntry: function (model) {
        var width = model.width, height = model.height;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_1__["nonPosition"]('size', model, {
            vgChannel: 'strokeWidth' // VL's line size is strokeWidth
        }), _mixins__WEBPACK_IMPORTED_MODULE_1__["defined"](model));
    }
};
var trail = {
    vgMark: 'trail',
    encodeEntry: function (model) {
        var width = model.width, height = model.height;
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'include', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_1__["nonPosition"]('size', model), _mixins__WEBPACK_IMPORTED_MODULE_1__["defined"](model));
    }
};
//# sourceMappingURL=line.js.map

/***/ }),

/***/ "wOpL":
/*!****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Bounds.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bounds; });
function Bounds(b) {
  this.clear();
  if (b) this.union(b);
}

var prototype = Bounds.prototype;

prototype.clone = function() {
  return new Bounds(this);
};

prototype.clear = function() {
  this.x1 = +Number.MAX_VALUE;
  this.y1 = +Number.MAX_VALUE;
  this.x2 = -Number.MAX_VALUE;
  this.y2 = -Number.MAX_VALUE;
  return this;
};

prototype.empty = function() {
  return (
    this.x1 === +Number.MAX_VALUE &&
    this.y1 === +Number.MAX_VALUE &&
    this.x2 === -Number.MAX_VALUE &&
    this.y2 === -Number.MAX_VALUE
  );
};

prototype.set = function(x1, y1, x2, y2) {
  if (x2 < x1) {
    this.x2 = x1;
    this.x1 = x2;
  } else {
    this.x1 = x1;
    this.x2 = x2;
  }
  if (y2 < y1) {
    this.y2 = y1;
    this.y1 = y2;
  } else {
    this.y1 = y1;
    this.y2 = y2;
  }
  return this;
};

prototype.add = function(x, y) {
  if (x < this.x1) this.x1 = x;
  if (y < this.y1) this.y1 = y;
  if (x > this.x2) this.x2 = x;
  if (y > this.y2) this.y2 = y;
  return this;
};

prototype.expand = function(d) {
  this.x1 -= d;
  this.y1 -= d;
  this.x2 += d;
  this.y2 += d;
  return this;
};

prototype.round = function() {
  this.x1 = Math.floor(this.x1);
  this.y1 = Math.floor(this.y1);
  this.x2 = Math.ceil(this.x2);
  this.y2 = Math.ceil(this.y2);
  return this;
};

prototype.translate = function(dx, dy) {
  this.x1 += dx;
  this.x2 += dx;
  this.y1 += dy;
  this.y2 += dy;
  return this;
};

prototype.rotate = function(angle, x, y) {
  var cos = Math.cos(angle),
      sin = Math.sin(angle),
      cx = x - x*cos + y*sin,
      cy = y - x*sin - y*cos,
      x1 = this.x1, x2 = this.x2,
      y1 = this.y1, y2 = this.y2;

  return this.clear()
    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)
    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)
    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)
    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);
};

prototype.union = function(b) {
  if (b.x1 < this.x1) this.x1 = b.x1;
  if (b.y1 < this.y1) this.y1 = b.y1;
  if (b.x2 > this.x2) this.x2 = b.x2;
  if (b.y2 > this.y2) this.y2 = b.y2;
  return this;
};

prototype.intersect = function(b) {
  if (b.x1 > this.x1) this.x1 = b.x1;
  if (b.y1 > this.y1) this.y1 = b.y1;
  if (b.x2 < this.x2) this.x2 = b.x2;
  if (b.y2 < this.y2) this.y2 = b.y2;
  return this;
};

prototype.encloses = function(b) {
  return b && (
    this.x1 <= b.x1 &&
    this.x2 >= b.x2 &&
    this.y1 <= b.y1 &&
    this.y2 >= b.y2
  );
};

prototype.alignsWith = function(b) {
  return b && (
    this.x1 == b.x1 ||
    this.x2 == b.x2 ||
    this.y1 == b.y1 ||
    this.y2 == b.y2
  );
};

prototype.intersects = function(b) {
  return b && !(
    this.x2 < b.x1 ||
    this.x1 > b.x2 ||
    this.y2 < b.y1 ||
    this.y1 > b.y2
  );
};

prototype.contains = function(x, y) {
  return !(
    x < this.x1 ||
    x > this.x2 ||
    y < this.y1 ||
    y > this.y2
  );
};

prototype.width = function() {
  return this.x2 - this.x1;
};

prototype.height = function() {
  return this.y2 - this.y1;
};


/***/ }),

/***/ "wYkF":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/modules.js ***!
  \*****************************************************/
/*! exports provided: RenderType, renderModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return RenderType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return renderModule; });
/* harmony import */ var _CanvasHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanvasHandler */ "XGZ2");
/* harmony import */ var _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CanvasRenderer */ "lz4/");
/* harmony import */ var _SVGHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SVGHandler */ "4Nvv");
/* harmony import */ var _SVGRenderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SVGRenderer */ "3LL3");
/* harmony import */ var _SVGStringRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SVGStringRenderer */ "YuFh");






var Canvas = 'canvas';
var PNG = 'png';
var SVG = 'svg';
var None = 'none';

var RenderType = {
  Canvas: Canvas,
  PNG:    PNG,
  SVG:    SVG,
  None:   None
};

var modules = {};

modules[Canvas] = modules[PNG] = {
  renderer: _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__["default"],
  headless: _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__["default"],
  handler:  _CanvasHandler__WEBPACK_IMPORTED_MODULE_0__["default"]
};

modules[SVG] = {
  renderer: _SVGRenderer__WEBPACK_IMPORTED_MODULE_3__["default"],
  headless: _SVGStringRenderer__WEBPACK_IMPORTED_MODULE_4__["default"],
  handler:  _SVGHandler__WEBPACK_IMPORTED_MODULE_2__["default"]
};

modules[None] = {};

function renderModule(name, _) {
  name = String(name || '').toLowerCase();
  if (arguments.length > 1) {
    modules[name] = _;
    return this;
  } else {
    return modules[name];
  }
}


/***/ }),

/***/ "wZ22":
/*!******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Parameters.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Parameters; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


var CACHE = '_:mod:_';

/**
 * Hash that tracks modifications to assigned values.
 * Callers *must* use the set method to update values.
 */
function Parameters() {
  Object.defineProperty(this, CACHE, {writable:true, value: {}});
}

var prototype = Parameters.prototype;

/**
 * Set a parameter value. If the parameter value changes, the parameter
 * will be recorded as modified.
 * @param {string} name - The parameter name.
 * @param {number} index - The index into an array-value parameter. Ignored if
 *   the argument is undefined, null or less than zero.
 * @param {*} value - The parameter value to set.
 * @param {boolean} [force=false] - If true, records the parameter as modified
 *   even if the value is unchanged.
 * @return {Parameters} - This parameter object.
 */
prototype.set = function(name, index, value, force) {
  var o = this,
      v = o[name],
      mod = o[CACHE];

  if (index != null && index >= 0) {
    if (v[index] !== value || force) {
      v[index] = value;
      mod[index + ':' + name] = -1;
      mod[name] = -1;
    }
  } else if (v !== value || force) {
    o[name] = value;
    mod[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? 1 + value.length : -1;
  }

  return o;
};

/**
 * Tests if one or more parameters has been modified. If invoked with no
 * arguments, returns true if any parameter value has changed. If the first
 * argument is array, returns trues if any parameter name in the array has
 * changed. Otherwise, tests if the given name and optional array index has
 * changed.
 * @param {string} name - The parameter name to test.
 * @param {number} [index=undefined] - The parameter array index to test.
 * @return {boolean} - Returns true if a queried parameter was modified.
 */
prototype.modified = function(name, index) {
  var mod = this[CACHE], k;
  if (!arguments.length) {
    for (k in mod) { if (mod[k]) return true; }
    return false;
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(name)) {
    for (k=0; k<name.length; ++k) {
      if (mod[name[k]]) return true;
    }
    return false;
  }
  return (index != null && index >= 0)
    ? (index + 1 < mod[name] || !!mod[index + ':' + name])
    : !!mod[name];
};

/**
 * Clears the modification records. After calling this method,
 * all parameters are considered unmodified.
 */
prototype.clear = function() {
  this[CACHE] = {};
  return this;
};


/***/ }),

/***/ "wg3X":
/*!*************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/SortedList.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function(idFunc, source, input) {
  var $ = idFunc,
      data = source || [],
      add = input || [],
      rem = {},
      cnt = 0;

  return {
    add: function(t) { add.push(t); },
    remove: function(t) { rem[$(t)] = ++cnt; },
    size: function() { return data.length; },
    data: function(compare, resort) {
      if (cnt) {
        data = data.filter(function(t) { return !rem[$(t)]; });
        rem = {};
        cnt = 0;
      }
      if (resort && compare) {
        data.sort(compare);
      }
      if (add.length) {
        data = compare
          ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(compare, data, add.sort(compare))
          : data.concat(add);
        add = [];
      }
      return data;
    }
  }
});

/***/ }),

/***/ "wkcy":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sequence.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sequence; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "vBe5");




/**
 * Generates data tuples for a specified sequence range of numbers.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} params.start - The first number in the sequence.
 * @param {number} params.stop - The last number (exclusive) in the sequence.
 * @param {number} [params.step=1] - The step size between numbers in the sequence.
 */
function Sequence(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Sequence.Definition = {
  "type": "Sequence",
  "metadata": {"changes": true},
  "params": [
    { "name": "start", "type": "number", "required": true },
    { "name": "stop", "type": "number", "required": true },
    { "name": "step", "type": "number", "default": 1 },
    { "name": "as", "type": "string", "default": "data" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Sequence, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !_.modified()) return;

  var out = pulse.materialize().fork(pulse.MOD),
      as = _.as || 'data';

  out.rem = this.value ? pulse.rem.concat(this.value) : pulse.rem;

  this.value = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["range"])(_.start, _.stop, _.step || 1).map(function(v) {
    var t = {};
    t[as] = v;
    return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t);
  });

  out.add = pulse.add.concat(this.value);

  return out;
};


/***/ }),

/***/ "wpFU":
/*!****************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Treemap.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Treemap; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "CLBL");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");




var Tiles = {
  binary: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapBinary"],
  dice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapDice"],
  slice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSlice"],
  slicedice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSliceDice"],
  squarify: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSquarify"],
  resquarify: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapResquarify"]
};

var Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];

/**
 * Treemap layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Treemap(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Treemap.Definition = {
  "type": "Treemap",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "method", "type": "enum", "default": "squarify",
      "values": ["squarify", "resquarify", "binary", "dice", "slice", "slicedice"] },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "paddingInner", "type": "number", "default": 0 },
    { "name": "paddingOuter", "type": "number", "default": 0 },
    { "name": "paddingTop", "type": "number", "default": 0 },
    { "name": "paddingRight", "type": "number", "default": 0 },
    { "name": "paddingBottom", "type": "number", "default": 0 },
    { "name": "paddingLeft", "type": "number", "default": 0 },
    { "name": "ratio", "type": "number", "default": 1.618033988749895 },
    { "name": "round", "type": "boolean", "default": false },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Treemap, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Treemap layout generator. Adds 'method' and 'ratio' parameters
 * to configure the underlying tile method.
 */
prototype.layout = function() {
  var x = Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemap"])();
  x.ratio = function(_) {
    var t = x.tile();
    if (t.ratio) x.tile(t.ratio(_));
  };
  x.method = function(_) {
    if (Tiles.hasOwnProperty(_)) x.tile(Tiles[_]);
    else Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized Treemap layout method: ' + _);
  };
  return x;
};

prototype.params = [
  'method', 'ratio', 'size', 'round',
  'padding', 'paddingInner', 'paddingOuter',
  'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'
];

prototype.fields = Output;


/***/ }),

/***/ "x5u8":
/*!***********************************************!*\
  !*** ./node_modules/vega-scale/src/scales.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scale; });
/* harmony import */ var _invertRange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invertRange */ "KGJN");
/* harmony import */ var _invertRangeExtent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./invertRangeExtent */ "NWkn");
/* harmony import */ var _scaleBand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scaleBand */ "41T5");
/* harmony import */ var _scaleBin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scaleBin */ "KMWa");
/* harmony import */ var _scaleSequential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scaleSequential */ "NmNx");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ "ziQ1");








/**
 * Augment scales with their type and needed inverse methods.
 */
function create(type, constructor) {
  return function scale() {
    var s = constructor();

    if (!s.invertRange) {
      s.invertRange = s.invert ? Object(_invertRange__WEBPACK_IMPORTED_MODULE_0__["default"])(s)
        : s.invertExtent ? Object(_invertRangeExtent__WEBPACK_IMPORTED_MODULE_1__["default"])(s)
        : undefined;
    }

    s.type = type;
    return s;
  };
}

function scale(type, scale) {
  if (arguments.length > 1) {
    scales[type] = create(type, scale);
    return this;
  } else {
    return scales.hasOwnProperty(type) ? scales[type] : undefined;
  }
}

var scales = {
  // base scale types
  identity:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleIdentity"],
  linear:        d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLinear"],
  log:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLog"],
  ordinal:       d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleOrdinal"],
  pow:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scalePow"],
  sqrt:          d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSqrt"],
  quantile:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleQuantile"],
  quantize:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleQuantize"],
  threshold:     d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleThreshold"],
  time:          d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleTime"],
  utc:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleUtc"],

  // extended scale types
  band:          _scaleBand__WEBPACK_IMPORTED_MODULE_2__["band"],
  point:         _scaleBand__WEBPACK_IMPORTED_MODULE_2__["point"],
  sequential:    _scaleSequential__WEBPACK_IMPORTED_MODULE_4__["default"],
  'bin-linear':  _scaleBin__WEBPACK_IMPORTED_MODULE_3__["binLinear"],
  'bin-ordinal': _scaleBin__WEBPACK_IMPORTED_MODULE_3__["binOrdinal"]
};

for (var key in scales) {
  scale(key, scales[key]);
}


/***/ }),

/***/ "xYZI":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/geojson.js ***!
  \******************************************************************/
/*! exports provided: GeoJSONNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoJSONNode", function() { return GeoJSONNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "5g++");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type */ "fFaC");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "Hc3/");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "LH2n");





var GeoJSONNode = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GeoJSONNode, _super);
    function GeoJSONNode(parent, fields, geojson, signal) {
        var _this = _super.call(this, parent) || this;
        _this.fields = fields;
        _this.geojson = geojson;
        _this.signal = signal;
        return _this;
    }
    GeoJSONNode.prototype.clone = function () {
        return new GeoJSONNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.fields), this.geojson, this.signal);
    };
    GeoJSONNode.parseAll = function (parent, model) {
        var geoJsonCounter = 0;
        [[_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_1__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_1__["LATITUDE2"]]].forEach(function (coordinates) {
            var pair = coordinates.map(function (channel) { return model.channelHasField(channel) ? model.fieldDef(channel).field : undefined; });
            if (pair[0] || pair[1]) {
                parent = new GeoJSONNode(parent, pair, null, model.getName("geojson_" + geoJsonCounter++));
            }
        });
        if (model.channelHasField(_channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"])) {
            var fieldDef = model.fieldDef(_channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]);
            if (fieldDef.type === _type__WEBPACK_IMPORTED_MODULE_2__["GEOJSON"]) {
                parent = new GeoJSONNode(parent, null, fieldDef.field, model.getName("geojson_" + geoJsonCounter++));
            }
        }
        return parent;
    };
    GeoJSONNode.prototype.assemble = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'geojson' }, (this.fields ? { fields: this.fields } : {}), (this.geojson ? { geojson: this.geojson } : {}), { signal: this.signal });
    };
    return GeoJSONNode;
}(_dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"]));

//# sourceMappingURL=geojson.js.map

/***/ }),

/***/ "xi+b":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/errorbar.js ***!
  \********************************************************************/
/*! exports provided: ERRORBAR, normalizeErrorBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERRORBAR", function() { return ERRORBAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeErrorBar", function() { return normalizeErrorBar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");

var ERRORBAR = 'error-bar';
function normalizeErrorBar(spec) {
    // TODO: use selection
    var _m = spec.mark, _sel = spec.selection, _p = spec.projection, encoding = spec.encoding, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "selection", "projection", "encoding"]);
    var _s = encoding.size, encodingWithoutSize = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encoding, ["size"]);
    var _x2 = encoding.x2, _y2 = encoding.y2, encodingWithoutX2Y2 = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encoding, ["x2", "y2"]);
    var _x = encodingWithoutX2Y2.x, _y = encodingWithoutX2Y2.y, encodingWithoutX_X2_Y_Y2 = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encodingWithoutX2Y2, ["x", "y"]);
    if (!encoding.x2 && !encoding.y2) {
        throw new Error('Neither x2 or y2 provided');
    }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, outerSpec, { layer: [
            {
                mark: 'rule',
                encoding: encodingWithoutSize
            }, {
                mark: 'tick',
                encoding: encodingWithoutX2Y2
            }, {
                mark: 'tick',
                encoding: encoding.x2 ? tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ x: encoding.x2, y: encoding.y }, encodingWithoutX_X2_Y_Y2) : tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ x: encoding.x, y: encoding.y2 }, encodingWithoutX_X2_Y_Y2)
            }
        ] });
}
//# sourceMappingURL=errorbar.js.map

/***/ }),

/***/ "xjBs":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/field.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "iMRA");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./splitAccessPath */ "QGy5");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringValue */ "2OXM");




/* harmony default export */ __webpack_exports__["default"] = (function(field, name) {
  var path = Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_1__["default"])(field),
      code = 'return _[' + path.map(_stringValue__WEBPACK_IMPORTED_MODULE_2__["default"]).join('][') + '];';

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(
    Function('_', code),
    [(field = path.length===1 ? path[0] : field)],
    name || field
  );
});


/***/ }),

/***/ "xxEL":
/*!************************************************!*\
  !*** ./node_modules/vega-crossfilter/index.js ***!
  \************************************************/
/*! exports provided: crossfilter, resolvefilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_CrossFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/CrossFilter */ "vy8A");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "crossfilter", function() { return _src_CrossFilter__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_ResolveFilter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/ResolveFilter */ "Ts4c");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resolvefilter", function() { return _src_ResolveFilter__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),

/***/ "xxJJ":
/*!********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/add.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Operator */ "7/cf");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Add an operator to the dataflow graph. This function accepts a
 * variety of input argument types. The basic signature supports an
 * initial value, update function and parameters. If the first parameter
 * is an Operator instance, it will be added directly. If it is a
 * constructor for an Operator subclass, a new instance will be instantiated.
 * Otherwise, if the first parameter is a function instance, it will be used
 * as the update function and a null initial value is assumed.
 * @param {*} init - One of: the operator to add, the initial value of
 *   the operator, an operator class to instantiate, or an update function.
 * @param {function} [update] - The operator update function.
 * @param {object} [params] - The operator parameters.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @return {Operator} - The added operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(init, update, params, react) {
  var shift = 1,
    op;

  if (init instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    op = init;
  } else if (init && init.prototype instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    op = new init();
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(init)) {
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, init);
  } else {
    shift = 0;
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](init, update);
  }

  this.rank(op);
  if (shift) {
    react = params;
    params = update;
  }
  if (params) this.connect(op, op.parameters(params, react));
  this.touch(op);

  return op;
});


/***/ }),

/***/ "y9RI":
/*!************************************************!*\
  !*** ./node_modules/vega-loader/src/loader.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


// Matches absolute URLs with optional protocol
//   https://...    file://...    //...
var protocol_re = /^([A-Za-z]+:)?\/\//;

// Special treatment in node.js for the file: protocol
var fileProtocol = 'file://';

/**
 * Creates a new loader instance that provides methods for requesting files
 * from either the network or disk, and for sanitizing request URIs.
 * @param {object} [options] - Optional default loading options to use.
 * @return {object} - A new loader instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(options) {
  return {
    options: options || {},
    sanitize: sanitize,
    load: load,
    file: file,
    http: http
  };
});

/**
 * Load an external resource, typically either from the web or from the local
 * filesystem. This function uses {@link sanitize} to first sanitize the uri,
 * then calls either {@link http} (for web requests) or {@link file} (for
 * filesystem loading).
 * @param {string} uri - The resource indicator (e.g., URL or filename).
 * @param {object} [options] - Optional loading options. These options will
 *   override any existing default options.
 * @return {Promise} - A promise that resolves to the loaded content.
 */
function load(uri, options) {
  var loader = this;
  return loader.sanitize(uri, options)
    .then(function(opt) {
      var url = opt.href;
      return opt.localFile
        ? loader.file(url)
        : loader.http(url, options);
    });
}

/**
 * URI sanitizer function.
 * @param {string} uri - The uri (url or filename) to sanity check.
 * @param {object} options - An options hash.
 * @return {Promise} - A promise that resolves to an object containing
 *  sanitized uri data, or rejects it the input uri is deemed invalid.
 *  The properties of the resolved object are assumed to be
 *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be
 *  provided by the 'href' property of the returned object.
 */
function sanitize(uri, options) {
  options = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.options, options);

  return new Promise(function(accept, reject) {
    var result = {href: null},
        isFile, hasProtocol, loadFile, base;

    if (uri == null || typeof uri !== 'string') {
      reject('Sanitize failure, invalid URI: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(uri));
      return;
    }

    hasProtocol = protocol_re.test(uri);

    // if relative url (no protocol/host), prepend baseURL
    if ((base = options.baseURL) && !hasProtocol) {
      // Ensure that there is a slash between the baseURL (e.g. hostname) and url
      if (!startsWith(uri, '/') && base[base.length-1] !== '/') {
        uri = '/' + uri;
      }
      uri = base + uri;
    }

    // should we load from file system?
    loadFile = (isFile = startsWith(uri, fileProtocol))
      || options.mode === 'file'
      || options.mode !== 'http' && !hasProtocol && fs();

    if (isFile) {
      // strip file protocol
      uri = uri.slice(fileProtocol.length);
    } else if (startsWith(uri, '//')) {
      if (options.defaultProtocol === 'file') {
        // if is file, strip protocol and set loadFile flag
        uri = uri.slice(2);
        loadFile = true;
      } else {
        // if relative protocol (starts with '//'), prepend default protocol
        uri = (options.defaultProtocol || 'http') + ':' + uri;
      }
    }

    // set non-enumerable mode flag to indicate local file load
    Object.defineProperty(result, 'localFile', {value: !!loadFile});

    // set uri
    result.href = uri;

    // set default result target, if specified
    if (options.target) {
      result.target = options.target + '';
    }

    // return
    accept(result);
  });
}

/**
 * HTTP request loader.
 * @param {string} url - The url to request.
 * @param {object} options - An options hash.
 * @return {Promise} - A promise that resolves to the file contents.
 */
function http(url, options) {
  return request(url, Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.options.http, options))
    .then(function(response) {
      if (!response.ok) throw response.status + '' + response.statusText;
      return response.text();
    });
}

/**
 * File system loader.
 * @param {string} filename - The file system path to load.
 * @return {Promise} - A promise that resolves to the file contents.
 */
function file(filename) {
  return new Promise(function(accept, reject) {
    var f = fs();
    f ? f.readFile(filename, function(error, data) {
          if (error) reject(error);
          else accept(data);
        })
      : reject('No file system access for ' + filename);
  });
}

function request(url, init) {
  var f = typeof fetch === 'function' ? fetch : __webpack_require__(/*! node-fetch */ 10);
  return f ? f(url, init) : Promise.reject('No fetch method available.');
}

function fs() {
  var fs = "function" === 'function' && __webpack_require__(/*! fs */ 11);
  return fs && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(fs.readFile) ? fs : null;
}

function startsWith(string, query) {
  return string == null ? false : string.lastIndexOf(query, 0) === 0;
}


/***/ }),

/***/ "yD9f":
/*!****************************************************!*\
  !*** ./node_modules/vega-statistics/src/random.js ***!
  \****************************************************/
/*! exports provided: random, setRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return setRandom; });
var random = Math.random;

function setRandom(r) {
  random = r;
}


/***/ }),

/***/ "ySof":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-labels.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "Z42V");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "IFTd");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "T/Dk");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "a3zm");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "VX1o");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "PkT2");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "+JJI");








function flushExpr(scale, threshold, a, b, c) {
  return {
    signal: 'flush(range("' + scale + '"), '
      + 'scale("' + scale + '", datum.value), '
      + threshold + ',' + a + ',' + b + ',' + c + ')'
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, size) {
  var orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      isXAxis = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]),
      scale = spec.scale,
      flush = Object(_util__WEBPACK_IMPORTED_MODULE_6__["deref"])(Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFlush', spec, config)),
      flushOffset = Object(_util__WEBPACK_IMPORTED_MODULE_6__["deref"])(Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFlushOffset', spec, config)),
      flushOn = flush === 0 || !!flush,
      labelAlign = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelAlign', spec, config),
      labelBaseline = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelBaseline', spec, config),
      zero = {value: 0},
      encode, enter, tickSize, tickPos, align, baseline, offset, bound, overlap;

  tickSize = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(size);
  tickSize.mult = sign;
  tickSize.offset = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelPadding', spec, config) || 0);
  tickSize.offset.mult = sign;

  tickPos = {
    scale:  scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   0.5,
    offset: Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('tickOffset', spec, config)
  };

  if (isXAxis) {
    align = labelAlign || (flushOn
      ? flushExpr(scale, flush, '"left"', '"right"', '"center"')
      : 'center');
    baseline = labelBaseline || (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] ? 'bottom' : 'top');
    offset = !labelAlign;
  } else {

    align = labelAlign || (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"] ? 'left' : 'right');
    baseline = labelBaseline || (flushOn
      ? flushExpr(scale, flush, '"top"', '"bottom"', '"middle"')
      : 'middle');
    offset = !labelBaseline;
  }

  offset = offset && flushOn && flushOffset
    ? flushExpr(scale, flush, '-' + flushOffset, flushOffset, 0)
    : null;

  encode = {
    enter: enter = {
      opacity: zero,
      x: isXAxis ? tickPos : tickSize,
      y: isXAxis ? tickSize : tickPos
    },
    update: {
      opacity: {value: 1},
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]},
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: zero,
      x: enter.x,
      y: enter.y
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, isXAxis ? 'dx' : 'dy', offset);
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'align',       align);
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'baseline',    baseline);
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'angle',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelAngle', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fill',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelColor', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'font',        Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFont', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontSize',    Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFontSize', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fontWeight',  Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelFontWeight', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'limit',       Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelLimit', spec, config));
  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncode"])(encode, 'fillOpacity', Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelOpacity', spec, config));
  bound   = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelBound', spec, config);
  overlap = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])('labelOverlap', spec, config);

  spec = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"], _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);

  // if overlap method or bound defined, request label overlap removal
  if (overlap || bound) {
    spec.overlap = {
      method: overlap,
      order:  'datum.index',
      bound:  bound ? {scale: scale, orient: orient, tolerance: bound} : null
    };
  }

  return spec;
});


/***/ }),

/***/ "ySvk":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec.js ***!
  \**************************************************/
/*! exports provided: isFacetSpec, isUnitSpec, isLayerSpec, isRepeatSpec, isConcatSpec, isVConcatSpec, isHConcatSpec, normalize, fieldDefs, isStacked */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetSpec", function() { return isFacetSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUnitSpec", function() { return isUnitSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLayerSpec", function() { return isLayerSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatSpec", function() { return isRepeatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConcatSpec", function() { return isConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVConcatSpec", function() { return isVConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHConcatSpec", function() { return isHConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldDefs", function() { return fieldDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStacked", function() { return isStacked; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "5g++");
/* harmony import */ var _compositemark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compositemark */ "Egee");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding */ "sHgr");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ "6ow0");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mark */ "fKXb");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stack */ "h4ZY");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util */ "Hc3/");










/* Custom type guards */
function isFacetSpec(spec) {
    return spec['facet'] !== undefined;
}
function isUnitSpec(spec) {
    return !!spec['mark'];
}
function isLayerSpec(spec) {
    return spec['layer'] !== undefined;
}
function isRepeatSpec(spec) {
    return spec['repeat'] !== undefined;
}
function isConcatSpec(spec) {
    return isVConcatSpec(spec) || isHConcatSpec(spec);
}
function isVConcatSpec(spec) {
    return spec['vconcat'] !== undefined;
}
function isHConcatSpec(spec) {
    return spec['hconcat'] !== undefined;
}
/**
 * Decompose extended unit specs into composition of pure unit specs.
 */
// TODO: consider moving this to another file.  Maybe vl.spec.normalize or vl.normalize
function normalize(spec, config) {
    if (isFacetSpec(spec)) {
        return normalizeFacet(spec, config);
    }
    if (isLayerSpec(spec)) {
        return normalizeLayer(spec, config);
    }
    if (isRepeatSpec(spec)) {
        return normalizeRepeat(spec, config);
    }
    if (isVConcatSpec(spec)) {
        return normalizeVConcat(spec, config);
    }
    if (isHConcatSpec(spec)) {
        return normalizeHConcat(spec, config);
    }
    if (isUnitSpec(spec)) {
        var hasRow = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]);
        var hasColumn = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"]);
        if (hasRow || hasColumn) {
            return normalizeFacetedUnit(spec, config);
        }
        return normalizeNonFacetUnit(spec, config);
    }
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_5__["message"].INVALID_SPEC);
}
function normalizeFacet(spec, config) {
    var subspec = spec.spec, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["spec"]);
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, rest, { 
        // TODO: remove "any" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760
        spec: normalize(subspec, config) });
}
function mergeEncoding(opt) {
    var parentEncoding = opt.parentEncoding, encoding = opt.encoding;
    if (parentEncoding && encoding) {
        var overriden = Object(_util__WEBPACK_IMPORTED_MODULE_8__["keys"])(parentEncoding).reduce(function (o, key) {
            if (encoding[key]) {
                o.push(key);
            }
            return o;
        }, []);
        if (overriden.length > 0) {
            _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].encodingOverridden(overriden));
        }
    }
    var merged = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (parentEncoding || {}), (encoding || {}));
    return Object(_util__WEBPACK_IMPORTED_MODULE_8__["keys"])(merged).length > 0 ? merged : undefined;
}
function mergeProjection(opt) {
    var parentProjection = opt.parentProjection, projection = opt.projection;
    if (parentProjection && projection) {
        _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].projectionOverridden({ parentProjection: parentProjection, projection: projection }));
    }
    return projection || parentProjection;
}
function normalizeLayer(spec, config, parentEncoding, parentProjection) {
    var layer = spec.layer, encoding = spec.encoding, projection = spec.projection, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["layer", "encoding", "projection"]);
    var mergedEncoding = mergeEncoding({ parentEncoding: parentEncoding, encoding: encoding });
    var mergedProjection = mergeProjection({ parentProjection: parentProjection, projection: projection });
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, rest, { layer: layer.map(function (subspec) {
            if (isLayerSpec(subspec)) {
                return normalizeLayer(subspec, config, mergedEncoding, mergedProjection);
            }
            return normalizeNonFacetUnit(subspec, config, mergedEncoding, mergedProjection);
        }) });
}
function normalizeRepeat(spec, config) {
    var subspec = spec.spec, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["spec"]);
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, rest, { spec: normalize(subspec, config) });
}
function normalizeVConcat(spec, config) {
    var vconcat = spec.vconcat, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["vconcat"]);
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, rest, { vconcat: vconcat.map(function (subspec) { return normalize(subspec, config); }) });
}
function normalizeHConcat(spec, config) {
    var hconcat = spec.hconcat, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["hconcat"]);
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, rest, { hconcat: hconcat.map(function (subspec) { return normalize(subspec, config); }) });
}
function normalizeFacetedUnit(spec, config) {
    // New encoding in the inside spec should not contain row / column
    // as row/column should be moved to facet
    var _a = spec.encoding, row = _a.row, column = _a.column, encoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["row", "column"]);
    // Mark and encoding should be moved into the inner spec
    var mark = spec.mark, width = spec.width, projection = spec.projection, height = spec.height, selection = spec.selection, _ = spec.encoding, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "width", "projection", "height", "selection", "encoding"]);
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, outerSpec, { facet: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (row ? { row: row } : {}), (column ? { column: column } : {})), spec: normalizeNonFacetUnit(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (projection ? { projection: projection } : {}), { mark: mark }, (width ? { width: width } : {}), (height ? { height: height } : {}), { encoding: encoding }, (selection ? { selection: selection } : {})), config) });
}
function isNonFacetUnitSpecWithPrimitiveMark(spec) {
    return Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isPrimitiveMark"])(spec.mark);
}
function getPointOverlay(markDef, markConfig, encoding) {
    if (markDef.point === 'transparent') {
        return { opacity: 0 };
    }
    else if (markDef.point) { // truthy : true or object
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(markDef.point) ? markDef.point : {};
    }
    else if (markDef.point !== undefined) { // false or null
        return null;
    }
    else { // undefined (not disabled)
        if (markConfig.point || encoding.shape) {
            // enable point overlay if config[mark].point is truthy or if encoding.shape is provided
            return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(markConfig.point) ? markConfig.point : {};
        }
        // markDef.point is defined as falsy
        return null;
    }
}
function getLineOverlay(markDef, markConfig) {
    if (markDef.line) { // true or object
        return markDef.line === true ? {} : markDef.line;
    }
    else if (markDef.line !== undefined) { // false or null
        return null;
    }
    else { // undefined (not disabled)
        if (markConfig.line) {
            // enable line overlay if config[mark].line is truthy
            return markConfig.line === true ? {} : markConfig.line;
        }
        // markDef.point is defined as falsy
        return null;
    }
}
function normalizeNonFacetUnit(spec, config, parentEncoding, parentProjection) {
    var encoding = spec.encoding, projection = spec.projection;
    var mark = Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isMarkDef"])(spec.mark) ? spec.mark.type : spec.mark;
    // merge parent encoding / projection first
    if (parentEncoding || parentProjection) {
        var mergedProjection = mergeProjection({ parentProjection: parentProjection, projection: projection });
        var mergedEncoding = mergeEncoding({ parentEncoding: parentEncoding, encoding: encoding });
        return normalizeNonFacetUnit(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, spec, (mergedProjection ? { projection: mergedProjection } : {}), (mergedEncoding ? { encoding: mergedEncoding } : {})), config);
    }
    if (isNonFacetUnitSpecWithPrimitiveMark(spec)) {
        // TODO: thoroughly test
        if (Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["isRanged"])(encoding)) {
            return normalizeRangedUnit(spec);
        }
        if (mark === 'line' && (encoding.x2 || encoding.y2)) {
            _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].lineWithRange(!!encoding.x2, !!encoding.y2));
            return normalizeNonFacetUnit(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ mark: 'rule' }, spec), config, parentEncoding, parentProjection);
        }
        if (Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isPathMark"])(mark)) {
            return normalizePathOverlay(spec, config);
        }
        return spec; // Nothing to normalize
    }
    else {
        return _compositemark__WEBPACK_IMPORTED_MODULE_3__["normalize"](spec, config);
    }
}
function normalizeRangedUnit(spec) {
    var hasX = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["X"]);
    var hasY = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]);
    var hasX2 = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["X2"]);
    var hasY2 = Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["Y2"]);
    if ((hasX2 && !hasX) || (hasY2 && !hasY)) {
        var normalizedSpec = Object(_util__WEBPACK_IMPORTED_MODULE_8__["duplicate"])(spec);
        if (hasX2 && !hasX) {
            normalizedSpec.encoding.x = normalizedSpec.encoding.x2;
            delete normalizedSpec.encoding.x2;
        }
        if (hasY2 && !hasY) {
            normalizedSpec.encoding.y = normalizedSpec.encoding.y2;
            delete normalizedSpec.encoding.y2;
        }
        return normalizedSpec;
    }
    return spec;
}
function dropLineAndPoint(markDef) {
    var _point = markDef.point, _line = markDef.line, mark = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](markDef, ["point", "line"]);
    return Object(_util__WEBPACK_IMPORTED_MODULE_8__["keys"])(mark).length > 1 ? mark : mark.type;
}
function normalizePathOverlay(spec, config) {
    if (config === void 0) { config = {}; }
    var _a;
    // _ is used to denote a dropped property of the unit spec
    // which should not be carried over to the layer spec
    var selection = spec.selection, projection = spec.projection, encoding = spec.encoding, mark = spec.mark, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["selection", "projection", "encoding", "mark"]);
    var markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isMarkDef"])(mark) ? mark : { type: mark };
    var pointOverlay = getPointOverlay(markDef, config[markDef.type], encoding);
    var lineOverlay = markDef.type === 'area' && getLineOverlay(markDef, config[markDef.type]);
    if (!pointOverlay && !lineOverlay) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, spec, { 
            // Do not include point / line overlay in the normalize spec
            mark: dropLineAndPoint(markDef) });
    }
    var layer = [tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (selection ? { selection: selection } : {}), { 
            // Do not include point / line overlay in the normalize spec
            mark: dropLineAndPoint(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, markDef, (markDef.type === 'area' ? { opacity: 0.7 } : {}))), 
            // drop shape from encoding as this might be used to trigger point overlay
            encoding: Object(_util__WEBPACK_IMPORTED_MODULE_8__["omit"])(encoding, ['shape']) })];
    // FIXME: determine rules for applying selections.
    // Need to copy stack config to overlayed layer
    var stackProps = Object(_stack__WEBPACK_IMPORTED_MODULE_7__["stack"])(markDef, encoding, config ? config.stack : undefined);
    var overlayEncoding = encoding;
    if (stackProps) {
        var stackFieldChannel = stackProps.fieldChannel, offset = stackProps.offset;
        overlayEncoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, encoding, (_a = {}, _a[stackFieldChannel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, encoding[stackFieldChannel], (offset ? { stack: offset } : {})), _a));
    }
    if (lineOverlay) {
        layer.push(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (projection ? { projection: projection } : {}), { mark: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'line' }, Object(_util__WEBPACK_IMPORTED_MODULE_8__["pick"])(markDef, ['clip', 'interpolate']), lineOverlay), encoding: overlayEncoding }));
    }
    if (pointOverlay) {
        layer.push(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, (projection ? { projection: projection } : {}), { mark: tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ type: 'point', opacity: 1, filled: true }, Object(_util__WEBPACK_IMPORTED_MODULE_8__["pick"])(markDef, ['clip']), pointOverlay), encoding: overlayEncoding }));
    }
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, outerSpec, { layer: layer });
}
// TODO: add vl.spec.validate & move stuff from vl.validate to here
/* Accumulate non-duplicate fieldDefs in a dictionary */
function accumulate(dict, defs) {
    defs.forEach(function (fieldDef) {
        // Consider only pure fieldDef properties (ignoring scale, axis, legend)
        var pureFieldDef = ['field', 'type', 'value', 'timeUnit', 'bin', 'aggregate'].reduce(function (f, key) {
            if (fieldDef[key] !== undefined) {
                f[key] = fieldDef[key];
            }
            return f;
        }, {});
        var key = Object(_util__WEBPACK_IMPORTED_MODULE_8__["hash"])(pureFieldDef);
        dict[key] = dict[key] || fieldDef;
    });
    return dict;
}
/* Recursively get fieldDefs from a spec, returns a dictionary of fieldDefs */
function fieldDefIndex(spec, dict) {
    if (dict === void 0) { dict = {}; }
    // FIXME(https://github.com/vega/vega-lite/issues/2207): Support fieldDefIndex for repeat
    if (isLayerSpec(spec)) {
        spec.layer.forEach(function (layer) {
            if (isUnitSpec(layer)) {
                accumulate(dict, _encoding__WEBPACK_IMPORTED_MODULE_4__["fieldDefs"](layer.encoding));
            }
            else {
                fieldDefIndex(layer, dict);
            }
        });
    }
    else if (isFacetSpec(spec)) {
        accumulate(dict, _encoding__WEBPACK_IMPORTED_MODULE_4__["fieldDefs"](spec.facet));
        fieldDefIndex(spec.spec, dict);
    }
    else if (isRepeatSpec(spec)) {
        fieldDefIndex(spec.spec, dict);
    }
    else if (isConcatSpec(spec)) {
        var childSpec = isVConcatSpec(spec) ? spec.vconcat : spec.hconcat;
        childSpec.forEach(function (child) { return fieldDefIndex(child, dict); });
    }
    else { // Unit Spec
        accumulate(dict, _encoding__WEBPACK_IMPORTED_MODULE_4__["fieldDefs"](spec.encoding));
    }
    return dict;
}
/* Returns all non-duplicate fieldDefs in a spec in a flat array */
function fieldDefs(spec) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_8__["vals"])(fieldDefIndex(spec));
}
function isStacked(spec, config) {
    config = config || spec.config;
    if (Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isPrimitiveMark"])(spec.mark)) {
        return Object(_stack__WEBPACK_IMPORTED_MODULE_7__["stack"])(spec.mark, spec.encoding, config ? config.stack : undefined) !== null;
    }
    return false;
}
//# sourceMappingURL=spec.js.map

/***/ }),

/***/ "yViF":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoJSON.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoJSON; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "2JAl");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/**
 * Consolidate an array of [longitude, latitude] points or GeoJSON features
 * into a combined GeoJSON object. This transform is particularly useful for
 * combining geo data for a Projection's fit argument. The resulting GeoJSON
 * data is available as this transform's value. Input pulses are unchanged.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.fields] - A two-element array
 *   of field accessors for the longitude and latitude values.
 * @param {function(object): *} params.geojson - A field accessor for
 *   retrieving GeoJSON feature data.
 */
function GeoJSON(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

GeoJSON.Definition = {
  "type": "GeoJSON",
  "metadata": {},
  "params": [
    { "name": "fields", "type": "field", "array": true, "length": 2 },
    { "name": "geojson", "type": "field" },
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoJSON, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var features = this._features,
      points = this._points,
      fields = _.fields,
      lon = fields && fields[0],
      lat = fields && fields[1],
      geojson = _.geojson,
      flag = pulse.ADD,
      mod;

  mod = _.modified()
    || pulse.changed(pulse.REM)
    || pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(geojson))
    || (lon && (pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(lon))))
    || (lat && (pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(lat))));

  if (!this.value || mod) {
    flag = pulse.SOURCE;
    this._features = (features = []);
    this._points = (points = []);
  }

  if (geojson) {
    pulse.visit(flag, function(t) {
      features.push(geojson(t));
    });
  }

  if (lon && lat) {
    pulse.visit(flag, function(t) {
      var x = lon(t),
          y = lat(t);
      if (x != null && y != null && (x = +x) === x && (y = +y) === y) {
        points.push([x, y]);
      }
    });
    features = features.concat({
      type: _constants__WEBPACK_IMPORTED_MODULE_0__["Feature"],
      geometry: {
        type: _constants__WEBPACK_IMPORTED_MODULE_0__["MultiPoint"],
        coordinates: points
      }
    });
  }

  this.value = {
    type: _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"],
    features: features
  };
};


/***/ }),

/***/ "yYvi":
/*!***************************************************!*\
  !*** ./node_modules/vega-embed/build/src/util.js ***!
  \***************************************************/
/*! exports provided: mergeDeep, isURL */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeep", function() { return mergeDeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isURL", function() { return isURL; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");

/**
 * From vega-lite
 */
function mergeDeep(dest) {
    var src = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        src[_i - 1] = arguments[_i];
    }
    for (var _a = 0, src_1 = src; _a < src_1.length; _a++) {
        var s = src_1[_a];
        dest = deepMerge_(dest, s);
    }
    return dest;
}
function deepMerge_(dest, src) {
    if (typeof src !== 'object' || src === null) {
        return dest;
    }
    for (var p in src) {
        if (!src.hasOwnProperty(p)) {
            continue;
        }
        if (src[p] === undefined) {
            continue;
        }
        if (typeof src[p] !== 'object' || Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(src[p]) || src[p] === null) {
            dest[p] = src[p];
        }
        else if (typeof dest[p] !== 'object' || dest[p] === null) {
            dest[p] = mergeDeep(Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(src[p].constructor) ? [] : {}, src[p]);
        }
        else {
            mergeDeep(dest[p], src[p]);
        }
    }
    return dest;
}
// polyfill for IE
if (!String.prototype.startsWith) {
    String.prototype.startsWith = function (search, pos) {
        return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
    };
}
function isURL(s) {
    return s.startsWith('http://') || s.startsWith('https://') || s.startsWith('//');
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "ygAO":
/*!*****************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Stratify.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Stratify; });
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookup */ "F1Ya");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-hierarchy */ "yUfG");





 /**
  * Stratify a collection of tuples into a tree structure based on
  * id and parent id fields.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {function(object): *} params.key - Unique key field for each tuple.
  * @param {function(object): *} params.parentKey - Field with key for parent tuple.
  */
function Stratify(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Stratify.Definition = {
  "type": "Stratify",
  "metadata": {"treesource": true},
  "params": [
    { "name": "key", "type": "field", "required": true },
    { "name": "parentKey", "type": "field", "required": true  }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Stratify, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!pulse.source) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Stratify transform requires an upstream data source.');
  }

  var tree = this.value,
      mod = _.modified(),
      out = pulse.fork(pulse.ALL).materialize(pulse.SOURCE),
      run = !this.value
         || mod
         || pulse.changed(pulse.ADD_REM)
         || pulse.modified(_.key.fields)
         || pulse.modified(_.parentKey.fields);

  // prevent upstream source pollution
  out.source = out.source.slice();

  if (run) {
    if (out.source.length) {
      tree = Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(
        Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__["stratify"])().id(_.key).parentId(_.parentKey)(out.source)
        , _.key, vega_util__WEBPACK_IMPORTED_MODULE_2__["truthy"]);
    } else {
      tree = Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__["stratify"])()([{}]), _.key, _.key);
    }
  }

  out.source.root = this.value = tree;
  return out;
};


/***/ }),

/***/ "yiO1":
/*!*******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/EventStream.js ***!
  \*******************************************************/
/*! exports provided: default, stream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EventStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stream", function() { return stream; });
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/UniqueList */ "YCOJ");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



var STREAM_ID = 0;

/**
 * Models an event stream.
 * @constructor
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @param {function(Object)} [receive] - Event callback function to invoke
 *   upon receipt of a new event. Use to override standard event processing.
 */
function EventStream(filter, apply, receive) {
  this.id = ++STREAM_ID;
  this.value = null;
  if (receive) this.receive = receive;
  if (filter) this._filter = filter;
  if (apply) this._apply = apply;
}

/**
 * Creates a new event stream instance with the provided
 * (optional) filter, apply and receive functions.
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @see EventStream
 */
function stream(filter, apply, receive) {
  return new EventStream(filter, apply, receive);
}

var prototype = EventStream.prototype;

prototype._filter = vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"];

prototype._apply = vega_util__WEBPACK_IMPORTED_MODULE_1__["identity"];

prototype.targets = function() {
  return this._targets || (this._targets = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_1__["id"]));
};

prototype.consume = function(_) {
  if (!arguments.length) return !!this._consume;
  this._consume = !!_;
  return this;
};

prototype.receive = function(evt) {
  if (this._filter(evt)) {
    var val = (this.value = this._apply(evt)),
        trg = this._targets,
        n = trg ? trg.length : 0,
        i = 0;

    for (; i<n; ++i) trg[i].receive(val);

    if (this._consume) {
      evt.preventDefault();
      evt.stopPropagation();
    }
  }
};

prototype.filter = function(filter) {
  var s = stream(filter);
  this.targets().add(s);
  return s;
};

prototype.apply = function(apply) {
  var s = stream(null, apply);
  this.targets().add(s);
  return s;
};

prototype.merge = function() {
  var s = stream();

  this.targets().add(s);
  for (var i=0, n=arguments.length; i<n; ++i) {
    arguments[i].targets().add(s);
  }

  return s;
};

prototype.throttle = function(pause) {
  var t = -1;
  return this.filter(function() {
    var now = Date.now();
    if ((now - t) > pause) {
      t = now;
      return 1;
    } else {
      return 0;
    }
  });
};

prototype.debounce = function(delay) {
  var s = stream();

  this.targets().add(stream(null, null,
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["debounce"])(delay, function(e) {
      var df = e.dataflow;
      s.receive(e);
      if (df && df.run) df.run();
    })
  ));

  return s;
};

prototype.between = function(a, b) {
  var active = false;
  a.targets().add(stream(null, null, function() { active = true; }));
  b.targets().add(stream(null, null, function() { active = false; }));
  return this.filter(function() { return active; });
};


/***/ }),

/***/ "yn0s":
/*!**********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/unit.js ***!
  \**********************************************************/
/*! exports provided: UnitModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnitModel", function() { return UnitModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channel */ "5g++");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding */ "sHgr");
/* harmony import */ var _fielddef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fielddef */ "d61h");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mark */ "fKXb");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../stack */ "h4ZY");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util */ "Hc3/");
/* harmony import */ var _axis_parse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./axis/parse */ "8fNt");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./data/parse */ "S7P/");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./layoutsize/assemble */ "Ds8r");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./layoutsize/parse */ "drwQ");
/* harmony import */ var _mark_init__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mark/init */ "bA7m");
/* harmony import */ var _mark_mark__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mark/mark */ "bi7s");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./model */ "MqRG");
/* harmony import */ var _repeater__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./repeater */ "7N9s");
/* harmony import */ var _selection_selection__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./selection/selection */ "3eK9");

















/**
 * Internal model of Vega-Lite specification for the compiler.
 */
var UnitModel = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](UnitModel, _super);
    function UnitModel(spec, parent, parentGivenName, parentGivenSize, repeater, config, fit) {
        if (parentGivenSize === void 0) { parentGivenSize = {}; }
        var _this = _super.call(this, spec, parent, parentGivenName, config, repeater, undefined) || this;
        _this.fit = fit;
        _this.type = 'unit';
        _this.specifiedScales = {};
        _this.specifiedAxes = {};
        _this.specifiedLegends = {};
        _this.specifiedProjection = {};
        _this.selection = {};
        _this.children = [];
        _this.initSize(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, parentGivenSize, (spec.width ? { width: spec.width } : {}), (spec.height ? { height: spec.height } : {})));
        var mark = Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isMarkDef"])(spec.mark) ? spec.mark.type : spec.mark;
        var encoding = _this.encoding = Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["normalizeEncoding"])(Object(_repeater__WEBPACK_IMPORTED_MODULE_14__["replaceRepeaterInEncoding"])(spec.encoding || {}, repeater), mark);
        _this.markDef = Object(_mark_init__WEBPACK_IMPORTED_MODULE_11__["normalizeMarkDef"])(spec.mark, encoding, config);
        // calculate stack properties
        _this.stack = Object(_stack__WEBPACK_IMPORTED_MODULE_5__["stack"])(mark, encoding, _this.config.stack);
        _this.specifiedScales = _this.initScales(mark, encoding);
        _this.specifiedAxes = _this.initAxes(encoding);
        _this.specifiedLegends = _this.initLegend(encoding);
        _this.specifiedProjection = spec.projection;
        // Selections will be initialized upon parse.
        _this.selection = spec.selection;
        return _this;
    }
    Object.defineProperty(UnitModel.prototype, "hasProjection", {
        get: function () {
            var encoding = this.encoding;
            var isGeoShapeMark = this.mark === _mark__WEBPACK_IMPORTED_MODULE_4__["GEOSHAPE"];
            var hasGeoPosition = encoding && _channel__WEBPACK_IMPORTED_MODULE_1__["GEOPOSITION_CHANNELS"].some(function (channel) { return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding[channel]); });
            return isGeoShapeMark || hasGeoPosition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return specified Vega-lite scale domain for a particular channel
     * @param channel
     */
    UnitModel.prototype.scaleDomain = function (channel) {
        var scale = this.specifiedScales[channel];
        return scale ? scale.domain : undefined;
    };
    UnitModel.prototype.axis = function (channel) {
        return this.specifiedAxes[channel];
    };
    UnitModel.prototype.legend = function (channel) {
        return this.specifiedLegends[channel];
    };
    UnitModel.prototype.initScales = function (mark, encoding) {
        return _channel__WEBPACK_IMPORTED_MODULE_1__["SCALE_CHANNELS"].reduce(function (scales, channel) {
            var fieldDef;
            var specifiedScale;
            var channelDef = encoding[channel];
            if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef)) {
                fieldDef = channelDef;
                specifiedScale = channelDef.scale;
            }
            else if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["hasConditionalFieldDef"])(channelDef)) {
                fieldDef = channelDef.condition;
                specifiedScale = channelDef.condition['scale'];
            }
            else if (channel === 'x') {
                fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(encoding.x2);
            }
            else if (channel === 'y') {
                fieldDef = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(encoding.y2);
            }
            if (fieldDef) {
                scales[channel] = specifiedScale || {};
            }
            return scales;
        }, {});
    };
    UnitModel.prototype.initAxes = function (encoding) {
        return [_channel__WEBPACK_IMPORTED_MODULE_1__["X"], _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]].reduce(function (_axis, channel) {
            // Position Axis
            // TODO: handle ConditionFieldDef
            var channelDef = encoding[channel];
            if (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) ||
                (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] && Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding.x2)) ||
                (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["Y"] && Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(encoding.y2))) {
                var axisSpec = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) ? channelDef.axis : null;
                // We no longer support false in the schema, but we keep false here for backward compatibility.
                if (axisSpec !== null && axisSpec !== false) {
                    _axis[channel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, axisSpec);
                }
            }
            return _axis;
        }, {});
    };
    UnitModel.prototype.initLegend = function (encoding) {
        return _channel__WEBPACK_IMPORTED_MODULE_1__["NONPOSITION_SCALE_CHANNELS"].reduce(function (_legend, channel) {
            var channelDef = encoding[channel];
            if (channelDef) {
                var legend = Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(channelDef) ? channelDef.legend :
                    (Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["hasConditionalFieldDef"])(channelDef)) ? channelDef.condition['legend'] : null;
                if (legend !== null && legend !== false) {
                    _legend[channel] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, legend);
                }
            }
            return _legend;
        }, {});
    };
    UnitModel.prototype.parseData = function () {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_8__["parseData"])(this);
    };
    UnitModel.prototype.parseLayoutSize = function () {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_10__["parseUnitLayoutSize"])(this);
    };
    UnitModel.prototype.parseSelection = function () {
        this.component.selection = Object(_selection_selection__WEBPACK_IMPORTED_MODULE_15__["parseUnitSelection"])(this, this.selection);
    };
    UnitModel.prototype.parseMarkGroup = function () {
        this.component.mark = Object(_mark_mark__WEBPACK_IMPORTED_MODULE_12__["parseMarkGroup"])(this);
    };
    UnitModel.prototype.parseAxisAndHeader = function () {
        this.component.axes = Object(_axis_parse__WEBPACK_IMPORTED_MODULE_7__["parseUnitAxis"])(this);
    };
    UnitModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return Object(_selection_selection__WEBPACK_IMPORTED_MODULE_15__["assembleTopLevelSignals"])(this, signals);
    };
    UnitModel.prototype.assembleSelectionSignals = function () {
        return Object(_selection_selection__WEBPACK_IMPORTED_MODULE_15__["assembleUnitSelectionSignals"])(this, []);
    };
    UnitModel.prototype.assembleSelectionData = function (data) {
        return Object(_selection_selection__WEBPACK_IMPORTED_MODULE_15__["assembleUnitSelectionData"])(this, data);
    };
    UnitModel.prototype.assembleLayout = function () {
        return null;
    };
    UnitModel.prototype.assembleLayoutSignals = function () {
        return Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_9__["assembleLayoutSignals"])(this);
    };
    UnitModel.prototype.assembleMarks = function () {
        var marks = this.component.mark || [];
        // If this unit is part of a layer, selections should augment
        // all in concert rather than each unit individually. This
        // ensures correct interleaving of clipping and brushed marks.
        if (!this.parent || !Object(_model__WEBPACK_IMPORTED_MODULE_13__["isLayerModel"])(this.parent)) {
            marks = Object(_selection_selection__WEBPACK_IMPORTED_MODULE_15__["assembleUnitSelectionMarks"])(this, marks);
        }
        return marks.map(this.correctDataNames);
    };
    UnitModel.prototype.assembleLayoutSize = function () {
        return {
            width: this.getSizeSignalRef('width'),
            height: this.getSizeSignalRef('height')
        };
    };
    UnitModel.prototype.getMapping = function () {
        return this.encoding;
    };
    UnitModel.prototype.toSpec = function (excludeConfig, excludeData) {
        var encoding = Object(_util__WEBPACK_IMPORTED_MODULE_6__["duplicate"])(this.encoding);
        var spec;
        spec = {
            mark: this.markDef,
            encoding: encoding
        };
        if (!excludeConfig) {
            spec.config = Object(_util__WEBPACK_IMPORTED_MODULE_6__["duplicate"])(this.config);
        }
        if (!excludeData) {
            spec.data = Object(_util__WEBPACK_IMPORTED_MODULE_6__["duplicate"])(this.data);
        }
        // remove defaults
        return spec;
    };
    Object.defineProperty(UnitModel.prototype, "mark", {
        get: function () {
            return this.markDef.type;
        },
        enumerable: true,
        configurable: true
    });
    UnitModel.prototype.channelHasField = function (channel) {
        return _encoding__WEBPACK_IMPORTED_MODULE_2__["channelHasField"](this.encoding, channel);
    };
    UnitModel.prototype.fieldDef = function (channel) {
        var channelDef = this.encoding[channel];
        return Object(_fielddef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(channelDef);
    };
    return UnitModel;
}(_model__WEBPACK_IMPORTED_MODULE_13__["ModelWithField"]));

//# sourceMappingURL=unit.js.map

/***/ }),

/***/ "yuQx":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/legend.js ***!
  \****************************************************/
/*! exports provided: defaultLegendConfig, LEGEND_PROPERTIES, VG_LEGEND_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLegendConfig", function() { return defaultLegendConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LEGEND_PROPERTIES", function() { return LEGEND_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_LEGEND_PROPERTIES", function() { return VG_LEGEND_PROPERTIES; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "Hc3/");


var defaultLegendConfig = {};
var COMMON_LEGEND_PROPERTY_INDEX = {
    entryPadding: 1,
    format: 1,
    offset: 1,
    orient: 1,
    padding: 1,
    tickCount: 1,
    title: 1,
    type: 1,
    values: 1,
    zindex: 1
};
var VG_LEGEND_PROPERTY_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, COMMON_LEGEND_PROPERTY_INDEX, { 
    // channel scales
    opacity: 1, shape: 1, stroke: 1, fill: 1, size: 1, 
    // encode
    encode: 1 });
var LEGEND_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(COMMON_LEGEND_PROPERTY_INDEX);
var VG_LEGEND_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(VG_LEGEND_PROPERTY_INDEX);
//# sourceMappingURL=legend.js.map

/***/ }),

/***/ "z5aY":
/*!*****************************************************!*\
  !*** ./node_modules/vega-expression/src/codegen.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "QOGX");
/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ "1RqS");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "J29t");




/* harmony default export */ __webpack_exports__["default"] = (function(opt) {
  opt = opt || {};

  var whitelist = opt.whitelist ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(opt.whitelist) : {},
      blacklist = opt.blacklist ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(opt.blacklist) : {},
      constants = opt.constants || _constants__WEBPACK_IMPORTED_MODULE_0__["default"],
      functions = (opt.functions || _functions__WEBPACK_IMPORTED_MODULE_1__["default"])(visit),
      globalvar = opt.globalvar,
      fieldvar = opt.fieldvar,
      globals = {},
      fields = {},
      memberDepth = 0;

  var outputGlobal = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(globalvar)
    ? globalvar
    : function (id) { return globalvar + '["' + id + '"]'; };

  function visit(ast) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(ast)) return ast;
    var generator = Generators[ast.type];
    if (generator == null) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unsupported type: ' + ast.type);
    return generator(ast);
  }

  var Generators = {
    Literal: function(n) {
        return n.raw;
      },

    Identifier: function(n) {
      var id = n.name;
      if (memberDepth > 0) {
        return id;
      } else if (blacklist.hasOwnProperty(id)) {
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Illegal identifier: ' + id);
      } else if (constants.hasOwnProperty(id)) {
        return constants[id];
      } else if (whitelist.hasOwnProperty(id)) {
        return id;
      } else {
        globals[id] = 1;
        return outputGlobal(id);
      }
    },

    MemberExpression: function(n) {
        var d = !n.computed;
        var o = visit(n.object);
        if (d) memberDepth += 1;
        var p = visit(n.property);
        if (o === fieldvar) { fields[p] = 1; } // HACKish...
        if (d) memberDepth -= 1;
        return o + (d ? '.'+p : '['+p+']');
      },

    CallExpression: function(n) {
        if (n.callee.type !== 'Identifier') {
          Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Illegal callee type: ' + n.callee.type);
        }
        var callee = n.callee.name;
        var args = n.arguments;
        var fn = functions.hasOwnProperty(callee) && functions[callee];
        if (!fn) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized function: ' + callee);
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(fn)
          ? fn(args)
          : fn + '(' + args.map(visit).join(',') + ')';
      },

    ArrayExpression: function(n) {
        return '[' + n.elements.map(visit).join(',') + ']';
      },

    BinaryExpression: function(n) {
        return '(' + visit(n.left) + n.operator + visit(n.right) + ')';
      },

    UnaryExpression: function(n) {
        return '(' + n.operator + visit(n.argument) + ')';
      },

    ConditionalExpression: function(n) {
        return '(' + visit(n.test) +
          '?' + visit(n.consequent) +
          ':' + visit(n.alternate) +
          ')';
      },

    LogicalExpression: function(n) {
        return '(' + visit(n.left) + n.operator + visit(n.right) + ')';
      },

    ObjectExpression: function(n) {
        return '{' + n.properties.map(visit).join(',') + '}';
      },

    Property: function(n) {
        memberDepth += 1;
        var k = visit(n.key);
        memberDepth -= 1;
        return k + ':' + visit(n.value);
      }
  };

  function codegen(ast) {
    var result = {
      code:    visit(ast),
      globals: Object.keys(globals),
      fields:  Object.keys(fields)
    };
    globals = {};
    fields = {};
    return result;
  }

  codegen.functions = functions;
  codegen.constants = constants;

  return codegen;
});


/***/ }),

/***/ "zH0B":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/config.js ***!
  \****************************************************/
/*! exports provided: defaultViewConfig, defaultConfig, initConfig, stripAndRedirectConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultViewConfig", function() { return defaultViewConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initConfig", function() { return initConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripAndRedirectConfig", function() { return stripAndRedirectConfig; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");
/* harmony import */ var _compositemark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compositemark */ "Egee");
/* harmony import */ var _guide__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guide */ "BSwg");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./legend */ "yuQx");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mark */ "fKXb");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scale */ "50Px");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selection */ "kygm");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./title */ "qRBp");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util */ "Hc3/");












var defaultViewConfig = {
    width: 200,
    height: 200
};
var defaultConfig = {
    padding: 5,
    timeFormat: '',
    countTitle: 'Number of Records',
    invalidValues: 'filter',
    view: defaultViewConfig,
    mark: _mark__WEBPACK_IMPORTED_MODULE_5__["defaultMarkConfig"],
    area: {},
    bar: _mark__WEBPACK_IMPORTED_MODULE_5__["defaultBarConfig"],
    circle: {},
    geoshape: {},
    line: {},
    point: {},
    rect: {},
    rule: { color: 'black' },
    square: {},
    text: { color: 'black' },
    tick: _mark__WEBPACK_IMPORTED_MODULE_5__["defaultTickConfig"],
    trail: {},
    box: { size: 14, extent: 1.5 },
    boxWhisker: {},
    boxMid: { color: 'white' },
    scale: _scale__WEBPACK_IMPORTED_MODULE_6__["defaultScaleConfig"],
    projection: {},
    axis: {},
    axisX: {},
    axisY: { minExtent: 30 },
    axisLeft: {},
    axisRight: {},
    axisTop: {},
    axisBottom: {},
    axisBand: {},
    legend: _legend__WEBPACK_IMPORTED_MODULE_4__["defaultLegendConfig"],
    selection: _selection__WEBPACK_IMPORTED_MODULE_7__["defaultConfig"],
    style: {},
    title: {},
};
function initConfig(config) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["mergeDeep"])(Object(_util__WEBPACK_IMPORTED_MODULE_9__["duplicate"])(defaultConfig), config);
}
var MARK_STYLES = ['view'].concat(_mark__WEBPACK_IMPORTED_MODULE_5__["PRIMITIVE_MARKS"], _compositemark__WEBPACK_IMPORTED_MODULE_2__["COMPOSITE_MARK_STYLES"]);
var VL_ONLY_CONFIG_PROPERTIES = [
    'padding', 'numberFormat', 'timeFormat', 'countTitle',
    'stack', 'scale', 'selection', 'invalidValues',
    'overlay' // FIXME: Redesign and unhide this
];
var VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({ view: ['width', 'height'] }, _mark__WEBPACK_IMPORTED_MODULE_5__["VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX"], _compositemark__WEBPACK_IMPORTED_MODULE_2__["VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX"]);
function stripAndRedirectConfig(config) {
    config = Object(_util__WEBPACK_IMPORTED_MODULE_9__["duplicate"])(config);
    for (var _i = 0, VL_ONLY_CONFIG_PROPERTIES_1 = VL_ONLY_CONFIG_PROPERTIES; _i < VL_ONLY_CONFIG_PROPERTIES_1.length; _i++) {
        var prop = VL_ONLY_CONFIG_PROPERTIES_1[_i];
        delete config[prop];
    }
    // Remove Vega-Lite only axis/legend config
    if (config.axis) {
        for (var _a = 0, VL_ONLY_GUIDE_CONFIG_1 = _guide__WEBPACK_IMPORTED_MODULE_3__["VL_ONLY_GUIDE_CONFIG"]; _a < VL_ONLY_GUIDE_CONFIG_1.length; _a++) {
            var prop = VL_ONLY_GUIDE_CONFIG_1[_a];
            delete config.axis[prop];
        }
    }
    if (config.legend) {
        for (var _b = 0, VL_ONLY_GUIDE_CONFIG_2 = _guide__WEBPACK_IMPORTED_MODULE_3__["VL_ONLY_GUIDE_CONFIG"]; _b < VL_ONLY_GUIDE_CONFIG_2.length; _b++) {
            var prop = VL_ONLY_GUIDE_CONFIG_2[_b];
            delete config.legend[prop];
        }
    }
    // Remove Vega-Lite only generic mark config
    if (config.mark) {
        for (var _c = 0, VL_ONLY_MARK_CONFIG_PROPERTIES_1 = _mark__WEBPACK_IMPORTED_MODULE_5__["VL_ONLY_MARK_CONFIG_PROPERTIES"]; _c < VL_ONLY_MARK_CONFIG_PROPERTIES_1.length; _c++) {
            var prop = VL_ONLY_MARK_CONFIG_PROPERTIES_1[_c];
            delete config.mark[prop];
        }
    }
    for (var _d = 0, MARK_STYLES_1 = MARK_STYLES; _d < MARK_STYLES_1.length; _d++) {
        var markType = MARK_STYLES_1[_d];
        // Remove Vega-Lite-only mark config
        for (var _e = 0, VL_ONLY_MARK_CONFIG_PROPERTIES_2 = _mark__WEBPACK_IMPORTED_MODULE_5__["VL_ONLY_MARK_CONFIG_PROPERTIES"]; _e < VL_ONLY_MARK_CONFIG_PROPERTIES_2.length; _e++) {
            var prop = VL_ONLY_MARK_CONFIG_PROPERTIES_2[_e];
            delete config[markType][prop];
        }
        // Remove Vega-Lite only mark-specific config
        var vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];
        if (vlOnlyMarkSpecificConfigs) {
            for (var _f = 0, vlOnlyMarkSpecificConfigs_1 = vlOnlyMarkSpecificConfigs; _f < vlOnlyMarkSpecificConfigs_1.length; _f++) {
                var prop = vlOnlyMarkSpecificConfigs_1[_f];
                delete config[markType][prop];
            }
        }
        // Redirect mark config to config.style so that mark config only affect its own mark type
        // without affecting other marks that share the same underlying Vega marks.
        // For example, config.rect should not affect bar marks.
        redirectConfig(config, markType);
    }
    // Redirect config.title -- so that title config do not
    // affect header labels, which also uses `title` directive to implement.
    redirectConfig(config, 'title', 'group-title');
    // Remove empty config objects
    for (var prop in config) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(config[prop]) && Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(config[prop]).length === 0) {
            delete config[prop];
        }
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(config).length > 0 ? config : undefined;
}
function redirectConfig(config, prop, toProp) {
    var propConfig = prop === 'title' ? Object(_title__WEBPACK_IMPORTED_MODULE_8__["extractTitleConfig"])(config.title).mark : config[prop];
    if (prop === 'view') {
        toProp = 'cell'; // View's default style is "cell"
    }
    var style = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, propConfig, config.style[prop]);
    // set config.style if it is not an empty object
    if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(style).length > 0) {
        config.style[toProp || prop] = style;
    }
    delete config[prop];
}
//# sourceMappingURL=config.js.map

/***/ }),

/***/ "zJeW":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression/merge.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "J29t");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var args = [].slice.call(arguments);
  args.unshift({});
  return vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"].apply(null, args);
});


/***/ }),

/***/ "zP17":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/events.js ***!
  \*********************************************************/
/*! exports provided: Events, TooltipShowEvent, TooltipHideEvent, HrefEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Events", function() { return Events; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipShowEvent", function() { return TooltipShowEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipHideEvent", function() { return TooltipHideEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HrefEvent", function() { return HrefEvent; });
var Events = [
  'keydown',
  'keypress',
  'keyup',
  'dragenter',
  'dragleave',
  'dragover',
  'mousedown',
  'mouseup',
  'mousemove',
  'mouseout',
  'mouseover',
  'click',
  'dblclick',
  'wheel',
  'mousewheel',
  'touchstart',
  'touchmove',
  'touchend'
];

var TooltipShowEvent = 'mousemove';

var TooltipHideEvent = 'mouseout';

var HrefEvent = 'click';


/***/ }),

/***/ "zfIz":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Subflow.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Subflow; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "6RUl");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "J29t");



/**
 * Provides a bridge between a parent transform and a target subflow that
 * consumes only a subset of the tuples that pass through the parent.
 * @constructor
 * @param {Pulse} pulse - A pulse to use as the value of this operator.
 * @param {Transform} parent - The parent transform (typically a Facet instance).
 * @param {Transform} target - A transform that receives the subflow of tuples.
 */
function Subflow(pulse, parent) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, pulse);
  this.parent = parent;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Subflow, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

prototype.connect = function(target) {
  this.targets().add(target);
  return (target.source = this);
};

/**
 * Add an 'add' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being added.
 */
prototype.add = function(t) {
  this.value.add.push(t);
};

/**
 * Add a 'rem' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being removed.
 */
prototype.rem = function(t) {
  this.value.rem.push(t);
};

/**
 * Add a 'mod' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being modified.
 */
prototype.mod = function(t) {
  this.value.mod.push(t);
};

/**
 * Re-initialize this operator's pulse value.
 * @param {Pulse} pulse - The pulse to copy from.
 * @see Pulse.init
 */
prototype.init = function(pulse) {
  this.value.init(pulse, pulse.NO_SOURCE);
};

/**
 * Evaluate this operator. This method overrides the
 * default behavior to simply return the contained pulse value.
 * @return {Pulse}
 */
prototype.evaluate = function() {
  // assert: this.value.stamp === pulse.stamp
  return this.value;
};


/***/ }),

/***/ "zlEu":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isObject.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ === Object(_);
});


/***/ }),

/***/ "zo6v":
/*!*************************************************!*\
  !*** ./node_modules/vega-themes/build/index.js ***!
  \*************************************************/
/*! exports provided: excel, ggplot2, quartz, vox, dark, fivethirtyeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _theme_excel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./theme-excel */ "LQF4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "excel", function() { return _theme_excel__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _theme_ggplot2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theme-ggplot2 */ "Wj/T");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ggplot2", function() { return _theme_ggplot2__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _theme_quartz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theme-quartz */ "kj2a");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartz", function() { return _theme_quartz__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _theme_vox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme-vox */ "h1Rr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vox", function() { return _theme_vox__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _theme_dark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./theme-dark */ "IQEy");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dark", function() { return _theme_dark__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _theme_fivethirtyeight__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./theme-fivethirtyeight */ "pqN6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fivethirtyeight", function() { return _theme_fivethirtyeight__WEBPACK_IMPORTED_MODULE_5__["default"]; });







//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLE9BQU8sSUFBSSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLElBQUksR0FBRyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxPQUFPLElBQUksZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUMifQ==

/***/ }),

/***/ "zugC":
/*!*******************************************************!*\
  !*** ./node_modules/vega-view/src/render-headless.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _initialize_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./initialize-renderer */ "3tdj");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "h0dZ");



/**
 * Render the current scene in a headless fashion.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A Promise that resolves to a renderer.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(view, type, scaleFactor) {
  var module = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["renderModule"])(type),
      ctr = module && module.headless;
  return !ctr
    ? Promise.reject('Unrecognized renderer type: ' + type)
    : view.runAsync().then(function() {
        return Object(_initialize_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(view, null, null, ctr, scaleFactor)
          .renderAsync(view._scenegraph.root);
      });
});


/***/ }),

/***/ "zw9B":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/spec.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _signal_updates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal-updates */ "2V8r");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scale */ "FvSR");
/* harmony import */ var _projection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projection */ "v2iz");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legend */ "mBE9");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signal */ "v1SV");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./title */ "GRzZ");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data */ "ltAm");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mark */ "dkbZ");
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./axis */ "cXyK");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "J29t");











/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, preprocessed) {
  var signals = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.signals),
      scales = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.scales);

  if (!preprocessed) signals.forEach(function(_) {
    Object(_signal__WEBPACK_IMPORTED_MODULE_4__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.projections).forEach(function(_) {
    Object(_projection__WEBPACK_IMPORTED_MODULE_2__["default"])(_, scope);
  });

  scales.forEach(function(_) {
    Object(_scale__WEBPACK_IMPORTED_MODULE_1__["initScale"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.data).forEach(function(_) {
    Object(_data__WEBPACK_IMPORTED_MODULE_6__["default"])(_, scope);
  });

  scales.forEach(function(_) {
    Object(_scale__WEBPACK_IMPORTED_MODULE_1__["parseScale"])(_, scope);
  });

  signals.forEach(function(_) {
    Object(_signal_updates__WEBPACK_IMPORTED_MODULE_0__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.axes).forEach(function(_) {
    Object(_axis__WEBPACK_IMPORTED_MODULE_8__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.marks).forEach(function(_) {
    Object(_mark__WEBPACK_IMPORTED_MODULE_7__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.legends).forEach(function(_) {
    Object(_legend__WEBPACK_IMPORTED_MODULE_3__["default"])(_, scope);
  });

  if (spec.title) {
    Object(_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec.title, scope);
  }

  scope.parseLambdas();
  return scope;
});


/***/ }),

/***/ "zzEA":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/buildmodel.js ***!
  \****************************************************************/
/*! exports provided: buildModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildModel", function() { return buildModel; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "6ow0");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "ySvk");
/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat */ "Ddaq");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./facet */ "6g/r");
/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer */ "cwcZ");
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repeat */ "ABo2");
/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unit */ "yn0s");







function buildModel(spec, parent, parentGivenName, unitSize, repeater, config, fit) {
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isFacetSpec"])(spec)) {
        return new _facet__WEBPACK_IMPORTED_MODULE_3__["FacetModel"](spec, parent, parentGivenName, repeater, config);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isLayerSpec"])(spec)) {
        return new _layer__WEBPACK_IMPORTED_MODULE_4__["LayerModel"](spec, parent, parentGivenName, unitSize, repeater, config, fit);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isUnitSpec"])(spec)) {
        return new _unit__WEBPACK_IMPORTED_MODULE_6__["UnitModel"](spec, parent, parentGivenName, unitSize, repeater, config, fit);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isRepeatSpec"])(spec)) {
        return new _repeat__WEBPACK_IMPORTED_MODULE_5__["RepeatModel"](spec, parent, parentGivenName, repeater, config);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isConcatSpec"])(spec)) {
        return new _concat__WEBPACK_IMPORTED_MODULE_2__["ConcatModel"](spec, parent, parentGivenName, repeater, config);
    }
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_0__["message"].INVALID_SPEC);
}
//# sourceMappingURL=buildmodel.js.map

/***/ })

}]);
//# sourceMappingURL=vendors~vega.63238f391cc3013ee800.js.map